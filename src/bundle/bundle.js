var app = (function () {
    'use strict';
    function e() {}
    const t = (e) => e;
    function n(e) {
        return e();
    }
    function o() {
        return Object.create(null);
    }
    function i(e) {
        e.forEach(n);
    }
    function r(e) {
        return 'function' == typeof e;
    }
    function s(e, t) {
        return e != e
            ? t == t
            : e !== t || (e && 'object' == typeof e) || 'function' == typeof e;
    }
    function a(e, t) {
        return e != e ? t == t : e !== t;
    }
    function l(t, ...n) {
        if (null == t) return e;
        const o = t.subscribe(...n);
        return o.unsubscribe ? () => o.unsubscribe() : o;
    }
    function c(e) {
        let t;
        return (l(e, (e) => (t = e))(), t);
    }
    function d(e, t, n) {
        e.$$.on_destroy.push(l(t, n));
    }
    function h(e, t, n) {
        return (e.set(n), t);
    }
    function u(t) {
        return t && r(t.destroy) ? t.destroy : e;
    }
    const p = 'undefined' != typeof window;
    let f = p ? () => window.performance.now() : () => Date.now(),
        g = p ? (e) => requestAnimationFrame(e) : e;
    const m = new Set();
    function b(e) {
        (m.forEach((t) => {
            t.c(e) || (m.delete(t), t.f());
        }),
            0 !== m.size && g(b));
    }
    function v(e, t) {
        e.appendChild(t);
    }
    function y(e) {
        if (!e) return document;
        const t = e.getRootNode ? e.getRootNode() : e.ownerDocument;
        return t && t.host ? t : e.ownerDocument;
    }
    function w(e) {
        const t = E('style');
        return (
            (function (e, t) {
                (v(e.head || e, t), t.sheet);
            })(y(e), t),
            t.sheet
        );
    }
    function k(e, t, n) {
        e.insertBefore(t, n || null);
    }
    function x(e) {
        e.parentNode && e.parentNode.removeChild(e);
    }
    function C(e, t) {
        for (let n = 0; n < e.length; n += 1) e[n] && e[n].d(t);
    }
    function E(e) {
        return document.createElement(e);
    }
    function S(e) {
        return document.createElementNS('http://www.w3.org/2000/svg', e);
    }
    function T(e) {
        return document.createTextNode(e);
    }
    function _() {
        return T(' ');
    }
    function B() {
        return T('');
    }
    function O(e, t, n, o) {
        return (
            e.addEventListener(t, n, o),
            () => e.removeEventListener(t, n, o)
        );
    }
    function I(e, t, n) {
        null == n
            ? e.removeAttribute(t)
            : e.getAttribute(t) !== n && e.setAttribute(t, n);
    }
    function L(e) {
        return '' === e ? null : +e;
    }
    function A(e, t) {
        ((t = '' + t), e.data !== t && (e.data = t));
    }
    function P(e, t) {
        e.value = null == t ? '' : t;
    }
    function M(e, t, n, o) {
        null == n
            ? e.style.removeProperty(t)
            : e.style.setProperty(t, n, o ? 'important' : '');
    }
    function N(e, t, n) {
        for (let n = 0; n < e.options.length; n += 1) {
            const o = e.options[n];
            if (o.__value === t) return void (o.selected = !0);
        }
        (n && void 0 === t) || (e.selectedIndex = -1);
    }
    function $(e) {
        const t = e.querySelector(':checked');
        return t && t.__value;
    }
    function R(e, t, n) {
        e.classList[n ? 'add' : 'remove'](t);
    }
    function j(e, t, { bubbles: n = !1, cancelable: o = !1 } = {}) {
        const i = document.createEvent('CustomEvent');
        return (i.initCustomEvent(e, n, o, t), i);
    }
    class D {
        constructor(e = !1) {
            ((this.is_svg = !1), (this.is_svg = e), (this.e = this.n = null));
        }
        c(e) {
            this.h(e);
        }
        m(e, t, n = null) {
            (this.e ||
                (this.is_svg
                    ? (this.e = S(t.nodeName))
                    : (this.e = E(11 === t.nodeType ? 'TEMPLATE' : t.nodeName)),
                (this.t = 'TEMPLATE' !== t.tagName ? t : t.content),
                this.c(e)),
                this.i(n));
        }
        h(e) {
            ((this.e.innerHTML = e),
                (this.n = Array.from(
                    'TEMPLATE' === this.e.nodeName
                        ? this.e.content.childNodes
                        : this.e.childNodes,
                )));
        }
        i(e) {
            for (let t = 0; t < this.n.length; t += 1) k(this.t, this.n[t], e);
        }
        p(e) {
            (this.d(), this.h(e), this.i(this.a));
        }
        d() {
            this.n.forEach(x);
        }
    }
    function F(e, t) {
        return new e(t);
    }
    const H = new Map();
    let z,
        U = 0;
    function W(e, t, n, o, i, r, s, a = 0) {
        const l = 16.666 / o;
        let c = '{\n';
        for (let e = 0; e <= 1; e += l) {
            const o = t + (n - t) * r(e);
            c += 100 * e + `%{${s(o, 1 - o)}}\n`;
        }
        const d = c + `100% {${s(n, 1 - n)}}\n}`,
            h = `__svelte_${(function (e) {
                let t = 5381,
                    n = e.length;
                for (; n--; ) t = ((t << 5) - t) ^ e.charCodeAt(n);
                return t >>> 0;
            })(d)}_${a}`,
            u = y(e),
            { stylesheet: p, rules: f } =
                H.get(u) ||
                (function (e, t) {
                    const n = { stylesheet: w(t), rules: {} };
                    return (H.set(e, n), n);
                })(u, e);
        f[h] ||
            ((f[h] = !0),
            p.insertRule(`@keyframes ${h} ${d}`, p.cssRules.length));
        const g = e.style.animation || '';
        return (
            (e.style.animation = `${g ? `${g}, ` : ''}${h} ${o}ms linear ${i}ms 1 both`),
            (U += 1),
            h
        );
    }
    function q(e, t) {
        const n = (e.style.animation || '').split(', '),
            o = n.filter(
                t
                    ? (e) => e.indexOf(t) < 0
                    : (e) => -1 === e.indexOf('__svelte'),
            ),
            i = n.length - o.length;
        i &&
            ((e.style.animation = o.join(', ')),
            (U -= i),
            U ||
                g(() => {
                    U ||
                        (H.forEach((e) => {
                            const { ownerNode: t } = e.stylesheet;
                            t && x(t);
                        }),
                        H.clear());
                }));
    }
    function V(e) {
        z = e;
    }
    function G() {
        if (!z)
            throw new Error('Function called outside component initialization');
        return z;
    }
    function K(e) {
        G().$$.on_mount.push(e);
    }
    function Y() {
        const e = G();
        return (t, n, { cancelable: o = !1 } = {}) => {
            const i = e.$$.callbacks[t];
            if (i) {
                const r = j(t, n, { cancelable: o });
                return (
                    i.slice().forEach((t) => {
                        t.call(e, r);
                    }),
                    !r.defaultPrevented
                );
            }
            return !0;
        };
    }
    const X = [],
        Z = [];
    let J = [];
    const Q = [],
        ee = Promise.resolve();
    let te = !1;
    function ne(e) {
        J.push(e);
    }
    function oe(e) {
        Q.push(e);
    }
    const ie = new Set();
    let re,
        se = 0;
    function ae() {
        if (0 !== se) return;
        const e = z;
        do {
            try {
                for (; se < X.length; ) {
                    const e = X[se];
                    (se++, V(e), le(e.$$));
                }
            } catch (e) {
                throw ((X.length = 0), (se = 0), e);
            }
            for (V(null), X.length = 0, se = 0; Z.length; ) Z.pop()();
            for (let e = 0; e < J.length; e += 1) {
                const t = J[e];
                ie.has(t) || (ie.add(t), t());
            }
            J.length = 0;
        } while (X.length);
        for (; Q.length; ) Q.pop()();
        ((te = !1), ie.clear(), V(e));
    }
    function le(e) {
        if (null !== e.fragment) {
            (e.update(), i(e.before_update));
            const t = e.dirty;
            ((e.dirty = [-1]),
                e.fragment && e.fragment.p(e.ctx, t),
                e.after_update.forEach(ne));
        }
    }
    function ce(e, t, n) {
        e.dispatchEvent(j(`${t ? 'intro' : 'outro'}${n}`));
    }
    const de = new Set();
    let he;
    function ue() {
        he = { r: 0, c: [], p: he };
    }
    function pe() {
        (he.r || i(he.c), (he = he.p));
    }
    function fe(e, t) {
        e && e.i && (de.delete(e), e.i(t));
    }
    function ge(e, t, n, o) {
        if (e && e.o) {
            if (de.has(e)) return;
            (de.add(e),
                he.c.push(() => {
                    (de.delete(e), o && (n && e.d(1), o()));
                }),
                e.o(t));
        } else o && o();
    }
    const me = { duration: 0 };
    function be(n, o, s, a) {
        const l = { direction: 'both' };
        let c = o(n, s, l),
            d = a ? 0 : 1,
            h = null,
            u = null,
            p = null;
        function v() {
            p && q(n, p);
        }
        function y(e, t) {
            const n = e.b - d;
            return (
                (t *= Math.abs(n)),
                {
                    a: d,
                    b: e.b,
                    d: n,
                    duration: t,
                    start: e.start,
                    end: e.start + t,
                    group: e.group,
                }
            );
        }
        function w(o) {
            const {
                    delay: r = 0,
                    duration: s = 300,
                    easing: a = t,
                    tick: l = e,
                    css: w,
                } = c || me,
                k = { start: f() + r, b: o };
            (o || ((k.group = he), (he.r += 1)),
                h || u
                    ? (u = k)
                    : (w && (v(), (p = W(n, d, o, s, r, a, w))),
                      o && l(0, 1),
                      (h = y(k, s)),
                      ne(() => ce(n, o, 'start')),
                      (function (e) {
                          let t;
                          (0 === m.size && g(b),
                              new Promise((n) => {
                                  m.add((t = { c: e, f: n }));
                              }));
                      })((e) => {
                          if (
                              (u &&
                                  e > u.start &&
                                  ((h = y(u, s)),
                                  (u = null),
                                  ce(n, h.b, 'start'),
                                  w &&
                                      (v(),
                                      (p = W(
                                          n,
                                          d,
                                          h.b,
                                          h.duration,
                                          0,
                                          a,
                                          c.css,
                                      )))),
                              h)
                          )
                              if (e >= h.end)
                                  (l((d = h.b), 1 - d),
                                      ce(n, h.b, 'end'),
                                      u ||
                                          (h.b
                                              ? v()
                                              : --h.group.r || i(h.group.c)),
                                      (h = null));
                              else if (e >= h.start) {
                                  const t = e - h.start;
                                  ((d = h.a + h.d * a(t / h.duration)),
                                      l(d, 1 - d));
                              }
                          return !(!h && !u);
                      })));
        }
        return {
            run(e) {
                r(c)
                    ? (re ||
                          ((re = Promise.resolve()),
                          re.then(() => {
                              re = null;
                          })),
                      re).then(() => {
                          ((c = c(l)), w(e));
                      })
                    : w(e);
            },
            end() {
                (v(), (h = u = null));
            },
        };
    }
    function ve(e, t, n) {
        const o = e.$$.props[t];
        void 0 !== o && ((e.$$.bound[o] = n), n(e.$$.ctx[o]));
    }
    function ye(e) {
        e && e.c();
    }
    function we(e, t, o, s) {
        const { fragment: a, after_update: l } = e.$$;
        (a && a.m(t, o),
            s ||
                ne(() => {
                    const t = e.$$.on_mount.map(n).filter(r);
                    (e.$$.on_destroy ? e.$$.on_destroy.push(...t) : i(t),
                        (e.$$.on_mount = []));
                }),
            l.forEach(ne));
    }
    function ke(e, t) {
        const n = e.$$;
        null !== n.fragment &&
            (!(function (e) {
                const t = [],
                    n = [];
                (J.forEach((o) =>
                    -1 === e.indexOf(o) ? t.push(o) : n.push(o),
                ),
                    n.forEach((e) => e()),
                    (J = t));
            })(n.after_update),
            i(n.on_destroy),
            n.fragment && n.fragment.d(t),
            (n.on_destroy = n.fragment = null),
            (n.ctx = []));
    }
    function xe(e, t) {
        (-1 === e.$$.dirty[0] &&
            (X.push(e), te || ((te = !0), ee.then(ae)), e.$$.dirty.fill(0)),
            (e.$$.dirty[(t / 31) | 0] |= 1 << t % 31));
    }
    function Ce(t, n, r, s, a, l, c, d = [-1]) {
        const h = z;
        V(t);
        const u = (t.$$ = {
            fragment: null,
            ctx: [],
            props: l,
            update: e,
            not_equal: a,
            bound: o(),
            on_mount: [],
            on_destroy: [],
            on_disconnect: [],
            before_update: [],
            after_update: [],
            context: new Map(n.context || (h ? h.$$.context : [])),
            callbacks: o(),
            dirty: d,
            skip_bound: !1,
            root: n.target || h.$$.root,
        });
        c && c(u.root);
        let p = !1;
        if (
            ((u.ctx = r
                ? r(t, n.props || {}, (e, n, ...o) => {
                      const i = o.length ? o[0] : n;
                      return (
                          u.ctx &&
                              a(u.ctx[e], (u.ctx[e] = i)) &&
                              (!u.skip_bound && u.bound[e] && u.bound[e](i),
                              p && xe(t, e)),
                          n
                      );
                  })
                : []),
            u.update(),
            (p = !0),
            i(u.before_update),
            (u.fragment = !!s && s(u.ctx)),
            n.target)
        ) {
            if (n.hydrate) {
                const e = (function (e) {
                    return Array.from(e.childNodes);
                })(n.target);
                (u.fragment && u.fragment.l(e), e.forEach(x));
            } else u.fragment && u.fragment.c();
            (n.intro && fe(t.$$.fragment),
                we(t, n.target, n.anchor, n.customElement),
                ae());
        }
        V(h);
    }
    class Ee {
        $destroy() {
            (ke(this, 1), (this.$destroy = e));
        }
        $on(t, n) {
            if (!r(n)) return e;
            const o = this.$$.callbacks[t] || (this.$$.callbacks[t] = []);
            return (
                o.push(n),
                () => {
                    const e = o.indexOf(n);
                    -1 !== e && o.splice(e, 1);
                }
            );
        }
        $set(e) {
            var t;
            this.$$set &&
                ((t = e), 0 !== Object.keys(t).length) &&
                ((this.$$.skip_bound = !0),
                this.$$set(e),
                (this.$$.skip_bound = !1));
        }
    }
    const Se = [];
    function Te(t, n = e) {
        let o;
        const i = new Set();
        function r(e) {
            if (s(t, e) && ((t = e), o)) {
                const e = !Se.length;
                for (const e of i) (e[1](), Se.push(e, t));
                if (e) {
                    for (let e = 0; e < Se.length; e += 2) Se[e][0](Se[e + 1]);
                    Se.length = 0;
                }
            }
        }
        return {
            set: r,
            update: function (e) {
                r(e(t));
            },
            subscribe: function (s, a = e) {
                const l = [s, a];
                return (
                    i.add(l),
                    1 === i.size && (o = n(r) || e),
                    s(t),
                    () => {
                        (i.delete(l), 0 === i.size && o && (o(), (o = null)));
                    }
                );
            },
        };
    }
    !(function () {
        try {
            if (typeof document < 'u') {
                var e = document.createElement('style');
                (e.appendChild(
                    document.createTextNode(
                        '.ce-hint--align-start{text-align:left}.ce-hint--align-center{text-align:center}.ce-hint__description{opacity:.6;margin-top:3px}',
                    ),
                ),
                    document.head.appendChild(e));
            }
        } catch (e) {
            console.error('vite-plugin-css-injected-by-js', e);
        }
    })();
    var _e =
        typeof globalThis < 'u'
            ? globalThis
            : typeof window < 'u'
              ? window
              : typeof global < 'u'
                ? global
                : typeof self < 'u'
                  ? self
                  : {};
    function Be(e) {
        return e &&
            e.__esModule &&
            Object.prototype.hasOwnProperty.call(e, 'default')
            ? e.default
            : e;
    }
    function Oe(e) {
        if (e.__esModule) return e;
        var t = e.default;
        if ('function' == typeof t) {
            var n = function e() {
                return this instanceof e
                    ? Reflect.construct(t, arguments, this.constructor)
                    : t.apply(this, arguments);
            };
            n.prototype = t.prototype;
        } else n = {};
        return (
            Object.defineProperty(n, '__esModule', { value: !0 }),
            Object.keys(e).forEach(function (t) {
                var o = Object.getOwnPropertyDescriptor(e, t);
                Object.defineProperty(
                    n,
                    t,
                    o.get
                        ? o
                        : {
                              enumerable: !0,
                              get: function () {
                                  return e[t];
                              },
                          },
                );
            }),
            n
        );
    }
    function Ie() {}
    (Object.assign(Ie, {
        default: Ie,
        register: Ie,
        revert: function () {},
        __esModule: !0,
    }),
        Element.prototype.matches ||
            (Element.prototype.matches =
                Element.prototype.matchesSelector ||
                Element.prototype.mozMatchesSelector ||
                Element.prototype.msMatchesSelector ||
                Element.prototype.oMatchesSelector ||
                Element.prototype.webkitMatchesSelector ||
                function (e) {
                    const t = (
                        this.document || this.ownerDocument
                    ).querySelectorAll(e);
                    let n = t.length;
                    for (; --n >= 0 && t.item(n) !== this; );
                    return n > -1;
                }),
        Element.prototype.closest ||
            (Element.prototype.closest = function (e) {
                let t = this;
                if (!document.documentElement.contains(t)) return null;
                do {
                    if (t.matches(e)) return t;
                    t = t.parentElement || t.parentNode;
                } while (null !== t);
                return null;
            }),
        Element.prototype.prepend ||
            (Element.prototype.prepend = function (e) {
                const t = document.createDocumentFragment();
                (Array.isArray(e) || (e = [e]),
                    e.forEach((e) => {
                        const n = e instanceof Node;
                        t.appendChild(n ? e : document.createTextNode(e));
                    }),
                    this.insertBefore(t, this.firstChild));
            }),
        Element.prototype.scrollIntoViewIfNeeded ||
            (Element.prototype.scrollIntoViewIfNeeded = function (e) {
                e = 0 === arguments.length || !!e;
                const t = this.parentNode,
                    n = window.getComputedStyle(t, null),
                    o = parseInt(n.getPropertyValue('border-top-width')),
                    i = parseInt(n.getPropertyValue('border-left-width')),
                    r = this.offsetTop - t.offsetTop < t.scrollTop,
                    s =
                        this.offsetTop - t.offsetTop + this.clientHeight - o >
                        t.scrollTop + t.clientHeight,
                    a = this.offsetLeft - t.offsetLeft < t.scrollLeft,
                    l =
                        this.offsetLeft - t.offsetLeft + this.clientWidth - i >
                        t.scrollLeft + t.clientWidth,
                    c = r && !s;
                ((r || s) &&
                    e &&
                    (t.scrollTop =
                        this.offsetTop -
                        t.offsetTop -
                        t.clientHeight / 2 -
                        o +
                        this.clientHeight / 2),
                    (a || l) &&
                        e &&
                        (t.scrollLeft =
                            this.offsetLeft -
                            t.offsetLeft -
                            t.clientWidth / 2 -
                            i +
                            this.clientWidth / 2),
                    (r || s || a || l) && !e && this.scrollIntoView(c));
            }),
        (window.requestIdleCallback =
            window.requestIdleCallback ||
            function (e) {
                const t = Date.now();
                return setTimeout(function () {
                    e({
                        didTimeout: !1,
                        timeRemaining: function () {
                            return Math.max(0, 50 - (Date.now() - t));
                        },
                    });
                }, 1);
            }),
        (window.cancelIdleCallback =
            window.cancelIdleCallback ||
            function (e) {
                clearTimeout(e);
            }));
    var Le = ((e) => (
        (e.VERBOSE = 'VERBOSE'),
        (e.INFO = 'INFO'),
        (e.WARN = 'WARN'),
        (e.ERROR = 'ERROR'),
        e
    ))(Le || {});
    const Ae = 8,
        Pe = 9,
        Me = 13,
        Ne = 27,
        $e = 37,
        Re = 38,
        je = 40,
        De = 39,
        Fe = 46,
        He = 0;
    function ze(e, t, n = 'log', o, i = 'color: inherit') {
        if (!('console' in window) || !window.console[n]) return;
        const r = ['info', 'log', 'warn', 'error'].includes(n),
            s = [];
        switch (ze.logLevel) {
            case 'ERROR':
                if ('error' !== n) return;
                break;
            case 'WARN':
                if (!['error', 'warn'].includes(n)) return;
                break;
            case 'INFO':
                if (!r || e) return;
        }
        o && s.push(o);
        const a = 'Editor.js 2.31.0-rc.7';
        e &&
            (r
                ? (s.unshift(
                      'line-height: 1em;\n            color: #006FEA;\n            display: inline-block;\n            font-size: 11px;\n            line-height: 1em;\n            background-color: #fff;\n            padding: 4px 9px;\n            border-radius: 30px;\n            border: 1px solid rgba(56, 138, 229, 0.16);\n            margin: 4px 5px 4px 0;',
                      i,
                  ),
                  (t = `%c${a}%c ${t}`))
                : (t = `( ${a} )${t}`));
        try {
            r
                ? o
                    ? console[n](`${t} %o`, ...s)
                    : console[n](t, ...s)
                : console[n](t);
        } catch {}
    }
    ze.logLevel = 'VERBOSE';
    const Ue = ze.bind(window, !1),
        We = ze.bind(window, !0);
    function qe(e) {
        return Object.prototype.toString
            .call(e)
            .match(/\s([a-zA-Z]+)/)[1]
            .toLowerCase();
    }
    function Ve(e) {
        return 'function' === qe(e) || 'asyncfunction' === qe(e);
    }
    function Ge(e) {
        return 'object' === qe(e);
    }
    function Ke(e) {
        return 'string' === qe(e);
    }
    function Ye(e) {
        return 'number' === qe(e);
    }
    function Xe(e) {
        return 'undefined' === qe(e);
    }
    function Ze(e) {
        return !e || (0 === Object.keys(e).length && e.constructor === Object);
    }
    function Je(e) {
        return (
            (e > 47 && e < 58) ||
            32 === e ||
            13 === e ||
            229 === e ||
            (e > 64 && e < 91) ||
            (e > 95 && e < 112) ||
            (e > 185 && e < 193) ||
            (e > 218 && e < 223)
        );
    }
    async function Qe(e, t = () => {}, n = () => {}) {
        return e.reduce(
            async (e, o) => (
                await e,
                (async function (e, t, n) {
                    try {
                        (await e.function(e.data),
                            await t(Xe(e.data) ? {} : e.data));
                    } catch {
                        n(Xe(e.data) ? {} : e.data);
                    }
                })(o, t, n)
            ),
            Promise.resolve(),
        );
    }
    function et(e) {
        return Array.prototype.slice.call(e);
    }
    function tt(e, t) {
        return function () {
            const n = this,
                o = arguments;
            window.setTimeout(() => e.apply(n, o), t);
        };
    }
    function nt(e, t, n) {
        let o;
        return (...i) => {
            const r = this,
                s = n && !o;
            (window.clearTimeout(o),
                (o = window.setTimeout(() => {
                    ((o = null), n || e.apply(r, i));
                }, t)),
                s && e.apply(r, i));
        };
    }
    function ot(e, t, n) {
        let o,
            i,
            r,
            s = null,
            a = 0;
        n || (n = {});
        const l = function () {
            ((a = !1 === n.leading ? 0 : Date.now()),
                (s = null),
                (r = e.apply(o, i)),
                s || (o = i = null));
        };
        return function () {
            const c = Date.now();
            !a && !1 === n.leading && (a = c);
            const d = t - (c - a);
            return (
                (o = this),
                (i = arguments),
                d <= 0 || d > t
                    ? (s && (clearTimeout(s), (s = null)),
                      (a = c),
                      (r = e.apply(o, i)),
                      s || (o = i = null))
                    : !s && !1 !== n.trailing && (s = setTimeout(l, d)),
                r
            );
        };
    }
    function it(e) {
        return e[0].toUpperCase() + e.slice(1);
    }
    function rt(e, ...t) {
        if (!t.length) return e;
        const n = t.shift();
        if (Ge(e) && Ge(n))
            for (const t in n)
                Ge(n[t])
                    ? (e[t] || Object.assign(e, { [t]: {} }), rt(e[t], n[t]))
                    : Object.assign(e, { [t]: n[t] });
        return rt(e, ...t);
    }
    function st(e) {
        const t = (function () {
            const e = { win: !1, mac: !1, x11: !1, linux: !1 },
                t = Object.keys(e).find(
                    (e) =>
                        -1 !==
                        window.navigator.appVersion.toLowerCase().indexOf(e),
                );
            return (t && (e[t] = !0), e);
        })();
        return (
            (e = e
                .replace(/shift/gi, '⇧')
                .replace(/backspace/gi, '⌫')
                .replace(/enter/gi, '⏎')
                .replace(/up/gi, '↑')
                .replace(/left/gi, '→')
                .replace(/down/gi, '↓')
                .replace(/right/gi, '←')
                .replace(/escape/gi, '⎋')
                .replace(/insert/gi, 'Ins')
                .replace(/delete/gi, '␡')
                .replace(/\+/gi, ' + ')),
            (e = t.mac
                ? e.replace(/ctrl|cmd/gi, '⌘').replace(/alt/gi, '⌥')
                : e.replace(/cmd/gi, 'Ctrl').replace(/windows/gi, 'WIN'))
        );
    }
    function at() {
        return ((e = 21) =>
            crypto
                .getRandomValues(new Uint8Array(e))
                .reduce(
                    (e, t) =>
                        e +
                        ((t &= 63) < 36
                            ? t.toString(36)
                            : t < 62
                              ? (t - 26).toString(36).toUpperCase()
                              : t > 62
                                ? '-'
                                : '_'),
                    '',
                ))(10);
    }
    function lt(e, t, n) {
        e &&
            We(
                `«${t}» is deprecated and will be removed in the next major release. Please use the «${n}» instead.`,
                'warn',
            );
    }
    function ct(e, t, n) {
        const o = n.value ? 'value' : 'get',
            i = n[o],
            r = `#${t}Cache`;
        if (
            ((n[o] = function (...e) {
                return (
                    void 0 === this[r] && (this[r] = i.apply(this, ...e)),
                    this[r]
                );
            }),
            'get' === o && n.set)
        ) {
            const t = n.set;
            n.set = function (n) {
                (delete e[r], t.apply(this, n));
            };
        }
        return n;
    }
    function dt() {
        return window.matchMedia('(max-width: 650px)').matches;
    }
    const ht =
        typeof window < 'u' &&
        window.navigator &&
        window.navigator.platform &&
        (/iP(ad|hone|od)/.test(window.navigator.platform) ||
            ('MacIntel' === window.navigator.platform &&
                window.navigator.maxTouchPoints > 1));
    class ut {
        static isSingleTag(e) {
            return (
                e.tagName &&
                [
                    'AREA',
                    'BASE',
                    'BR',
                    'COL',
                    'COMMAND',
                    'EMBED',
                    'HR',
                    'IMG',
                    'INPUT',
                    'KEYGEN',
                    'LINK',
                    'META',
                    'PARAM',
                    'SOURCE',
                    'TRACK',
                    'WBR',
                ].includes(e.tagName)
            );
        }
        static isLineBreakTag(e) {
            return e && e.tagName && ['BR', 'WBR'].includes(e.tagName);
        }
        static make(e, t = null, n = {}) {
            const o = document.createElement(e);
            if (Array.isArray(t)) {
                const e = t.filter((e) => void 0 !== e);
                o.classList.add(...e);
            } else t && o.classList.add(t);
            for (const e in n)
                Object.prototype.hasOwnProperty.call(n, e) && (o[e] = n[e]);
            return o;
        }
        static text(e) {
            return document.createTextNode(e);
        }
        static append(e, t) {
            Array.isArray(t)
                ? t.forEach((t) => e.appendChild(t))
                : e.appendChild(t);
        }
        static prepend(e, t) {
            Array.isArray(t)
                ? (t = t.reverse()).forEach((t) => e.prepend(t))
                : e.prepend(t);
        }
        static swap(e, t) {
            const n = document.createElement('div'),
                o = e.parentNode;
            (o.insertBefore(n, e),
                o.insertBefore(e, t),
                o.insertBefore(t, n),
                o.removeChild(n));
        }
        static find(e = document, t) {
            return e.querySelector(t);
        }
        static get(e) {
            return document.getElementById(e);
        }
        static findAll(e = document, t) {
            return e.querySelectorAll(t);
        }
        static get allInputsSelector() {
            return (
                '[contenteditable=true], textarea, input:not([type]), ' +
                ['text', 'password', 'email', 'number', 'search', 'tel', 'url']
                    .map((e) => `input[type="${e}"]`)
                    .join(', ')
            );
        }
        static findAllInputs(e) {
            return et(e.querySelectorAll(ut.allInputsSelector)).reduce(
                (e, t) =>
                    ut.isNativeInput(t) || ut.containsOnlyInlineElements(t)
                        ? [...e, t]
                        : [...e, ...ut.getDeepestBlockElements(t)],
                [],
            );
        }
        static getDeepestNode(e, t = !1) {
            const n = t ? 'lastChild' : 'firstChild',
                o = t ? 'previousSibling' : 'nextSibling';
            if (e && e.nodeType === Node.ELEMENT_NODE && e[n]) {
                let i = e[n];
                if (
                    ut.isSingleTag(i) &&
                    !ut.isNativeInput(i) &&
                    !ut.isLineBreakTag(i)
                )
                    if (i[o]) i = i[o];
                    else {
                        if (!i.parentNode[o]) return i.parentNode;
                        i = i.parentNode[o];
                    }
                return this.getDeepestNode(i, t);
            }
            return e;
        }
        static isElement(e) {
            return (
                !Ye(e) && e && e.nodeType && e.nodeType === Node.ELEMENT_NODE
            );
        }
        static isFragment(e) {
            return (
                !Ye(e) &&
                e &&
                e.nodeType &&
                e.nodeType === Node.DOCUMENT_FRAGMENT_NODE
            );
        }
        static isContentEditable(e) {
            return 'true' === e.contentEditable;
        }
        static isNativeInput(e) {
            return (
                !(!e || !e.tagName) && ['INPUT', 'TEXTAREA'].includes(e.tagName)
            );
        }
        static canSetCaret(e) {
            let t = !0;
            if (ut.isNativeInput(e))
                switch (e.type) {
                    case 'file':
                    case 'checkbox':
                    case 'radio':
                    case 'hidden':
                    case 'submit':
                    case 'button':
                    case 'image':
                    case 'reset':
                        t = !1;
                }
            else t = ut.isContentEditable(e);
            return t;
        }
        static isNodeEmpty(e, t) {
            let n;
            return (
                !(this.isSingleTag(e) && !this.isLineBreakTag(e)) &&
                ((n =
                    this.isElement(e) && this.isNativeInput(e)
                        ? e.value
                        : e.textContent.replace('​', '')),
                t && (n = n.replace(new RegExp(t, 'g'), '')),
                0 === n.length)
            );
        }
        static isLeaf(e) {
            return !!e && 0 === e.childNodes.length;
        }
        static isEmpty(e, t) {
            const n = [e];
            for (; n.length > 0; )
                if ((e = n.shift())) {
                    if (this.isLeaf(e) && !this.isNodeEmpty(e, t)) return !1;
                    e.childNodes && n.push(...Array.from(e.childNodes));
                }
            return !0;
        }
        static isHTMLString(e) {
            const t = ut.make('div');
            return ((t.innerHTML = e), t.childElementCount > 0);
        }
        static getContentLength(e) {
            return ut.isNativeInput(e)
                ? e.value.length
                : e.nodeType === Node.TEXT_NODE
                  ? e.length
                  : e.textContent.length;
        }
        static get blockElements() {
            return [
                'address',
                'article',
                'aside',
                'blockquote',
                'canvas',
                'div',
                'dl',
                'dt',
                'fieldset',
                'figcaption',
                'figure',
                'footer',
                'form',
                'h1',
                'h2',
                'h3',
                'h4',
                'h5',
                'h6',
                'header',
                'hgroup',
                'hr',
                'li',
                'main',
                'nav',
                'noscript',
                'ol',
                'output',
                'p',
                'pre',
                'ruby',
                'section',
                'table',
                'tbody',
                'thead',
                'tr',
                'tfoot',
                'ul',
                'video',
            ];
        }
        static containsOnlyInlineElements(e) {
            let t;
            Ke(e)
                ? ((t = document.createElement('div')), (t.innerHTML = e))
                : (t = e);
            const n = (e) =>
                !ut.blockElements.includes(e.tagName.toLowerCase()) &&
                Array.from(e.children).every(n);
            return Array.from(t.children).every(n);
        }
        static getDeepestBlockElements(e) {
            return ut.containsOnlyInlineElements(e)
                ? [e]
                : Array.from(e.children).reduce(
                      (e, t) => [...e, ...ut.getDeepestBlockElements(t)],
                      [],
                  );
        }
        static getHolder(e) {
            return Ke(e) ? document.getElementById(e) : e;
        }
        static isAnchor(e) {
            return 'a' === e.tagName.toLowerCase();
        }
        static offset(e) {
            const t = e.getBoundingClientRect(),
                n = window.pageXOffset || document.documentElement.scrollLeft,
                o = window.pageYOffset || document.documentElement.scrollTop,
                i = t.top + o,
                r = t.left + n;
            return {
                top: i,
                left: r,
                bottom: i + t.height,
                right: r + t.width,
            };
        }
    }
    function pt(e) {
        e.dataset.empty = ut.isEmpty(e) ? 'true' : 'false';
    }
    const ft = {
            ui: {
                blockTunes: {
                    toggler: { 'Click to tune': '', 'or drag to move': '' },
                },
                inlineToolbar: { converter: { 'Convert to': '' } },
                toolbar: { toolbox: { Add: '' } },
                popover: { Filter: '', 'Nothing found': '', 'Convert to': '' },
            },
            toolNames: { Text: '', Link: '', Bold: '', Italic: '' },
            tools: {
                link: { 'Add a link': '' },
                stub: { 'The block can not be displayed correctly.': '' },
            },
            blockTunes: {
                delete: { Delete: '', 'Click to delete': '' },
                moveUp: { 'Move up': '' },
                moveDown: { 'Move down': '' },
            },
        },
        gt = class e {
            static ui(t, n) {
                return e._t(t, n);
            }
            static t(t, n) {
                return e._t(t, n);
            }
            static setDictionary(t) {
                e.currentDictionary = t;
            }
            static _t(t, n) {
                const o = e.getNamespace(t);
                return o && o[n] ? o[n] : n;
            }
            static getNamespace(t) {
                return t
                    .split('.')
                    .reduce(
                        (e, t) => (e && Object.keys(e).length ? e[t] : {}),
                        e.currentDictionary,
                    );
            }
        };
    gt.currentDictionary = ft;
    let mt = gt;
    class bt extends Error {}
    class vt {
        constructor() {
            this.subscribers = {};
        }
        on(e, t) {
            (e in this.subscribers || (this.subscribers[e] = []),
                this.subscribers[e].push(t));
        }
        once(e, t) {
            e in this.subscribers || (this.subscribers[e] = []);
            const n = (o) => {
                const i = t(o),
                    r = this.subscribers[e].indexOf(n);
                return (-1 !== r && this.subscribers[e].splice(r, 1), i);
            };
            this.subscribers[e].push(n);
        }
        emit(e, t) {
            Ze(this.subscribers) ||
                !this.subscribers[e] ||
                this.subscribers[e].reduce((e, t) => {
                    const n = t(e);
                    return void 0 !== n ? n : e;
                }, t);
        }
        off(e, t) {
            if (void 0 !== this.subscribers[e]) {
                for (let n = 0; n < this.subscribers[e].length; n++)
                    if (this.subscribers[e][n] === t) {
                        delete this.subscribers[e][n];
                        break;
                    }
            } else
                console.warn(
                    `EventDispatcher .off(): there is no subscribers for event "${e.toString()}". Probably, .off() called before .on()`,
                );
        }
        destroy() {
            this.subscribers = {};
        }
    }
    function yt(e) {
        Object.setPrototypeOf(this, {
            get id() {
                return e.id;
            },
            get name() {
                return e.name;
            },
            get config() {
                return e.config;
            },
            get holder() {
                return e.holder;
            },
            get isEmpty() {
                return e.isEmpty;
            },
            get selected() {
                return e.selected;
            },
            set stretched(t) {
                e.stretched = t;
            },
            get stretched() {
                return e.stretched;
            },
            get focusable() {
                return e.focusable;
            },
            call: (t, n) => e.call(t, n),
            save: () => e.save(),
            validate: (t) => e.validate(t),
            dispatchChange() {
                e.dispatchChange();
            },
            getActiveToolboxEntry: () => e.getActiveToolboxEntry(),
        });
    }
    class wt {
        constructor() {
            this.allListeners = [];
        }
        on(e, t, n, o = !1) {
            const i = (function (e = '') {
                    return `${e}${Math.floor(1e8 * Math.random()).toString(16)}`;
                })('l'),
                r = { id: i, element: e, eventType: t, handler: n, options: o };
            if (!this.findOne(e, t, n))
                return (
                    this.allListeners.push(r),
                    e.addEventListener(t, n, o),
                    i
                );
        }
        off(e, t, n, o) {
            const i = this.findAll(e, t, n);
            i.forEach((e, t) => {
                const n = this.allListeners.indexOf(i[t]);
                n > -1 &&
                    (this.allListeners.splice(n, 1),
                    e.element.removeEventListener(
                        e.eventType,
                        e.handler,
                        e.options,
                    ));
            });
        }
        offById(e) {
            const t = this.findById(e);
            t &&
                t.element.removeEventListener(
                    t.eventType,
                    t.handler,
                    t.options,
                );
        }
        findOne(e, t, n) {
            const o = this.findAll(e, t, n);
            return o.length > 0 ? o[0] : null;
        }
        findAll(e, t, n) {
            let o;
            const i = e ? this.findByEventTarget(e) : [];
            return (
                (o =
                    e && t && n
                        ? i.filter((e) => e.eventType === t && e.handler === n)
                        : e && t
                          ? i.filter((e) => e.eventType === t)
                          : i),
                o
            );
        }
        removeAll() {
            (this.allListeners.map((e) => {
                e.element.removeEventListener(
                    e.eventType,
                    e.handler,
                    e.options,
                );
            }),
                (this.allListeners = []));
        }
        destroy() {
            this.removeAll();
        }
        findByEventTarget(e) {
            return this.allListeners.filter((t) => {
                if (t.element === e) return t;
            });
        }
        findByType(e) {
            return this.allListeners.filter((t) => {
                if (t.eventType === e) return t;
            });
        }
        findByHandler(e) {
            return this.allListeners.filter((t) => {
                if (t.handler === e) return t;
            });
        }
        findById(e) {
            return this.allListeners.find((t) => t.id === e);
        }
    }
    class kt {
        constructor({ config: e, eventsDispatcher: t }) {
            if (
                ((this.nodes = {}),
                (this.listeners = new wt()),
                (this.readOnlyMutableListeners = {
                    on: (e, t, n, o = !1) => {
                        this.mutableListenerIds.push(
                            this.listeners.on(e, t, n, o),
                        );
                    },
                    clearAll: () => {
                        for (const e of this.mutableListenerIds)
                            this.listeners.offById(e);
                        this.mutableListenerIds = [];
                    },
                }),
                (this.mutableListenerIds = []),
                new.target === kt)
            )
                throw new TypeError(
                    'Constructors for abstract class Module are not allowed.',
                );
            ((this.config = e), (this.eventsDispatcher = t));
        }
        set state(e) {
            this.Editor = e;
        }
        removeAllNodes() {
            for (const e in this.nodes) {
                const t = this.nodes[e];
                t instanceof HTMLElement && t.remove();
            }
        }
        get isRtl() {
            return 'rtl' === this.config.i18n.direction;
        }
    }
    class xt {
        constructor() {
            ((this.instance = null),
                (this.selection = null),
                (this.savedSelectionRange = null),
                (this.isFakeBackgroundEnabled = !1),
                (this.commandBackground = 'backColor'),
                (this.commandRemoveFormat = 'removeFormat'));
        }
        static get CSS() {
            return {
                editorWrapper: 'codex-editor',
                editorZone: 'codex-editor__redactor',
            };
        }
        static get anchorNode() {
            const e = window.getSelection();
            return e ? e.anchorNode : null;
        }
        static get anchorElement() {
            const e = window.getSelection();
            if (!e) return null;
            const t = e.anchorNode;
            return t ? (ut.isElement(t) ? t : t.parentElement) : null;
        }
        static get anchorOffset() {
            const e = window.getSelection();
            return e ? e.anchorOffset : null;
        }
        static get isCollapsed() {
            const e = window.getSelection();
            return e ? e.isCollapsed : null;
        }
        static get isAtEditor() {
            return this.isSelectionAtEditor(xt.get());
        }
        static isSelectionAtEditor(e) {
            if (!e) return !1;
            let t = e.anchorNode || e.focusNode;
            t && t.nodeType === Node.TEXT_NODE && (t = t.parentNode);
            let n = null;
            return (
                t &&
                    t instanceof Element &&
                    (n = t.closest(`.${xt.CSS.editorZone}`)),
                !!n && n.nodeType === Node.ELEMENT_NODE
            );
        }
        static isRangeAtEditor(e) {
            if (!e) return;
            let t = e.startContainer;
            t && t.nodeType === Node.TEXT_NODE && (t = t.parentNode);
            let n = null;
            return (
                t &&
                    t instanceof Element &&
                    (n = t.closest(`.${xt.CSS.editorZone}`)),
                !!n && n.nodeType === Node.ELEMENT_NODE
            );
        }
        static get isSelectionExists() {
            return !!xt.get().anchorNode;
        }
        static get range() {
            return this.getRangeFromSelection(this.get());
        }
        static getRangeFromSelection(e) {
            return e && e.rangeCount ? e.getRangeAt(0) : null;
        }
        static get rect() {
            let e,
                t = document.selection,
                n = { x: 0, y: 0, width: 0, height: 0 };
            if (t && 'Control' !== t.type)
                return (
                    (e = t.createRange()),
                    (n.x = e.boundingLeft),
                    (n.y = e.boundingTop),
                    (n.width = e.boundingWidth),
                    (n.height = e.boundingHeight),
                    n
                );
            if (!window.getSelection)
                return (
                    Ue('Method window.getSelection is not supported', 'warn'),
                    n
                );
            if (
                ((t = window.getSelection()),
                null === t.rangeCount || isNaN(t.rangeCount))
            )
                return (
                    Ue(
                        'Method SelectionUtils.rangeCount is not supported',
                        'warn',
                    ),
                    n
                );
            if (0 === t.rangeCount) return n;
            if (
                ((e = t.getRangeAt(0).cloneRange()),
                e.getBoundingClientRect && (n = e.getBoundingClientRect()),
                0 === n.x && 0 === n.y)
            ) {
                const t = document.createElement('span');
                if (t.getBoundingClientRect) {
                    (t.appendChild(document.createTextNode('​')),
                        e.insertNode(t),
                        (n = t.getBoundingClientRect()));
                    const o = t.parentNode;
                    (o.removeChild(t), o.normalize());
                }
            }
            return n;
        }
        static get text() {
            return window.getSelection ? window.getSelection().toString() : '';
        }
        static get() {
            return window.getSelection();
        }
        static setCursor(e, t = 0) {
            const n = document.createRange(),
                o = window.getSelection();
            return ut.isNativeInput(e)
                ? ut.canSetCaret(e)
                    ? (e.focus(),
                      (e.selectionStart = e.selectionEnd = t),
                      e.getBoundingClientRect())
                    : void 0
                : (n.setStart(e, t),
                  n.setEnd(e, t),
                  o.removeAllRanges(),
                  o.addRange(n),
                  n.getBoundingClientRect());
        }
        static isRangeInsideContainer(e) {
            const t = xt.range;
            return null !== t && e.contains(t.startContainer);
        }
        static addFakeCursor() {
            const e = xt.range;
            if (null === e) return;
            const t = ut.make('span', 'codex-editor__fake-cursor');
            ((t.dataset.mutationFree = 'true'), e.collapse(), e.insertNode(t));
        }
        static isFakeCursorInsideContainer(e) {
            return null !== ut.find(e, '.codex-editor__fake-cursor');
        }
        static removeFakeCursor(e = document.body) {
            const t = ut.find(e, '.codex-editor__fake-cursor');
            t && t.remove();
        }
        removeFakeBackground() {
            this.isFakeBackgroundEnabled &&
                ((this.isFakeBackgroundEnabled = !1),
                document.execCommand(this.commandRemoveFormat));
        }
        setFakeBackground() {
            (document.execCommand(this.commandBackground, !1, '#a8d6ff'),
                (this.isFakeBackgroundEnabled = !0));
        }
        save() {
            this.savedSelectionRange = xt.range;
        }
        restore() {
            if (!this.savedSelectionRange) return;
            const e = window.getSelection();
            (e.removeAllRanges(), e.addRange(this.savedSelectionRange));
        }
        clearSaved() {
            this.savedSelectionRange = null;
        }
        collapseToEnd() {
            const e = window.getSelection(),
                t = document.createRange();
            (t.selectNodeContents(e.focusNode),
                t.collapse(!1),
                e.removeAllRanges(),
                e.addRange(t));
        }
        findParentTag(e, t, n = 10) {
            const o = window.getSelection();
            let i = null;
            return o && o.anchorNode && o.focusNode
                ? ([o.anchorNode, o.focusNode].forEach((o) => {
                      let r = n;
                      for (
                          ;
                          r > 0 &&
                          o.parentNode &&
                          (o.tagName !== e ||
                              ((i = o),
                              t &&
                                  o.classList &&
                                  !o.classList.contains(t) &&
                                  (i = null),
                              !i));

                      )
                          ((o = o.parentNode), r--);
                  }),
                  i)
                : null;
        }
        expandToTag(e) {
            const t = window.getSelection();
            t.removeAllRanges();
            const n = document.createRange();
            (n.selectNodeContents(e), t.addRange(n));
        }
    }
    const Ct = 'redactor dom changed',
        Et = 'block changed',
        St = 'fake cursor is about to be toggled',
        Tt = 'fake cursor have been set',
        _t = 'editor mobile layout toggled';
    function Bt(e, t) {
        if (!e.conversionConfig) return !1;
        const n = e.conversionConfig[t];
        return Ve(n) || Ke(n);
    }
    function Ot(e, t) {
        return Bt(e.tool, t);
    }
    function It(e, t) {
        return Object.entries(e).some(
            ([e, n]) =>
                t[e] &&
                (function (e, t) {
                    const n = Array.isArray(e) || Ge(e),
                        o = Array.isArray(t) || Ge(t);
                    return n || o
                        ? JSON.stringify(e) === JSON.stringify(t)
                        : e === t;
                })(t[e], n),
        );
    }
    async function Lt(e, t) {
        const n = (await e.save()).data,
            o = t.find((t) => t.name === e.name);
        return void 0 === o || Bt(o, 'export')
            ? t.reduce((t, o) => {
                  if (!Bt(o, 'import') || void 0 === o.toolbox) return t;
                  const i = o.toolbox.filter((t) => {
                      if (Ze(t) || void 0 === t.icon) return !1;
                      if (void 0 !== t.data) {
                          if (It(t.data, n)) return !1;
                      } else if (o.name === e.name) return !1;
                      return !0;
                  });
                  return (t.push({ ...o, toolbox: i }), t);
              }, [])
            : [];
    }
    function At(e, t) {
        return (
            !!e.mergeable &&
            (e.name === t.name || (Ot(t, 'export') && Ot(e, 'import')))
        );
    }
    function Pt(e, t, n) {
        const o = null == t ? void 0 : t.import;
        return Ve(o)
            ? o(e, n)
            : Ke(o)
              ? { [o]: e }
              : (void 0 !== o &&
                    Ue(
                        'Conversion «import» property must be a string or function. String means key of tool data to import. Function accepts a imported string and return composed tool data.',
                    ),
                {});
    }
    var Mt = ((e) => (
            (e.Default = 'default'),
            (e.Separator = 'separator'),
            (e.Html = 'html'),
            e
        ))(Mt || {}),
        Nt = ((e) => (
            (e.APPEND_CALLBACK = 'appendCallback'),
            (e.RENDERED = 'rendered'),
            (e.MOVED = 'moved'),
            (e.UPDATED = 'updated'),
            (e.REMOVED = 'removed'),
            (e.ON_PASTE = 'onPaste'),
            e
        ))(Nt || {});
    class $t extends vt {
        constructor(
            { id: e = at(), data: t, tool: n, readOnly: o, tunesData: i },
            r,
        ) {
            (super(),
                (this.cachedInputs = []),
                (this.toolRenderedElement = null),
                (this.tunesInstances = new Map()),
                (this.defaultTunesInstances = new Map()),
                (this.unavailableTunesData = {}),
                (this.inputIndex = 0),
                (this.editorEventBus = null),
                (this.handleFocus = () => {
                    (this.dropInputsCache(), this.updateCurrentInput());
                }),
                (this.didMutated = (e) => {
                    const t = void 0 === e,
                        n = e instanceof InputEvent;
                    let o;
                    (!t && !n && this.detectToolRootChange(e),
                        (o =
                            !(!t && !n) ||
                            !(
                                e.length > 0 &&
                                e.every((e) => {
                                    const {
                                        addedNodes: t,
                                        removedNodes: n,
                                        target: o,
                                    } = e;
                                    return [
                                        ...Array.from(t),
                                        ...Array.from(n),
                                        o,
                                    ].some(
                                        (e) => (
                                            ut.isElement(e) ||
                                                (e = e.parentElement),
                                            e &&
                                                null !==
                                                    e.closest(
                                                        '[data-mutation-free="true"]',
                                                    )
                                        ),
                                    );
                                })
                            )),
                        o &&
                            (this.dropInputsCache(),
                            this.updateCurrentInput(),
                            this.toggleInputsEmptyMark(),
                            this.call('updated'),
                            this.emit('didMutated', this)));
                }),
                (this.name = n.name),
                (this.id = e),
                (this.settings = n.settings),
                (this.config = n.settings.config || {}),
                (this.editorEventBus = r || null),
                (this.blockAPI = new yt(this)),
                (this.tool = n),
                (this.toolInstance = n.create(t, this.blockAPI, o)),
                (this.tunes = n.tunes),
                this.composeTunes(i),
                (this.holder = this.compose()),
                window.requestIdleCallback(() => {
                    (this.watchBlockMutations(),
                        this.addInputEvents(),
                        this.toggleInputsEmptyMark());
                }));
        }
        static get CSS() {
            return {
                wrapper: 'ce-block',
                wrapperStretched: 'ce-block--stretched',
                content: 'ce-block__content',
                selected: 'ce-block--selected',
                dropTarget: 'ce-block--drop-target',
            };
        }
        get inputs() {
            if (0 !== this.cachedInputs.length) return this.cachedInputs;
            const e = ut.findAllInputs(this.holder);
            return (
                this.inputIndex > e.length - 1 &&
                    (this.inputIndex = e.length - 1),
                (this.cachedInputs = e),
                e
            );
        }
        get currentInput() {
            return this.inputs[this.inputIndex];
        }
        set currentInput(e) {
            const t = this.inputs.findIndex((t) => t === e || t.contains(e));
            -1 !== t && (this.inputIndex = t);
        }
        get firstInput() {
            return this.inputs[0];
        }
        get lastInput() {
            const e = this.inputs;
            return e[e.length - 1];
        }
        get nextInput() {
            return this.inputs[this.inputIndex + 1];
        }
        get previousInput() {
            return this.inputs[this.inputIndex - 1];
        }
        get data() {
            return this.save().then((e) => (e && !Ze(e.data) ? e.data : {}));
        }
        get sanitize() {
            return this.tool.sanitizeConfig;
        }
        get mergeable() {
            return Ve(this.toolInstance.merge);
        }
        get focusable() {
            return 0 !== this.inputs.length;
        }
        get isEmpty() {
            const e = ut.isEmpty(this.pluginsContent, '/'),
                t = !this.hasMedia;
            return e && t;
        }
        get hasMedia() {
            return !!this.holder.querySelector(
                [
                    'img',
                    'iframe',
                    'video',
                    'audio',
                    'source',
                    'input',
                    'textarea',
                    'twitterwidget',
                ].join(','),
            );
        }
        set selected(e) {
            var t, n;
            this.holder.classList.toggle($t.CSS.selected, e);
            const o = !0 === e && xt.isRangeInsideContainer(this.holder),
                i = !1 === e && xt.isFakeCursorInsideContainer(this.holder);
            (o || i) &&
                (null == (t = this.editorEventBus) || t.emit(St, { state: e }),
                o ? xt.addFakeCursor() : xt.removeFakeCursor(this.holder),
                null == (n = this.editorEventBus) || n.emit(Tt, { state: e }));
        }
        get selected() {
            return this.holder.classList.contains($t.CSS.selected);
        }
        set stretched(e) {
            this.holder.classList.toggle($t.CSS.wrapperStretched, e);
        }
        get stretched() {
            return this.holder.classList.contains($t.CSS.wrapperStretched);
        }
        set dropTarget(e) {
            this.holder.classList.toggle($t.CSS.dropTarget, e);
        }
        get pluginsContent() {
            return this.toolRenderedElement;
        }
        call(e, t) {
            if (Ve(this.toolInstance[e])) {
                'appendCallback' === e &&
                    Ue(
                        '`appendCallback` hook is deprecated and will be removed in the next major release. Use `rendered` hook instead',
                        'warn',
                    );
                try {
                    this.toolInstance[e].call(this.toolInstance, t);
                } catch (t) {
                    Ue(`Error during '${e}' call: ${t.message}`, 'error');
                }
            }
        }
        async mergeWith(e) {
            await this.toolInstance.merge(e);
        }
        async save() {
            const e = await this.toolInstance.save(this.pluginsContent),
                t = this.unavailableTunesData;
            [
                ...this.tunesInstances.entries(),
                ...this.defaultTunesInstances.entries(),
            ].forEach(([e, n]) => {
                if (Ve(n.save))
                    try {
                        t[e] = n.save();
                    } catch (e) {
                        Ue(
                            `Tune ${n.constructor.name} save method throws an Error %o`,
                            'warn',
                            e,
                        );
                    }
            });
            const n = window.performance.now();
            let o;
            return Promise.resolve(e)
                .then(
                    (e) => (
                        (o = window.performance.now()),
                        {
                            id: this.id,
                            tool: this.name,
                            data: e,
                            tunes: t,
                            time: o - n,
                        }
                    ),
                )
                .catch((e) => {
                    Ue(
                        `Saving process for ${this.name} tool failed due to the ${e}`,
                        'log',
                        'red',
                    );
                });
        }
        async validate(e) {
            let t = !0;
            return (
                this.toolInstance.validate instanceof Function &&
                    (t = await this.toolInstance.validate(e)),
                t
            );
        }
        getTunes() {
            const e = [],
                t = [],
                n =
                    'function' == typeof this.toolInstance.renderSettings
                        ? this.toolInstance.renderSettings()
                        : [];
            return (
                ut.isElement(n)
                    ? e.push({ type: Mt.Html, element: n })
                    : Array.isArray(n)
                      ? e.push(...n)
                      : e.push(n),
                [
                    ...this.tunesInstances.values(),
                    ...this.defaultTunesInstances.values(),
                ]
                    .map((e) => e.render())
                    .forEach((e) => {
                        ut.isElement(e)
                            ? t.push({ type: Mt.Html, element: e })
                            : Array.isArray(e)
                              ? t.push(...e)
                              : t.push(e);
                    }),
                { toolTunes: e, commonTunes: t }
            );
        }
        updateCurrentInput() {
            this.currentInput =
                ut.isNativeInput(document.activeElement) || !xt.anchorNode
                    ? document.activeElement
                    : xt.anchorNode;
        }
        dispatchChange() {
            this.didMutated();
        }
        destroy() {
            (this.unwatchBlockMutations(),
                this.removeInputEvents(),
                super.destroy(),
                Ve(this.toolInstance.destroy) && this.toolInstance.destroy());
        }
        async getActiveToolboxEntry() {
            const e = this.tool.toolbox;
            if (1 === e.length) return Promise.resolve(this.tool.toolbox[0]);
            const t = await this.data;
            return null == e ? void 0 : e.find((e) => It(e.data, t));
        }
        async exportDataAsString() {
            return (function (e, t) {
                const n = null == t ? void 0 : t.export;
                return Ve(n)
                    ? n(e)
                    : Ke(n)
                      ? e[n]
                      : (void 0 !== n &&
                            Ue(
                                'Conversion «export» property must be a string or function. String means key of saved data object to export. Function should export processed string to export.',
                            ),
                        '');
            })(await this.data, this.tool.conversionConfig);
        }
        compose() {
            const e = ut.make('div', $t.CSS.wrapper),
                t = ut.make('div', $t.CSS.content),
                n = this.toolInstance.render();
            (e.setAttribute('data-cy', 'block-wrapper'),
                (e.dataset.id = this.id),
                (this.toolRenderedElement = n),
                t.appendChild(this.toolRenderedElement));
            let o = t;
            return (
                [
                    ...this.tunesInstances.values(),
                    ...this.defaultTunesInstances.values(),
                ].forEach((e) => {
                    if (Ve(e.wrap))
                        try {
                            o = e.wrap(o);
                        } catch (t) {
                            Ue(
                                `Tune ${e.constructor.name} wrap method throws an Error %o`,
                                'warn',
                                t,
                            );
                        }
                }),
                e.appendChild(o),
                e
            );
        }
        composeTunes(e) {
            (Array.from(this.tunes.values()).forEach((t) => {
                (t.isInternal
                    ? this.defaultTunesInstances
                    : this.tunesInstances
                ).set(t.name, t.create(e[t.name], this.blockAPI));
            }),
                Object.entries(e).forEach(([e, t]) => {
                    this.tunesInstances.has(e) ||
                        (this.unavailableTunesData[e] = t);
                }));
        }
        addInputEvents() {
            this.inputs.forEach((e) => {
                (e.addEventListener('focus', this.handleFocus),
                    ut.isNativeInput(e) &&
                        e.addEventListener('input', this.didMutated));
            });
        }
        removeInputEvents() {
            this.inputs.forEach((e) => {
                (e.removeEventListener('focus', this.handleFocus),
                    ut.isNativeInput(e) &&
                        e.removeEventListener('input', this.didMutated));
            });
        }
        watchBlockMutations() {
            var e;
            ((this.redactorDomChangedCallback = (e) => {
                const { mutations: t } = e;
                t.some((e) =>
                    (function (e, t) {
                        const {
                            type: n,
                            target: o,
                            addedNodes: i,
                            removedNodes: r,
                        } = e;
                        return (
                            ('attributes' !== e.type ||
                                'data-empty' !== e.attributeName) &&
                            !!(
                                t.contains(o) ||
                                ('childList' === n &&
                                    (Array.from(i).some((e) => e === t) ||
                                        Array.from(r).some((e) => e === t)))
                            )
                        );
                    })(e, this.toolRenderedElement),
                ) && this.didMutated(t);
            }),
                null == (e = this.editorEventBus) ||
                    e.on(Ct, this.redactorDomChangedCallback));
        }
        unwatchBlockMutations() {
            var e;
            null == (e = this.editorEventBus) ||
                e.off(Ct, this.redactorDomChangedCallback);
        }
        detectToolRootChange(e) {
            e.forEach((e) => {
                if (
                    Array.from(e.removedNodes).includes(
                        this.toolRenderedElement,
                    )
                ) {
                    const t = e.addedNodes[e.addedNodes.length - 1];
                    this.toolRenderedElement = t;
                }
            });
        }
        dropInputsCache() {
            this.cachedInputs = [];
        }
        toggleInputsEmptyMark() {
            this.inputs.forEach(pt);
        }
    }
    class Rt extends kt {
        static getNamespace(e, t) {
            return t ? `blockTunes.${e}` : `tools.${e}`;
        }
        get methods() {
            return {
                t: () => {
                    We(
                        'I18n.t() method can be accessed only from Tools',
                        'warn',
                    );
                },
            };
        }
        getMethodsForTool(e, t) {
            return Object.assign(this.methods, {
                t: (n) => mt.t(Rt.getNamespace(e, t), n),
            });
        }
    }
    var jt = { exports: {} };
    !(function (e, t) {
        (window,
            (e.exports = (function (e) {
                var t = {};
                function n(o) {
                    if (t[o]) return t[o].exports;
                    var i = (t[o] = { i: o, l: !1, exports: {} });
                    return (
                        e[o].call(i.exports, i, i.exports, n),
                        (i.l = !0),
                        i.exports
                    );
                }
                return (
                    (n.m = e),
                    (n.c = t),
                    (n.d = function (e, t, o) {
                        n.o(e, t) ||
                            Object.defineProperty(e, t, {
                                enumerable: !0,
                                get: o,
                            });
                    }),
                    (n.r = function (e) {
                        (typeof Symbol < 'u' &&
                            Symbol.toStringTag &&
                            Object.defineProperty(e, Symbol.toStringTag, {
                                value: 'Module',
                            }),
                            Object.defineProperty(e, '__esModule', {
                                value: !0,
                            }));
                    }),
                    (n.t = function (e, t) {
                        if (
                            (1 & t && (e = n(e)),
                            8 & t ||
                                (4 & t &&
                                    'object' == typeof e &&
                                    e &&
                                    e.__esModule))
                        )
                            return e;
                        var o = Object.create(null);
                        if (
                            (n.r(o),
                            Object.defineProperty(o, 'default', {
                                enumerable: !0,
                                value: e,
                            }),
                            2 & t && 'string' != typeof e)
                        )
                            for (var i in e)
                                n.d(
                                    o,
                                    i,
                                    function (t) {
                                        return e[t];
                                    }.bind(null, i),
                                );
                        return o;
                    }),
                    (n.n = function (e) {
                        var t =
                            e && e.__esModule
                                ? function () {
                                      return e.default;
                                  }
                                : function () {
                                      return e;
                                  };
                        return (n.d(t, 'a', t), t);
                    }),
                    (n.o = function (e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t);
                    }),
                    (n.p = '/'),
                    n((n.s = 0))
                );
            })([
                function (e, t, n) {
                    (n(1),
                        /*!
                         * Codex JavaScript Notification module
                         * https://github.com/codex-team/js-notifier
                         */
                        (e.exports = (function () {
                            var e = n(6),
                                t = 'cdx-notify--bounce-in',
                                o = null;
                            return {
                                show: function (n) {
                                    if (n.message) {
                                        !(function () {
                                            if (o) return !0;
                                            ((o = e.getWrapper()),
                                                document.body.appendChild(o));
                                        })();
                                        var i = null,
                                            r = n.time || 8e3;
                                        switch (n.type) {
                                            case 'confirm':
                                                i = e.confirm(n);
                                                break;
                                            case 'prompt':
                                                i = e.prompt(n);
                                                break;
                                            default:
                                                ((i = e.alert(n)),
                                                    window.setTimeout(
                                                        function () {
                                                            i.remove();
                                                        },
                                                        r,
                                                    ));
                                        }
                                        (o.appendChild(i), i.classList.add(t));
                                    }
                                },
                            };
                        })()));
                },
                function (e, t, n) {
                    var o = n(2);
                    'string' == typeof o && (o = [[e.i, o, '']]);
                    var i = { hmr: !0, transform: void 0, insertInto: void 0 };
                    (n(4)(o, i), o.locals && (e.exports = o.locals));
                },
                function (e, t, n) {
                    (e.exports = n(3)(!1)).push([
                        e.i,
                        '.cdx-notify--error{background:#fffbfb!important}.cdx-notify--error::before{background:#fb5d5d!important}.cdx-notify__input{max-width:130px;padding:5px 10px;background:#f7f7f7;border:0;border-radius:3px;font-size:13px;color:#656b7c;outline:0}.cdx-notify__input:-ms-input-placeholder{color:#656b7c}.cdx-notify__input::placeholder{color:#656b7c}.cdx-notify__input:focus:-ms-input-placeholder{color:rgba(101,107,124,.3)}.cdx-notify__input:focus::placeholder{color:rgba(101,107,124,.3)}.cdx-notify__button{border:none;border-radius:3px;font-size:13px;padding:5px 10px;cursor:pointer}.cdx-notify__button:last-child{margin-left:10px}.cdx-notify__button--cancel{background:#f2f5f7;box-shadow:0 2px 1px 0 rgba(16,19,29,0);color:#656b7c}.cdx-notify__button--cancel:hover{background:#eee}.cdx-notify__button--confirm{background:#34c992;box-shadow:0 1px 1px 0 rgba(18,49,35,.05);color:#fff}.cdx-notify__button--confirm:hover{background:#33b082}.cdx-notify__btns-wrapper{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;margin-top:5px}.cdx-notify__cross{position:absolute;top:5px;right:5px;width:10px;height:10px;padding:5px;opacity:.54;cursor:pointer}.cdx-notify__cross::after,.cdx-notify__cross::before{content:\'\';position:absolute;left:9px;top:5px;height:12px;width:2px;background:#575d67}.cdx-notify__cross::before{transform:rotate(-45deg)}.cdx-notify__cross::after{transform:rotate(45deg)}.cdx-notify__cross:hover{opacity:1}.cdx-notifies{position:fixed;z-index:2;bottom:20px;left:20px;font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Fira Sans","Droid Sans","Helvetica Neue",sans-serif}.cdx-notify{position:relative;width:220px;margin-top:15px;padding:13px 16px;background:#fff;box-shadow:0 11px 17px 0 rgba(23,32,61,.13);border-radius:5px;font-size:14px;line-height:1.4em;word-wrap:break-word}.cdx-notify::before{content:\'\';position:absolute;display:block;top:0;left:0;width:3px;height:calc(100% - 6px);margin:3px;border-radius:5px;background:0 0}@keyframes bounceIn{0%{opacity:0;transform:scale(.3)}50%{opacity:1;transform:scale(1.05)}70%{transform:scale(.9)}100%{transform:scale(1)}}.cdx-notify--bounce-in{animation-name:bounceIn;animation-duration:.6s;animation-iteration-count:1}.cdx-notify--success{background:#fafffe!important}.cdx-notify--success::before{background:#41ffb1!important}',
                        '',
                    ]);
                },
                function (e, t) {
                    e.exports = function (e) {
                        var t = [];
                        return (
                            (t.toString = function () {
                                return this.map(function (t) {
                                    var n = (function (e, t) {
                                        var n,
                                            o = e[1] || '',
                                            i = e[3];
                                        if (!i) return o;
                                        if (t && 'function' == typeof btoa) {
                                            var r =
                                                    ((n = i),
                                                    '/*# sourceMappingURL=data:application/json;charset=utf-8;base64,' +
                                                        btoa(
                                                            unescape(
                                                                encodeURIComponent(
                                                                    JSON.stringify(
                                                                        n,
                                                                    ),
                                                                ),
                                                            ),
                                                        ) +
                                                        ' */'),
                                                s = i.sources.map(function (e) {
                                                    return (
                                                        '/*# sourceURL=' +
                                                        i.sourceRoot +
                                                        e +
                                                        ' */'
                                                    );
                                                });
                                            return [o]
                                                .concat(s)
                                                .concat([r])
                                                .join('\n');
                                        }
                                        return [o].join('\n');
                                    })(t, e);
                                    return t[2]
                                        ? '@media ' + t[2] + '{' + n + '}'
                                        : n;
                                }).join('');
                            }),
                            (t.i = function (e, n) {
                                'string' == typeof e && (e = [[null, e, '']]);
                                for (var o = {}, i = 0; i < this.length; i++) {
                                    var r = this[i][0];
                                    'number' == typeof r && (o[r] = !0);
                                }
                                for (i = 0; i < e.length; i++) {
                                    var s = e[i];
                                    ('number' == typeof s[0] && o[s[0]]) ||
                                        (n && !s[2]
                                            ? (s[2] = n)
                                            : n &&
                                              (s[2] =
                                                  '(' +
                                                  s[2] +
                                                  ') and (' +
                                                  n +
                                                  ')'),
                                        t.push(s));
                                }
                            }),
                            t
                        );
                    };
                },
                function (e, t, n) {
                    var o,
                        i,
                        r = {},
                        s =
                            ((o = function () {
                                return (
                                    window &&
                                    document &&
                                    document.all &&
                                    !window.atob
                                );
                            }),
                            function () {
                                return (
                                    void 0 === i &&
                                        (i = o.apply(this, arguments)),
                                    i
                                );
                            }),
                        a = (function (e) {
                            var t = {};
                            return function (e) {
                                if ('function' == typeof e) return e();
                                if (void 0 === t[e]) {
                                    var n = function (e) {
                                        return document.querySelector(e);
                                    }.call(this, e);
                                    if (
                                        window.HTMLIFrameElement &&
                                        n instanceof window.HTMLIFrameElement
                                    )
                                        try {
                                            n = n.contentDocument.head;
                                        } catch {
                                            n = null;
                                        }
                                    t[e] = n;
                                }
                                return t[e];
                            };
                        })(),
                        l = null,
                        c = 0,
                        d = [],
                        h = n(5);
                    function u(e, t) {
                        for (var n = 0; n < e.length; n++) {
                            var o = e[n],
                                i = r[o.id];
                            if (i) {
                                i.refs++;
                                for (var s = 0; s < i.parts.length; s++)
                                    i.parts[s](o.parts[s]);
                                for (; s < o.parts.length; s++)
                                    i.parts.push(v(o.parts[s], t));
                            } else {
                                var a = [];
                                for (s = 0; s < o.parts.length; s++)
                                    a.push(v(o.parts[s], t));
                                r[o.id] = { id: o.id, refs: 1, parts: a };
                            }
                        }
                    }
                    function p(e, t) {
                        for (var n = [], o = {}, i = 0; i < e.length; i++) {
                            var r = e[i],
                                s = t.base ? r[0] + t.base : r[0],
                                a = { css: r[1], media: r[2], sourceMap: r[3] };
                            o[s]
                                ? o[s].parts.push(a)
                                : n.push((o[s] = { id: s, parts: [a] }));
                        }
                        return n;
                    }
                    function f(e, t) {
                        var n = a(e.insertInto);
                        if (!n)
                            throw new Error(
                                "Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.",
                            );
                        var o = d[d.length - 1];
                        if ('top' === e.insertAt)
                            (o
                                ? o.nextSibling
                                    ? n.insertBefore(t, o.nextSibling)
                                    : n.appendChild(t)
                                : n.insertBefore(t, n.firstChild),
                                d.push(t));
                        else if ('bottom' === e.insertAt) n.appendChild(t);
                        else {
                            if (
                                'object' != typeof e.insertAt ||
                                !e.insertAt.before
                            )
                                throw new Error(
                                    "[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n",
                                );
                            var i = a(e.insertInto + ' ' + e.insertAt.before);
                            n.insertBefore(t, i);
                        }
                    }
                    function g(e) {
                        if (null === e.parentNode) return !1;
                        e.parentNode.removeChild(e);
                        var t = d.indexOf(e);
                        t >= 0 && d.splice(t, 1);
                    }
                    function m(e) {
                        var t = document.createElement('style');
                        return (
                            void 0 === e.attrs.type &&
                                (e.attrs.type = 'text/css'),
                            b(t, e.attrs),
                            f(e, t),
                            t
                        );
                    }
                    function b(e, t) {
                        Object.keys(t).forEach(function (n) {
                            e.setAttribute(n, t[n]);
                        });
                    }
                    function v(e, t) {
                        var n, o, i, r;
                        if (t.transform && e.css) {
                            if (!(r = t.transform(e.css)))
                                return function () {};
                            e.css = r;
                        }
                        if (t.singleton) {
                            var s = c++;
                            ((n = l || (l = m(t))),
                                (o = k.bind(null, n, s, !1)),
                                (i = k.bind(null, n, s, !0)));
                        } else
                            e.sourceMap &&
                            'function' == typeof URL &&
                            'function' == typeof URL.createObjectURL &&
                            'function' == typeof URL.revokeObjectURL &&
                            'function' == typeof Blob &&
                            'function' == typeof btoa
                                ? ((n = (function (e) {
                                      var t = document.createElement('link');
                                      return (
                                          void 0 === e.attrs.type &&
                                              (e.attrs.type = 'text/css'),
                                          (e.attrs.rel = 'stylesheet'),
                                          b(t, e.attrs),
                                          f(e, t),
                                          t
                                      );
                                  })(t)),
                                  (o = function (e, t, n) {
                                      var o = n.css,
                                          i = n.sourceMap,
                                          r =
                                              void 0 ===
                                                  t.convertToAbsoluteUrls && i;
                                      ((t.convertToAbsoluteUrls || r) &&
                                          (o = h(o)),
                                          i &&
                                              (o +=
                                                  '\n/*# sourceMappingURL=data:application/json;base64,' +
                                                  btoa(
                                                      unescape(
                                                          encodeURIComponent(
                                                              JSON.stringify(i),
                                                          ),
                                                      ),
                                                  ) +
                                                  ' */'));
                                      var s = new Blob([o], {
                                              type: 'text/css',
                                          }),
                                          a = e.href;
                                      ((e.href = URL.createObjectURL(s)),
                                          a && URL.revokeObjectURL(a));
                                  }.bind(null, n, t)),
                                  (i = function () {
                                      (g(n),
                                          n.href &&
                                              URL.revokeObjectURL(n.href));
                                  }))
                                : ((n = m(t)),
                                  (o = function (e, t) {
                                      var n = t.css,
                                          o = t.media;
                                      if (
                                          (o && e.setAttribute('media', o),
                                          e.styleSheet)
                                      )
                                          e.styleSheet.cssText = n;
                                      else {
                                          for (; e.firstChild; )
                                              e.removeChild(e.firstChild);
                                          e.appendChild(
                                              document.createTextNode(n),
                                          );
                                      }
                                  }.bind(null, n)),
                                  (i = function () {
                                      g(n);
                                  }));
                        return (
                            o(e),
                            function (t) {
                                if (t) {
                                    if (
                                        t.css === e.css &&
                                        t.media === e.media &&
                                        t.sourceMap === e.sourceMap
                                    )
                                        return;
                                    o((e = t));
                                } else i();
                            }
                        );
                    }
                    e.exports = function (e, t) {
                        if (
                            typeof DEBUG < 'u' &&
                            DEBUG &&
                            'object' != typeof document
                        )
                            throw new Error(
                                'The style-loader cannot be used in a non-browser environment',
                            );
                        (((t = t || {}).attrs =
                            'object' == typeof t.attrs ? t.attrs : {}),
                            t.singleton ||
                                'boolean' == typeof t.singleton ||
                                (t.singleton = s()),
                            t.insertInto || (t.insertInto = 'head'),
                            t.insertAt || (t.insertAt = 'bottom'));
                        var n = p(e, t);
                        return (
                            u(n, t),
                            function (e) {
                                for (var o = [], i = 0; i < n.length; i++) {
                                    var s = n[i];
                                    ((a = r[s.id]).refs--, o.push(a));
                                }
                                for (
                                    e && u(p(e, t), t), i = 0;
                                    i < o.length;
                                    i++
                                ) {
                                    var a;
                                    if (0 === (a = o[i]).refs) {
                                        for (var l = 0; l < a.parts.length; l++)
                                            a.parts[l]();
                                        delete r[a.id];
                                    }
                                }
                            }
                        );
                    };
                    var y,
                        w =
                            ((y = []),
                            function (e, t) {
                                return (
                                    (y[e] = t),
                                    y.filter(Boolean).join('\n')
                                );
                            });
                    function k(e, t, n, o) {
                        var i = n ? '' : o.css;
                        if (e.styleSheet) e.styleSheet.cssText = w(t, i);
                        else {
                            var r = document.createTextNode(i),
                                s = e.childNodes;
                            (s[t] && e.removeChild(s[t]),
                                s.length
                                    ? e.insertBefore(r, s[t])
                                    : e.appendChild(r));
                        }
                    }
                },
                function (e, t) {
                    e.exports = function (e) {
                        var t = typeof window < 'u' && window.location;
                        if (!t)
                            throw new Error('fixUrls requires window.location');
                        if (!e || 'string' != typeof e) return e;
                        var n = t.protocol + '//' + t.host,
                            o = n + t.pathname.replace(/\/[^\/]*$/, '/');
                        return e.replace(
                            /url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,
                            function (e, t) {
                                var i,
                                    r = t
                                        .trim()
                                        .replace(/^"(.*)"$/, function (e, t) {
                                            return t;
                                        })
                                        .replace(/^'(.*)'$/, function (e, t) {
                                            return t;
                                        });
                                return /^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(
                                    r,
                                )
                                    ? e
                                    : ((i =
                                          0 === r.indexOf('//')
                                              ? r
                                              : 0 === r.indexOf('/')
                                                ? n + r
                                                : o + r.replace(/^\.\//, '')),
                                      'url(' + JSON.stringify(i) + ')');
                            },
                        );
                    };
                },
                function (e, t, n) {
                    var o, i, r, s, a, l, c, d, h;
                    e.exports =
                        ((o = 'cdx-notifies'),
                        (i = 'cdx-notify'),
                        (r = 'cdx-notify__cross'),
                        (s = 'cdx-notify__button--confirm'),
                        (a = 'cdx-notify__button--cancel'),
                        (l = 'cdx-notify__input'),
                        (c = 'cdx-notify__button'),
                        (d = 'cdx-notify__btns-wrapper'),
                        {
                            alert: (h = function (e) {
                                var t = document.createElement('DIV'),
                                    n = document.createElement('DIV'),
                                    o = e.message,
                                    s = e.style;
                                return (
                                    t.classList.add(i),
                                    s && t.classList.add(i + '--' + s),
                                    (t.innerHTML = o),
                                    n.classList.add(r),
                                    n.addEventListener(
                                        'click',
                                        t.remove.bind(t),
                                    ),
                                    t.appendChild(n),
                                    t
                                );
                            }),
                            confirm: function (e) {
                                var t = h(e),
                                    n = document.createElement('div'),
                                    o = document.createElement('button'),
                                    i = document.createElement('button'),
                                    l = t.querySelector('.' + r),
                                    u = e.cancelHandler,
                                    p = e.okHandler;
                                return (
                                    n.classList.add(d),
                                    (o.innerHTML = e.okText || 'Confirm'),
                                    (i.innerHTML = e.cancelText || 'Cancel'),
                                    o.classList.add(c),
                                    i.classList.add(c),
                                    o.classList.add(s),
                                    i.classList.add(a),
                                    u &&
                                        'function' == typeof u &&
                                        (i.addEventListener('click', u),
                                        l.addEventListener('click', u)),
                                    p &&
                                        'function' == typeof p &&
                                        o.addEventListener('click', p),
                                    o.addEventListener(
                                        'click',
                                        t.remove.bind(t),
                                    ),
                                    i.addEventListener(
                                        'click',
                                        t.remove.bind(t),
                                    ),
                                    n.appendChild(o),
                                    n.appendChild(i),
                                    t.appendChild(n),
                                    t
                                );
                            },
                            prompt: function (e) {
                                var t = h(e),
                                    n = document.createElement('div'),
                                    o = document.createElement('button'),
                                    i = document.createElement('input'),
                                    a = t.querySelector('.' + r),
                                    u = e.cancelHandler,
                                    p = e.okHandler;
                                return (
                                    n.classList.add(d),
                                    (o.innerHTML = e.okText || 'Ok'),
                                    o.classList.add(c),
                                    o.classList.add(s),
                                    i.classList.add(l),
                                    e.placeholder &&
                                        i.setAttribute(
                                            'placeholder',
                                            e.placeholder,
                                        ),
                                    e.default && (i.value = e.default),
                                    e.inputType && (i.type = e.inputType),
                                    u &&
                                        'function' == typeof u &&
                                        a.addEventListener('click', u),
                                    p &&
                                        'function' == typeof p &&
                                        o.addEventListener(
                                            'click',
                                            function () {
                                                p(i.value);
                                            },
                                        ),
                                    o.addEventListener(
                                        'click',
                                        t.remove.bind(t),
                                    ),
                                    n.appendChild(i),
                                    n.appendChild(o),
                                    t.appendChild(n),
                                    t
                                );
                            },
                            getWrapper: function () {
                                var e = document.createElement('DIV');
                                return (e.classList.add(o), e);
                            },
                        });
                },
            ])));
    })(jt);
    const Dt = Be(jt.exports);
    class Ft {
        show(e) {
            Dt.show(e);
        }
    }
    var Ht = { exports: {} };
    !(function (e, t) {
        e.exports = (function () {
            function e(e) {
                var t = e.tags,
                    n = Object.keys(t)
                        .map(function (e) {
                            return typeof t[e];
                        })
                        .every(function (e) {
                            return (
                                'object' === e ||
                                'boolean' === e ||
                                'function' === e
                            );
                        });
                if (!n) throw new Error('The configuration was invalid');
                this.config = e;
            }
            var t = [
                'P',
                'LI',
                'TD',
                'TH',
                'DIV',
                'H1',
                'H2',
                'H3',
                'H4',
                'H5',
                'H6',
                'PRE',
            ];
            function n(e) {
                return -1 !== t.indexOf(e.nodeName);
            }
            var o = [
                'A',
                'B',
                'STRONG',
                'I',
                'EM',
                'SUB',
                'SUP',
                'U',
                'STRIKE',
            ];
            function i(e) {
                return -1 !== o.indexOf(e.nodeName);
            }
            function r(e, t) {
                return e.createTreeWalker(
                    t,
                    NodeFilter.SHOW_TEXT |
                        NodeFilter.SHOW_ELEMENT |
                        NodeFilter.SHOW_COMMENT,
                    null,
                    !1,
                );
            }
            function s(e, t, n) {
                return 'function' == typeof e.tags[t]
                    ? e.tags[t](n)
                    : e.tags[t];
            }
            function a(e, t) {
                return typeof t > 'u' || ('boolean' == typeof t && !t);
            }
            function l(e, t, n) {
                var o = e.name.toLowerCase();
                return (
                    !0 !== t &&
                    ('function' == typeof t[o]
                        ? !t[o](e.value, n)
                        : typeof t[o] > 'u' ||
                          !1 === t[o] ||
                          ('string' == typeof t[o] && t[o] !== e.value))
                );
            }
            return (
                (e.prototype.clean = function (e) {
                    const t = document.implementation.createHTMLDocument(),
                        n = t.createElement('div');
                    return (
                        (n.innerHTML = e),
                        this._sanitize(t, n),
                        n.innerHTML
                    );
                }),
                (e.prototype._sanitize = function (e, t) {
                    var o = r(e, t),
                        c = o.firstChild();
                    if (c)
                        do {
                            if (c.nodeType !== Node.TEXT_NODE) {
                                if (c.nodeType === Node.COMMENT_NODE) {
                                    (t.removeChild(c), this._sanitize(e, t));
                                    break;
                                }
                                var d,
                                    h = i(c);
                                h &&
                                    (d = Array.prototype.some.call(
                                        c.childNodes,
                                        n,
                                    ));
                                var u = !!t.parentNode,
                                    p = n(t) && n(c) && u,
                                    f = c.nodeName.toLowerCase(),
                                    g = s(this.config, f, c);
                                if (
                                    (h && d) ||
                                    a(c, g) ||
                                    (!this.config.keepNestedBlockElements && p)
                                ) {
                                    if (
                                        'SCRIPT' !== c.nodeName &&
                                        'STYLE' !== c.nodeName
                                    )
                                        for (; c.childNodes.length > 0; )
                                            t.insertBefore(c.childNodes[0], c);
                                    (t.removeChild(c), this._sanitize(e, t));
                                    break;
                                }
                                for (
                                    var m = 0;
                                    m < c.attributes.length;
                                    m += 1
                                ) {
                                    var b = c.attributes[m];
                                    l(b, g, c) &&
                                        (c.removeAttribute(b.name), (m -= 1));
                                }
                                this._sanitize(e, c);
                            } else if (
                                '' === c.data.trim() &&
                                ((c.previousElementSibling &&
                                    n(c.previousElementSibling)) ||
                                    (c.nextElementSibling &&
                                        n(c.nextElementSibling)))
                            ) {
                                (t.removeChild(c), this._sanitize(e, t));
                                break;
                            }
                        } while ((c = o.nextSibling()));
                }),
                e
            );
        })();
    })(Ht);
    const zt = Be(Ht.exports);
    function Ut(e, t) {
        return e.map((e) => {
            const n = Ve(t) ? t(e.tool) : t;
            return (Ze(n) || (e.data = qt(e.data, n)), e);
        });
    }
    function Wt(e, t = {}) {
        return new zt({ tags: t }).clean(e);
    }
    function qt(e, t) {
        return Array.isArray(e)
            ? (function (e, t) {
                  return e.map((e) => qt(e, t));
              })(e, t)
            : Ge(e)
              ? (function (e, t) {
                    const n = {};
                    for (const o in e) {
                        if (!Object.prototype.hasOwnProperty.call(e, o))
                            continue;
                        const i = e[o],
                            r = Vt(t[o]) ? t[o] : t;
                        n[o] = qt(i, r);
                    }
                    return n;
                })(e, t)
              : Ke(e)
                ? (function (e, t) {
                      return Ge(t) ? Wt(e, t) : !1 === t ? Wt(e, {}) : e;
                  })(e, t)
                : e;
    }
    function Vt(e) {
        return (
            Ge(e) ||
            (function (e) {
                return 'boolean' === qe(e);
            })(e) ||
            Ve(e)
        );
    }
    var Gt = { exports: {} };
    /*!
     * CodeX.Tooltips
     *
     * @version 1.0.5
     *
     * @licence MIT
     * @author CodeX <https://codex.so>
     *
     *
     */ !(function (e, t) {
        (window,
            (e.exports = (function (e) {
                var t = {};
                function n(o) {
                    if (t[o]) return t[o].exports;
                    var i = (t[o] = { i: o, l: !1, exports: {} });
                    return (
                        e[o].call(i.exports, i, i.exports, n),
                        (i.l = !0),
                        i.exports
                    );
                }
                return (
                    (n.m = e),
                    (n.c = t),
                    (n.d = function (e, t, o) {
                        n.o(e, t) ||
                            Object.defineProperty(e, t, {
                                enumerable: !0,
                                get: o,
                            });
                    }),
                    (n.r = function (e) {
                        (typeof Symbol < 'u' &&
                            Symbol.toStringTag &&
                            Object.defineProperty(e, Symbol.toStringTag, {
                                value: 'Module',
                            }),
                            Object.defineProperty(e, '__esModule', {
                                value: !0,
                            }));
                    }),
                    (n.t = function (e, t) {
                        if (
                            (1 & t && (e = n(e)),
                            8 & t ||
                                (4 & t &&
                                    'object' == typeof e &&
                                    e &&
                                    e.__esModule))
                        )
                            return e;
                        var o = Object.create(null);
                        if (
                            (n.r(o),
                            Object.defineProperty(o, 'default', {
                                enumerable: !0,
                                value: e,
                            }),
                            2 & t && 'string' != typeof e)
                        )
                            for (var i in e)
                                n.d(
                                    o,
                                    i,
                                    function (t) {
                                        return e[t];
                                    }.bind(null, i),
                                );
                        return o;
                    }),
                    (n.n = function (e) {
                        var t =
                            e && e.__esModule
                                ? function () {
                                      return e.default;
                                  }
                                : function () {
                                      return e;
                                  };
                        return (n.d(t, 'a', t), t);
                    }),
                    (n.o = function (e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t);
                    }),
                    (n.p = ''),
                    n((n.s = 0))
                );
            })([
                function (e, t, n) {
                    e.exports = n(1);
                },
                function (e, t, n) {
                    (n.r(t),
                        n.d(t, 'default', function () {
                            return o;
                        }));
                    class o {
                        constructor() {
                            ((this.nodes = { wrapper: null, content: null }),
                                (this.showed = !1),
                                (this.offsetTop = 10),
                                (this.offsetLeft = 10),
                                (this.offsetRight = 10),
                                (this.hidingDelay = 0),
                                (this.handleWindowScroll = () => {
                                    this.showed && this.hide(!0);
                                }),
                                this.loadStyles(),
                                this.prepare(),
                                window.addEventListener(
                                    'scroll',
                                    this.handleWindowScroll,
                                    { passive: !0 },
                                ));
                        }
                        get CSS() {
                            return {
                                tooltip: 'ct',
                                tooltipContent: 'ct__content',
                                tooltipShown: 'ct--shown',
                                placement: {
                                    left: 'ct--left',
                                    bottom: 'ct--bottom',
                                    right: 'ct--right',
                                    top: 'ct--top',
                                },
                            };
                        }
                        show(e, t, n) {
                            (this.nodes.wrapper || this.prepare(),
                                this.hidingTimeout &&
                                    clearTimeout(this.hidingTimeout));
                            const o = Object.assign(
                                {
                                    placement: 'bottom',
                                    marginTop: 0,
                                    marginLeft: 0,
                                    marginRight: 0,
                                    marginBottom: 0,
                                    delay: 70,
                                    hidingDelay: 0,
                                },
                                n,
                            );
                            if (
                                (o.hidingDelay &&
                                    (this.hidingDelay = o.hidingDelay),
                                (this.nodes.content.innerHTML = ''),
                                'string' == typeof t)
                            )
                                this.nodes.content.appendChild(
                                    document.createTextNode(t),
                                );
                            else {
                                if (!(t instanceof Node))
                                    throw Error(
                                        '[CodeX Tooltip] Wrong type of «content» passed. It should be an instance of Node or String. But ' +
                                            typeof t +
                                            ' given.',
                                    );
                                this.nodes.content.appendChild(t);
                            }
                            switch (
                                (this.nodes.wrapper.classList.remove(
                                    ...Object.values(this.CSS.placement),
                                ),
                                o.placement)
                            ) {
                                case 'top':
                                    this.placeTop(e, o);
                                    break;
                                case 'left':
                                    this.placeLeft(e, o);
                                    break;
                                case 'right':
                                    this.placeRight(e, o);
                                    break;
                                default:
                                    this.placeBottom(e, o);
                            }
                            o && o.delay
                                ? (this.showingTimeout = setTimeout(() => {
                                      (this.nodes.wrapper.classList.add(
                                          this.CSS.tooltipShown,
                                      ),
                                          (this.showed = !0));
                                  }, o.delay))
                                : (this.nodes.wrapper.classList.add(
                                      this.CSS.tooltipShown,
                                  ),
                                  (this.showed = !0));
                        }
                        hide(e = !1) {
                            if (this.hidingDelay && !e)
                                return (
                                    this.hidingTimeout &&
                                        clearTimeout(this.hidingTimeout),
                                    void (this.hidingTimeout = setTimeout(
                                        () => {
                                            this.hide(!0);
                                        },
                                        this.hidingDelay,
                                    ))
                                );
                            (this.nodes.wrapper.classList.remove(
                                this.CSS.tooltipShown,
                            ),
                                (this.showed = !1),
                                this.showingTimeout &&
                                    clearTimeout(this.showingTimeout));
                        }
                        onHover(e, t, n) {
                            (e.addEventListener('mouseenter', () => {
                                this.show(e, t, n);
                            }),
                                e.addEventListener('mouseleave', () => {
                                    this.hide();
                                }));
                        }
                        destroy() {
                            (this.nodes.wrapper.remove(),
                                window.removeEventListener(
                                    'scroll',
                                    this.handleWindowScroll,
                                ));
                        }
                        prepare() {
                            ((this.nodes.wrapper = this.make(
                                'div',
                                this.CSS.tooltip,
                            )),
                                (this.nodes.content = this.make(
                                    'div',
                                    this.CSS.tooltipContent,
                                )),
                                this.append(
                                    this.nodes.wrapper,
                                    this.nodes.content,
                                ),
                                this.append(document.body, this.nodes.wrapper));
                        }
                        loadStyles() {
                            const e = 'codex-tooltips-style';
                            if (document.getElementById(e)) return;
                            const t = n(2),
                                o = this.make('style', null, {
                                    textContent: t.toString(),
                                    id: e,
                                });
                            this.prepend(document.head, o);
                        }
                        placeBottom(e, t) {
                            const n = e.getBoundingClientRect(),
                                o =
                                    n.left +
                                    e.clientWidth / 2 -
                                    this.nodes.wrapper.offsetWidth / 2,
                                i =
                                    n.bottom +
                                    window.pageYOffset +
                                    this.offsetTop +
                                    t.marginTop;
                            this.applyPlacement('bottom', o, i);
                        }
                        placeTop(e, t) {
                            const n = e.getBoundingClientRect(),
                                o =
                                    n.left +
                                    e.clientWidth / 2 -
                                    this.nodes.wrapper.offsetWidth / 2,
                                i =
                                    n.top +
                                    window.pageYOffset -
                                    this.nodes.wrapper.clientHeight -
                                    this.offsetTop;
                            this.applyPlacement('top', o, i);
                        }
                        placeLeft(e, t) {
                            const n = e.getBoundingClientRect(),
                                o =
                                    n.left -
                                    this.nodes.wrapper.offsetWidth -
                                    this.offsetLeft -
                                    t.marginLeft,
                                i =
                                    n.top +
                                    window.pageYOffset +
                                    e.clientHeight / 2 -
                                    this.nodes.wrapper.offsetHeight / 2;
                            this.applyPlacement('left', o, i);
                        }
                        placeRight(e, t) {
                            const n = e.getBoundingClientRect(),
                                o = n.right + this.offsetRight + t.marginRight,
                                i =
                                    n.top +
                                    window.pageYOffset +
                                    e.clientHeight / 2 -
                                    this.nodes.wrapper.offsetHeight / 2;
                            this.applyPlacement('right', o, i);
                        }
                        applyPlacement(e, t, n) {
                            (this.nodes.wrapper.classList.add(
                                this.CSS.placement[e],
                            ),
                                (this.nodes.wrapper.style.left = t + 'px'),
                                (this.nodes.wrapper.style.top = n + 'px'));
                        }
                        make(e, t = null, n = {}) {
                            const o = document.createElement(e);
                            Array.isArray(t)
                                ? o.classList.add(...t)
                                : t && o.classList.add(t);
                            for (const e in n)
                                n.hasOwnProperty(e) && (o[e] = n[e]);
                            return o;
                        }
                        append(e, t) {
                            Array.isArray(t)
                                ? t.forEach((t) => e.appendChild(t))
                                : e.appendChild(t);
                        }
                        prepend(e, t) {
                            Array.isArray(t)
                                ? (t = t.reverse()).forEach((t) => e.prepend(t))
                                : e.prepend(t);
                        }
                    }
                },
                function (e, t) {
                    e.exports =
                        '.ct{z-index:999;opacity:0;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;pointer-events:none;-webkit-transition:opacity 50ms ease-in,-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,transform 70ms cubic-bezier(.215,.61,.355,1);transition:opacity 50ms ease-in,transform 70ms cubic-bezier(.215,.61,.355,1),-webkit-transform 70ms cubic-bezier(.215,.61,.355,1);will-change:opacity,top,left;-webkit-box-shadow:0 8px 12px 0 rgba(29,32,43,.17),0 4px 5px -3px rgba(5,6,12,.49);box-shadow:0 8px 12px 0 rgba(29,32,43,.17),0 4px 5px -3px rgba(5,6,12,.49);border-radius:9px}.ct,.ct:before{position:absolute;top:0;left:0}.ct:before{content:"";bottom:0;right:0;background-color:#1d202b;z-index:-1;border-radius:4px}@supports(-webkit-mask-box-image:url("")){.ct:before{border-radius:0;-webkit-mask-box-image:url(\'data:image/svg+xml;charset=utf-8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24"><path d="M10.71 0h2.58c3.02 0 4.64.42 6.1 1.2a8.18 8.18 0 013.4 3.4C23.6 6.07 24 7.7 24 10.71v2.58c0 3.02-.42 4.64-1.2 6.1a8.18 8.18 0 01-3.4 3.4c-1.47.8-3.1 1.21-6.11 1.21H10.7c-3.02 0-4.64-.42-6.1-1.2a8.18 8.18 0 01-3.4-3.4C.4 17.93 0 16.3 0 13.29V10.7c0-3.02.42-4.64 1.2-6.1a8.18 8.18 0 013.4-3.4C6.07.4 7.7 0 10.71 0z"/></svg>\') 48% 41% 37.9% 53.3%}}@media (--mobile){.ct{display:none}}.ct__content{padding:6px 10px;color:#cdd1e0;font-size:12px;text-align:center;letter-spacing:.02em;line-height:1em}.ct:after{content:"";width:8px;height:8px;position:absolute;background-color:#1d202b;z-index:-1}.ct--bottom{-webkit-transform:translateY(5px);transform:translateY(5px)}.ct--bottom:after{top:-3px;left:50%;-webkit-transform:translateX(-50%) rotate(-45deg);transform:translateX(-50%) rotate(-45deg)}.ct--top{-webkit-transform:translateY(-5px);transform:translateY(-5px)}.ct--top:after{top:auto;bottom:-3px;left:50%;-webkit-transform:translateX(-50%) rotate(-45deg);transform:translateX(-50%) rotate(-45deg)}.ct--left{-webkit-transform:translateX(-5px);transform:translateX(-5px)}.ct--left:after{top:50%;left:auto;right:0;-webkit-transform:translate(41.6%,-50%) rotate(-45deg);transform:translate(41.6%,-50%) rotate(-45deg)}.ct--right{-webkit-transform:translateX(5px);transform:translateX(5px)}.ct--right:after{top:50%;left:0;-webkit-transform:translate(-41.6%,-50%) rotate(-45deg);transform:translate(-41.6%,-50%) rotate(-45deg)}.ct--shown{opacity:1;-webkit-transform:none;transform:none}';
                },
            ]).default));
    })(Gt);
    const Kt = Be(Gt.exports);
    let Yt = null;
    function Xt() {
        Yt || (Yt = new Kt());
    }
    function Zt(e = !1) {
        (Xt(), null == Yt || Yt.hide(e));
    }
    function Jt(e, t, n) {
        (Xt(), null == Yt || Yt.onHover(e, t, n));
    }
    const Qt = (function e(t, n) {
        const o = {};
        return (
            Object.entries(t).forEach(([t, i]) => {
                if (Ge(i)) {
                    const r = n ? `${n}.${t}` : t;
                    Object.values(i).every((e) => Ke(e))
                        ? (o[t] = r)
                        : (o[t] = e(i, r));
                } else o[t] = i;
            }),
            o
        );
    })(ft);
    const en = class e {
        constructor(e, t) {
            ((this.cursor = -1),
                (this.items = []),
                (this.items = e || []),
                (this.focusedCssClass = t));
        }
        get currentItem() {
            return -1 === this.cursor ? null : this.items[this.cursor];
        }
        setCursor(e) {
            e < this.items.length &&
                e >= -1 &&
                (this.dropCursor(),
                (this.cursor = e),
                this.items[this.cursor].classList.add(this.focusedCssClass));
        }
        setItems(e) {
            this.items = e;
        }
        next() {
            this.cursor = this.leafNodesAndReturnIndex(e.directions.RIGHT);
        }
        previous() {
            this.cursor = this.leafNodesAndReturnIndex(e.directions.LEFT);
        }
        dropCursor() {
            -1 !== this.cursor &&
                (this.items[this.cursor].classList.remove(this.focusedCssClass),
                (this.cursor = -1));
        }
        leafNodesAndReturnIndex(t) {
            if (0 === this.items.length) return this.cursor;
            let n = this.cursor;
            return (
                -1 === n
                    ? (n = t === e.directions.RIGHT ? -1 : 0)
                    : this.items[n].classList.remove(this.focusedCssClass),
                (n =
                    t === e.directions.RIGHT
                        ? (n + 1) % this.items.length
                        : (this.items.length + n - 1) % this.items.length),
                ut.canSetCaret(this.items[n]) &&
                    tt(() => xt.setCursor(this.items[n]), 50)(),
                this.items[n].classList.add(this.focusedCssClass),
                n
            );
        }
    };
    en.directions = { RIGHT: 'right', LEFT: 'left' };
    let tn = en;
    class nn {
        constructor(e) {
            ((this.iterator = null),
                (this.activated = !1),
                (this.flipCallbacks = []),
                (this.onKeyDown = (e) => {
                    if (this.isEventReadyForHandling(e))
                        switch (
                            (nn.usedKeys.includes(e.keyCode) &&
                                e.preventDefault(),
                            e.keyCode)
                        ) {
                            case Pe:
                                this.handleTabPress(e);
                                break;
                            case $e:
                            case Re:
                                this.flipLeft();
                                break;
                            case De:
                            case je:
                                this.flipRight();
                                break;
                            case Me:
                                this.handleEnterPress(e);
                        }
                }),
                (this.iterator = new tn(e.items, e.focusedItemClass)),
                (this.activateCallback = e.activateCallback),
                (this.allowedKeys = e.allowedKeys || nn.usedKeys));
        }
        get isActivated() {
            return this.activated;
        }
        static get usedKeys() {
            return [Pe, $e, De, Me, Re, je];
        }
        activate(e, t) {
            ((this.activated = !0),
                e && this.iterator.setItems(e),
                void 0 !== t && this.iterator.setCursor(t),
                document.addEventListener('keydown', this.onKeyDown, !0));
        }
        deactivate() {
            ((this.activated = !1),
                this.dropCursor(),
                document.removeEventListener('keydown', this.onKeyDown));
        }
        focusFirst() {
            (this.dropCursor(), this.flipRight());
        }
        flipLeft() {
            (this.iterator.previous(), this.flipCallback());
        }
        flipRight() {
            (this.iterator.next(), this.flipCallback());
        }
        hasFocus() {
            return !!this.iterator.currentItem;
        }
        onFlip(e) {
            this.flipCallbacks.push(e);
        }
        removeOnFlip(e) {
            this.flipCallbacks = this.flipCallbacks.filter((t) => t !== e);
        }
        dropCursor() {
            this.iterator.dropCursor();
        }
        isEventReadyForHandling(e) {
            return this.activated && this.allowedKeys.includes(e.keyCode);
        }
        handleTabPress(e) {
            switch (e.shiftKey ? tn.directions.LEFT : tn.directions.RIGHT) {
                case tn.directions.RIGHT:
                    this.flipRight();
                    break;
                case tn.directions.LEFT:
                    this.flipLeft();
            }
        }
        handleEnterPress(e) {
            this.activated &&
                (this.iterator.currentItem &&
                    (e.stopPropagation(),
                    e.preventDefault(),
                    this.iterator.currentItem.click()),
                Ve(this.activateCallback) &&
                    this.activateCallback(this.iterator.currentItem));
        }
        flipCallback() {
            (this.iterator.currentItem &&
                this.iterator.currentItem.scrollIntoViewIfNeeded(),
                this.flipCallbacks.forEach((e) => e()));
        }
    }
    const on =
            '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7.69998 12.6L7.67896 12.62C6.53993 13.7048 6.52012 15.5155 7.63516 16.625V16.625C8.72293 17.7073 10.4799 17.7102 11.5712 16.6314L13.0263 15.193C14.0703 14.1609 14.2141 12.525 13.3662 11.3266L13.22 11.12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16.22 11.12L16.3564 10.9805C17.2895 10.0265 17.3478 8.5207 16.4914 7.49733V7.49733C15.5691 6.39509 13.9269 6.25143 12.8271 7.17675L11.3901 8.38588C10.0935 9.47674 9.95706 11.4241 11.0888 12.6852L11.12 12.72"/></svg>',
        rn =
            '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M11.5 17.5L5 11M5 11V15.5M5 11H9.5"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12.5 6.5L19 13M19 13V8.5M19 13H14.5"/></svg>';
    function sn(e) {
        return (t, n) =>
            [[e, t].filter((e) => !!e).join('__'), n]
                .filter((e) => !!e)
                .join('--');
    }
    const an = sn('ce-hint'),
        ln = {
            root: an(),
            alignedStart: an(null, 'align-left'),
            alignedCenter: an(null, 'align-center'),
            title: an('title'),
            description: an('description'),
        };
    class cn {
        constructor(e) {
            ((this.nodes = {
                root: ut.make('div', [
                    ln.root,
                    'center' === e.alignment
                        ? ln.alignedCenter
                        : ln.alignedStart,
                ]),
                title: ut.make('div', ln.title, { textContent: e.title }),
            }),
                this.nodes.root.appendChild(this.nodes.title),
                void 0 !== e.description &&
                    ((this.nodes.description = ut.make('div', ln.description, {
                        textContent: e.description,
                    })),
                    this.nodes.root.appendChild(this.nodes.description)));
        }
        getElement() {
            return this.nodes.root;
        }
    }
    class dn {
        constructor(e) {
            this.params = e;
        }
        get name() {
            if (void 0 !== this.params && 'name' in this.params)
                return this.params.name;
        }
        destroy() {
            Zt();
        }
        onChildrenOpen() {
            var e;
            void 0 !== this.params &&
                'children' in this.params &&
                'function' ==
                    typeof (null == (e = this.params.children)
                        ? void 0
                        : e.onOpen) &&
                this.params.children.onOpen();
        }
        onChildrenClose() {
            var e;
            void 0 !== this.params &&
                'children' in this.params &&
                'function' ==
                    typeof (null == (e = this.params.children)
                        ? void 0
                        : e.onClose) &&
                this.params.children.onClose();
        }
        handleClick() {
            var e, t;
            void 0 !== this.params &&
                'onActivate' in this.params &&
                (null == (t = (e = this.params).onActivate) ||
                    t.call(e, this.params));
        }
        addHint(e, t) {
            Jt(e, new cn(t).getElement(), {
                placement: t.position,
                hidingDelay: 100,
            });
        }
        get children() {
            var e;
            return void 0 !== this.params &&
                'children' in this.params &&
                void 0 !==
                    (null == (e = this.params.children) ? void 0 : e.items)
                ? this.params.children.items
                : [];
        }
        get hasChildren() {
            return this.children.length > 0;
        }
        get isChildrenOpen() {
            var e;
            return (
                void 0 !== this.params &&
                'children' in this.params &&
                !0 === (null == (e = this.params.children) ? void 0 : e.isOpen)
            );
        }
        get isChildrenFlippable() {
            var e;
            return !(
                void 0 === this.params ||
                !('children' in this.params) ||
                !1 ===
                    (null == (e = this.params.children)
                        ? void 0
                        : e.isFlippable)
            );
        }
        get isChildrenSearchable() {
            var e;
            return (
                void 0 !== this.params &&
                'children' in this.params &&
                !0 ===
                    (null == (e = this.params.children) ? void 0 : e.searchable)
            );
        }
        get closeOnActivate() {
            return (
                void 0 !== this.params &&
                'closeOnActivate' in this.params &&
                this.params.closeOnActivate
            );
        }
        get isActive() {
            return (
                void 0 !== this.params &&
                'isActive' in this.params &&
                ('function' == typeof this.params.isActive
                    ? this.params.isActive()
                    : !0 === this.params.isActive)
            );
        }
    }
    const hn = sn('ce-popover-item'),
        un = {
            container: hn(),
            active: hn(null, 'active'),
            disabled: hn(null, 'disabled'),
            focused: hn(null, 'focused'),
            hidden: hn(null, 'hidden'),
            confirmationState: hn(null, 'confirmation'),
            noHover: hn(null, 'no-hover'),
            noFocus: hn(null, 'no-focus'),
            title: hn('title'),
            secondaryTitle: hn('secondary-title'),
            icon: hn('icon'),
            iconTool: hn('icon', 'tool'),
            iconChevronRight: hn('icon', 'chevron-right'),
            wobbleAnimation: sn('wobble')(),
        };
    class pn extends dn {
        constructor(e, t) {
            (super(e),
                (this.params = e),
                (this.nodes = { root: null, icon: null }),
                (this.confirmationState = null),
                (this.removeSpecialFocusBehavior = () => {
                    var e;
                    null == (e = this.nodes.root) ||
                        e.classList.remove(un.noFocus);
                }),
                (this.removeSpecialHoverBehavior = () => {
                    var e;
                    null == (e = this.nodes.root) ||
                        e.classList.remove(un.noHover);
                }),
                (this.onErrorAnimationEnd = () => {
                    var e, t;
                    (null == (e = this.nodes.icon) ||
                        e.classList.remove(un.wobbleAnimation),
                        null == (t = this.nodes.icon) ||
                            t.removeEventListener(
                                'animationend',
                                this.onErrorAnimationEnd,
                            ));
                }),
                (this.nodes.root = this.make(e, t)));
        }
        get isDisabled() {
            return !0 === this.params.isDisabled;
        }
        get toggle() {
            return this.params.toggle;
        }
        get title() {
            return this.params.title;
        }
        get isConfirmationStateEnabled() {
            return null !== this.confirmationState;
        }
        get isFocused() {
            return (
                null !== this.nodes.root &&
                this.nodes.root.classList.contains(un.focused)
            );
        }
        getElement() {
            return this.nodes.root;
        }
        handleClick() {
            this.isConfirmationStateEnabled && null !== this.confirmationState
                ? this.activateOrEnableConfirmationMode(this.confirmationState)
                : this.activateOrEnableConfirmationMode(this.params);
        }
        toggleActive(e) {
            var t;
            null == (t = this.nodes.root) || t.classList.toggle(un.active, e);
        }
        toggleHidden(e) {
            var t;
            null == (t = this.nodes.root) || t.classList.toggle(un.hidden, e);
        }
        reset() {
            this.isConfirmationStateEnabled && this.disableConfirmationMode();
        }
        onFocus() {
            this.disableSpecialHoverAndFocusBehavior();
        }
        make(e, t) {
            var n, o;
            const i = (null == t ? void 0 : t.wrapperTag) || 'div',
                r = ut.make(i, un.container, {
                    type: 'button' === i ? 'button' : void 0,
                });
            return (
                e.name && (r.dataset.itemName = e.name),
                (this.nodes.icon = ut.make('div', [un.icon, un.iconTool], {
                    innerHTML:
                        e.icon ||
                        '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><circle cx="12" cy="12" r="4" stroke="currentColor" stroke-width="2"/></svg>',
                })),
                r.appendChild(this.nodes.icon),
                void 0 !== e.title &&
                    r.appendChild(
                        ut.make('div', un.title, { innerHTML: e.title || '' }),
                    ),
                e.secondaryLabel &&
                    r.appendChild(
                        ut.make('div', un.secondaryTitle, {
                            textContent: e.secondaryLabel,
                        }),
                    ),
                this.hasChildren &&
                    r.appendChild(
                        ut.make('div', [un.icon, un.iconChevronRight], {
                            innerHTML:
                                '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9.58284 17.5L14.4414 12.6414C14.5195 12.5633 14.5195 12.4367 14.4414 12.3586L9.58284 7.5"/></svg>',
                        }),
                    ),
                this.isActive && r.classList.add(un.active),
                e.isDisabled && r.classList.add(un.disabled),
                void 0 !== e.hint &&
                    !1 !==
                        (null == (n = null == t ? void 0 : t.hint)
                            ? void 0
                            : n.enabled) &&
                    this.addHint(r, {
                        ...e.hint,
                        position:
                            (null == (o = null == t ? void 0 : t.hint)
                                ? void 0
                                : o.position) || 'right',
                    }),
                r
            );
        }
        enableConfirmationMode(e) {
            if (null === this.nodes.root) return;
            const t = {
                    ...this.params,
                    ...e,
                    confirmation: 'confirmation' in e ? e.confirmation : void 0,
                },
                n = this.make(t);
            ((this.nodes.root.innerHTML = n.innerHTML),
                this.nodes.root.classList.add(un.confirmationState),
                (this.confirmationState = e),
                this.enableSpecialHoverAndFocusBehavior());
        }
        disableConfirmationMode() {
            if (null === this.nodes.root) return;
            const e = this.make(this.params);
            ((this.nodes.root.innerHTML = e.innerHTML),
                this.nodes.root.classList.remove(un.confirmationState),
                (this.confirmationState = null),
                this.disableSpecialHoverAndFocusBehavior());
        }
        enableSpecialHoverAndFocusBehavior() {
            var e, t, n;
            (null == (e = this.nodes.root) || e.classList.add(un.noHover),
                null == (t = this.nodes.root) || t.classList.add(un.noFocus),
                null == (n = this.nodes.root) ||
                    n.addEventListener(
                        'mouseleave',
                        this.removeSpecialHoverBehavior,
                        { once: !0 },
                    ));
        }
        disableSpecialHoverAndFocusBehavior() {
            var e;
            (this.removeSpecialFocusBehavior(),
                this.removeSpecialHoverBehavior(),
                null == (e = this.nodes.root) ||
                    e.removeEventListener(
                        'mouseleave',
                        this.removeSpecialHoverBehavior,
                    ));
        }
        activateOrEnableConfirmationMode(e) {
            var t;
            if ('confirmation' in e && void 0 !== e.confirmation)
                this.enableConfirmationMode(e.confirmation);
            else
                try {
                    (null == (t = e.onActivate) || t.call(e, e),
                        this.disableConfirmationMode());
                } catch {
                    this.animateError();
                }
        }
        animateError() {
            var e, t, n;
            (null != (e = this.nodes.icon) &&
                e.classList.contains(un.wobbleAnimation)) ||
                (null == (t = this.nodes.icon) ||
                    t.classList.add(un.wobbleAnimation),
                null == (n = this.nodes.icon) ||
                    n.addEventListener(
                        'animationend',
                        this.onErrorAnimationEnd,
                    ));
        }
    }
    const fn = sn('ce-popover-item-separator'),
        gn = { container: fn(), line: fn('line'), hidden: fn(null, 'hidden') };
    class mn extends dn {
        constructor() {
            (super(),
                (this.nodes = {
                    root: ut.make('div', gn.container),
                    line: ut.make('div', gn.line),
                }),
                this.nodes.root.appendChild(this.nodes.line));
        }
        getElement() {
            return this.nodes.root;
        }
        toggleHidden(e) {
            var t;
            null == (t = this.nodes.root) || t.classList.toggle(gn.hidden, e);
        }
    }
    var bn = ((e) => (
        (e.Closed = 'closed'),
        (e.ClosedOnActivate = 'closed-on-activate'),
        e
    ))(bn || {});
    const vn = sn('ce-popover'),
        yn = {
            popover: vn(),
            popoverContainer: vn('container'),
            popoverOpenTop: vn(null, 'open-top'),
            popoverOpenLeft: vn(null, 'open-left'),
            popoverOpened: vn(null, 'opened'),
            search: vn('search'),
            nothingFoundMessage: vn('nothing-found-message'),
            nothingFoundMessageDisplayed: vn(
                'nothing-found-message',
                'displayed',
            ),
            items: vn('items'),
            overlay: vn('overlay'),
            overlayHidden: vn('overlay', 'hidden'),
            popoverNested: vn(null, 'nested'),
            getPopoverNestedClass: (e) =>
                vn(null, `nested-level-${e.toString()}`),
            popoverInline: vn(null, 'inline'),
            popoverHeader: vn('header'),
        };
    var wn = ((e) => (
        (e.NestingLevel = '--nesting-level'),
        (e.PopoverHeight = '--popover-height'),
        (e.InlinePopoverWidth = '--inline-popover-width'),
        (e.TriggerItemLeft = '--trigger-item-left'),
        (e.TriggerItemTop = '--trigger-item-top'),
        e
    ))(wn || {});
    const kn = sn('ce-popover-item-html'),
        xn = { root: kn(), hidden: kn(null, 'hidden') };
    class Cn extends dn {
        constructor(e, t) {
            var n, o;
            (super(e),
                (this.nodes = { root: ut.make('div', xn.root) }),
                this.nodes.root.appendChild(e.element),
                e.name && (this.nodes.root.dataset.itemName = e.name),
                void 0 !== e.hint &&
                    !1 !==
                        (null == (n = null == t ? void 0 : t.hint)
                            ? void 0
                            : n.enabled) &&
                    this.addHint(this.nodes.root, {
                        ...e.hint,
                        position:
                            (null == (o = null == t ? void 0 : t.hint)
                                ? void 0
                                : o.position) || 'right',
                    }));
        }
        getElement() {
            return this.nodes.root;
        }
        toggleHidden(e) {
            var t;
            null == (t = this.nodes.root) || t.classList.toggle(xn.hidden, e);
        }
        getControls() {
            const e = this.nodes.root.querySelectorAll(
                `button, ${ut.allInputsSelector}`,
            );
            return Array.from(e);
        }
    }
    class En extends vt {
        constructor(e, t = {}) {
            (super(),
                (this.params = e),
                (this.itemsRenderParams = t),
                (this.listeners = new wt()),
                (this.messages = {
                    nothingFound: 'Nothing found',
                    search: 'Search',
                }),
                (this.items = this.buildItems(e.items)),
                e.messages &&
                    (this.messages = { ...this.messages, ...e.messages }),
                (this.nodes = {}),
                (this.nodes.popoverContainer = ut.make('div', [
                    yn.popoverContainer,
                ])),
                (this.nodes.nothingFoundMessage = ut.make(
                    'div',
                    [yn.nothingFoundMessage],
                    { textContent: this.messages.nothingFound },
                )),
                this.nodes.popoverContainer.appendChild(
                    this.nodes.nothingFoundMessage,
                ),
                (this.nodes.items = ut.make('div', [yn.items])),
                this.items.forEach((e) => {
                    const t = e.getElement();
                    null !== t && this.nodes.items.appendChild(t);
                }),
                this.nodes.popoverContainer.appendChild(this.nodes.items),
                this.listeners.on(this.nodes.popoverContainer, 'click', (e) =>
                    this.handleClick(e),
                ),
                (this.nodes.popover = ut.make('div', [
                    yn.popover,
                    this.params.class,
                ])),
                this.nodes.popover.appendChild(this.nodes.popoverContainer));
        }
        get itemsDefault() {
            return this.items.filter((e) => e instanceof pn);
        }
        getElement() {
            return this.nodes.popover;
        }
        show() {
            (this.nodes.popover.classList.add(yn.popoverOpened),
                void 0 !== this.search && this.search.focus());
        }
        hide() {
            (this.nodes.popover.classList.remove(yn.popoverOpened),
                this.nodes.popover.classList.remove(yn.popoverOpenTop),
                this.itemsDefault.forEach((e) => e.reset()),
                void 0 !== this.search && this.search.clear(),
                this.emit(bn.Closed));
        }
        destroy() {
            var e;
            (this.items.forEach((e) => e.destroy()),
                this.nodes.popover.remove(),
                this.listeners.removeAll(),
                null == (e = this.search) || e.destroy());
        }
        activateItemByName(e) {
            const t = this.items.find((t) => t.name === e);
            this.handleItemClick(t);
        }
        buildItems(e) {
            return e.map((e) => {
                switch (e.type) {
                    case Mt.Separator:
                        return new mn();
                    case Mt.Html:
                        return new Cn(e, this.itemsRenderParams[Mt.Html]);
                    default:
                        return new pn(e, this.itemsRenderParams[Mt.Default]);
                }
            });
        }
        getTargetItem(e) {
            return this.items
                .filter((e) => e instanceof pn || e instanceof Cn)
                .find((t) => {
                    const n = t.getElement();
                    return null !== n && e.composedPath().includes(n);
                });
        }
        handleItemClick(e) {
            if (!('isDisabled' in e) || !e.isDisabled) {
                if (e.hasChildren)
                    return (
                        this.showNestedItems(e),
                        void (
                            'handleClick' in e &&
                            'function' == typeof e.handleClick &&
                            e.handleClick()
                        )
                    );
                (this.itemsDefault
                    .filter((t) => t !== e)
                    .forEach((e) => e.reset()),
                    'handleClick' in e &&
                        'function' == typeof e.handleClick &&
                        e.handleClick(),
                    this.toggleItemActivenessIfNeeded(e),
                    e.closeOnActivate &&
                        (this.hide(), this.emit(bn.ClosedOnActivate)));
            }
        }
        handleClick(e) {
            const t = this.getTargetItem(e);
            void 0 !== t && this.handleItemClick(t);
        }
        toggleItemActivenessIfNeeded(e) {
            if (
                e instanceof pn &&
                (!0 === e.toggle && e.toggleActive(),
                'string' == typeof e.toggle)
            ) {
                const t = this.itemsDefault.filter(
                    (t) => t.toggle === e.toggle,
                );
                if (1 === t.length) return void e.toggleActive();
                t.forEach((t) => {
                    t.toggleActive(t === e);
                });
            }
        }
    }
    var Sn = ((e) => ((e.Search = 'search'), e))(Sn || {});
    const Tn = sn('cdx-search-field'),
        _n = { wrapper: Tn(), icon: Tn('icon'), input: Tn('input') };
    class Bn extends vt {
        constructor({ items: e, placeholder: t }) {
            (super(),
                (this.listeners = new wt()),
                (this.items = e),
                (this.wrapper = ut.make('div', _n.wrapper)));
            const n = ut.make('div', _n.icon, {
                innerHTML:
                    '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><circle cx="10.5" cy="10.5" r="5.5" stroke="currentColor" stroke-width="2"/><line x1="15.4142" x2="19" y1="15" y2="18.5858" stroke="currentColor" stroke-linecap="round" stroke-width="2"/></svg>',
            });
            ((this.input = ut.make('input', _n.input, {
                placeholder: t,
                tabIndex: -1,
            })),
                this.wrapper.appendChild(n),
                this.wrapper.appendChild(this.input),
                this.listeners.on(this.input, 'input', () => {
                    ((this.searchQuery = this.input.value),
                        this.emit(Sn.Search, {
                            query: this.searchQuery,
                            items: this.foundItems,
                        }));
                }));
        }
        getElement() {
            return this.wrapper;
        }
        focus() {
            this.input.focus();
        }
        clear() {
            ((this.input.value = ''),
                (this.searchQuery = ''),
                this.emit(Sn.Search, { query: '', items: this.foundItems }));
        }
        destroy() {
            this.listeners.removeAll();
        }
        get foundItems() {
            return this.items.filter((e) => this.checkItem(e));
        }
        checkItem(e) {
            var t, n;
            const o = (null == (t = e.title) ? void 0 : t.toLowerCase()) || '',
                i = null == (n = this.searchQuery) ? void 0 : n.toLowerCase();
            return void 0 !== i && o.includes(i);
        }
    }
    var On = Object.defineProperty,
        In = Object.getOwnPropertyDescriptor;
    const Ln = class e extends En {
        constructor(e, t) {
            (super(e, t),
                (this.nestingLevel = 0),
                (this.nestedPopoverTriggerItem = null),
                (this.previouslyHoveredItem = null),
                (this.scopeElement = document.body),
                (this.hide = () => {
                    var e;
                    (super.hide(),
                        this.destroyNestedPopoverIfExists(),
                        null == (e = this.flipper) || e.deactivate(),
                        (this.previouslyHoveredItem = null));
                }),
                (this.onFlip = () => {
                    const e = this.itemsDefault.find((e) => e.isFocused);
                    null == e || e.onFocus();
                }),
                (this.onSearch = (e) => {
                    var t;
                    const n = '' === e.query,
                        o = 0 === e.items.length;
                    (this.items.forEach((t) => {
                        let i = !1;
                        (t instanceof pn
                            ? (i = !e.items.includes(t))
                            : (t instanceof mn || t instanceof Cn) &&
                              (i = o || !n),
                            t.toggleHidden(i));
                    }),
                        this.toggleNothingFoundMessage(o));
                    const i =
                        '' === e.query
                            ? this.flippableElements
                            : e.items.map((e) => e.getElement());
                    null != (t = this.flipper) &&
                        t.isActivated &&
                        (this.flipper.deactivate(), this.flipper.activate(i));
                }),
                void 0 !== e.nestingLevel &&
                    (this.nestingLevel = e.nestingLevel),
                this.nestingLevel > 0 &&
                    this.nodes.popover.classList.add(yn.popoverNested),
                void 0 !== e.scopeElement &&
                    (this.scopeElement = e.scopeElement),
                null !== this.nodes.popoverContainer &&
                    this.listeners.on(
                        this.nodes.popoverContainer,
                        'mouseover',
                        (e) => this.handleHover(e),
                    ),
                e.searchable && this.addSearch(),
                !1 !== e.flippable &&
                    ((this.flipper = new nn({
                        items: this.flippableElements,
                        focusedItemClass: un.focused,
                        allowedKeys: [Pe, Re, je, Me],
                    })),
                    this.flipper.onFlip(this.onFlip)));
        }
        hasFocus() {
            return void 0 !== this.flipper && this.flipper.hasFocus();
        }
        get scrollTop() {
            return null === this.nodes.items ? 0 : this.nodes.items.scrollTop;
        }
        get offsetTop() {
            return null === this.nodes.popoverContainer
                ? 0
                : this.nodes.popoverContainer.offsetTop;
        }
        show() {
            var e;
            (this.nodes.popover.style.setProperty(
                wn.PopoverHeight,
                this.size.height + 'px',
            ),
                this.shouldOpenBottom ||
                    this.nodes.popover.classList.add(yn.popoverOpenTop),
                this.shouldOpenRight ||
                    this.nodes.popover.classList.add(yn.popoverOpenLeft),
                super.show(),
                null == (e = this.flipper) ||
                    e.activate(this.flippableElements));
        }
        destroy() {
            (this.hide(), super.destroy());
        }
        showNestedItems(e) {
            (null !== this.nestedPopover && void 0 !== this.nestedPopover) ||
                ((this.nestedPopoverTriggerItem = e),
                this.showNestedPopoverForItem(e));
        }
        handleHover(e) {
            const t = this.getTargetItem(e);
            void 0 !== t &&
                this.previouslyHoveredItem !== t &&
                (this.destroyNestedPopoverIfExists(),
                (this.previouslyHoveredItem = t),
                t.hasChildren && this.showNestedPopoverForItem(t));
        }
        setTriggerItemPosition(e, t) {
            const n = t.getElement(),
                o = (n ? n.offsetTop : 0) - this.scrollTop,
                i = this.offsetTop + o;
            e.style.setProperty(wn.TriggerItemTop, i + 'px');
        }
        destroyNestedPopoverIfExists() {
            var e, t;
            void 0 === this.nestedPopover ||
                null === this.nestedPopover ||
                (this.nestedPopover.off(bn.ClosedOnActivate, this.hide),
                this.nestedPopover.hide(),
                this.nestedPopover.destroy(),
                this.nestedPopover.getElement().remove(),
                (this.nestedPopover = null),
                null == (e = this.flipper) ||
                    e.activate(this.flippableElements),
                null == (t = this.nestedPopoverTriggerItem) ||
                    t.onChildrenClose());
        }
        showNestedPopoverForItem(t) {
            var n;
            ((this.nestedPopover = new e({
                searchable: t.isChildrenSearchable,
                items: t.children,
                nestingLevel: this.nestingLevel + 1,
                flippable: t.isChildrenFlippable,
                messages: this.messages,
            })),
                t.onChildrenOpen(),
                this.nestedPopover.on(bn.ClosedOnActivate, this.hide));
            const o = this.nestedPopover.getElement();
            return (
                this.nodes.popover.appendChild(o),
                this.setTriggerItemPosition(o, t),
                o.style.setProperty(
                    wn.NestingLevel,
                    this.nestedPopover.nestingLevel.toString(),
                ),
                this.nestedPopover.show(),
                null == (n = this.flipper) || n.deactivate(),
                this.nestedPopover
            );
        }
        get shouldOpenBottom() {
            if (void 0 === this.nodes.popover || null === this.nodes.popover)
                return !1;
            const e = this.nodes.popoverContainer.getBoundingClientRect(),
                t = this.scopeElement.getBoundingClientRect(),
                n = this.size.height,
                o = e.top + n,
                i = e.top - n,
                r = Math.min(window.innerHeight, t.bottom);
            return i < t.top || o <= r;
        }
        get shouldOpenRight() {
            if (void 0 === this.nodes.popover || null === this.nodes.popover)
                return !1;
            const e = this.nodes.popover.getBoundingClientRect(),
                t = this.scopeElement.getBoundingClientRect(),
                n = this.size.width,
                o = e.right + n,
                i = e.left - n,
                r = Math.min(window.innerWidth, t.right);
            return i < t.left || o <= r;
        }
        get size() {
            var e;
            const t = { height: 0, width: 0 };
            if (null === this.nodes.popover) return t;
            const n = this.nodes.popover.cloneNode(!0);
            ((n.style.visibility = 'hidden'),
                (n.style.position = 'absolute'),
                (n.style.top = '-1000px'),
                n.classList.add(yn.popoverOpened),
                null == (e = n.querySelector('.' + yn.popoverNested)) ||
                    e.remove(),
                document.body.appendChild(n));
            const o = n.querySelector('.' + yn.popoverContainer);
            return (
                (t.height = o.offsetHeight),
                (t.width = o.offsetWidth),
                n.remove(),
                t
            );
        }
        get flippableElements() {
            return this.items
                .map((e) =>
                    e instanceof pn
                        ? e.getElement()
                        : e instanceof Cn
                          ? e.getControls()
                          : void 0,
                )
                .flat()
                .filter((e) => null != e);
        }
        addSearch() {
            ((this.search = new Bn({
                items: this.itemsDefault,
                placeholder: this.messages.search,
            })),
                this.search.on(Sn.Search, this.onSearch));
            const e = this.search.getElement();
            (e.classList.add(yn.search),
                this.nodes.popoverContainer.insertBefore(
                    e,
                    this.nodes.popoverContainer.firstChild,
                ));
        }
        toggleNothingFoundMessage(e) {
            this.nodes.nothingFoundMessage.classList.toggle(
                yn.nothingFoundMessageDisplayed,
                e,
            );
        }
    };
    ((e, t, n, o) => {
        for (
            var i, r = o > 1 ? void 0 : o ? In(t, n) : t, s = e.length - 1;
            s >= 0;
            s--
        )
            (i = e[s]) && (r = (o ? i(t, n, r) : i(r)) || r);
        o && r && On(t, n, r);
    })([ct], Ln.prototype, 'size', 1);
    let An = Ln;
    class Pn extends An {
        constructor(e) {
            const t = !dt();
            (super(
                { ...e, class: yn.popoverInline },
                {
                    [Mt.Default]: {
                        wrapperTag: 'button',
                        hint: {
                            position: 'top',
                            alignment: 'center',
                            enabled: t,
                        },
                    },
                    [Mt.Html]: {
                        hint: {
                            position: 'top',
                            alignment: 'center',
                            enabled: t,
                        },
                    },
                },
            ),
                this.items.forEach((e) => {
                    (!(e instanceof pn) && !(e instanceof Cn)) ||
                        (e.hasChildren &&
                            e.isChildrenOpen &&
                            this.showNestedItems(e));
                }));
        }
        get offsetLeft() {
            return null === this.nodes.popoverContainer
                ? 0
                : this.nodes.popoverContainer.offsetLeft;
        }
        show() {
            (0 === this.nestingLevel &&
                this.nodes.popover.style.setProperty(
                    wn.InlinePopoverWidth,
                    this.size.width + 'px',
                ),
                super.show());
        }
        handleHover() {}
        setTriggerItemPosition(e, t) {
            const n = t.getElement(),
                o = n ? n.offsetLeft : 0,
                i = this.offsetLeft + o;
            e.style.setProperty(wn.TriggerItemLeft, i + 'px');
        }
        showNestedItems(e) {
            if (this.nestedPopoverTriggerItem === e)
                return (
                    this.destroyNestedPopoverIfExists(),
                    void (this.nestedPopoverTriggerItem = null)
                );
            super.showNestedItems(e);
        }
        showNestedPopoverForItem(e) {
            const t = super.showNestedPopoverForItem(e);
            return (
                t
                    .getElement()
                    .classList.add(yn.getPopoverNestedClass(t.nestingLevel)),
                t
            );
        }
        handleItemClick(e) {
            var t;
            (e !== this.nestedPopoverTriggerItem &&
                (null == (t = this.nestedPopoverTriggerItem) || t.handleClick(),
                super.destroyNestedPopoverIfExists()),
                super.handleItemClick(e));
        }
    }
    const Mn = class e {
        constructor() {
            this.scrollPosition = null;
        }
        lock() {
            ht
                ? this.lockHard()
                : document.body.classList.add(e.CSS.scrollLocked);
        }
        unlock() {
            ht
                ? this.unlockHard()
                : document.body.classList.remove(e.CSS.scrollLocked);
        }
        lockHard() {
            ((this.scrollPosition = window.pageYOffset),
                document.documentElement.style.setProperty(
                    '--window-scroll-offset',
                    `${this.scrollPosition}px`,
                ),
                document.body.classList.add(e.CSS.scrollLockedHard));
        }
        unlockHard() {
            (document.body.classList.remove(e.CSS.scrollLockedHard),
                null !== this.scrollPosition &&
                    window.scrollTo(0, this.scrollPosition),
                (this.scrollPosition = null));
        }
    };
    Mn.CSS = {
        scrollLocked: 'ce-scroll-locked',
        scrollLockedHard: 'ce-scroll-locked--hard',
    };
    let Nn = Mn;
    const $n = sn('ce-popover-header'),
        Rn = { root: $n(), text: $n('text'), backButton: $n('back-button') };
    class jn {
        constructor({ text: e, onBackButtonClick: t }) {
            ((this.listeners = new wt()),
                (this.text = e),
                (this.onBackButtonClick = t),
                (this.nodes = {
                    root: ut.make('div', [Rn.root]),
                    backButton: ut.make('button', [Rn.backButton]),
                    text: ut.make('div', [Rn.text]),
                }),
                (this.nodes.backButton.innerHTML =
                    '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M14.5 17.5L9.64142 12.6414C9.56331 12.5633 9.56331 12.4367 9.64142 12.3586L14.5 7.5"/></svg>'),
                this.nodes.root.appendChild(this.nodes.backButton),
                this.listeners.on(
                    this.nodes.backButton,
                    'click',
                    this.onBackButtonClick,
                ),
                (this.nodes.text.innerText = this.text),
                this.nodes.root.appendChild(this.nodes.text));
        }
        getElement() {
            return this.nodes.root;
        }
        destroy() {
            (this.nodes.root.remove(), this.listeners.destroy());
        }
    }
    class Dn {
        constructor() {
            this.history = [];
        }
        push(e) {
            this.history.push(e);
        }
        pop() {
            return this.history.pop();
        }
        get currentTitle() {
            return 0 === this.history.length
                ? ''
                : this.history[this.history.length - 1].title;
        }
        get currentItems() {
            return 0 === this.history.length
                ? []
                : this.history[this.history.length - 1].items;
        }
        reset() {
            for (; this.history.length > 1; ) this.pop();
        }
    }
    class Fn extends En {
        constructor(e) {
            (super(e, {
                [Mt.Default]: { hint: { enabled: !1 } },
                [Mt.Html]: { hint: { enabled: !1 } },
            }),
                (this.scrollLocker = new Nn()),
                (this.history = new Dn()),
                (this.isHidden = !0),
                (this.nodes.overlay = ut.make('div', [
                    yn.overlay,
                    yn.overlayHidden,
                ])),
                this.nodes.popover.insertBefore(
                    this.nodes.overlay,
                    this.nodes.popover.firstChild,
                ),
                this.listeners.on(this.nodes.overlay, 'click', () => {
                    this.hide();
                }),
                this.history.push({ items: e.items }));
        }
        show() {
            (this.nodes.overlay.classList.remove(yn.overlayHidden),
                super.show(),
                this.scrollLocker.lock(),
                (this.isHidden = !1));
        }
        hide() {
            this.isHidden ||
                (super.hide(),
                this.nodes.overlay.classList.add(yn.overlayHidden),
                this.scrollLocker.unlock(),
                this.history.reset(),
                (this.isHidden = !0));
        }
        destroy() {
            (super.destroy(), this.scrollLocker.unlock());
        }
        showNestedItems(e) {
            (this.updateItemsAndHeader(e.children, e.title),
                this.history.push({ title: e.title, items: e.children }));
        }
        updateItemsAndHeader(e, t) {
            if (
                (null !== this.header &&
                    void 0 !== this.header &&
                    (this.header.destroy(), (this.header = null)),
                void 0 !== t)
            ) {
                this.header = new jn({
                    text: t,
                    onBackButtonClick: () => {
                        (this.history.pop(),
                            this.updateItemsAndHeader(
                                this.history.currentItems,
                                this.history.currentTitle,
                            ));
                    },
                });
                const e = this.header.getElement();
                null !== e &&
                    this.nodes.popoverContainer.insertBefore(
                        e,
                        this.nodes.popoverContainer.firstChild,
                    );
            }
            (this.items.forEach((e) => {
                var t;
                return null == (t = e.getElement()) ? void 0 : t.remove();
            }),
                (this.items = this.buildItems(e)),
                this.items.forEach((e) => {
                    var t;
                    const n = e.getElement();
                    null !== n &&
                        (null == (t = this.nodes.items) || t.appendChild(n));
                }));
        }
    }
    var Hn = { exports: {} };
    /*!
     * Library for handling keyboard shortcuts
     * @copyright CodeX (https://codex.so)
     * @license MIT
     * @author CodeX (https://codex.so)
     * @version 1.2.0
     */ !(function (e, t) {
        (window,
            (e.exports = (function (e) {
                var t = {};
                function n(o) {
                    if (t[o]) return t[o].exports;
                    var i = (t[o] = { i: o, l: !1, exports: {} });
                    return (
                        e[o].call(i.exports, i, i.exports, n),
                        (i.l = !0),
                        i.exports
                    );
                }
                return (
                    (n.m = e),
                    (n.c = t),
                    (n.d = function (e, t, o) {
                        n.o(e, t) ||
                            Object.defineProperty(e, t, {
                                enumerable: !0,
                                get: o,
                            });
                    }),
                    (n.r = function (e) {
                        (typeof Symbol < 'u' &&
                            Symbol.toStringTag &&
                            Object.defineProperty(e, Symbol.toStringTag, {
                                value: 'Module',
                            }),
                            Object.defineProperty(e, '__esModule', {
                                value: !0,
                            }));
                    }),
                    (n.t = function (e, t) {
                        if (
                            (1 & t && (e = n(e)),
                            8 & t ||
                                (4 & t &&
                                    'object' == typeof e &&
                                    e &&
                                    e.__esModule))
                        )
                            return e;
                        var o = Object.create(null);
                        if (
                            (n.r(o),
                            Object.defineProperty(o, 'default', {
                                enumerable: !0,
                                value: e,
                            }),
                            2 & t && 'string' != typeof e)
                        )
                            for (var i in e)
                                n.d(
                                    o,
                                    i,
                                    function (t) {
                                        return e[t];
                                    }.bind(null, i),
                                );
                        return o;
                    }),
                    (n.n = function (e) {
                        var t =
                            e && e.__esModule
                                ? function () {
                                      return e.default;
                                  }
                                : function () {
                                      return e;
                                  };
                        return (n.d(t, 'a', t), t);
                    }),
                    (n.o = function (e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t);
                    }),
                    (n.p = ''),
                    n((n.s = 0))
                );
            })([
                function (e, t, n) {
                    function o(e, t) {
                        for (var n = 0; n < t.length; n++) {
                            var o = t[n];
                            ((o.enumerable = o.enumerable || !1),
                                (o.configurable = !0),
                                'value' in o && (o.writable = !0),
                                Object.defineProperty(e, o.key, o));
                        }
                    }
                    function i(e, t, n) {
                        return (t && o(e.prototype, t), n && o(e, n), e);
                    }
                    n.r(t);
                    var r = (function () {
                        function e(t) {
                            var n = this;
                            ((function (e, t) {
                                if (!(e instanceof t))
                                    throw new TypeError(
                                        'Cannot call a class as a function',
                                    );
                            })(this, e),
                                (this.commands = {}),
                                (this.keys = {}),
                                (this.name = t.name),
                                this.parseShortcutName(t.name),
                                (this.element = t.on),
                                (this.callback = t.callback),
                                (this.executeShortcut = function (e) {
                                    n.execute(e);
                                }),
                                this.element.addEventListener(
                                    'keydown',
                                    this.executeShortcut,
                                    !1,
                                ));
                        }
                        return (
                            i(e, null, [
                                {
                                    key: 'supportedCommands',
                                    get: function () {
                                        return {
                                            SHIFT: ['SHIFT'],
                                            CMD: [
                                                'CMD',
                                                'CONTROL',
                                                'COMMAND',
                                                'WINDOWS',
                                                'CTRL',
                                            ],
                                            ALT: ['ALT', 'OPTION'],
                                        };
                                    },
                                },
                                {
                                    key: 'keyCodes',
                                    get: function () {
                                        return {
                                            0: 48,
                                            1: 49,
                                            2: 50,
                                            3: 51,
                                            4: 52,
                                            5: 53,
                                            6: 54,
                                            7: 55,
                                            8: 56,
                                            9: 57,
                                            A: 65,
                                            B: 66,
                                            C: 67,
                                            D: 68,
                                            E: 69,
                                            F: 70,
                                            G: 71,
                                            H: 72,
                                            I: 73,
                                            J: 74,
                                            K: 75,
                                            L: 76,
                                            M: 77,
                                            N: 78,
                                            O: 79,
                                            P: 80,
                                            Q: 81,
                                            R: 82,
                                            S: 83,
                                            T: 84,
                                            U: 85,
                                            V: 86,
                                            W: 87,
                                            X: 88,
                                            Y: 89,
                                            Z: 90,
                                            BACKSPACE: 8,
                                            ENTER: 13,
                                            ESCAPE: 27,
                                            LEFT: 37,
                                            UP: 38,
                                            RIGHT: 39,
                                            DOWN: 40,
                                            INSERT: 45,
                                            DELETE: 46,
                                            '.': 190,
                                        };
                                    },
                                },
                            ]),
                            i(e, [
                                {
                                    key: 'parseShortcutName',
                                    value: function (t) {
                                        t = t.split('+');
                                        for (var n = 0; n < t.length; n++) {
                                            t[n] = t[n].toUpperCase();
                                            var o = !1;
                                            for (var i in e.supportedCommands)
                                                if (
                                                    e.supportedCommands[
                                                        i
                                                    ].includes(t[n])
                                                ) {
                                                    o = this.commands[i] = !0;
                                                    break;
                                                }
                                            o || (this.keys[t[n]] = !0);
                                        }
                                        for (var r in e.supportedCommands)
                                            this.commands[r] ||
                                                (this.commands[r] = !1);
                                    },
                                },
                                {
                                    key: 'execute',
                                    value: function (t) {
                                        var n,
                                            o = {
                                                CMD: t.ctrlKey || t.metaKey,
                                                SHIFT: t.shiftKey,
                                                ALT: t.altKey,
                                            },
                                            i = !0;
                                        for (n in this.commands)
                                            this.commands[n] !== o[n] &&
                                                (i = !1);
                                        var r,
                                            s = !0;
                                        for (r in this.keys)
                                            s =
                                                s &&
                                                t.keyCode === e.keyCodes[r];
                                        i && s && this.callback(t);
                                    },
                                },
                                {
                                    key: 'remove',
                                    value: function () {
                                        this.element.removeEventListener(
                                            'keydown',
                                            this.executeShortcut,
                                        );
                                    },
                                },
                            ]),
                            e
                        );
                    })();
                    t.default = r;
                },
            ]).default));
    })(Hn);
    const zn = Be(Hn.exports);
    const Un = new (class {
        constructor() {
            this.registeredShortcuts = new Map();
        }
        add(e) {
            if (this.findShortcut(e.on, e.name))
                throw Error(
                    `Shortcut ${e.name} is already registered for ${e.on}. Please remove it before add a new handler.`,
                );
            const t = new zn({ name: e.name, on: e.on, callback: e.handler }),
                n = this.registeredShortcuts.get(e.on) || [];
            this.registeredShortcuts.set(e.on, [...n, t]);
        }
        remove(e, t) {
            const n = this.findShortcut(e, t);
            if (!n) return;
            n.remove();
            const o = this.registeredShortcuts.get(e);
            this.registeredShortcuts.set(
                e,
                o.filter((e) => e !== n),
            );
        }
        findShortcut(e, t) {
            return (this.registeredShortcuts.get(e) || []).find(
                ({ name: e }) => e === t,
            );
        }
    })();
    var Wn = Object.defineProperty,
        qn = Object.getOwnPropertyDescriptor,
        Vn = (e, t, n, o) => {
            for (
                var i, r = o > 1 ? void 0 : o ? qn(t, n) : t, s = e.length - 1;
                s >= 0;
                s--
            )
                (i = e[s]) && (r = (o ? i(t, n, r) : i(r)) || r);
            return (o && r && Wn(t, n, r), r);
        },
        Gn = ((e) => (
            (e.Opened = 'toolbox-opened'),
            (e.Closed = 'toolbox-closed'),
            (e.BlockAdded = 'toolbox-block-added'),
            e
        ))(Gn || {});
    const Kn = class e extends vt {
        constructor({ api: t, tools: n, i18nLabels: o }) {
            (super(),
                (this.opened = !1),
                (this.listeners = new wt()),
                (this.popover = null),
                (this.handleMobileLayoutToggle = () => {
                    (this.destroyPopover(), this.initPopover());
                }),
                (this.onPopoverClose = () => {
                    ((this.opened = !1), this.emit('toolbox-closed'));
                }),
                (this.api = t),
                (this.tools = n),
                (this.i18nLabels = o),
                this.enableShortcuts(),
                (this.nodes = { toolbox: ut.make('div', e.CSS.toolbox) }),
                this.initPopover(),
                this.nodes.toolbox.setAttribute('data-cy', 'toolbox'),
                this.api.events.on(_t, this.handleMobileLayoutToggle));
        }
        get isEmpty() {
            return 0 === this.toolsToBeDisplayed.length;
        }
        static get CSS() {
            return { toolbox: 'ce-toolbox' };
        }
        getElement() {
            return this.nodes.toolbox;
        }
        hasFocus() {
            if (null !== this.popover)
                return 'hasFocus' in this.popover
                    ? this.popover.hasFocus()
                    : void 0;
        }
        destroy() {
            var e;
            (super.destroy(),
                this.nodes && this.nodes.toolbox && this.nodes.toolbox.remove(),
                this.removeAllShortcuts(),
                null == (e = this.popover) ||
                    e.off(bn.Closed, this.onPopoverClose),
                this.listeners.destroy(),
                this.api.events.off(_t, this.handleMobileLayoutToggle));
        }
        toolButtonActivated(e, t) {
            this.insertNewBlock(e, t);
        }
        open() {
            var e;
            this.isEmpty ||
                (null == (e = this.popover) || e.show(),
                (this.opened = !0),
                this.emit('toolbox-opened'));
        }
        close() {
            var e;
            (null == (e = this.popover) || e.hide(),
                (this.opened = !1),
                this.emit('toolbox-closed'));
        }
        toggle() {
            this.opened ? this.close() : this.open();
        }
        initPopover() {
            var e;
            const t = dt() ? Fn : An;
            ((this.popover = new t({
                scopeElement: this.api.ui.nodes.redactor,
                searchable: !0,
                messages: {
                    nothingFound: this.i18nLabels.nothingFound,
                    search: this.i18nLabels.filter,
                },
                items: this.toolboxItemsToBeDisplayed,
            })),
                this.popover.on(bn.Closed, this.onPopoverClose),
                null == (e = this.nodes.toolbox) ||
                    e.append(this.popover.getElement()));
        }
        destroyPopover() {
            (null !== this.popover &&
                (this.popover.hide(),
                this.popover.off(bn.Closed, this.onPopoverClose),
                this.popover.destroy(),
                (this.popover = null)),
                null !== this.nodes.toolbox &&
                    (this.nodes.toolbox.innerHTML = ''));
        }
        get toolsToBeDisplayed() {
            const e = [];
            return (
                this.tools.forEach((t) => {
                    t.toolbox && e.push(t);
                }),
                e
            );
        }
        get toolboxItemsToBeDisplayed() {
            const e = (e, t, n = !0) => ({
                icon: e.icon,
                title: mt.t(Qt.toolNames, e.title || it(t.name)),
                name: t.name,
                onActivate: () => {
                    this.toolButtonActivated(t.name, e.data);
                },
                secondaryLabel: t.shortcut && n ? st(t.shortcut) : '',
            });
            return this.toolsToBeDisplayed.reduce(
                (t, n) => (
                    Array.isArray(n.toolbox)
                        ? n.toolbox.forEach((o, i) => {
                              t.push(e(o, n, 0 === i));
                          })
                        : void 0 !== n.toolbox && t.push(e(n.toolbox, n)),
                    t
                ),
                [],
            );
        }
        enableShortcuts() {
            this.toolsToBeDisplayed.forEach((e) => {
                const t = e.shortcut;
                t && this.enableShortcutForTool(e.name, t);
            });
        }
        enableShortcutForTool(e, t) {
            Un.add({
                name: t,
                on: this.api.ui.nodes.redactor,
                handler: async (t) => {
                    t.preventDefault();
                    const n = this.api.blocks.getCurrentBlockIndex(),
                        o = this.api.blocks.getBlockByIndex(n);
                    if (o)
                        try {
                            const t = await this.api.blocks.convert(o.id, e);
                            return void this.api.caret.setToBlock(t, 'end');
                        } catch {}
                    this.insertNewBlock(e);
                },
            });
        }
        removeAllShortcuts() {
            this.toolsToBeDisplayed.forEach((e) => {
                const t = e.shortcut;
                t && Un.remove(this.api.ui.nodes.redactor, t);
            });
        }
        async insertNewBlock(e, t) {
            const n = this.api.blocks.getCurrentBlockIndex(),
                o = this.api.blocks.getBlockByIndex(n);
            if (!o) return;
            const i = o.isEmpty ? n : n + 1;
            let r;
            if (t) {
                const n = await this.api.blocks.composeBlockData(e);
                r = Object.assign(n, t);
            }
            const s = this.api.blocks.insert(
                e,
                r,
                void 0,
                i,
                void 0,
                o.isEmpty,
            );
            (s.call(Nt.APPEND_CALLBACK),
                this.api.caret.setToBlock(i),
                this.emit('toolbox-block-added', { block: s }),
                this.api.toolbar.close());
        }
    };
    (Vn([ct], Kn.prototype, 'toolsToBeDisplayed', 1),
        Vn([ct], Kn.prototype, 'toolboxItemsToBeDisplayed', 1));
    let Yn = Kn;
    const Xn = 'block hovered';
    var Zn = ((e) => (
            (e[(e.Block = 0)] = 'Block'),
            (e[(e.Inline = 1)] = 'Inline'),
            (e[(e.Tune = 2)] = 'Tune'),
            e
        ))(Zn || {}),
        Jn = ((e) => (
            (e.Shortcut = 'shortcut'),
            (e.Toolbox = 'toolbox'),
            (e.EnabledInlineTools = 'inlineToolbar'),
            (e.EnabledBlockTunes = 'tunes'),
            (e.Config = 'config'),
            e
        ))(Jn || {}),
        Qn = ((e) => (
            (e.Shortcut = 'shortcut'),
            (e.SanitizeConfig = 'sanitize'),
            e
        ))(Qn || {}),
        eo = ((e) => (
            (e.IsEnabledLineBreaks = 'enableLineBreaks'),
            (e.Toolbox = 'toolbox'),
            (e.ConversionConfig = 'conversionConfig'),
            (e.IsReadOnlySupported = 'isReadOnlySupported'),
            (e.PasteConfig = 'pasteConfig'),
            e
        ))(eo || {}),
        to = ((e) => (
            (e.IsInline = 'isInline'),
            (e.Title = 'title'),
            (e.IsReadOnlySupported = 'isReadOnlySupported'),
            e
        ))(to || {}),
        no = ((e) => ((e.IsTune = 'isTune'), e))(no || {});
    class oo {
        constructor({
            name: e,
            constructable: t,
            config: n,
            api: o,
            isDefault: i,
            isInternal: r = !1,
            defaultPlaceholder: s,
        }) {
            ((this.api = o),
                (this.name = e),
                (this.constructable = t),
                (this.config = n),
                (this.isDefault = i),
                (this.isInternal = r),
                (this.defaultPlaceholder = s));
        }
        get settings() {
            const e = this.config.config || {};
            return (
                this.isDefault &&
                    !('placeholder' in e) &&
                    this.defaultPlaceholder &&
                    (e.placeholder = this.defaultPlaceholder),
                e
            );
        }
        reset() {
            if (Ve(this.constructable.reset)) return this.constructable.reset();
        }
        prepare() {
            if (Ve(this.constructable.prepare))
                return this.constructable.prepare({
                    toolName: this.name,
                    config: this.settings,
                });
        }
        get shortcut() {
            const e = this.constructable.shortcut;
            return this.config.shortcut || e;
        }
        get sanitizeConfig() {
            return this.constructable.sanitize || {};
        }
        isInline() {
            return this.type === Zn.Inline;
        }
        isBlock() {
            return this.type === Zn.Block;
        }
        isTune() {
            return this.type === Zn.Tune;
        }
    }
    function io() {
        const e = window.getSelection();
        if (null === e) return [null, 0];
        let t = e.focusNode,
            n = e.focusOffset;
        return null === t
            ? [null, 0]
            : (t.nodeType !== Node.TEXT_NODE &&
                  t.childNodes.length > 0 &&
                  (t.childNodes[n]
                      ? ((t = t.childNodes[n]), (n = 0))
                      : ((t = t.childNodes[n - 1]),
                        (n = t.textContent.length))),
              [t, n]);
    }
    function ro(e, t, n, o) {
        const i = document.createRange();
        'left' === o
            ? (i.setStart(e, 0), i.setEnd(t, n))
            : (i.setStart(t, n), i.setEnd(e, e.childNodes.length));
        const r = i.cloneContents(),
            s = document.createElement('div');
        s.appendChild(r);
        return (function (e) {
            return !/[^\t\n\r ]/.test(e);
        })(s.textContent || '');
    }
    function so(e) {
        const t = ut.getDeepestNode(e);
        if (null === t || ut.isEmpty(e)) return !0;
        if (ut.isNativeInput(t)) return 0 === t.selectionEnd;
        if (ut.isEmpty(e)) return !0;
        const [n, o] = io();
        return null !== n && ro(e, n, o, 'left');
    }
    function ao(e) {
        const t = ut.getDeepestNode(e, !0);
        if (null === t) return !0;
        if (ut.isNativeInput(t)) return t.selectionEnd === t.value.length;
        const [n, o] = io();
        return null !== n && ro(e, n, o, 'right');
    }
    var lo = {},
        co = {},
        ho = {},
        uo = {},
        po = {},
        fo = {};
    (Object.defineProperty(fo, '__esModule', { value: !0 }),
        (fo.allInputsSelector = function () {
            return (
                '[contenteditable=true], textarea, input:not([type]), ' +
                ['text', 'password', 'email', 'number', 'search', 'tel', 'url']
                    .map(function (e) {
                        return 'input[type="'.concat(e, '"]');
                    })
                    .join(', ')
            );
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.allInputsSelector = void 0));
            var t = fo;
            Object.defineProperty(e, 'allInputsSelector', {
                enumerable: !0,
                get: function () {
                    return t.allInputsSelector;
                },
            });
        })(po));
    var go = {},
        mo = {};
    (Object.defineProperty(mo, '__esModule', { value: !0 }),
        (mo.isNativeInput = function (e) {
            return (
                !(!e || !e.tagName) && ['INPUT', 'TEXTAREA'].includes(e.tagName)
            );
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.isNativeInput = void 0));
            var t = mo;
            Object.defineProperty(e, 'isNativeInput', {
                enumerable: !0,
                get: function () {
                    return t.isNativeInput;
                },
            });
        })(go));
    var bo = {},
        vo = {};
    (Object.defineProperty(vo, '__esModule', { value: !0 }),
        (vo.append = function (e, t) {
            Array.isArray(t)
                ? t.forEach(function (t) {
                      e.appendChild(t);
                  })
                : e.appendChild(t);
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.append = void 0));
            var t = vo;
            Object.defineProperty(e, 'append', {
                enumerable: !0,
                get: function () {
                    return t.append;
                },
            });
        })(bo));
    var yo = {},
        wo = {};
    (Object.defineProperty(wo, '__esModule', { value: !0 }),
        (wo.blockElements = function () {
            return [
                'address',
                'article',
                'aside',
                'blockquote',
                'canvas',
                'div',
                'dl',
                'dt',
                'fieldset',
                'figcaption',
                'figure',
                'footer',
                'form',
                'h1',
                'h2',
                'h3',
                'h4',
                'h5',
                'h6',
                'header',
                'hgroup',
                'hr',
                'li',
                'main',
                'nav',
                'noscript',
                'ol',
                'output',
                'p',
                'pre',
                'ruby',
                'section',
                'table',
                'tbody',
                'thead',
                'tr',
                'tfoot',
                'ul',
                'video',
            ];
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.blockElements = void 0));
            var t = wo;
            Object.defineProperty(e, 'blockElements', {
                enumerable: !0,
                get: function () {
                    return t.blockElements;
                },
            });
        })(yo));
    var ko = {},
        xo = {};
    (Object.defineProperty(xo, '__esModule', { value: !0 }),
        (xo.calculateBaseline = function (e) {
            var t = window.getComputedStyle(e),
                n = parseFloat(t.fontSize),
                o = parseFloat(t.lineHeight) || 1.2 * n,
                i = parseFloat(t.paddingTop),
                r = parseFloat(t.borderTopWidth),
                s = parseFloat(t.marginTop),
                a = 0.8 * n,
                l = (o - n) / 2,
                c = s + r + i + l + a;
            return c;
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.calculateBaseline = void 0));
            var t = xo;
            Object.defineProperty(e, 'calculateBaseline', {
                enumerable: !0,
                get: function () {
                    return t.calculateBaseline;
                },
            });
        })(ko));
    var Co = {},
        Eo = {},
        So = {},
        To = {};
    (Object.defineProperty(To, '__esModule', { value: !0 }),
        (To.isContentEditable = function (e) {
            return 'true' === e.contentEditable;
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.isContentEditable = void 0));
            var t = To;
            Object.defineProperty(e, 'isContentEditable', {
                enumerable: !0,
                get: function () {
                    return t.isContentEditable;
                },
            });
        })(So),
        Object.defineProperty(Eo, '__esModule', { value: !0 }),
        (Eo.canSetCaret = function (e) {
            var t = !0;
            if ((0, _o.isNativeInput)(e))
                switch (e.type) {
                    case 'file':
                    case 'checkbox':
                    case 'radio':
                    case 'hidden':
                    case 'submit':
                    case 'button':
                    case 'image':
                    case 'reset':
                        t = !1;
                }
            else t = (0, Bo.isContentEditable)(e);
            return t;
        }));
    var _o = go,
        Bo = So;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.canSetCaret = void 0));
        var t = Eo;
        Object.defineProperty(e, 'canSetCaret', {
            enumerable: !0,
            get: function () {
                return t.canSetCaret;
            },
        });
    })(Co);
    var Oo = {},
        Io = {};
    function Lo() {
        const e = { win: !1, mac: !1, x11: !1, linux: !1 },
            t = Object.keys(e).find(
                (e) =>
                    -1 !== window.navigator.appVersion.toLowerCase().indexOf(e),
            );
        return (void 0 !== t && (e[t] = !0), e);
    }
    function Ao(e) {
        return (
            null != e &&
            '' !== e &&
            ('object' != typeof e || Object.keys(e).length > 0)
        );
    }
    function Po(e) {
        return Object.prototype.toString
            .call(e)
            .match(/\s([a-zA-Z]+)/)[1]
            .toLowerCase();
    }
    function Mo(e) {
        return 'function' === Po(e) || 'asyncfunction' === Po(e);
    }
    function No(e) {
        return 'object' === Po(e);
    }
    const $o = Object.freeze(
            Object.defineProperty(
                {
                    __proto__: null,
                    PromiseQueue: class {
                        constructor() {
                            this.completed = Promise.resolve();
                        }
                        add(e) {
                            return new Promise((t, n) => {
                                this.completed = this.completed
                                    .then(e)
                                    .then(t)
                                    .catch(n);
                            });
                        }
                    },
                    beautifyShortcut: function (e) {
                        const t = Lo();
                        return (
                            (e = e
                                .replace(/shift/gi, '⇧')
                                .replace(/backspace/gi, '⌫')
                                .replace(/enter/gi, '⏎')
                                .replace(/up/gi, '↑')
                                .replace(/left/gi, '→')
                                .replace(/down/gi, '↓')
                                .replace(/right/gi, '←')
                                .replace(/escape/gi, '⎋')
                                .replace(/insert/gi, 'Ins')
                                .replace(/delete/gi, '␡')
                                .replace(/\+/gi, '+')),
                            (e = t.mac
                                ? e
                                      .replace(/ctrl|cmd/gi, '⌘')
                                      .replace(/alt/gi, '⌥')
                                : e
                                      .replace(/cmd/gi, 'Ctrl')
                                      .replace(/windows/gi, 'WIN'))
                        );
                    },
                    cacheable: function (e, t, n) {
                        const o = void 0 !== n.value ? 'value' : 'get',
                            i = n[o],
                            r = `#${t}Cache`;
                        if (
                            ((n[o] = function (...e) {
                                return (
                                    void 0 === this[r] &&
                                        (this[r] = i.apply(this, e)),
                                    this[r]
                                );
                            }),
                            'get' === o && n.set)
                        ) {
                            const t = n.set;
                            n.set = function (n) {
                                (delete e[r], t.apply(this, n));
                            };
                        }
                        return n;
                    },
                    capitalize: function (e) {
                        return e[0].toUpperCase() + e.slice(1);
                    },
                    copyTextToClipboard: function (e) {
                        const t = document.createElement('div');
                        ((t.style.position = 'absolute'),
                            (t.style.left = '-999px'),
                            (t.style.bottom = '-999px'),
                            (t.innerHTML = e),
                            document.body.appendChild(t));
                        const n = window.getSelection(),
                            o = document.createRange();
                        if ((o.selectNode(t), null === n))
                            throw new Error('Cannot copy text to clipboard');
                        (n.removeAllRanges(),
                            n.addRange(o),
                            document.execCommand('copy'),
                            document.body.removeChild(t));
                    },
                    debounce: function (e, t, n) {
                        let o;
                        return (...i) => {
                            const r = this,
                                s = !0 === n && void 0 !== o;
                            (window.clearTimeout(o),
                                (o = window.setTimeout(() => {
                                    ((o = void 0), !0 !== n && e.apply(r, i));
                                }, t)),
                                s && e.apply(r, i));
                        };
                    },
                    deepMerge: function e(t, ...n) {
                        if (!n.length) return t;
                        const o = n.shift();
                        if (No(t) && No(o))
                            for (const n in o)
                                No(o[n])
                                    ? (void 0 === t[n] &&
                                          Object.assign(t, { [n]: {} }),
                                      e(t[n], o[n]))
                                    : Object.assign(t, { [n]: o[n] });
                        return e(t, ...n);
                    },
                    deprecationAssert: function (e, t, n) {
                        const o = `«${t}» is deprecated and will be removed in the next major release. Please use the «${n}» instead.`;
                        e && console.warn(o);
                    },
                    getUserOS: Lo,
                    getValidUrl: function (e) {
                        try {
                            return new URL(e).href;
                        } catch {}
                        return '//' === e.substring(0, 2)
                            ? window.location.protocol + e
                            : window.location.origin + e;
                    },
                    isBoolean: function (e) {
                        return 'boolean' === Po(e);
                    },
                    isClass: function (e) {
                        return Mo(e) && /^\s*class\s+/.test(e.toString());
                    },
                    isEmpty: function (e) {
                        return !Ao(e);
                    },
                    isFunction: Mo,
                    isIosDevice: () =>
                        typeof window < 'u' &&
                        null !== window.navigator &&
                        Ao(window.navigator.platform) &&
                        (/iP(ad|hone|od)/.test(window.navigator.platform) ||
                            ('MacIntel' === window.navigator.platform &&
                                window.navigator.maxTouchPoints > 1)),
                    isNumber: function (e) {
                        return 'number' === Po(e);
                    },
                    isObject: No,
                    isPrintableKey: function (e) {
                        return (
                            (e > 47 && e < 58) ||
                            32 === e ||
                            13 === e ||
                            229 === e ||
                            (e > 64 && e < 91) ||
                            (e > 95 && e < 112) ||
                            (e > 185 && e < 193) ||
                            (e > 218 && e < 223)
                        );
                    },
                    isPromise: function (e) {
                        return Promise.resolve(e) === e;
                    },
                    isString: function (e) {
                        return 'string' === Po(e);
                    },
                    isUndefined: function (e) {
                        return 'undefined' === Po(e);
                    },
                    keyCodes: {
                        BACKSPACE: 8,
                        TAB: 9,
                        ENTER: 13,
                        SHIFT: 16,
                        CTRL: 17,
                        ALT: 18,
                        ESC: 27,
                        SPACE: 32,
                        LEFT: 37,
                        UP: 38,
                        DOWN: 40,
                        RIGHT: 39,
                        DELETE: 46,
                        META: 91,
                        SLASH: 191,
                    },
                    mouseButtons: {
                        LEFT: 0,
                        WHEEL: 1,
                        RIGHT: 2,
                        BACKWARD: 3,
                        FORWARD: 4,
                    },
                    notEmpty: Ao,
                    throttle: function (e, t, n) {
                        let o,
                            i,
                            r,
                            s = null,
                            a = 0;
                        n || (n = {});
                        const l = function () {
                            ((a = !1 === n.leading ? 0 : Date.now()),
                                (s = null),
                                (r = e.apply(o, i)),
                                null === s && (o = i = null));
                        };
                        return function () {
                            const c = Date.now();
                            !a && !1 === n.leading && (a = c);
                            const d = t - (c - a);
                            return (
                                (o = this),
                                (i = arguments),
                                d <= 0 || d > t
                                    ? (s && (clearTimeout(s), (s = null)),
                                      (a = c),
                                      (r = e.apply(o, i)),
                                      null === s && (o = i = null))
                                    : !s &&
                                      !1 !== n.trailing &&
                                      (s = setTimeout(l, d)),
                                r
                            );
                        };
                    },
                    typeOf: Po,
                },
                Symbol.toStringTag,
                { value: 'Module' },
            ),
        ),
        Ro = Oe($o);
    (Object.defineProperty(Io, '__esModule', { value: !0 }),
        (Io.containsOnlyInlineElements = function (e) {
            var t;
            (0, jo.isString)(e)
                ? ((t = document.createElement('div')).innerHTML = e)
                : (t = e);
            var n = function (e) {
                return (
                    !(0, Do.blockElements)().includes(
                        e.tagName.toLowerCase(),
                    ) && Array.from(e.children).every(n)
                );
            };
            return Array.from(t.children).every(n);
        }));
    var jo = Ro,
        Do = yo;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.containsOnlyInlineElements = void 0));
        var t = Io;
        Object.defineProperty(e, 'containsOnlyInlineElements', {
            enumerable: !0,
            get: function () {
                return t.containsOnlyInlineElements;
            },
        });
    })(Oo);
    var Fo = {},
        Ho = {},
        zo = {},
        Uo = {};
    (Object.defineProperty(Uo, '__esModule', { value: !0 }),
        (Uo.make = function (e, t, n) {
            var o;
            (void 0 === t && (t = null), void 0 === n && (n = {}));
            var i = document.createElement(e);
            if (Array.isArray(t)) {
                var r = t.filter(function (e) {
                    return void 0 !== e;
                });
                (o = i.classList).add.apply(o, r);
            } else null !== t && i.classList.add(t);
            for (var s in n)
                Object.prototype.hasOwnProperty.call(n, s) && (i[s] = n[s]);
            return i;
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.make = void 0));
            var t = Uo;
            Object.defineProperty(e, 'make', {
                enumerable: !0,
                get: function () {
                    return t.make;
                },
            });
        })(zo),
        Object.defineProperty(Ho, '__esModule', { value: !0 }),
        (Ho.fragmentToString = function (e) {
            var t = (0, Wo.make)('div');
            return (t.appendChild(e), t.innerHTML);
        }));
    var Wo = zo;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.fragmentToString = void 0));
        var t = Ho;
        Object.defineProperty(e, 'fragmentToString', {
            enumerable: !0,
            get: function () {
                return t.fragmentToString;
            },
        });
    })(Fo);
    var qo = {},
        Vo = {};
    (Object.defineProperty(Vo, '__esModule', { value: !0 }),
        (Vo.getContentLength = function (e) {
            var t, n;
            return (0, Go.isNativeInput)(e)
                ? e.value.length
                : e.nodeType === Node.TEXT_NODE
                  ? e.length
                  : null !==
                          (n =
                              null === (t = e.textContent) || void 0 === t
                                  ? void 0
                                  : t.length) && void 0 !== n
                    ? n
                    : 0;
        }));
    var Go = go;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.getContentLength = void 0));
        var t = Vo;
        Object.defineProperty(e, 'getContentLength', {
            enumerable: !0,
            get: function () {
                return t.getContentLength;
            },
        });
    })(qo);
    var Ko = {},
        Yo = {},
        Xo =
            (_e && _e.__spreadArray) ||
            function (e, t, n) {
                if (n || 2 === arguments.length)
                    for (var o, i = 0, r = t.length; i < r; i++)
                        (o || !(i in t)) &&
                            (o || (o = Array.prototype.slice.call(t, 0, i)),
                            (o[i] = t[i]));
                return e.concat(o || Array.prototype.slice.call(t));
            };
    (Object.defineProperty(Yo, '__esModule', { value: !0 }),
        (Yo.getDeepestBlockElements = function e(t) {
            return (0, Zo.containsOnlyInlineElements)(t)
                ? [t]
                : Array.from(t.children).reduce(function (t, n) {
                      return Xo(Xo([], t, !0), e(n), !0);
                  }, []);
        }));
    var Zo = Oo;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.getDeepestBlockElements = void 0));
        var t = Yo;
        Object.defineProperty(e, 'getDeepestBlockElements', {
            enumerable: !0,
            get: function () {
                return t.getDeepestBlockElements;
            },
        });
    })(Ko);
    var Jo = {},
        Qo = {},
        ei = {},
        ti = {};
    (Object.defineProperty(ti, '__esModule', { value: !0 }),
        (ti.isLineBreakTag = function (e) {
            return ['BR', 'WBR'].includes(e.tagName);
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.isLineBreakTag = void 0));
            var t = ti;
            Object.defineProperty(e, 'isLineBreakTag', {
                enumerable: !0,
                get: function () {
                    return t.isLineBreakTag;
                },
            });
        })(ei));
    var ni = {},
        oi = {};
    (Object.defineProperty(oi, '__esModule', { value: !0 }),
        (oi.isSingleTag = function (e) {
            return [
                'AREA',
                'BASE',
                'BR',
                'COL',
                'COMMAND',
                'EMBED',
                'HR',
                'IMG',
                'INPUT',
                'KEYGEN',
                'LINK',
                'META',
                'PARAM',
                'SOURCE',
                'TRACK',
                'WBR',
            ].includes(e.tagName);
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.isSingleTag = void 0));
            var t = oi;
            Object.defineProperty(e, 'isSingleTag', {
                enumerable: !0,
                get: function () {
                    return t.isSingleTag;
                },
            });
        })(ni),
        Object.defineProperty(Qo, '__esModule', { value: !0 }),
        (Qo.getDeepestNode = function e(t, n) {
            void 0 === n && (n = !1);
            var o = n ? 'lastChild' : 'firstChild',
                i = n ? 'previousSibling' : 'nextSibling';
            if (t.nodeType === Node.ELEMENT_NODE && t[o]) {
                var r = t[o];
                if (
                    (0, si.isSingleTag)(r) &&
                    !(0, ii.isNativeInput)(r) &&
                    !(0, ri.isLineBreakTag)(r)
                )
                    if (r[i]) r = r[i];
                    else {
                        if (null === r.parentNode || !r.parentNode[i])
                            return r.parentNode;
                        r = r.parentNode[i];
                    }
                return e(r, n);
            }
            return t;
        }));
    var ii = go,
        ri = ei,
        si = ni;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.getDeepestNode = void 0));
        var t = Qo;
        Object.defineProperty(e, 'getDeepestNode', {
            enumerable: !0,
            get: function () {
                return t.getDeepestNode;
            },
        });
    })(Jo);
    var ai = {},
        li = {},
        ci =
            (_e && _e.__spreadArray) ||
            function (e, t, n) {
                if (n || 2 === arguments.length)
                    for (var o, i = 0, r = t.length; i < r; i++)
                        (o || !(i in t)) &&
                            (o || (o = Array.prototype.slice.call(t, 0, i)),
                            (o[i] = t[i]));
                return e.concat(o || Array.prototype.slice.call(t));
            };
    (Object.defineProperty(li, '__esModule', { value: !0 }),
        (li.findAllInputs = function (e) {
            return Array.from(
                e.querySelectorAll((0, ui.allInputsSelector)()),
            ).reduce(function (e, t) {
                return (0, pi.isNativeInput)(t) ||
                    (0, di.containsOnlyInlineElements)(t)
                    ? ci(ci([], e, !0), [t], !1)
                    : ci(ci([], e, !0), (0, hi.getDeepestBlockElements)(t), !0);
            }, []);
        }));
    var di = Oo,
        hi = Ko,
        ui = po,
        pi = go;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.findAllInputs = void 0));
        var t = li;
        Object.defineProperty(e, 'findAllInputs', {
            enumerable: !0,
            get: function () {
                return t.findAllInputs;
            },
        });
    })(ai);
    var fi = {},
        gi = {};
    (Object.defineProperty(gi, '__esModule', { value: !0 }),
        (gi.isCollapsedWhitespaces = function (e) {
            return !/[^\t\n\r ]/.test(e);
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.isCollapsedWhitespaces = void 0));
            var t = gi;
            Object.defineProperty(e, 'isCollapsedWhitespaces', {
                enumerable: !0,
                get: function () {
                    return t.isCollapsedWhitespaces;
                },
            });
        })(fi));
    var mi = {},
        bi = {};
    (Object.defineProperty(bi, '__esModule', { value: !0 }),
        (bi.isElement = function (e) {
            return (
                !(0, vi.isNumber)(e) &&
                !!e &&
                !!e.nodeType &&
                e.nodeType === Node.ELEMENT_NODE
            );
        }));
    var vi = Ro;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.isElement = void 0));
        var t = bi;
        Object.defineProperty(e, 'isElement', {
            enumerable: !0,
            get: function () {
                return t.isElement;
            },
        });
    })(mi);
    var yi = {},
        wi = {},
        ki = {},
        xi = {};
    (Object.defineProperty(xi, '__esModule', { value: !0 }),
        (xi.isLeaf = function (e) {
            return null !== e && 0 === e.childNodes.length;
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.isLeaf = void 0));
            var t = xi;
            Object.defineProperty(e, 'isLeaf', {
                enumerable: !0,
                get: function () {
                    return t.isLeaf;
                },
            });
        })(ki));
    var Ci = {},
        Ei = {};
    (Object.defineProperty(Ei, '__esModule', { value: !0 }),
        (Ei.isNodeEmpty = function (e, t) {
            var n = '';
            return (
                !((0, Bi.isSingleTag)(e) && !(0, Si.isLineBreakTag)(e)) &&
                ((0, Ti.isElement)(e) && (0, _i.isNativeInput)(e)
                    ? (n = e.value)
                    : null !== e.textContent &&
                      (n = e.textContent.replace('​', '')),
                void 0 !== t && (n = n.replace(new RegExp(t, 'g'), '')),
                0 === n.trim().length)
            );
        }));
    var Si = ei,
        Ti = mi,
        _i = go,
        Bi = ni;
    (!(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.isNodeEmpty = void 0));
        var t = Ei;
        Object.defineProperty(e, 'isNodeEmpty', {
            enumerable: !0,
            get: function () {
                return t.isNodeEmpty;
            },
        });
    })(Ci),
        Object.defineProperty(wi, '__esModule', { value: !0 }),
        (wi.isEmpty = function (e, t) {
            e.normalize();
            for (var n = [e]; n.length > 0; ) {
                var o = n.shift();
                if (o) {
                    if ((0, Oi.isLeaf)((e = o)) && !(0, Ii.isNodeEmpty)(e, t))
                        return !1;
                    n.push.apply(n, Array.from(e.childNodes));
                }
            }
            return !0;
        }));
    var Oi = ki,
        Ii = Ci;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.isEmpty = void 0));
        var t = wi;
        Object.defineProperty(e, 'isEmpty', {
            enumerable: !0,
            get: function () {
                return t.isEmpty;
            },
        });
    })(yi);
    var Li = {},
        Ai = {};
    (Object.defineProperty(Ai, '__esModule', { value: !0 }),
        (Ai.isFragment = function (e) {
            return (
                !(0, Pi.isNumber)(e) &&
                !!e &&
                !!e.nodeType &&
                e.nodeType === Node.DOCUMENT_FRAGMENT_NODE
            );
        }));
    var Pi = Ro;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.isFragment = void 0));
        var t = Ai;
        Object.defineProperty(e, 'isFragment', {
            enumerable: !0,
            get: function () {
                return t.isFragment;
            },
        });
    })(Li);
    var Mi = {},
        Ni = {};
    (Object.defineProperty(Ni, '__esModule', { value: !0 }),
        (Ni.isHTMLString = function (e) {
            var t = (0, $i.make)('div');
            return ((t.innerHTML = e), t.childElementCount > 0);
        }));
    var $i = zo;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.isHTMLString = void 0));
        var t = Ni;
        Object.defineProperty(e, 'isHTMLString', {
            enumerable: !0,
            get: function () {
                return t.isHTMLString;
            },
        });
    })(Mi);
    var Ri = {},
        ji = {};
    (Object.defineProperty(ji, '__esModule', { value: !0 }),
        (ji.offset = function (e) {
            var t = e.getBoundingClientRect(),
                n = window.pageXOffset || document.documentElement.scrollLeft,
                o = window.pageYOffset || document.documentElement.scrollTop,
                i = t.top + o,
                r = t.left + n;
            return {
                top: i,
                left: r,
                bottom: i + t.height,
                right: r + t.width,
            };
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.offset = void 0));
            var t = ji;
            Object.defineProperty(e, 'offset', {
                enumerable: !0,
                get: function () {
                    return t.offset;
                },
            });
        })(Ri));
    var Di = {},
        Fi = {};
    (Object.defineProperty(Fi, '__esModule', { value: !0 }),
        (Fi.prepend = function (e, t) {
            Array.isArray(t)
                ? (t = t.reverse()).forEach(function (t) {
                      return e.prepend(t);
                  })
                : e.prepend(t);
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.prepend = void 0));
            var t = Fi;
            Object.defineProperty(e, 'prepend', {
                enumerable: !0,
                get: function () {
                    return t.prepend;
                },
            });
        })(Di),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.prepend =
                    e.offset =
                    e.make =
                    e.isLineBreakTag =
                    e.isSingleTag =
                    e.isNodeEmpty =
                    e.isLeaf =
                    e.isHTMLString =
                    e.isFragment =
                    e.isEmpty =
                    e.isElement =
                    e.isContentEditable =
                    e.isCollapsedWhitespaces =
                    e.findAllInputs =
                    e.isNativeInput =
                    e.allInputsSelector =
                    e.getDeepestNode =
                    e.getDeepestBlockElements =
                    e.getContentLength =
                    e.fragmentToString =
                    e.containsOnlyInlineElements =
                    e.canSetCaret =
                    e.calculateBaseline =
                    e.blockElements =
                    e.append =
                        void 0));
            var t = po;
            Object.defineProperty(e, 'allInputsSelector', {
                enumerable: !0,
                get: function () {
                    return t.allInputsSelector;
                },
            });
            var n = go;
            Object.defineProperty(e, 'isNativeInput', {
                enumerable: !0,
                get: function () {
                    return n.isNativeInput;
                },
            });
            var o = bo;
            Object.defineProperty(e, 'append', {
                enumerable: !0,
                get: function () {
                    return o.append;
                },
            });
            var i = yo;
            Object.defineProperty(e, 'blockElements', {
                enumerable: !0,
                get: function () {
                    return i.blockElements;
                },
            });
            var r = ko;
            Object.defineProperty(e, 'calculateBaseline', {
                enumerable: !0,
                get: function () {
                    return r.calculateBaseline;
                },
            });
            var s = Co;
            Object.defineProperty(e, 'canSetCaret', {
                enumerable: !0,
                get: function () {
                    return s.canSetCaret;
                },
            });
            var a = Oo;
            Object.defineProperty(e, 'containsOnlyInlineElements', {
                enumerable: !0,
                get: function () {
                    return a.containsOnlyInlineElements;
                },
            });
            var l = Fo;
            Object.defineProperty(e, 'fragmentToString', {
                enumerable: !0,
                get: function () {
                    return l.fragmentToString;
                },
            });
            var c = qo;
            Object.defineProperty(e, 'getContentLength', {
                enumerable: !0,
                get: function () {
                    return c.getContentLength;
                },
            });
            var d = Ko;
            Object.defineProperty(e, 'getDeepestBlockElements', {
                enumerable: !0,
                get: function () {
                    return d.getDeepestBlockElements;
                },
            });
            var h = Jo;
            Object.defineProperty(e, 'getDeepestNode', {
                enumerable: !0,
                get: function () {
                    return h.getDeepestNode;
                },
            });
            var u = ai;
            Object.defineProperty(e, 'findAllInputs', {
                enumerable: !0,
                get: function () {
                    return u.findAllInputs;
                },
            });
            var p = fi;
            Object.defineProperty(e, 'isCollapsedWhitespaces', {
                enumerable: !0,
                get: function () {
                    return p.isCollapsedWhitespaces;
                },
            });
            var f = So;
            Object.defineProperty(e, 'isContentEditable', {
                enumerable: !0,
                get: function () {
                    return f.isContentEditable;
                },
            });
            var g = mi;
            Object.defineProperty(e, 'isElement', {
                enumerable: !0,
                get: function () {
                    return g.isElement;
                },
            });
            var m = yi;
            Object.defineProperty(e, 'isEmpty', {
                enumerable: !0,
                get: function () {
                    return m.isEmpty;
                },
            });
            var b = Li;
            Object.defineProperty(e, 'isFragment', {
                enumerable: !0,
                get: function () {
                    return b.isFragment;
                },
            });
            var v = Mi;
            Object.defineProperty(e, 'isHTMLString', {
                enumerable: !0,
                get: function () {
                    return v.isHTMLString;
                },
            });
            var y = ki;
            Object.defineProperty(e, 'isLeaf', {
                enumerable: !0,
                get: function () {
                    return y.isLeaf;
                },
            });
            var w = Ci;
            Object.defineProperty(e, 'isNodeEmpty', {
                enumerable: !0,
                get: function () {
                    return w.isNodeEmpty;
                },
            });
            var k = ei;
            Object.defineProperty(e, 'isLineBreakTag', {
                enumerable: !0,
                get: function () {
                    return k.isLineBreakTag;
                },
            });
            var x = ni;
            Object.defineProperty(e, 'isSingleTag', {
                enumerable: !0,
                get: function () {
                    return x.isSingleTag;
                },
            });
            var C = zo;
            Object.defineProperty(e, 'make', {
                enumerable: !0,
                get: function () {
                    return C.make;
                },
            });
            var E = Ri;
            Object.defineProperty(e, 'offset', {
                enumerable: !0,
                get: function () {
                    return E.offset;
                },
            });
            var S = Di;
            Object.defineProperty(e, 'prepend', {
                enumerable: !0,
                get: function () {
                    return S.prepend;
                },
            });
        })(uo));
    var Hi = {};
    (Object.defineProperty(Hi, '__esModule', { value: !0 }),
        (Hi.getContenteditableSlice = function (e, t, n, o, i) {
            var r;
            void 0 === i && (i = !1);
            var s = document.createRange();
            if (
                ('left' === o
                    ? (s.setStart(e, 0), s.setEnd(t, n))
                    : (s.setStart(t, n), s.setEnd(e, e.childNodes.length)),
                !0 === i)
            ) {
                var a = s.extractContents();
                return (0, zi.fragmentToString)(a);
            }
            var l = s.cloneContents(),
                c = document.createElement('div');
            c.appendChild(l);
            var d = null !== (r = c.textContent) && void 0 !== r ? r : '';
            return d;
        }));
    var zi = uo;
    (Object.defineProperty(ho, '__esModule', { value: !0 }),
        (ho.checkContenteditableSliceForEmptiness = function (e, t, n, o) {
            var i = (0, Wi.getContenteditableSlice)(e, t, n, o);
            return (0, Ui.isCollapsedWhitespaces)(i);
        }));
    var Ui = uo,
        Wi = Hi;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.checkContenteditableSliceForEmptiness = void 0));
        var t = ho;
        Object.defineProperty(e, 'checkContenteditableSliceForEmptiness', {
            enumerable: !0,
            get: function () {
                return t.checkContenteditableSliceForEmptiness;
            },
        });
    })(co);
    var qi = {};
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.getContenteditableSlice = void 0));
        var t = Hi;
        Object.defineProperty(e, 'getContenteditableSlice', {
            enumerable: !0,
            get: function () {
                return t.getContenteditableSlice;
            },
        });
    })(qi);
    var Vi = {},
        Gi = {};
    (Object.defineProperty(Gi, '__esModule', { value: !0 }),
        (Gi.focus = function (e, t) {
            var n, o;
            if ((void 0 === t && (t = !0), (0, Ki.isNativeInput)(e))) {
                e.focus();
                var i = t ? 0 : e.value.length;
                e.setSelectionRange(i, i);
            } else {
                var r = document.createRange(),
                    s = window.getSelection();
                if (!s) return;
                var a = function (e) {
                        var t = document.createTextNode('');
                        (e.appendChild(t), r.setStart(t, 0), r.setEnd(t, 0));
                    },
                    l = function (e) {
                        return null != e;
                    },
                    c = e.childNodes,
                    d = t ? c[0] : c[c.length - 1];
                if (l(d)) {
                    for (; l(d) && d.nodeType !== Node.TEXT_NODE; )
                        d = t ? d.firstChild : d.lastChild;
                    if (l(d) && d.nodeType === Node.TEXT_NODE) {
                        var h =
                            null !==
                                (o =
                                    null === (n = d.textContent) || void 0 === n
                                        ? void 0
                                        : n.length) && void 0 !== o
                                ? o
                                : 0;
                        i = t ? 0 : h;
                        (r.setStart(d, i), r.setEnd(d, i));
                    } else a(e);
                } else a(e);
                (s.removeAllRanges(), s.addRange(r));
            }
        }));
    var Ki = uo;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.focus = void 0));
        var t = Gi;
        Object.defineProperty(e, 'focus', {
            enumerable: !0,
            get: function () {
                return t.focus;
            },
        });
    })(Vi);
    var Yi = {},
        Xi = {};
    (Object.defineProperty(Xi, '__esModule', { value: !0 }),
        (Xi.getCaretNodeAndOffset = function () {
            var e = window.getSelection();
            if (null === e) return [null, 0];
            var t = e.focusNode,
                n = e.focusOffset;
            return null === t
                ? [null, 0]
                : (t.nodeType !== Node.TEXT_NODE &&
                      t.childNodes.length > 0 &&
                      (void 0 !== t.childNodes[n]
                          ? ((t = t.childNodes[n]), (n = 0))
                          : null !== (t = t.childNodes[n - 1]).textContent &&
                            (n = t.textContent.length)),
                  [t, n]);
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.getCaretNodeAndOffset = void 0));
            var t = Xi;
            Object.defineProperty(e, 'getCaretNodeAndOffset', {
                enumerable: !0,
                get: function () {
                    return t.getCaretNodeAndOffset;
                },
            });
        })(Yi));
    var Zi = {},
        Ji = {};
    (Object.defineProperty(Ji, '__esModule', { value: !0 }),
        (Ji.getRange = function () {
            var e = window.getSelection();
            return e && e.rangeCount ? e.getRangeAt(0) : null;
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.getRange = void 0));
            var t = Ji;
            Object.defineProperty(e, 'getRange', {
                enumerable: !0,
                get: function () {
                    return t.getRange;
                },
            });
        })(Zi));
    var Qi = {},
        er = {};
    (Object.defineProperty(er, '__esModule', { value: !0 }),
        (er.isCaretAtEndOfInput = function (e) {
            var t = (0, tr.getDeepestNode)(e, !0);
            if (null === t) return !0;
            if ((0, tr.isNativeInput)(t))
                return t.selectionEnd === t.value.length;
            var n = (0, nr.getCaretNodeAndOffset)(),
                o = n[0],
                i = n[1];
            return (
                null !== o &&
                (0, or.checkContenteditableSliceForEmptiness)(e, o, i, 'right')
            );
        }));
    var tr = uo,
        nr = Yi,
        or = co;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.isCaretAtEndOfInput = void 0));
        var t = er;
        Object.defineProperty(e, 'isCaretAtEndOfInput', {
            enumerable: !0,
            get: function () {
                return t.isCaretAtEndOfInput;
            },
        });
    })(Qi);
    var ir = {},
        rr = {};
    (Object.defineProperty(rr, '__esModule', { value: !0 }),
        (rr.isCaretAtStartOfInput = function (e) {
            var t = (0, sr.getDeepestNode)(e);
            if (null === t || (0, sr.isEmpty)(e)) return !0;
            if ((0, sr.isNativeInput)(t)) return 0 === t.selectionEnd;
            if ((0, sr.isEmpty)(e)) return !0;
            var n = (0, ar.getCaretNodeAndOffset)(),
                o = n[0],
                i = n[1];
            return (
                null !== o &&
                (0, lr.checkContenteditableSliceForEmptiness)(e, o, i, 'left')
            );
        }));
    var sr = uo,
        ar = Xi,
        lr = ho;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.isCaretAtStartOfInput = void 0));
        var t = rr;
        Object.defineProperty(e, 'isCaretAtStartOfInput', {
            enumerable: !0,
            get: function () {
                return t.isCaretAtStartOfInput;
            },
        });
    })(ir);
    var cr = {},
        dr = {};
    (Object.defineProperty(dr, '__esModule', { value: !0 }),
        (dr.save = function () {
            var e = (0, ur.getRange)(),
                t = (0, hr.make)('span');
            if (((t.id = 'cursor'), (t.hidden = !0), e))
                return (
                    e.insertNode(t),
                    function () {
                        var n = window.getSelection();
                        n &&
                            (e.setStartAfter(t),
                            e.setEndAfter(t),
                            n.removeAllRanges(),
                            n.addRange(e),
                            setTimeout(function () {
                                t.remove();
                            }, 150));
                    }
                );
        }));
    var hr = uo,
        ur = Ji;
    (!(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.save = void 0));
        var t = dr;
        Object.defineProperty(e, 'save', {
            enumerable: !0,
            get: function () {
                return t.save;
            },
        });
    })(cr),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.save =
                    e.isCaretAtStartOfInput =
                    e.isCaretAtEndOfInput =
                    e.getRange =
                    e.getCaretNodeAndOffset =
                    e.focus =
                    e.getContenteditableSlice =
                    e.checkContenteditableSliceForEmptiness =
                        void 0));
            var t = co;
            Object.defineProperty(e, 'checkContenteditableSliceForEmptiness', {
                enumerable: !0,
                get: function () {
                    return t.checkContenteditableSliceForEmptiness;
                },
            });
            var n = qi;
            Object.defineProperty(e, 'getContenteditableSlice', {
                enumerable: !0,
                get: function () {
                    return n.getContenteditableSlice;
                },
            });
            var o = Vi;
            Object.defineProperty(e, 'focus', {
                enumerable: !0,
                get: function () {
                    return o.focus;
                },
            });
            var i = Yi;
            Object.defineProperty(e, 'getCaretNodeAndOffset', {
                enumerable: !0,
                get: function () {
                    return i.getCaretNodeAndOffset;
                },
            });
            var r = Zi;
            Object.defineProperty(e, 'getRange', {
                enumerable: !0,
                get: function () {
                    return r.getRange;
                },
            });
            var s = Qi;
            Object.defineProperty(e, 'isCaretAtEndOfInput', {
                enumerable: !0,
                get: function () {
                    return s.isCaretAtEndOfInput;
                },
            });
            var a = ir;
            Object.defineProperty(e, 'isCaretAtStartOfInput', {
                enumerable: !0,
                get: function () {
                    return a.isCaretAtStartOfInput;
                },
            });
            var l = cr;
            Object.defineProperty(e, 'save', {
                enumerable: !0,
                get: function () {
                    return l.save;
                },
            });
        })(lo));
    class pr {
        constructor(e) {
            ((this.blocks = []), (this.workingArea = e));
        }
        get length() {
            return this.blocks.length;
        }
        get array() {
            return this.blocks;
        }
        get nodes() {
            return et(this.workingArea.children);
        }
        static set(e, t, n) {
            return isNaN(Number(t))
                ? (Reflect.set(e, t, n), !0)
                : (e.insert(+t, n), !0);
        }
        static get(e, t) {
            return isNaN(Number(t)) ? Reflect.get(e, t) : e.get(+t);
        }
        push(e) {
            (this.blocks.push(e), this.insertToDOM(e));
        }
        swap(e, t) {
            const n = this.blocks[t];
            (ut.swap(this.blocks[e].holder, n.holder),
                (this.blocks[t] = this.blocks[e]),
                (this.blocks[e] = n));
        }
        move(e, t) {
            const n = this.blocks.splice(t, 1)[0],
                o = e - 1,
                i = Math.max(0, o),
                r = this.blocks[i];
            (e > 0
                ? this.insertToDOM(n, 'afterend', r)
                : this.insertToDOM(n, 'beforebegin', r),
                this.blocks.splice(e, 0, n));
            const s = this.composeBlockEvent('move', {
                fromIndex: t,
                toIndex: e,
            });
            n.call(Nt.MOVED, s);
        }
        insert(e, t, n = !1) {
            if (!this.length) return void this.push(t);
            (e > this.length && (e = this.length),
                n &&
                    (this.blocks[e].holder.remove(),
                    this.blocks[e].call(Nt.REMOVED)));
            const o = n ? 1 : 0;
            if ((this.blocks.splice(e, o, t), e > 0)) {
                const n = this.blocks[e - 1];
                this.insertToDOM(t, 'afterend', n);
            } else {
                const n = this.blocks[e + 1];
                n ? this.insertToDOM(t, 'beforebegin', n) : this.insertToDOM(t);
            }
        }
        replace(e, t) {
            if (void 0 === this.blocks[e]) throw Error('Incorrect index');
            (this.blocks[e].holder.replaceWith(t.holder), (this.blocks[e] = t));
        }
        insertMany(e, t) {
            const n = new DocumentFragment();
            for (const t of e) n.appendChild(t.holder);
            if (this.length > 0) {
                if (t > 0) {
                    const e = Math.min(t - 1, this.length - 1);
                    this.blocks[e].holder.after(n);
                } else 0 === t && this.workingArea.prepend(n);
                this.blocks.splice(t, 0, ...e);
            } else (this.blocks.push(...e), this.workingArea.appendChild(n));
            e.forEach((e) => e.call(Nt.RENDERED));
        }
        remove(e) {
            (isNaN(e) && (e = this.length - 1),
                this.blocks[e].holder.remove(),
                this.blocks[e].call(Nt.REMOVED),
                this.blocks.splice(e, 1));
        }
        removeAll() {
            ((this.workingArea.innerHTML = ''),
                this.blocks.forEach((e) => e.call(Nt.REMOVED)),
                (this.blocks.length = 0));
        }
        insertAfter(e, t) {
            const n = this.blocks.indexOf(e);
            this.insert(n + 1, t);
        }
        get(e) {
            return this.blocks[e];
        }
        indexOf(e) {
            return this.blocks.indexOf(e);
        }
        insertToDOM(e, t, n) {
            (t
                ? n.holder.insertAdjacentElement(t, e.holder)
                : this.workingArea.appendChild(e.holder),
                e.call(Nt.RENDERED));
        }
        composeBlockEvent(e, t) {
            return new CustomEvent(e, { detail: t });
        }
    }
    const fr = 'block-removed',
        gr = 'block-added',
        mr = 'block-changed';
    class br {
        constructor() {
            this.completed = Promise.resolve();
        }
        add(e) {
            return new Promise((t, n) => {
                this.completed = this.completed.then(e).then(t).catch(n);
            });
        }
    }
    class vr extends kt {
        get positions() {
            return { START: 'start', END: 'end', DEFAULT: 'default' };
        }
        static get CSS() {
            return { shadowCaret: 'cdx-shadow-caret' };
        }
        setToBlock(e, t = this.positions.DEFAULT, n = 0) {
            var o;
            const { BlockManager: i, BlockSelection: r } = this.Editor;
            if ((r.clearSelection(), !e.focusable))
                return (
                    null == (o = window.getSelection()) || o.removeAllRanges(),
                    r.selectBlock(e),
                    void (i.currentBlock = e)
                );
            let s;
            switch (t) {
                case this.positions.START:
                    s = e.firstInput;
                    break;
                case this.positions.END:
                    s = e.lastInput;
                    break;
                default:
                    s = e.currentInput;
            }
            if (!s) return;
            const a = ut.getDeepestNode(s, t === this.positions.END),
                l = ut.getContentLength(a);
            switch (!0) {
                case t === this.positions.START:
                    n = 0;
                    break;
                case t === this.positions.END:
                case n > l:
                    n = l;
            }
            (this.set(a, n),
                i.setCurrentBlockByChildNode(e.holder),
                (i.currentBlock.currentInput = s));
        }
        setToInput(e, t = this.positions.DEFAULT, n = 0) {
            const { currentBlock: o } = this.Editor.BlockManager,
                i = ut.getDeepestNode(e);
            switch (t) {
                case this.positions.START:
                    this.set(i, 0);
                    break;
                case this.positions.END:
                    this.set(i, ut.getContentLength(i));
                    break;
                default:
                    n && this.set(i, n);
            }
            o.currentInput = e;
        }
        set(e, t = 0) {
            const { top: n, bottom: o } = xt.setCursor(e, t),
                { innerHeight: i } = window;
            n < 0
                ? window.scrollBy(0, n - 30)
                : o > i && window.scrollBy(0, o - i + 30);
        }
        setToTheLastBlock() {
            const e = this.Editor.BlockManager.lastBlock;
            if (e)
                if (e.tool.isDefault && e.isEmpty) this.setToBlock(e);
                else {
                    const e = this.Editor.BlockManager.insertAtEnd();
                    this.setToBlock(e);
                }
        }
        extractFragmentFromCaretPosition() {
            const e = xt.get();
            if (e.rangeCount) {
                const t = e.getRangeAt(0),
                    n = this.Editor.BlockManager.currentBlock.currentInput;
                if ((t.deleteContents(), n)) {
                    if (ut.isNativeInput(n)) {
                        const e = n,
                            t = document.createDocumentFragment(),
                            o = e.value.substring(0, e.selectionStart),
                            i = e.value.substring(e.selectionStart);
                        return ((t.textContent = i), (e.value = o), t);
                    }
                    {
                        const e = t.cloneRange();
                        return (
                            e.selectNodeContents(n),
                            e.setStart(t.endContainer, t.endOffset),
                            e.extractContents()
                        );
                    }
                }
            }
        }
        navigateNext(e = !1) {
            const { BlockManager: t } = this.Editor,
                { currentBlock: n, nextBlock: o } = t;
            if (void 0 === n) return !1;
            const { nextInput: i, currentInput: r } = n,
                s = void 0 !== r ? ao(r) : void 0;
            let a = o;
            const l = e || s || !n.focusable;
            if (i && l) return (this.setToInput(i, this.positions.START), !0);
            if (null === a) {
                if (n.tool.isDefault || !l) return !1;
                a = t.insertAtEnd();
            }
            return !!l && (this.setToBlock(a, this.positions.START), !0);
        }
        navigatePrevious(e = !1) {
            const { currentBlock: t, previousBlock: n } =
                this.Editor.BlockManager;
            if (!t) return !1;
            const { previousInput: o, currentInput: i } = t,
                r = void 0 !== i ? so(i) : void 0,
                s = e || r || !t.focusable;
            return o && s
                ? (this.setToInput(o, this.positions.END), !0)
                : !(null === n || !s) &&
                      (this.setToBlock(n, this.positions.END), !0);
        }
        createShadow(e) {
            const t = document.createElement('span');
            (t.classList.add(vr.CSS.shadowCaret),
                e.insertAdjacentElement('beforeend', t));
        }
        restoreCaret(e) {
            const t = e.querySelector(`.${vr.CSS.shadowCaret}`);
            if (!t) return;
            new xt().expandToTag(t);
            const n = document.createRange();
            (n.selectNode(t), n.extractContents());
        }
        insertContentAtCaretPosition(e) {
            const t = document.createDocumentFragment(),
                n = document.createElement('div'),
                o = xt.get(),
                i = xt.range;
            ((n.innerHTML = e),
                Array.from(n.childNodes).forEach((e) => t.appendChild(e)),
                0 === t.childNodes.length && t.appendChild(new Text()));
            const r = t.lastChild;
            (i.deleteContents(), i.insertNode(t));
            const s = document.createRange(),
                a = r.nodeType === Node.TEXT_NODE ? r : r.firstChild;
            (null !== a &&
                null !== a.textContent &&
                s.setStart(a, a.textContent.length),
                o.removeAllRanges(),
                o.addRange(s));
        }
    }
    const yr = class e extends kt {
        constructor() {
            (super(...arguments),
                (this.MIME_TYPE = 'application/x-editor-js'),
                (this.toolsTags = {}),
                (this.tagsByTool = {}),
                (this.toolsPatterns = []),
                (this.toolsFiles = {}),
                (this.exceptionList = []),
                (this.processTool = (e) => {
                    try {
                        const t = e.create({}, {}, !1);
                        if (!1 === e.pasteConfig)
                            return void this.exceptionList.push(e.name);
                        if (!Ve(t.onPaste)) return;
                        (this.getTagsConfig(e),
                            this.getFilesConfig(e),
                            this.getPatternsConfig(e));
                    } catch (t) {
                        Ue(
                            `Paste handling for «${e.name}» Tool hasn't been set up because of the error`,
                            'warn',
                            t,
                        );
                    }
                }),
                (this.handlePasteEvent = async (e) => {
                    const { BlockManager: t, Toolbar: n } = this.Editor,
                        o = t.setCurrentBlockByChildNode(e.target);
                    !o ||
                        (this.isNativeBehaviour(e.target) &&
                            !e.clipboardData.types.includes('Files')) ||
                        (o && this.exceptionList.includes(o.name)) ||
                        (e.preventDefault(),
                        this.processDataTransfer(e.clipboardData),
                        n.close());
                }));
        }
        async prepare() {
            this.processTools();
        }
        toggleReadOnly(e) {
            e ? this.unsetCallback() : this.setCallback();
        }
        async processDataTransfer(e, t = !1) {
            const { Tools: n } = this.Editor,
                o = e.types;
            if (
                (o.includes ? o.includes('Files') : o.contains('Files')) &&
                !Ze(this.toolsFiles)
            )
                return void (await this.processFiles(e.files));
            const i = e.getData(this.MIME_TYPE),
                r = e.getData('text/plain');
            let s = e.getData('text/html');
            if (i)
                try {
                    return void this.insertEditorJSData(JSON.parse(i));
                } catch {}
            t &&
                r.trim() &&
                s.trim() &&
                (s = '<p>' + (s.trim() ? s : r) + '</p>');
            const a = Object.keys(this.toolsTags).reduce(
                    (e, t) => (
                        (e[t.toLowerCase()] =
                            this.toolsTags[t].sanitizationConfig ?? {}),
                        e
                    ),
                    {},
                ),
                l = Wt(
                    s,
                    Object.assign({}, a, n.getAllInlineToolsSanitizeConfig(), {
                        br: {},
                    }),
                );
            l.trim() && l.trim() !== r && ut.isHTMLString(l)
                ? await this.processText(l, !0)
                : await this.processText(r);
        }
        async processText(e, t = !1) {
            const { Caret: n, BlockManager: o } = this.Editor,
                i = t ? this.processHTML(e) : this.processPlain(e);
            if (!i.length) return;
            if (1 === i.length)
                return void (i[0].isBlock
                    ? this.processSingleBlock(i.pop())
                    : this.processInlinePaste(i.pop()));
            const r =
                o.currentBlock &&
                o.currentBlock.tool.isDefault &&
                o.currentBlock.isEmpty;
            (i.map(async (e, t) => this.insertBlock(e, 0 === t && r)),
                o.currentBlock &&
                    n.setToBlock(o.currentBlock, n.positions.END));
        }
        setCallback() {
            this.listeners.on(
                this.Editor.UI.nodes.holder,
                'paste',
                this.handlePasteEvent,
            );
        }
        unsetCallback() {
            this.listeners.off(
                this.Editor.UI.nodes.holder,
                'paste',
                this.handlePasteEvent,
            );
        }
        processTools() {
            const e = this.Editor.Tools.blockTools;
            Array.from(e.values()).forEach(this.processTool);
        }
        collectTagNames(e) {
            return Ke(e) ? [e] : Ge(e) ? Object.keys(e) : [];
        }
        getTagsConfig(e) {
            if (!1 === e.pasteConfig) return;
            const t = e.pasteConfig.tags || [],
                n = [];
            (t.forEach((t) => {
                const o = this.collectTagNames(t);
                (n.push(...o),
                    o.forEach((n) => {
                        if (
                            Object.prototype.hasOwnProperty.call(
                                this.toolsTags,
                                n,
                            )
                        )
                            return void Ue(
                                `Paste handler for «${e.name}» Tool on «${n}» tag is skipped because it is already used by «${this.toolsTags[n].tool.name}» Tool.`,
                                'warn',
                            );
                        const o = Ge(t) ? t[n] : null;
                        this.toolsTags[n.toUpperCase()] = {
                            tool: e,
                            sanitizationConfig: o,
                        };
                    }));
            }),
                (this.tagsByTool[e.name] = n.map((e) => e.toUpperCase())));
        }
        getFilesConfig(e) {
            if (!1 === e.pasteConfig) return;
            const { files: t = {} } = e.pasteConfig;
            let { extensions: n, mimeTypes: o } = t;
            (!n && !o) ||
                (n &&
                    !Array.isArray(n) &&
                    (Ue(
                        `«extensions» property of the onDrop config for «${e.name}» Tool should be an array`,
                    ),
                    (n = [])),
                o &&
                    !Array.isArray(o) &&
                    (Ue(
                        `«mimeTypes» property of the onDrop config for «${e.name}» Tool should be an array`,
                    ),
                    (o = [])),
                o &&
                    (o = o.filter(
                        (t) =>
                            !!(function (e) {
                                return /^[-\w]+\/([-+\w]+|\*)$/.test(e);
                            })(t) ||
                            (Ue(
                                `MIME type value «${t}» for the «${e.name}» Tool is not a valid MIME type`,
                                'warn',
                            ),
                            !1),
                    )),
                (this.toolsFiles[e.name] = {
                    extensions: n || [],
                    mimeTypes: o || [],
                }));
        }
        getPatternsConfig(e) {
            !1 === e.pasteConfig ||
                !e.pasteConfig.patterns ||
                Ze(e.pasteConfig.patterns) ||
                Object.entries(e.pasteConfig.patterns).forEach(([t, n]) => {
                    (n instanceof RegExp ||
                        Ue(
                            `Pattern ${n} for «${e.name}» Tool is skipped because it should be a Regexp instance.`,
                            'warn',
                        ),
                        this.toolsPatterns.push({
                            key: t,
                            pattern: n,
                            tool: e,
                        }));
                });
        }
        isNativeBehaviour(e) {
            return ut.isNativeInput(e);
        }
        async processFiles(e) {
            const { BlockManager: t } = this.Editor;
            let n;
            ((n = await Promise.all(
                Array.from(e).map((e) => this.processFile(e)),
            )),
                (n = n.filter((e) => !!e)));
            const o = t.currentBlock.tool.isDefault && t.currentBlock.isEmpty;
            n.forEach((e, n) => {
                t.paste(e.type, e.event, 0 === n && o);
            });
        }
        async processFile(e) {
            const t = (function (e) {
                    return e.name.split('.').pop();
                })(e),
                n = Object.entries(this.toolsFiles).find(
                    ([n, { mimeTypes: o, extensions: i }]) => {
                        const [r, s] = e.type.split('/'),
                            a = i.find(
                                (e) => e.toLowerCase() === t.toLowerCase(),
                            ),
                            l = o.find((e) => {
                                const [t, n] = e.split('/');
                                return t === r && (n === s || '*' === n);
                            });
                        return !!a || !!l;
                    },
                );
            if (!n) return;
            const [o] = n;
            return {
                event: this.composePasteEvent('file', { file: e }),
                type: o,
            };
        }
        processHTML(e) {
            const { Tools: t } = this.Editor,
                n = ut.make('DIV');
            return (
                (n.innerHTML = e),
                this.getNodes(n)
                    .map((e) => {
                        let n,
                            o = t.defaultTool,
                            i = !1;
                        switch (e.nodeType) {
                            case Node.DOCUMENT_FRAGMENT_NODE:
                                ((n = ut.make('div')), n.appendChild(e));
                                break;
                            case Node.ELEMENT_NODE:
                                ((n = e),
                                    (i = !0),
                                    this.toolsTags[n.tagName] &&
                                        (o = this.toolsTags[n.tagName].tool));
                        }
                        const { tags: r } = o.pasteConfig || { tags: [] },
                            s = r.reduce(
                                (e, t) => (
                                    this.collectTagNames(t).forEach((n) => {
                                        const o = Ge(t) ? t[n] : null;
                                        e[n.toLowerCase()] = o || {};
                                    }),
                                    e
                                ),
                                {},
                            ),
                            a = Object.assign({}, s, o.baseSanitizeConfig);
                        if ('table' === n.tagName.toLowerCase()) {
                            const e = Wt(n.outerHTML, a);
                            n = ut.make('div', void 0, {
                                innerHTML: e,
                            }).firstChild;
                        } else n.innerHTML = Wt(n.innerHTML, a);
                        const l = this.composePasteEvent('tag', { data: n });
                        return {
                            content: n,
                            isBlock: i,
                            tool: o.name,
                            event: l,
                        };
                    })
                    .filter((e) => {
                        const t = ut.isEmpty(e.content),
                            n = ut.isSingleTag(e.content);
                        return !t || n;
                    })
            );
        }
        processPlain(e) {
            const { defaultBlock: t } = this.config;
            if (!e) return [];
            const n = t;
            return e
                .split(/\r?\n/)
                .filter((e) => e.trim())
                .map((e) => {
                    const t = ut.make('div');
                    t.textContent = e;
                    const o = this.composePasteEvent('tag', { data: t });
                    return { content: t, tool: n, isBlock: !1, event: o };
                });
        }
        async processSingleBlock(e) {
            const { Caret: t, BlockManager: n } = this.Editor,
                { currentBlock: o } = n;
            o &&
            e.tool === o.name &&
            ut.containsOnlyInlineElements(e.content.innerHTML)
                ? t.insertContentAtCaretPosition(e.content.innerHTML)
                : this.insertBlock(
                      e,
                      (null == o ? void 0 : o.tool.isDefault) && o.isEmpty,
                  );
        }
        async processInlinePaste(t) {
            const { BlockManager: n, Caret: o } = this.Editor,
                { content: i } = t;
            if (
                n.currentBlock &&
                n.currentBlock.tool.isDefault &&
                i.textContent.length < e.PATTERN_PROCESSING_MAX_LENGTH
            ) {
                const e = await this.processPattern(i.textContent);
                if (e) {
                    const t =
                            n.currentBlock &&
                            n.currentBlock.tool.isDefault &&
                            n.currentBlock.isEmpty,
                        i = n.paste(e.tool, e.event, t);
                    return void o.setToBlock(i, o.positions.END);
                }
            }
            if (n.currentBlock && n.currentBlock.currentInput) {
                const e = n.currentBlock.tool.baseSanitizeConfig;
                document.execCommand('insertHTML', !1, Wt(i.innerHTML, e));
            } else this.insertBlock(t);
        }
        async processPattern(e) {
            const t = this.toolsPatterns.find((t) => {
                const n = t.pattern.exec(e);
                return !!n && e === n.shift();
            });
            return t
                ? {
                      event: this.composePasteEvent('pattern', {
                          key: t.key,
                          data: e,
                      }),
                      tool: t.tool.name,
                  }
                : void 0;
        }
        insertBlock(e, t = !1) {
            const { BlockManager: n, Caret: o } = this.Editor,
                { currentBlock: i } = n;
            let r;
            if (t && i && i.isEmpty)
                return (
                    (r = n.paste(e.tool, e.event, !0)),
                    void o.setToBlock(r, o.positions.END)
                );
            ((r = n.paste(e.tool, e.event)), o.setToBlock(r, o.positions.END));
        }
        insertEditorJSData(e) {
            const { BlockManager: t, Caret: n, Tools: o } = this.Editor;
            Ut(e, (e) => o.blockTools.get(e).sanitizeConfig).forEach(
                ({ tool: e, data: o }, i) => {
                    let r = !1;
                    0 === i &&
                        (r =
                            t.currentBlock &&
                            t.currentBlock.tool.isDefault &&
                            t.currentBlock.isEmpty);
                    const s = t.insert({ tool: e, data: o, replace: r });
                    n.setToBlock(s, n.positions.END);
                },
            );
        }
        processElementNode(e, t, n) {
            const o = Object.keys(this.toolsTags),
                i = e,
                { tool: r } = this.toolsTags[i.tagName] || {},
                s = this.tagsByTool[null == r ? void 0 : r.name] || [],
                a = o.includes(i.tagName),
                l = ut.blockElements.includes(i.tagName.toLowerCase()),
                c = Array.from(i.children).some(
                    ({ tagName: e }) => o.includes(e) && !s.includes(e),
                ),
                d = Array.from(i.children).some(({ tagName: e }) =>
                    ut.blockElements.includes(e.toLowerCase()),
                );
            return l || a || c
                ? (a && !c) || (l && !d && !c)
                    ? [...t, n, i]
                    : void 0
                : (n.appendChild(i), [...t, n]);
        }
        getNodes(e) {
            const t = Array.from(e.childNodes);
            let n;
            const o = (e, t) => {
                if (ut.isEmpty(t) && !ut.isSingleTag(t)) return e;
                const i = e[e.length - 1];
                let r = new DocumentFragment();
                switch ((i && ut.isFragment(i) && (r = e.pop()), t.nodeType)) {
                    case Node.ELEMENT_NODE:
                        if (((n = this.processElementNode(t, e, r)), n))
                            return n;
                        break;
                    case Node.TEXT_NODE:
                        return (r.appendChild(t), [...e, r]);
                    default:
                        return [...e, r];
                }
                return [...e, ...Array.from(t.childNodes).reduce(o, [])];
            };
            return t.reduce(o, []);
        }
        composePasteEvent(e, t) {
            return new CustomEvent(e, { detail: t });
        }
    };
    yr.PATTERN_PROCESSING_MAX_LENGTH = 450;
    let wr = yr;
    class kr extends kt {
        constructor() {
            (super(...arguments),
                (this.isRectSelectionActivated = !1),
                (this.SCROLL_SPEED = 3),
                (this.HEIGHT_OF_SCROLL_ZONE = 40),
                (this.BOTTOM_SCROLL_ZONE = 1),
                (this.TOP_SCROLL_ZONE = 2),
                (this.MAIN_MOUSE_BUTTON = 0),
                (this.mousedown = !1),
                (this.isScrolling = !1),
                (this.inScrollZone = null),
                (this.startX = 0),
                (this.startY = 0),
                (this.mouseX = 0),
                (this.mouseY = 0),
                (this.stackOfSelected = []),
                (this.listenerIds = []));
        }
        static get CSS() {
            return {
                overlay: 'codex-editor-overlay',
                overlayContainer: 'codex-editor-overlay__container',
                rect: 'codex-editor-overlay__rectangle',
                topScrollZone: 'codex-editor-overlay__scroll-zone--top',
                bottomScrollZone: 'codex-editor-overlay__scroll-zone--bottom',
            };
        }
        prepare() {
            this.enableModuleBindings();
        }
        startSelection(e, t) {
            const n = document.elementFromPoint(
                e - window.pageXOffset,
                t - window.pageYOffset,
            );
            n.closest(`.${this.Editor.Toolbar.CSS.toolbar}`) ||
                ((this.Editor.BlockSelection.allBlocksSelected = !1),
                this.clearSelection(),
                (this.stackOfSelected = []));
            const o = [
                    `.${$t.CSS.content}`,
                    `.${this.Editor.Toolbar.CSS.toolbar}`,
                    `.${this.Editor.InlineToolbar.CSS.inlineToolbar}`,
                ],
                i = n.closest('.' + this.Editor.UI.CSS.editorWrapper),
                r = o.some((e) => !!n.closest(e));
            !i ||
                r ||
                ((this.mousedown = !0), (this.startX = e), (this.startY = t));
        }
        endSelection() {
            ((this.mousedown = !1),
                (this.startX = 0),
                (this.startY = 0),
                (this.overlayRectangle.style.display = 'none'));
        }
        isRectActivated() {
            return this.isRectSelectionActivated;
        }
        clearSelection() {
            this.isRectSelectionActivated = !1;
        }
        enableModuleBindings() {
            const { container: e } = this.genHTML();
            (this.listeners.on(
                e,
                'mousedown',
                (e) => {
                    this.processMouseDown(e);
                },
                !1,
            ),
                this.listeners.on(
                    document.body,
                    'mousemove',
                    ot((e) => {
                        this.processMouseMove(e);
                    }, 10),
                    { passive: !0 },
                ),
                this.listeners.on(document.body, 'mouseleave', () => {
                    this.processMouseLeave();
                }),
                this.listeners.on(
                    window,
                    'scroll',
                    ot((e) => {
                        this.processScroll(e);
                    }, 10),
                    { passive: !0 },
                ),
                this.listeners.on(
                    document.body,
                    'mouseup',
                    () => {
                        this.processMouseUp();
                    },
                    !1,
                ));
        }
        processMouseDown(e) {
            e.button === this.MAIN_MOUSE_BUTTON &&
                (null !== e.target.closest(ut.allInputsSelector) ||
                    this.startSelection(e.pageX, e.pageY));
        }
        processMouseMove(e) {
            (this.changingRectangle(e), this.scrollByZones(e.clientY));
        }
        processMouseLeave() {
            (this.clearSelection(), this.endSelection());
        }
        processScroll(e) {
            this.changingRectangle(e);
        }
        processMouseUp() {
            (this.clearSelection(), this.endSelection());
        }
        scrollByZones(e) {
            ((this.inScrollZone = null),
                e <= this.HEIGHT_OF_SCROLL_ZONE &&
                    (this.inScrollZone = this.TOP_SCROLL_ZONE),
                document.documentElement.clientHeight - e <=
                    this.HEIGHT_OF_SCROLL_ZONE &&
                    (this.inScrollZone = this.BOTTOM_SCROLL_ZONE),
                this.inScrollZone
                    ? this.isScrolling ||
                      (this.scrollVertical(
                          this.inScrollZone === this.TOP_SCROLL_ZONE
                              ? -this.SCROLL_SPEED
                              : this.SCROLL_SPEED,
                      ),
                      (this.isScrolling = !0))
                    : (this.isScrolling = !1));
        }
        genHTML() {
            const { UI: e } = this.Editor,
                t = e.nodes.holder.querySelector('.' + e.CSS.editorWrapper),
                n = ut.make('div', kr.CSS.overlay, {}),
                o = ut.make('div', kr.CSS.overlayContainer, {}),
                i = ut.make('div', kr.CSS.rect, {});
            return (
                o.appendChild(i),
                n.appendChild(o),
                t.appendChild(n),
                (this.overlayRectangle = i),
                { container: t, overlay: n }
            );
        }
        scrollVertical(e) {
            if (!this.inScrollZone || !this.mousedown) return;
            const t = window.pageYOffset;
            (window.scrollBy(0, e),
                (this.mouseY += window.pageYOffset - t),
                setTimeout(() => {
                    this.scrollVertical(e);
                }, 0));
        }
        changingRectangle(e) {
            if (!this.mousedown) return;
            void 0 !== e.pageY &&
                ((this.mouseX = e.pageX), (this.mouseY = e.pageY));
            const {
                    rightPos: t,
                    leftPos: n,
                    index: o,
                } = this.genInfoForMouseSelection(),
                i = this.startX > t && this.mouseX > t,
                r = this.startX < n && this.mouseX < n;
            ((this.rectCrossesBlocks = !(i || r)),
                this.isRectSelectionActivated ||
                    ((this.rectCrossesBlocks = !1),
                    (this.isRectSelectionActivated = !0),
                    this.shrinkRectangleToPoint(),
                    (this.overlayRectangle.style.display = 'block')),
                this.updateRectangleSize(),
                this.Editor.Toolbar.close(),
                void 0 !== o &&
                    (this.trySelectNextBlock(o),
                    this.inverseSelection(),
                    xt.get().removeAllRanges()));
        }
        shrinkRectangleToPoint() {
            ((this.overlayRectangle.style.left =
                this.startX - window.pageXOffset + 'px'),
                (this.overlayRectangle.style.top =
                    this.startY - window.pageYOffset + 'px'),
                (this.overlayRectangle.style.bottom = `calc(100% - ${this.startY - window.pageYOffset}px`),
                (this.overlayRectangle.style.right = `calc(100% - ${this.startX - window.pageXOffset}px`));
        }
        inverseSelection() {
            const e = this.Editor.BlockManager.getBlockByIndex(
                this.stackOfSelected[0],
            ).selected;
            if (this.rectCrossesBlocks && !e)
                for (const e of this.stackOfSelected)
                    this.Editor.BlockSelection.selectBlockByIndex(e);
            if (!this.rectCrossesBlocks && e)
                for (const e of this.stackOfSelected)
                    this.Editor.BlockSelection.unSelectBlockByIndex(e);
        }
        updateRectangleSize() {
            (this.mouseY >= this.startY
                ? ((this.overlayRectangle.style.top =
                      this.startY - window.pageYOffset + 'px'),
                  (this.overlayRectangle.style.bottom = `calc(100% - ${this.mouseY - window.pageYOffset}px`))
                : ((this.overlayRectangle.style.bottom = `calc(100% - ${this.startY - window.pageYOffset}px`),
                  (this.overlayRectangle.style.top =
                      this.mouseY - window.pageYOffset + 'px')),
                this.mouseX >= this.startX
                    ? ((this.overlayRectangle.style.left =
                          this.startX - window.pageXOffset + 'px'),
                      (this.overlayRectangle.style.right = `calc(100% - ${this.mouseX - window.pageXOffset}px`))
                    : ((this.overlayRectangle.style.right = `calc(100% - ${this.startX - window.pageXOffset}px`),
                      (this.overlayRectangle.style.left =
                          this.mouseX - window.pageXOffset + 'px')));
        }
        genInfoForMouseSelection() {
            const e = document.body.offsetWidth / 2,
                t = this.mouseY - window.pageYOffset,
                n = document.elementFromPoint(e, t),
                o = this.Editor.BlockManager.getBlockByChildNode(n);
            let i;
            void 0 !== o &&
                (i = this.Editor.BlockManager.blocks.findIndex(
                    (e) => e.holder === o.holder,
                ));
            const r = this.Editor.BlockManager.lastBlock.holder.querySelector(
                    '.' + $t.CSS.content,
                ),
                s = Number.parseInt(window.getComputedStyle(r).width, 10) / 2;
            return { index: i, leftPos: e - s, rightPos: e + s };
        }
        addBlockInSelection(e) {
            (this.rectCrossesBlocks &&
                this.Editor.BlockSelection.selectBlockByIndex(e),
                this.stackOfSelected.push(e));
        }
        trySelectNextBlock(e) {
            const t =
                    this.stackOfSelected[this.stackOfSelected.length - 1] === e,
                n = this.stackOfSelected.length;
            if (t) return;
            const o =
                this.stackOfSelected[n - 1] - this.stackOfSelected[n - 2] > 0;
            let i = 0;
            n > 1 && (i = o ? 1 : -1);
            const r = e > this.stackOfSelected[n - 1] && 1 === i,
                s = e < this.stackOfSelected[n - 1] && -1 === i,
                a = !(r || s || 0 === i);
            if (
                !a &&
                (e > this.stackOfSelected[n - 1] ||
                    void 0 === this.stackOfSelected[n - 1])
            ) {
                let t = this.stackOfSelected[n - 1] + 1 || e;
                for (; t <= e; t++) this.addBlockInSelection(t);
                return;
            }
            if (!a && e < this.stackOfSelected[n - 1]) {
                for (let t = this.stackOfSelected[n - 1] - 1; t >= e; t--)
                    this.addBlockInSelection(t);
                return;
            }
            if (!a) return;
            let l,
                c = n - 1;
            for (
                l =
                    e > this.stackOfSelected[n - 1]
                        ? () => e > this.stackOfSelected[c]
                        : () => e < this.stackOfSelected[c];
                l();

            )
                (this.rectCrossesBlocks &&
                    this.Editor.BlockSelection.unSelectBlockByIndex(
                        this.stackOfSelected[c],
                    ),
                    this.stackOfSelected.pop(),
                    c--);
        }
    }
    !(function () {
        try {
            if (typeof document < 'u') {
                var e = document.createElement('style');
                (e.appendChild(
                    document.createTextNode(
                        '.ce-paragraph{line-height:1.6em;outline:none}.ce-block:only-of-type .ce-paragraph[data-placeholder-active]:empty:before,.ce-block:only-of-type .ce-paragraph[data-placeholder-active][data-empty=true]:before{content:attr(data-placeholder-active)}.ce-paragraph p:first-of-type{margin-top:0}.ce-paragraph p:last-of-type{margin-bottom:0}',
                    ),
                ),
                    document.head.appendChild(e));
            }
        } catch (e) {
            console.error('vite-plugin-css-injected-by-js', e);
        }
    })();
    /**
     * Base Paragraph Block for the Editor.js.
     * Represents a regular text block
     *
     * @author CodeX (team@codex.so)
     * @copyright CodeX 2018
     * @license The MIT License (MIT)
     */
    class xr {
        static get DEFAULT_PLACEHOLDER() {
            return '';
        }
        constructor({ data: e, config: t, api: n, readOnly: o }) {
            ((this.api = n),
                (this.readOnly = o),
                (this._CSS = {
                    block: this.api.styles.block,
                    wrapper: 'ce-paragraph',
                }),
                this.readOnly || (this.onKeyUp = this.onKeyUp.bind(this)),
                (this._placeholder = t.placeholder
                    ? t.placeholder
                    : xr.DEFAULT_PLACEHOLDER),
                (this._data = e ?? {}),
                (this._element = null),
                (this._preserveBlank = t.preserveBlank ?? !1));
        }
        onKeyUp(e) {
            if (
                ('Backspace' !== e.code && 'Delete' !== e.code) ||
                !this._element
            )
                return;
            const { textContent: t } = this._element;
            '' === t && (this._element.innerHTML = '');
        }
        drawView() {
            const e = document.createElement('DIV');
            return (
                e.classList.add(this._CSS.wrapper, this._CSS.block),
                (e.contentEditable = 'false'),
                (e.dataset.placeholderActive = this.api.i18n.t(
                    this._placeholder,
                )),
                this._data.text && (e.innerHTML = this._data.text),
                this.readOnly ||
                    ((e.contentEditable = 'true'),
                    e.addEventListener('keyup', this.onKeyUp)),
                e
            );
        }
        render() {
            return ((this._element = this.drawView()), this._element);
        }
        merge(e) {
            if (!this._element) return;
            this._data.text += e.text;
            const t = (function (e) {
                const t = document.createElement('div');
                t.innerHTML = e.trim();
                const n = document.createDocumentFragment();
                return (n.append(...Array.from(t.childNodes)), n);
            })(e.text);
            (this._element.appendChild(t), this._element.normalize());
        }
        validate(e) {
            return !('' === e.text.trim() && !this._preserveBlank);
        }
        save(e) {
            return { text: e.innerHTML };
        }
        onPaste(e) {
            const t = { text: e.detail.data.innerHTML };
            ((this._data = t),
                window.requestAnimationFrame(() => {
                    this._element &&
                        (this._element.innerHTML = this._data.text || '');
                }));
        }
        static get conversionConfig() {
            return { export: 'text', import: 'text' };
        }
        static get sanitize() {
            return { text: { br: !0 } };
        }
        static get isReadOnlySupported() {
            return !0;
        }
        static get pasteConfig() {
            return { tags: ['P'] };
        }
        static get toolbox() {
            return {
                icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 9V7.2C8 7.08954 8.08954 7 8.2 7L12 7M16 9V7.2C16 7.08954 15.9105 7 15.8 7L12 7M12 7L12 17M12 17H10M12 17H14"/></svg>',
                title: 'Text',
            };
        }
    }
    class Cr {
        constructor() {
            this.commandName = 'bold';
        }
        static get sanitize() {
            return { b: {} };
        }
        render() {
            return {
                icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9 12L9 7.1C9 7.04477 9.04477 7 9.1 7H10.4C11.5 7 14 7.1 14 9.5C14 9.5 14 12 11 12M9 12V16.8C9 16.9105 9.08954 17 9.2 17H12.5C14 17 15 16 15 14.5C15 11.7046 11 12 11 12M9 12H11"/></svg>',
                name: 'bold',
                onActivate: () => {
                    document.execCommand(this.commandName);
                },
                isActive: () => document.queryCommandState(this.commandName),
            };
        }
        get shortcut() {
            return 'CMD+B';
        }
    }
    ((Cr.isInline = !0), (Cr.title = 'Bold'));
    class Er {
        constructor() {
            ((this.commandName = 'italic'),
                (this.CSS = {
                    button: 'ce-inline-tool',
                    buttonActive: 'ce-inline-tool--active',
                    buttonModifier: 'ce-inline-tool--italic',
                }),
                (this.nodes = { button: null }));
        }
        static get sanitize() {
            return { i: {} };
        }
        render() {
            return (
                (this.nodes.button = document.createElement('button')),
                (this.nodes.button.type = 'button'),
                this.nodes.button.classList.add(
                    this.CSS.button,
                    this.CSS.buttonModifier,
                ),
                (this.nodes.button.innerHTML =
                    '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M13.34 10C12.4223 12.7337 11 17 11 17"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M14.21 7H14.2"/></svg>'),
                this.nodes.button
            );
        }
        surround() {
            document.execCommand(this.commandName);
        }
        checkState() {
            const e = document.queryCommandState(this.commandName);
            return (
                this.nodes.button.classList.toggle(this.CSS.buttonActive, e),
                e
            );
        }
        get shortcut() {
            return 'CMD+I';
        }
    }
    ((Er.isInline = !0), (Er.title = 'Italic'));
    class Sr {
        constructor({ api: e }) {
            ((this.commandLink = 'createLink'),
                (this.commandUnlink = 'unlink'),
                (this.ENTER_KEY = 13),
                (this.CSS = {
                    button: 'ce-inline-tool',
                    buttonActive: 'ce-inline-tool--active',
                    buttonModifier: 'ce-inline-tool--link',
                    buttonUnlink: 'ce-inline-tool--unlink',
                    input: 'ce-inline-tool-input',
                    inputShowed: 'ce-inline-tool-input--showed',
                }),
                (this.nodes = { button: null, input: null }),
                (this.inputOpened = !1),
                (this.toolbar = e.toolbar),
                (this.inlineToolbar = e.inlineToolbar),
                (this.notifier = e.notifier),
                (this.i18n = e.i18n),
                (this.selection = new xt()));
        }
        static get sanitize() {
            return { a: { href: !0, target: '_blank', rel: 'nofollow' } };
        }
        render() {
            return (
                (this.nodes.button = document.createElement('button')),
                (this.nodes.button.type = 'button'),
                this.nodes.button.classList.add(
                    this.CSS.button,
                    this.CSS.buttonModifier,
                ),
                (this.nodes.button.innerHTML = on),
                this.nodes.button
            );
        }
        renderActions() {
            return (
                (this.nodes.input = document.createElement('input')),
                (this.nodes.input.placeholder = this.i18n.t('Add a link')),
                (this.nodes.input.enterKeyHint = 'done'),
                this.nodes.input.classList.add(this.CSS.input),
                this.nodes.input.addEventListener('keydown', (e) => {
                    e.keyCode === this.ENTER_KEY && this.enterPressed(e);
                }),
                this.nodes.input
            );
        }
        surround(e) {
            if (e) {
                this.inputOpened
                    ? (this.selection.restore(),
                      this.selection.removeFakeBackground())
                    : (this.selection.setFakeBackground(),
                      this.selection.save());
                const e = this.selection.findParentTag('A');
                if (e)
                    return (
                        this.selection.expandToTag(e),
                        this.unlink(),
                        this.closeActions(),
                        this.checkState(),
                        void this.toolbar.close()
                    );
            }
            this.toggleActions();
        }
        checkState() {
            const e = this.selection.findParentTag('A');
            if (e) {
                ((this.nodes.button.innerHTML =
                    '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M15.7795 11.5C15.7795 11.5 16.053 11.1962 16.5497 10.6722C17.4442 9.72856 17.4701 8.2475 16.5781 7.30145V7.30145C15.6482 6.31522 14.0873 6.29227 13.1288 7.25073L11.8796 8.49999"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8.24517 12.3883C8.24517 12.3883 7.97171 12.6922 7.47504 13.2161C6.58051 14.1598 6.55467 15.6408 7.44666 16.5869V16.5869C8.37653 17.5731 9.93744 17.5961 10.8959 16.6376L12.1452 15.3883"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M17.7802 15.1032L16.597 14.9422C16.0109 14.8624 15.4841 15.3059 15.4627 15.8969L15.4199 17.0818"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6.39064 9.03238L7.58432 9.06668C8.17551 9.08366 8.6522 8.58665 8.61056 7.99669L8.5271 6.81397"/><line x1="12.1142" x2="11.7" y1="12.2" y2="11.7858" stroke="currentColor" stroke-linecap="round" stroke-width="2"/></svg>'),
                    this.nodes.button.classList.add(this.CSS.buttonUnlink),
                    this.nodes.button.classList.add(this.CSS.buttonActive),
                    this.openActions());
                const t = e.getAttribute('href');
                ((this.nodes.input.value = 'null' !== t ? t : ''),
                    this.selection.save());
            } else
                ((this.nodes.button.innerHTML = on),
                    this.nodes.button.classList.remove(this.CSS.buttonUnlink),
                    this.nodes.button.classList.remove(this.CSS.buttonActive));
            return !!e;
        }
        clear() {
            this.closeActions();
        }
        get shortcut() {
            return 'CMD+K';
        }
        toggleActions() {
            this.inputOpened ? this.closeActions(!1) : this.openActions(!0);
        }
        openActions(e = !1) {
            (this.nodes.input.classList.add(this.CSS.inputShowed),
                e && this.nodes.input.focus(),
                (this.inputOpened = !0));
        }
        closeActions(e = !0) {
            if (this.selection.isFakeBackgroundEnabled) {
                const e = new xt();
                (e.save(),
                    this.selection.restore(),
                    this.selection.removeFakeBackground(),
                    e.restore());
            }
            (this.nodes.input.classList.remove(this.CSS.inputShowed),
                (this.nodes.input.value = ''),
                e && this.selection.clearSaved(),
                (this.inputOpened = !1));
        }
        enterPressed(e) {
            let t = this.nodes.input.value || '';
            return t.trim()
                ? this.validateURL(t)
                    ? ((t = this.prepareLink(t)),
                      this.selection.restore(),
                      this.selection.removeFakeBackground(),
                      this.insertLink(t),
                      e.preventDefault(),
                      e.stopPropagation(),
                      e.stopImmediatePropagation(),
                      this.selection.collapseToEnd(),
                      void this.inlineToolbar.close())
                    : (this.notifier.show({
                          message: 'Pasted link is not valid.',
                          style: 'error',
                      }),
                      void Ue('Incorrect Link pasted', 'warn', t))
                : (this.selection.restore(),
                  this.unlink(),
                  e.preventDefault(),
                  void this.closeActions());
        }
        validateURL(e) {
            return !/\s/.test(e);
        }
        prepareLink(e) {
            return ((e = e.trim()), (e = this.addProtocol(e)));
        }
        addProtocol(e) {
            if (/^(\w+):(\/\/)?/.test(e)) return e;
            const t = /^\/[^/\s]/.test(e),
                n = '#' === e.substring(0, 1),
                o = /^\/\/[^/\s]/.test(e);
            return (!t && !n && !o && (e = 'http://' + e), e);
        }
        insertLink(e) {
            const t = this.selection.findParentTag('A');
            (t && this.selection.expandToTag(t),
                document.execCommand(this.commandLink, !1, e));
        }
        unlink() {
            document.execCommand(this.commandUnlink);
        }
    }
    ((Sr.isInline = !0), (Sr.title = 'Link'));
    class Tr {
        constructor({ api: e }) {
            ((this.i18nAPI = e.i18n),
                (this.blocksAPI = e.blocks),
                (this.selectionAPI = e.selection),
                (this.toolsAPI = e.tools),
                (this.caretAPI = e.caret));
        }
        async render() {
            const e = xt.get(),
                t = this.blocksAPI.getBlockByElement(e.anchorNode);
            if (void 0 === t) return [];
            const n = this.toolsAPI.getBlockTools(),
                o = await Lt(t, n);
            if (0 === o.length) return [];
            const i = o.reduce((e, n) => {
                    var o;
                    return (
                        null == (o = n.toolbox) ||
                            o.forEach((o) => {
                                e.push({
                                    icon: o.icon,
                                    title: mt.t(Qt.toolNames, o.title),
                                    name: n.name,
                                    closeOnActivate: !0,
                                    onActivate: async () => {
                                        const e = await this.blocksAPI.convert(
                                            t.id,
                                            n.name,
                                            o.data,
                                        );
                                        this.caretAPI.setToBlock(e, 'end');
                                    },
                                });
                            }),
                        e
                    );
                }, []),
                r = await t.getActiveToolboxEntry(),
                s = void 0 !== r ? r.icon : rn,
                a = !dt();
            return {
                icon: s,
                name: 'convert-to',
                hint: { title: this.i18nAPI.t('Convert to') },
                children: {
                    searchable: a,
                    items: i,
                    onOpen: () => {
                        a &&
                            (this.selectionAPI.setFakeBackground(),
                            this.selectionAPI.save());
                    },
                    onClose: () => {
                        a &&
                            (this.selectionAPI.restore(),
                            this.selectionAPI.removeFakeBackground());
                    },
                },
            };
        }
    }
    Tr.isInline = !0;
    class _r {
        constructor({ data: e, api: t }) {
            ((this.CSS = {
                wrapper: 'ce-stub',
                info: 'ce-stub__info',
                title: 'ce-stub__title',
                subtitle: 'ce-stub__subtitle',
            }),
                (this.api = t),
                (this.title = e.title || this.api.i18n.t('Error')),
                (this.subtitle = this.api.i18n.t(
                    'The block can not be displayed correctly.',
                )),
                (this.savedData = e.savedData),
                (this.wrapper = this.make()));
        }
        render() {
            return this.wrapper;
        }
        save() {
            return this.savedData;
        }
        make() {
            const e = ut.make('div', this.CSS.wrapper),
                t = ut.make('div', this.CSS.info),
                n = ut.make('div', this.CSS.title, { textContent: this.title }),
                o = ut.make('div', this.CSS.subtitle, {
                    textContent: this.subtitle,
                });
            return (
                (e.innerHTML =
                    '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/><line x1="12" x2="12" y1="9" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 15.02V15.01"/></svg>'),
                t.appendChild(n),
                t.appendChild(o),
                e.appendChild(t),
                e
            );
        }
    }
    _r.isReadOnlySupported = !0;
    class Br extends oo {
        constructor() {
            (super(...arguments), (this.type = Zn.Inline));
        }
        get title() {
            return this.constructable[to.Title];
        }
        create() {
            return new this.constructable({
                api: this.api,
                config: this.settings,
            });
        }
        get isReadOnlySupported() {
            return this.constructable[to.IsReadOnlySupported] ?? !1;
        }
    }
    class Or extends oo {
        constructor() {
            (super(...arguments), (this.type = Zn.Tune));
        }
        create(e, t) {
            return new this.constructable({
                api: this.api,
                config: this.settings,
                block: t,
                data: e,
            });
        }
    }
    class Ir extends Map {
        get blockTools() {
            const e = Array.from(this.entries()).filter(([, e]) => e.isBlock());
            return new Ir(e);
        }
        get inlineTools() {
            const e = Array.from(this.entries()).filter(([, e]) =>
                e.isInline(),
            );
            return new Ir(e);
        }
        get blockTunes() {
            const e = Array.from(this.entries()).filter(([, e]) => e.isTune());
            return new Ir(e);
        }
        get internalTools() {
            const e = Array.from(this.entries()).filter(
                ([, e]) => e.isInternal,
            );
            return new Ir(e);
        }
        get externalTools() {
            const e = Array.from(this.entries()).filter(
                ([, e]) => !e.isInternal,
            );
            return new Ir(e);
        }
    }
    var Lr = Object.defineProperty,
        Ar = Object.getOwnPropertyDescriptor,
        Pr = (e, t, n, o) => {
            for (
                var i, r = o > 1 ? void 0 : o ? Ar(t, n) : t, s = e.length - 1;
                s >= 0;
                s--
            )
                (i = e[s]) && (r = (o ? i(t, n, r) : i(r)) || r);
            return (o && r && Lr(t, n, r), r);
        };
    class Mr extends oo {
        constructor() {
            (super(...arguments),
                (this.type = Zn.Block),
                (this.inlineTools = new Ir()),
                (this.tunes = new Ir()));
        }
        create(e, t, n) {
            return new this.constructable({
                data: e,
                block: t,
                readOnly: n,
                api: this.api,
                config: this.settings,
            });
        }
        get isReadOnlySupported() {
            return !0 === this.constructable[eo.IsReadOnlySupported];
        }
        get isLineBreaksEnabled() {
            return this.constructable[eo.IsEnabledLineBreaks];
        }
        get toolbox() {
            const e = this.constructable[eo.Toolbox],
                t = this.config[Jn.Toolbox];
            if (!Ze(e) && !1 !== t)
                return t
                    ? Array.isArray(e)
                        ? Array.isArray(t)
                            ? t.map((t, n) => {
                                  const o = e[n];
                                  return o ? { ...o, ...t } : t;
                              })
                            : [t]
                        : Array.isArray(t)
                          ? t
                          : [{ ...e, ...t }]
                    : Array.isArray(e)
                      ? e
                      : [e];
        }
        get conversionConfig() {
            return this.constructable[eo.ConversionConfig];
        }
        get enabledInlineTools() {
            return this.config[Jn.EnabledInlineTools] || !1;
        }
        get enabledBlockTunes() {
            return this.config[Jn.EnabledBlockTunes];
        }
        get pasteConfig() {
            return this.constructable[eo.PasteConfig] ?? {};
        }
        get sanitizeConfig() {
            const e = super.sanitizeConfig,
                t = this.baseSanitizeConfig;
            if (Ze(e)) return t;
            const n = {};
            for (const o in e)
                if (Object.prototype.hasOwnProperty.call(e, o)) {
                    const i = e[o];
                    Ge(i) ? (n[o] = Object.assign({}, t, i)) : (n[o] = i);
                }
            return n;
        }
        get baseSanitizeConfig() {
            const e = {};
            return (
                Array.from(this.inlineTools.values()).forEach((t) =>
                    Object.assign(e, t.sanitizeConfig),
                ),
                Array.from(this.tunes.values()).forEach((t) =>
                    Object.assign(e, t.sanitizeConfig),
                ),
                e
            );
        }
    }
    (Pr([ct], Mr.prototype, 'sanitizeConfig', 1),
        Pr([ct], Mr.prototype, 'baseSanitizeConfig', 1));
    class Nr {
        constructor(e, t, n) {
            ((this.api = n), (this.config = e), (this.editorConfig = t));
        }
        get(e) {
            const { class: t, isInternal: n = !1, ...o } = this.config[e],
                i = this.getConstructor(t),
                r = t[no.IsTune];
            return new i({
                name: e,
                constructable: t,
                config: o,
                api: this.api.getMethodsForTool(e, r),
                isDefault: e === this.editorConfig.defaultBlock,
                defaultPlaceholder: this.editorConfig.placeholder,
                isInternal: n,
            });
        }
        getConstructor(e) {
            switch (!0) {
                case e[to.IsInline]:
                    return Br;
                case e[no.IsTune]:
                    return Or;
                default:
                    return Mr;
            }
        }
    }
    class $r {
        constructor({ api: e }) {
            ((this.CSS = { animation: 'wobble' }), (this.api = e));
        }
        render() {
            return {
                icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7 10L11.8586 14.8586C11.9367 14.9367 12.0633 14.9367 12.1414 14.8586L17 10"/></svg>',
                title: this.api.i18n.t('Move down'),
                onActivate: () => this.handleClick(),
                name: 'move-down',
            };
        }
        handleClick() {
            const e = this.api.blocks.getCurrentBlockIndex(),
                t = this.api.blocks.getBlockByIndex(e + 1);
            if (!t)
                throw new Error(
                    'Unable to move Block down since it is already the last',
                );
            const n = t.holder,
                o = n.getBoundingClientRect();
            let i = Math.abs(window.innerHeight - n.offsetHeight);
            (o.top < window.innerHeight &&
                (i = window.scrollY + n.offsetHeight),
                window.scrollTo(0, i),
                this.api.blocks.move(e + 1),
                this.api.toolbar.toggleBlockSettings(!0));
        }
    }
    $r.isTune = !0;
    class Rr {
        constructor({ api: e }) {
            this.api = e;
        }
        render() {
            return {
                icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 8L12 12M12 12L16 16M12 12L16 8M12 12L8 16"/></svg>',
                title: this.api.i18n.t('Delete'),
                name: 'delete',
                confirmation: {
                    title: this.api.i18n.t('Click to delete'),
                    onActivate: () => this.handleClick(),
                },
            };
        }
        handleClick() {
            this.api.blocks.delete();
        }
    }
    Rr.isTune = !0;
    class jr {
        constructor({ api: e }) {
            ((this.CSS = { animation: 'wobble' }), (this.api = e));
        }
        render() {
            return {
                icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7 15L11.8586 10.1414C11.9367 10.0633 12.0633 10.0633 12.1414 10.1414L17 15"/></svg>',
                title: this.api.i18n.t('Move up'),
                onActivate: () => this.handleClick(),
                name: 'move-up',
            };
        }
        handleClick() {
            const e = this.api.blocks.getCurrentBlockIndex(),
                t = this.api.blocks.getBlockByIndex(e),
                n = this.api.blocks.getBlockByIndex(e - 1);
            if (0 === e || !t || !n)
                throw new Error(
                    'Unable to move Block up since it is already the first',
                );
            const o = t.holder,
                i = n.holder,
                r = o.getBoundingClientRect(),
                s = i.getBoundingClientRect();
            let a;
            ((a =
                s.top > 0
                    ? Math.abs(r.top) - Math.abs(s.top)
                    : Math.abs(r.top) + s.height),
                window.scrollBy(0, -1 * a),
                this.api.blocks.move(e - 1),
                this.api.toolbar.toggleBlockSettings(!0));
        }
    }
    jr.isTune = !0;
    var Dr = Object.defineProperty,
        Fr = Object.getOwnPropertyDescriptor;
    class Hr extends kt {
        constructor() {
            (super(...arguments),
                (this.stubTool = 'stub'),
                (this.toolsAvailable = new Ir()),
                (this.toolsUnavailable = new Ir()));
        }
        get available() {
            return this.toolsAvailable;
        }
        get unavailable() {
            return this.toolsUnavailable;
        }
        get inlineTools() {
            return this.available.inlineTools;
        }
        get blockTools() {
            return this.available.blockTools;
        }
        get blockTunes() {
            return this.available.blockTunes;
        }
        get defaultTool() {
            return this.blockTools.get(this.config.defaultBlock);
        }
        get internal() {
            return this.available.internalTools;
        }
        async prepare() {
            if (
                (this.validateTools(),
                (this.config.tools = rt(
                    {},
                    this.internalTools,
                    this.config.tools,
                )),
                !Object.prototype.hasOwnProperty.call(this.config, 'tools') ||
                    0 === Object.keys(this.config.tools).length)
            )
                throw Error("Can't start without tools");
            const e = this.prepareConfig();
            this.factory = new Nr(e, this.config, this.Editor.API);
            const t = this.getListOfPrepareFunctions(e);
            if (0 === t.length) return Promise.resolve();
            (await Qe(
                t,
                (e) => {
                    this.toolPrepareMethodSuccess(e);
                },
                (e) => {
                    this.toolPrepareMethodFallback(e);
                },
            ),
                this.prepareBlockTools());
        }
        getAllInlineToolsSanitizeConfig() {
            const e = {};
            return (
                Array.from(this.inlineTools.values()).forEach((t) => {
                    Object.assign(e, t.sanitizeConfig);
                }),
                e
            );
        }
        destroy() {
            Object.values(this.available).forEach(async (e) => {
                Ve(e.reset) && (await e.reset());
            });
        }
        get internalTools() {
            return {
                convertTo: { class: Tr, isInternal: !0 },
                link: { class: Sr, isInternal: !0 },
                bold: { class: Cr, isInternal: !0 },
                italic: { class: Er, isInternal: !0 },
                paragraph: { class: xr, inlineToolbar: !0, isInternal: !0 },
                stub: { class: _r, isInternal: !0 },
                moveUp: { class: jr, isInternal: !0 },
                delete: { class: Rr, isInternal: !0 },
                moveDown: { class: $r, isInternal: !0 },
            };
        }
        toolPrepareMethodSuccess(e) {
            const t = this.factory.get(e.toolName);
            if (t.isInline()) {
                const e = ['render'].filter((e) => !t.create()[e]);
                if (e.length)
                    return (
                        Ue(
                            `Incorrect Inline Tool: ${t.name}. Some of required methods is not implemented %o`,
                            'warn',
                            e,
                        ),
                        void this.toolsUnavailable.set(t.name, t)
                    );
            }
            this.toolsAvailable.set(t.name, t);
        }
        toolPrepareMethodFallback(e) {
            this.toolsUnavailable.set(e.toolName, this.factory.get(e.toolName));
        }
        getListOfPrepareFunctions(e) {
            const t = [];
            return (
                Object.entries(e).forEach(([e, n]) => {
                    t.push({
                        function: Ve(n.class.prepare)
                            ? n.class.prepare
                            : () => {},
                        data: { toolName: e, config: n.config },
                    });
                }),
                t
            );
        }
        prepareBlockTools() {
            Array.from(this.blockTools.values()).forEach((e) => {
                (this.assignInlineToolsToBlockTool(e),
                    this.assignBlockTunesToBlockTool(e));
            });
        }
        assignInlineToolsToBlockTool(e) {
            if (!1 !== this.config.inlineToolbar) {
                if (!0 === e.enabledInlineTools)
                    return void (e.inlineTools = new Ir(
                        Array.isArray(this.config.inlineToolbar)
                            ? this.config.inlineToolbar.map((e) => [
                                  e,
                                  this.inlineTools.get(e),
                              ])
                            : Array.from(this.inlineTools.entries()),
                    ));
                Array.isArray(e.enabledInlineTools) &&
                    (e.inlineTools = new Ir(
                        ['convertTo', ...e.enabledInlineTools].map((e) => [
                            e,
                            this.inlineTools.get(e),
                        ]),
                    ));
            }
        }
        assignBlockTunesToBlockTool(e) {
            if (!1 !== e.enabledBlockTunes) {
                if (Array.isArray(e.enabledBlockTunes)) {
                    const t = new Ir(
                        e.enabledBlockTunes.map((e) => [
                            e,
                            this.blockTunes.get(e),
                        ]),
                    );
                    return void (e.tunes = new Ir([
                        ...t,
                        ...this.blockTunes.internalTools,
                    ]));
                }
                if (Array.isArray(this.config.tunes)) {
                    const t = new Ir(
                        this.config.tunes.map((e) => [
                            e,
                            this.blockTunes.get(e),
                        ]),
                    );
                    return void (e.tunes = new Ir([
                        ...t,
                        ...this.blockTunes.internalTools,
                    ]));
                }
                e.tunes = this.blockTunes.internalTools;
            }
        }
        validateTools() {
            for (const e in this.config.tools)
                if (
                    Object.prototype.hasOwnProperty.call(this.config.tools, e)
                ) {
                    if (e in this.internalTools) return;
                    const t = this.config.tools[e];
                    if (!Ve(t) && !Ve(t.class))
                        throw Error(
                            `Tool «${e}» must be a constructor function or an object with function in the «class» property`,
                        );
                }
        }
        prepareConfig() {
            const e = {};
            for (const t in this.config.tools)
                Ge(this.config.tools[t])
                    ? (e[t] = this.config.tools[t])
                    : (e[t] = { class: this.config.tools[t] });
            return e;
        }
    }
    ((e, t, n, o) => {
        for (
            var i, r = o > 1 ? void 0 : o ? Fr(t, n) : t, s = e.length - 1;
            s >= 0;
            s--
        )
            (i = e[s]) && (r = (o ? i(t, n, r) : i(r)) || r);
        o && r && Dr(t, n, r);
    })([ct], Hr.prototype, 'getAllInlineToolsSanitizeConfig', 1);
    const zr =
        ':root{--selectionColor: #e1f2ff;--inlineSelectionColor: #d4ecff;--bg-light: #eff2f5;--grayText: #707684;--color-dark: #1D202B;--color-active-icon: #388AE5;--color-gray-border: rgba(201, 201, 204, .48);--content-width: 650px;--narrow-mode-right-padding: 50px;--toolbox-buttons-size: 26px;--toolbox-buttons-size--mobile: 36px;--icon-size: 20px;--icon-size--mobile: 28px;--block-padding-vertical: .4em;--color-line-gray: #EFF0F1 }.codex-editor{position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;z-index:1}.codex-editor .hide{display:none}.codex-editor__redactor [contenteditable]:empty:after{content:"\\feff"}@media (min-width: 651px){.codex-editor--narrow .codex-editor__redactor{margin-right:50px}}@media (min-width: 651px){.codex-editor--narrow.codex-editor--rtl .codex-editor__redactor{margin-left:50px;margin-right:0}}@media (min-width: 651px){.codex-editor--narrow .ce-toolbar__actions{right:-5px}}.codex-editor-copyable{position:absolute;height:1px;width:1px;top:-400%;opacity:.001}.codex-editor-overlay{position:fixed;top:0;left:0;right:0;bottom:0;z-index:999;pointer-events:none;overflow:hidden}.codex-editor-overlay__container{position:relative;pointer-events:auto;z-index:0}.codex-editor-overlay__rectangle{position:absolute;pointer-events:none;background-color:#2eaadc33;border:1px solid transparent}.codex-editor svg{max-height:100%}.codex-editor path{stroke:currentColor}.codex-editor ::-moz-selection{background-color:#d4ecff}.codex-editor ::selection{background-color:#d4ecff}.codex-editor--toolbox-opened [contentEditable=true][data-placeholder]:focus:before{opacity:0!important}.ce-scroll-locked{overflow:hidden}.ce-scroll-locked--hard{overflow:hidden;top:calc(-1 * var(--window-scroll-offset));position:fixed;width:100%}.ce-toolbar{position:absolute;left:0;right:0;top:0;-webkit-transition:opacity .1s ease;transition:opacity .1s ease;will-change:opacity,top;display:none}.ce-toolbar--opened{display:block}.ce-toolbar__content{max-width:650px;margin:0 auto;position:relative}.ce-toolbar__plus{color:#1d202b;cursor:pointer;width:26px;height:26px;border-radius:7px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-ms-flex-negative:0;flex-shrink:0}@media (max-width: 650px){.ce-toolbar__plus{width:36px;height:36px}}@media (hover: hover){.ce-toolbar__plus:hover{background-color:#eff2f5}}.ce-toolbar__plus--active{background-color:#eff2f5;-webkit-animation:bounceIn .75s 1;animation:bounceIn .75s 1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}.ce-toolbar__plus-shortcut{opacity:.6;word-spacing:-2px;margin-top:5px}@media (max-width: 650px){.ce-toolbar__plus{position:absolute;background-color:#fff;border:1px solid #E8E8EB;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;z-index:2;position:static}.ce-toolbar__plus--left-oriented:before{left:15px;margin-left:0}.ce-toolbar__plus--right-oriented:before{left:auto;right:15px;margin-left:0}}.ce-toolbar__actions{position:absolute;right:100%;opacity:0;display:-webkit-box;display:-ms-flexbox;display:flex;padding-right:5px}.ce-toolbar__actions--opened{opacity:1}@media (max-width: 650px){.ce-toolbar__actions{right:auto}}.ce-toolbar__settings-btn{color:#1d202b;width:26px;height:26px;border-radius:7px;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;margin-left:3px;cursor:pointer;user-select:none}@media (max-width: 650px){.ce-toolbar__settings-btn{width:36px;height:36px}}@media (hover: hover){.ce-toolbar__settings-btn:hover{background-color:#eff2f5}}.ce-toolbar__settings-btn--active{background-color:#eff2f5;-webkit-animation:bounceIn .75s 1;animation:bounceIn .75s 1;-webkit-animation-fill-mode:forwards;animation-fill-mode:forwards}@media (min-width: 651px){.ce-toolbar__settings-btn{width:24px}}.ce-toolbar__settings-btn--hidden{display:none}@media (max-width: 650px){.ce-toolbar__settings-btn{position:absolute;background-color:#fff;border:1px solid #E8E8EB;-webkit-box-shadow:0 3px 15px -3px rgba(13,20,33,.13);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;z-index:2;position:static}.ce-toolbar__settings-btn--left-oriented:before{left:15px;margin-left:0}.ce-toolbar__settings-btn--right-oriented:before{left:auto;right:15px;margin-left:0}}.ce-toolbar__plus svg,.ce-toolbar__settings-btn svg{width:24px;height:24px}@media (min-width: 651px){.codex-editor--narrow .ce-toolbar__plus{left:5px}}@media (min-width: 651px){.codex-editor--narrow .ce-toolbox .ce-popover{right:0;left:auto;left:initial}}.ce-inline-toolbar{--y-offset: 8px;--color-background-icon-active: rgba(56, 138, 229, .1);--color-text-icon-active: #388AE5;--color-text-primary: black;position:absolute;visibility:hidden;-webkit-transition:opacity .25s ease;transition:opacity .25s ease;will-change:opacity,left,top;top:0;left:0;z-index:3;opacity:1;visibility:visible}.ce-inline-toolbar [hidden]{display:none!important}.ce-inline-toolbar__toggler-and-button-wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;width:100%;padding:0 6px}.ce-inline-toolbar__buttons{display:-webkit-box;display:-ms-flexbox;display:flex}.ce-inline-toolbar__dropdown{display:-webkit-box;display:-ms-flexbox;display:flex;padding:6px;margin:0 6px 0 -6px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;border-right:1px solid rgba(201,201,204,.48);-webkit-box-sizing:border-box;box-sizing:border-box}@media (hover: hover){.ce-inline-toolbar__dropdown:hover{background:#eff2f5}}.ce-inline-toolbar__dropdown--hidden{display:none}.ce-inline-toolbar__dropdown-content,.ce-inline-toolbar__dropdown-arrow{display:-webkit-box;display:-ms-flexbox;display:flex}.ce-inline-toolbar__dropdown-content svg,.ce-inline-toolbar__dropdown-arrow svg{width:20px;height:20px}.ce-inline-toolbar__shortcut{opacity:.6;word-spacing:-3px;margin-top:3px}.ce-inline-tool{color:var(--color-text-primary);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border:0;border-radius:4px;line-height:normal;height:100%;padding:0;width:28px;background-color:transparent;cursor:pointer}@media (max-width: 650px){.ce-inline-tool{width:36px;height:36px}}@media (hover: hover){.ce-inline-tool:hover{background-color:#f8f8f8}}.ce-inline-tool svg{display:block;width:20px;height:20px}@media (max-width: 650px){.ce-inline-tool svg{width:28px;height:28px}}.ce-inline-tool--link .icon--unlink,.ce-inline-tool--unlink .icon--link{display:none}.ce-inline-tool--unlink .icon--unlink{display:inline-block;margin-bottom:-1px}.ce-inline-tool-input{background:#F8F8F8;border:1px solid rgba(226,226,229,.2);border-radius:6px;padding:4px 8px;font-size:14px;line-height:22px;outline:none;margin:0;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box;display:none;font-weight:500;-webkit-appearance:none;font-family:inherit}@media (max-width: 650px){.ce-inline-tool-input{font-size:15px;font-weight:500}}.ce-inline-tool-input::-webkit-input-placeholder{color:#707684}.ce-inline-tool-input::-moz-placeholder{color:#707684}.ce-inline-tool-input:-ms-input-placeholder{color:#707684}.ce-inline-tool-input::-ms-input-placeholder{color:#707684}.ce-inline-tool-input::placeholder{color:#707684}.ce-inline-tool-input--showed{display:block}.ce-inline-tool--active{background:var(--color-background-icon-active);color:var(--color-text-icon-active)}@-webkit-keyframes fade-in{0%{opacity:0}to{opacity:1}}@keyframes fade-in{0%{opacity:0}to{opacity:1}}.ce-block{-webkit-animation:fade-in .3s ease;animation:fade-in .3s ease;-webkit-animation-fill-mode:none;animation-fill-mode:none;-webkit-animation-fill-mode:initial;animation-fill-mode:initial}.ce-block:first-of-type{margin-top:0}.ce-block--selected .ce-block__content{background:#e1f2ff}.ce-block--selected .ce-block__content [contenteditable]{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ce-block--selected .ce-block__content img,.ce-block--selected .ce-block__content .ce-stub{opacity:.55}.ce-block--stretched .ce-block__content{max-width:none}.ce-block__content{position:relative;max-width:650px;margin:0 auto;-webkit-transition:background-color .15s ease;transition:background-color .15s ease}.ce-block--drop-target .ce-block__content:before{content:"";position:absolute;top:100%;left:-20px;margin-top:-1px;height:8px;width:8px;border:solid #388AE5;border-width:1px 1px 0 0;-webkit-transform-origin:right;transform-origin:right;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.ce-block--drop-target .ce-block__content:after{content:"";position:absolute;top:100%;height:1px;width:100%;color:#388ae5;background:repeating-linear-gradient(90deg,#388AE5,#388AE5 1px,#fff 1px,#fff 6px)}.ce-block a{cursor:pointer;-webkit-text-decoration:underline;text-decoration:underline}.ce-block b{font-weight:700}.ce-block i{font-style:italic}@-webkit-keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}20%{-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}60%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}20%{-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}60%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@-webkit-keyframes selectionBounce{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}50%{-webkit-transform:scale3d(1.01,1.01,1.01);transform:scale3d(1.01,1.01,1.01)}70%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@keyframes selectionBounce{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}50%{-webkit-transform:scale3d(1.01,1.01,1.01);transform:scale3d(1.01,1.01,1.01)}70%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@-webkit-keyframes buttonClicked{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.95,.95,.95);transform:scale3d(.95,.95,.95)}60%{-webkit-transform:scale3d(1.02,1.02,1.02);transform:scale3d(1.02,1.02,1.02)}80%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}@keyframes buttonClicked{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{-webkit-transform:scale3d(.95,.95,.95);transform:scale3d(.95,.95,.95)}60%{-webkit-transform:scale3d(1.02,1.02,1.02);transform:scale3d(1.02,1.02,1.02)}80%{-webkit-transform:scale3d(1,1,1);transform:scaleZ(1)}}.cdx-block{padding:.4em 0}.cdx-block::-webkit-input-placeholder{line-height:normal!important}.cdx-input{border:1px solid rgba(201,201,204,.48);-webkit-box-shadow:inset 0 1px 2px 0 rgba(35,44,72,.06);box-shadow:inset 0 1px 2px #232c480f;border-radius:3px;padding:10px 12px;outline:none;width:100%;-webkit-box-sizing:border-box;box-sizing:border-box}.cdx-input[data-placeholder]:before{position:static!important}.cdx-input[data-placeholder]:before{display:inline-block;width:0;white-space:nowrap;pointer-events:none}.cdx-settings-button{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;border-radius:3px;cursor:pointer;border:0;outline:none;background-color:transparent;vertical-align:bottom;color:inherit;margin:0;min-width:26px;min-height:26px}.cdx-settings-button--focused{background:rgba(34,186,255,.08)!important}.cdx-settings-button--focused{-webkit-box-shadow:inset 0 0 0px 1px rgba(7,161,227,.08);box-shadow:inset 0 0 0 1px #07a1e314}.cdx-settings-button--focused-animated{-webkit-animation-name:buttonClicked;animation-name:buttonClicked;-webkit-animation-duration:.25s;animation-duration:.25s}.cdx-settings-button--active{color:#388ae5}.cdx-settings-button svg{width:auto;height:auto}@media (max-width: 650px){.cdx-settings-button svg{width:28px;height:28px}}@media (max-width: 650px){.cdx-settings-button{width:36px;height:36px;border-radius:8px}}@media (hover: hover){.cdx-settings-button:hover{background-color:#eff2f5}}.cdx-loader{position:relative;border:1px solid rgba(201,201,204,.48)}.cdx-loader:before{content:"";position:absolute;left:50%;top:50%;width:18px;height:18px;margin:-11px 0 0 -11px;border:2px solid rgba(201,201,204,.48);border-left-color:#388ae5;border-radius:50%;-webkit-animation:cdxRotation 1.2s infinite linear;animation:cdxRotation 1.2s infinite linear}@-webkit-keyframes cdxRotation{0%{-webkit-transform:rotate(0deg);transform:rotate(0)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes cdxRotation{0%{-webkit-transform:rotate(0deg);transform:rotate(0)}to{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.cdx-button{padding:13px;border-radius:3px;border:1px solid rgba(201,201,204,.48);font-size:14.9px;background:#fff;-webkit-box-shadow:0 2px 2px 0 rgba(18,30,57,.04);box-shadow:0 2px 2px #121e390a;color:#707684;text-align:center;cursor:pointer}@media (hover: hover){.cdx-button:hover{background:#FBFCFE;-webkit-box-shadow:0 1px 3px 0 rgba(18,30,57,.08);box-shadow:0 1px 3px #121e3914}}.cdx-button svg{height:20px;margin-right:.2em;margin-top:-2px}.ce-stub{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:12px 18px;margin:10px 0;border-radius:10px;background:#eff2f5;border:1px solid #EFF0F1;color:#707684;font-size:14px}.ce-stub svg{width:20px;height:20px}.ce-stub__info{margin-left:14px}.ce-stub__title{font-weight:500;text-transform:capitalize}.codex-editor.codex-editor--rtl{direction:rtl}.codex-editor.codex-editor--rtl .cdx-list{padding-left:0;padding-right:40px}.codex-editor.codex-editor--rtl .ce-toolbar__plus{right:-26px;left:auto}.codex-editor.codex-editor--rtl .ce-toolbar__actions{right:auto;left:-26px}@media (max-width: 650px){.codex-editor.codex-editor--rtl .ce-toolbar__actions{margin-left:0;margin-right:auto;padding-right:0;padding-left:10px}}.codex-editor.codex-editor--rtl .ce-settings{left:5px;right:auto}.codex-editor.codex-editor--rtl .ce-settings:before{right:auto;left:25px}.codex-editor.codex-editor--rtl .ce-settings__button:not(:nth-child(3n+3)){margin-left:3px;margin-right:0}.codex-editor.codex-editor--rtl .ce-conversion-tool__icon{margin-right:0;margin-left:10px}.codex-editor.codex-editor--rtl .ce-inline-toolbar__dropdown{border-right:0px solid transparent;border-left:1px solid rgba(201,201,204,.48);margin:0 -6px 0 6px}.codex-editor.codex-editor--rtl .ce-inline-toolbar__dropdown .icon--toggler-down{margin-left:0;margin-right:4px}@media (min-width: 651px){.codex-editor--narrow.codex-editor--rtl .ce-toolbar__plus{left:0;right:5px}}@media (min-width: 651px){.codex-editor--narrow.codex-editor--rtl .ce-toolbar__actions{left:-5px}}.cdx-search-field{--icon-margin-right: 10px;background:#F8F8F8;border:1px solid rgba(226,226,229,.2);border-radius:6px;padding:2px;display:grid;grid-template-columns:auto auto 1fr;grid-template-rows:auto}.cdx-search-field__icon{width:26px;height:26px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-right:var(--icon-margin-right)}.cdx-search-field__icon svg{width:20px;height:20px;color:#707684}.cdx-search-field__input{font-size:14px;outline:none;font-weight:500;font-family:inherit;border:0;background:transparent;margin:0;padding:0;line-height:22px;min-width:calc(100% - 26px - var(--icon-margin-right))}.cdx-search-field__input::-webkit-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::-moz-placeholder{color:#707684;font-weight:500}.cdx-search-field__input:-ms-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::-ms-input-placeholder{color:#707684;font-weight:500}.cdx-search-field__input::placeholder{color:#707684;font-weight:500}.ce-popover{--border-radius: 6px;--width: 200px;--max-height: 270px;--padding: 6px;--offset-from-target: 8px;--color-border: #EFF0F1;--color-shadow: rgba(13, 20, 33, .1);--color-background: white;--color-text-primary: black;--color-text-secondary: #707684;--color-border-icon: rgba(201, 201, 204, .48);--color-border-icon-disabled: #EFF0F1;--color-text-icon-active: #388AE5;--color-background-icon-active: rgba(56, 138, 229, .1);--color-background-item-focus: rgba(34, 186, 255, .08);--color-shadow-item-focus: rgba(7, 161, 227, .08);--color-background-item-hover: #F8F8F8;--color-background-item-confirm: #E24A4A;--color-background-item-confirm-hover: #CE4343;--popover-top: calc(100% + var(--offset-from-target));--popover-left: 0;--nested-popover-overlap: 4px;--icon-size: 20px;--item-padding: 3px;--item-height: calc(var(--icon-size) + 2 * var(--item-padding))}.ce-popover__container{min-width:var(--width);width:var(--width);max-height:var(--max-height);border-radius:var(--border-radius);overflow:hidden;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-box-shadow:0px 3px 15px -3px var(--color-shadow);box-shadow:0 3px 15px -3px var(--color-shadow);position:absolute;left:var(--popover-left);top:var(--popover-top);background:var(--color-background);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;z-index:4;opacity:0;max-height:0;pointer-events:none;padding:0;border:none}.ce-popover--opened>.ce-popover__container{opacity:1;padding:var(--padding);max-height:var(--max-height);pointer-events:auto;-webkit-animation:panelShowing .1s ease;animation:panelShowing .1s ease;border:1px solid var(--color-border)}@media (max-width: 650px){.ce-popover--opened>.ce-popover__container{-webkit-animation:panelShowingMobile .25s ease;animation:panelShowingMobile .25s ease}}.ce-popover--open-top .ce-popover__container{--popover-top: calc(-1 * (var(--offset-from-target) + var(--popover-height)))}.ce-popover--open-left .ce-popover__container{--popover-left: calc(-1 * var(--width) + 100%)}.ce-popover__items{overflow-y:auto;-ms-scroll-chaining:none;overscroll-behavior:contain}@media (max-width: 650px){.ce-popover__overlay{position:fixed;top:0;bottom:0;left:0;right:0;background:#1D202B;z-index:3;opacity:.5;-webkit-transition:opacity .12s ease-in;transition:opacity .12s ease-in;will-change:opacity;visibility:visible}}.ce-popover__overlay--hidden{display:none}@media (max-width: 650px){.ce-popover .ce-popover__container{--offset: 5px;position:fixed;max-width:none;min-width:calc(100% - var(--offset) * 2);left:var(--offset);right:var(--offset);bottom:calc(var(--offset) + env(safe-area-inset-bottom));top:auto;border-radius:10px}}.ce-popover__search{margin-bottom:5px}.ce-popover__nothing-found-message{color:#707684;display:none;cursor:default;padding:3px;font-size:14px;line-height:20px;font-weight:500;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.ce-popover__nothing-found-message--displayed{display:block}.ce-popover--nested .ce-popover__container{--popover-left: calc(var(--nesting-level) * (var(--width) - var(--nested-popover-overlap)));top:calc(var(--trigger-item-top) - var(--nested-popover-overlap));position:absolute}.ce-popover--open-top.ce-popover--nested .ce-popover__container{top:calc(var(--trigger-item-top) - var(--popover-height) + var(--item-height) + var(--offset-from-target) + var(--nested-popover-overlap))}.ce-popover--open-left .ce-popover--nested .ce-popover__container{--popover-left: calc(-1 * (var(--nesting-level) + 1) * var(--width) + 100%)}.ce-popover-item-separator{padding:4px 3px}.ce-popover-item-separator--hidden{display:none}.ce-popover-item-separator__line{height:1px;background:var(--color-border);width:100%}.ce-popover-item-html--hidden{display:none}.ce-popover-item{--border-radius: 6px;border-radius:var(--border-radius);display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:var(--item-padding);color:var(--color-text-primary);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;border:none;background:transparent}@media (max-width: 650px){.ce-popover-item{padding:4px}}.ce-popover-item:not(:last-of-type){margin-bottom:1px}.ce-popover-item__icon{width:26px;height:26px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.ce-popover-item__icon svg{width:20px;height:20px}@media (max-width: 650px){.ce-popover-item__icon{width:36px;height:36px;border-radius:8px}.ce-popover-item__icon svg{width:28px;height:28px}}.ce-popover-item__icon--tool{margin-right:4px}.ce-popover-item__title{font-size:14px;line-height:20px;font-weight:500;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;margin-right:auto}@media (max-width: 650px){.ce-popover-item__title{font-size:16px}}.ce-popover-item__secondary-title{color:var(--color-text-secondary);font-size:12px;white-space:nowrap;letter-spacing:-.1em;padding-right:5px;opacity:.6}@media (max-width: 650px){.ce-popover-item__secondary-title{display:none}}.ce-popover-item--active{background:var(--color-background-icon-active);color:var(--color-text-icon-active)}.ce-popover-item--disabled{color:var(--color-text-secondary);cursor:default;pointer-events:none}.ce-popover-item--focused:not(.ce-popover-item--no-focus){background:var(--color-background-item-focus)!important}.ce-popover-item--hidden{display:none}@media (hover: hover){.ce-popover-item:hover{cursor:pointer}.ce-popover-item:hover:not(.ce-popover-item--no-hover){background-color:var(--color-background-item-hover)}}.ce-popover-item--confirmation{background:var(--color-background-item-confirm)}.ce-popover-item--confirmation .ce-popover-item__title,.ce-popover-item--confirmation .ce-popover-item__icon{color:#fff}@media (hover: hover){.ce-popover-item--confirmation:not(.ce-popover-item--no-hover):hover{background:var(--color-background-item-confirm-hover)}}.ce-popover-item--confirmation:not(.ce-popover-item--no-focus).ce-popover-item--focused{background:var(--color-background-item-confirm-hover)!important}@-webkit-keyframes panelShowing{0%{opacity:0;-webkit-transform:translateY(-8px) scale(.9);transform:translateY(-8px) scale(.9)}70%{opacity:1;-webkit-transform:translateY(2px);transform:translateY(2px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes panelShowing{0%{opacity:0;-webkit-transform:translateY(-8px) scale(.9);transform:translateY(-8px) scale(.9)}70%{opacity:1;-webkit-transform:translateY(2px);transform:translateY(2px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@-webkit-keyframes panelShowingMobile{0%{opacity:0;-webkit-transform:translateY(14px) scale(.98);transform:translateY(14px) scale(.98)}70%{opacity:1;-webkit-transform:translateY(-4px);transform:translateY(-4px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}@keyframes panelShowingMobile{0%{opacity:0;-webkit-transform:translateY(14px) scale(.98);transform:translateY(14px) scale(.98)}70%{opacity:1;-webkit-transform:translateY(-4px);transform:translateY(-4px)}to{-webkit-transform:translateY(0);transform:translateY(0)}}.wobble{-webkit-animation-name:wobble;animation-name:wobble;-webkit-animation-duration:.4s;animation-duration:.4s}@-webkit-keyframes wobble{0%{-webkit-transform:translate3d(0,0,0);transform:translateZ(0)}15%{-webkit-transform:translate3d(-9%,0,0);transform:translate3d(-9%,0,0)}30%{-webkit-transform:translate3d(9%,0,0);transform:translate3d(9%,0,0)}45%{-webkit-transform:translate3d(-4%,0,0);transform:translate3d(-4%,0,0)}60%{-webkit-transform:translate3d(4%,0,0);transform:translate3d(4%,0,0)}75%{-webkit-transform:translate3d(-1%,0,0);transform:translate3d(-1%,0,0)}to{-webkit-transform:translate3d(0,0,0);transform:translateZ(0)}}@keyframes wobble{0%{-webkit-transform:translate3d(0,0,0);transform:translateZ(0)}15%{-webkit-transform:translate3d(-9%,0,0);transform:translate3d(-9%,0,0)}30%{-webkit-transform:translate3d(9%,0,0);transform:translate3d(9%,0,0)}45%{-webkit-transform:translate3d(-4%,0,0);transform:translate3d(-4%,0,0)}60%{-webkit-transform:translate3d(4%,0,0);transform:translate3d(4%,0,0)}75%{-webkit-transform:translate3d(-1%,0,0);transform:translate3d(-1%,0,0)}to{-webkit-transform:translate3d(0,0,0);transform:translateZ(0)}}.ce-popover-header{margin-bottom:8px;margin-top:4px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ce-popover-header__text{font-size:18px;font-weight:600}.ce-popover-header__back-button{border:0;background:transparent;width:36px;height:36px;color:var(--color-text-primary)}.ce-popover-header__back-button svg{display:block;width:28px;height:28px}.ce-popover--inline{--height: 38px;--height-mobile: 46px;--container-padding: 4px;position:relative}.ce-popover--inline .ce-popover__custom-content{margin-bottom:0}.ce-popover--inline .ce-popover__items{display:-webkit-box;display:-ms-flexbox;display:flex}.ce-popover--inline .ce-popover__container{-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;padding:var(--container-padding);height:var(--height);top:0;min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content;width:-webkit-max-content;width:-moz-max-content;width:max-content;-webkit-animation:none;animation:none}@media (max-width: 650px){.ce-popover--inline .ce-popover__container{height:var(--height-mobile);position:absolute}}.ce-popover--inline .ce-popover-item-separator{padding:0 4px}.ce-popover--inline .ce-popover-item-separator__line{height:100%;width:1px}.ce-popover--inline .ce-popover-item{border-radius:4px;padding:4px}.ce-popover--inline .ce-popover-item__icon--tool{-webkit-box-shadow:none;box-shadow:none;background:transparent;margin-right:0}.ce-popover--inline .ce-popover-item__icon{width:auto;width:initial;height:auto;height:initial}.ce-popover--inline .ce-popover-item__icon svg{width:20px;height:20px}@media (max-width: 650px){.ce-popover--inline .ce-popover-item__icon svg{width:28px;height:28px}}.ce-popover--inline .ce-popover-item:not(:last-of-type){margin-bottom:0;margin-bottom:initial}.ce-popover--inline .ce-popover-item-html{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.ce-popover--inline .ce-popover-item__icon--chevron-right{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.ce-popover--inline .ce-popover--nested-level-1 .ce-popover__container{--offset: 3px;left:0;top:calc(var(--height) + var(--offset))}@media (max-width: 650px){.ce-popover--inline .ce-popover--nested-level-1 .ce-popover__container{top:calc(var(--height-mobile) + var(--offset))}}.ce-popover--inline .ce-popover--nested .ce-popover__container{min-width:var(--width);width:var(--width);height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;padding:6px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.ce-popover--inline .ce-popover--nested .ce-popover__items{display:block;width:100%}.ce-popover--inline .ce-popover--nested .ce-popover-item{border-radius:6px;padding:3px}@media (max-width: 650px){.ce-popover--inline .ce-popover--nested .ce-popover-item{padding:4px}}.ce-popover--inline .ce-popover--nested .ce-popover-item__icon--tool{margin-right:4px}.ce-popover--inline .ce-popover--nested .ce-popover-item__icon{width:26px;height:26px}.ce-popover--inline .ce-popover--nested .ce-popover-item-separator{padding:4px 3px}.ce-popover--inline .ce-popover--nested .ce-popover-item-separator__line{width:100%;height:1px}.codex-editor [data-placeholder]:empty:before,.codex-editor [data-placeholder][data-empty=true]:before{pointer-events:none;color:#707684;cursor:text;content:attr(data-placeholder)}.codex-editor [data-placeholder-active]:empty:before,.codex-editor [data-placeholder-active][data-empty=true]:before{pointer-events:none;color:#707684;cursor:text}.codex-editor [data-placeholder-active]:empty:focus:before,.codex-editor [data-placeholder-active][data-empty=true]:focus:before{content:attr(data-placeholder-active)}\n';
    const Ur = {
        BlocksAPI: class extends kt {
            constructor() {
                (super(...arguments),
                    (this.insert = (
                        e = this.config.defaultBlock,
                        t = {},
                        n = {},
                        o,
                        i,
                        r,
                        s,
                    ) =>
                        new yt(
                            this.Editor.BlockManager.insert({
                                id: s,
                                tool: e,
                                data: t,
                                index: o,
                                needToFocus: i,
                                replace: r,
                            }),
                        )),
                    (this.composeBlockData = async (e) => {
                        const t = this.Editor.Tools.blockTools.get(e);
                        return new $t({
                            tool: t,
                            api: this.Editor.API,
                            readOnly: !0,
                            data: {},
                            tunesData: {},
                        }).data;
                    }),
                    (this.update = async (e, t, n) => {
                        const { BlockManager: o } = this.Editor,
                            i = o.getBlockById(e);
                        if (void 0 === i)
                            throw new Error(`Block with id "${e}" not found`);
                        return new yt(await o.update(i, t, n));
                    }),
                    (this.convert = async (e, t, n) => {
                        var o, i;
                        const { BlockManager: r, Tools: s } = this.Editor,
                            a = r.getBlockById(e);
                        if (!a)
                            throw new Error(`Block with id "${e}" not found`);
                        const l = s.blockTools.get(a.name),
                            c = s.blockTools.get(t);
                        if (!c)
                            throw new Error(
                                `Block Tool with type "${t}" not found`,
                            );
                        const d =
                                void 0 !==
                                (null ==
                                (o = null == l ? void 0 : l.conversionConfig)
                                    ? void 0
                                    : o.export),
                            h =
                                void 0 !==
                                (null == (i = c.conversionConfig)
                                    ? void 0
                                    : i.import);
                        if (d && h) {
                            return new yt(await r.convert(a, t, n));
                        }
                        {
                            const e = [!d && it(a.name), !h && it(t)]
                                .filter(Boolean)
                                .join(' and ');
                            throw new Error(
                                `Conversion from "${a.name}" to "${t}" is not possible. ${e} tool(s) should provide a "conversionConfig"`,
                            );
                        }
                    }),
                    (this.insertMany = (
                        e,
                        t = this.Editor.BlockManager.blocks.length - 1,
                    ) => {
                        this.validateIndex(t);
                        const n = e.map(({ id: e, type: t, data: n }) =>
                            this.Editor.BlockManager.composeBlock({
                                id: e,
                                tool: t || this.config.defaultBlock,
                                data: n,
                            }),
                        );
                        return (
                            this.Editor.BlockManager.insertMany(n, t),
                            n.map((e) => new yt(e))
                        );
                    }));
            }
            get methods() {
                return {
                    clear: () => this.clear(),
                    render: (e) => this.render(e),
                    renderFromHTML: (e) => this.renderFromHTML(e),
                    delete: (e) => this.delete(e),
                    swap: (e, t) => this.swap(e, t),
                    move: (e, t) => this.move(e, t),
                    getBlockByIndex: (e) => this.getBlockByIndex(e),
                    getById: (e) => this.getById(e),
                    getCurrentBlockIndex: () => this.getCurrentBlockIndex(),
                    getBlockIndex: (e) => this.getBlockIndex(e),
                    getBlocksCount: () => this.getBlocksCount(),
                    getBlockByElement: (e) => this.getBlockByElement(e),
                    stretchBlock: (e, t = !0) => this.stretchBlock(e, t),
                    insertNewBlock: () => this.insertNewBlock(),
                    insert: this.insert,
                    insertMany: this.insertMany,
                    update: this.update,
                    composeBlockData: this.composeBlockData,
                    convert: this.convert,
                };
            }
            getBlocksCount() {
                return this.Editor.BlockManager.blocks.length;
            }
            getCurrentBlockIndex() {
                return this.Editor.BlockManager.currentBlockIndex;
            }
            getBlockIndex(e) {
                const t = this.Editor.BlockManager.getBlockById(e);
                if (t) return this.Editor.BlockManager.getBlockIndex(t);
                We('There is no block with id `' + e + '`', 'warn');
            }
            getBlockByIndex(e) {
                const t = this.Editor.BlockManager.getBlockByIndex(e);
                if (void 0 !== t) return new yt(t);
                We('There is no block at index `' + e + '`', 'warn');
            }
            getById(e) {
                const t = this.Editor.BlockManager.getBlockById(e);
                return void 0 === t
                    ? (We('There is no block with id `' + e + '`', 'warn'),
                      null)
                    : new yt(t);
            }
            getBlockByElement(e) {
                const t = this.Editor.BlockManager.getBlock(e);
                if (void 0 !== t) return new yt(t);
                We(
                    'There is no block corresponding to element `' + e + '`',
                    'warn',
                );
            }
            swap(e, t) {
                (Ue(
                    '`blocks.swap()` method is deprecated and will be removed in the next major release. Use `block.move()` method instead',
                    'info',
                ),
                    this.Editor.BlockManager.swap(e, t));
            }
            move(e, t) {
                this.Editor.BlockManager.move(e, t);
            }
            delete(e = this.Editor.BlockManager.currentBlockIndex) {
                try {
                    const t = this.Editor.BlockManager.getBlockByIndex(e);
                    this.Editor.BlockManager.removeBlock(t);
                } catch (e) {
                    return void We(e, 'warn');
                }
                (0 === this.Editor.BlockManager.blocks.length &&
                    this.Editor.BlockManager.insert(),
                    this.Editor.BlockManager.currentBlock &&
                        this.Editor.Caret.setToBlock(
                            this.Editor.BlockManager.currentBlock,
                            this.Editor.Caret.positions.END,
                        ),
                    this.Editor.Toolbar.close());
            }
            async clear() {
                (await this.Editor.BlockManager.clear(!0),
                    this.Editor.InlineToolbar.close());
            }
            async render(e) {
                if (void 0 === e || void 0 === e.blocks)
                    throw new Error(
                        'Incorrect data passed to the render() method',
                    );
                (this.Editor.ModificationsObserver.disable(),
                    await this.Editor.BlockManager.clear(),
                    await this.Editor.Renderer.render(e.blocks),
                    this.Editor.ModificationsObserver.enable());
            }
            renderFromHTML(e) {
                return (
                    this.Editor.BlockManager.clear(),
                    this.Editor.Paste.processText(e, !0)
                );
            }
            stretchBlock(e, t = !0) {
                lt(!0, 'blocks.stretchBlock()', 'BlockAPI');
                const n = this.Editor.BlockManager.getBlockByIndex(e);
                n && (n.stretched = t);
            }
            insertNewBlock() {
                (Ue(
                    'Method blocks.insertNewBlock() is deprecated and it will be removed in the next major release. Use blocks.insert() instead.',
                    'warn',
                ),
                    this.insert());
            }
            validateIndex(e) {
                if ('number' != typeof e)
                    throw new Error('Index should be a number');
                if (e < 0)
                    throw new Error(
                        'Index should be greater than or equal to 0',
                    );
                if (null === e)
                    throw new Error(
                        'Index should be greater than or equal to 0',
                    );
            }
        },
        CaretAPI: class extends kt {
            constructor() {
                (super(...arguments),
                    (this.setToFirstBlock = (
                        e = this.Editor.Caret.positions.DEFAULT,
                        t = 0,
                    ) =>
                        !!this.Editor.BlockManager.firstBlock &&
                        (this.Editor.Caret.setToBlock(
                            this.Editor.BlockManager.firstBlock,
                            e,
                            t,
                        ),
                        !0)),
                    (this.setToLastBlock = (
                        e = this.Editor.Caret.positions.DEFAULT,
                        t = 0,
                    ) =>
                        !!this.Editor.BlockManager.lastBlock &&
                        (this.Editor.Caret.setToBlock(
                            this.Editor.BlockManager.lastBlock,
                            e,
                            t,
                        ),
                        !0)),
                    (this.setToPreviousBlock = (
                        e = this.Editor.Caret.positions.DEFAULT,
                        t = 0,
                    ) =>
                        !!this.Editor.BlockManager.previousBlock &&
                        (this.Editor.Caret.setToBlock(
                            this.Editor.BlockManager.previousBlock,
                            e,
                            t,
                        ),
                        !0)),
                    (this.setToNextBlock = (
                        e = this.Editor.Caret.positions.DEFAULT,
                        t = 0,
                    ) =>
                        !!this.Editor.BlockManager.nextBlock &&
                        (this.Editor.Caret.setToBlock(
                            this.Editor.BlockManager.nextBlock,
                            e,
                            t,
                        ),
                        !0)),
                    (this.setToBlock = (
                        e,
                        t = this.Editor.Caret.positions.DEFAULT,
                        n = 0,
                    ) => {
                        const o = (function (e, t) {
                            return 'number' == typeof e
                                ? t.BlockManager.getBlockByIndex(e)
                                : 'string' == typeof e
                                  ? t.BlockManager.getBlockById(e)
                                  : t.BlockManager.getBlockById(e.id);
                        })(e, this.Editor);
                        return (
                            void 0 !== o &&
                            (this.Editor.Caret.setToBlock(o, t, n), !0)
                        );
                    }),
                    (this.focus = (e = !1) =>
                        e
                            ? this.setToLastBlock(
                                  this.Editor.Caret.positions.END,
                              )
                            : this.setToFirstBlock(
                                  this.Editor.Caret.positions.START,
                              )));
            }
            get methods() {
                return {
                    setToFirstBlock: this.setToFirstBlock,
                    setToLastBlock: this.setToLastBlock,
                    setToPreviousBlock: this.setToPreviousBlock,
                    setToNextBlock: this.setToNextBlock,
                    setToBlock: this.setToBlock,
                    focus: this.focus,
                };
            }
        },
        EventsAPI: class extends kt {
            get methods() {
                return {
                    emit: (e, t) => this.emit(e, t),
                    off: (e, t) => this.off(e, t),
                    on: (e, t) => this.on(e, t),
                };
            }
            on(e, t) {
                this.eventsDispatcher.on(e, t);
            }
            emit(e, t) {
                this.eventsDispatcher.emit(e, t);
            }
            off(e, t) {
                this.eventsDispatcher.off(e, t);
            }
        },
        I18nAPI: Rt,
        API: class extends kt {
            get methods() {
                return {
                    blocks: this.Editor.BlocksAPI.methods,
                    caret: this.Editor.CaretAPI.methods,
                    tools: this.Editor.ToolsAPI.methods,
                    events: this.Editor.EventsAPI.methods,
                    listeners: this.Editor.ListenersAPI.methods,
                    notifier: this.Editor.NotifierAPI.methods,
                    sanitizer: this.Editor.SanitizerAPI.methods,
                    saver: this.Editor.SaverAPI.methods,
                    selection: this.Editor.SelectionAPI.methods,
                    styles: this.Editor.StylesAPI.classes,
                    toolbar: this.Editor.ToolbarAPI.methods,
                    inlineToolbar: this.Editor.InlineToolbarAPI.methods,
                    tooltip: this.Editor.TooltipAPI.methods,
                    i18n: this.Editor.I18nAPI.methods,
                    readOnly: this.Editor.ReadOnlyAPI.methods,
                    ui: this.Editor.UiAPI.methods,
                };
            }
            getMethodsForTool(e, t) {
                return Object.assign(this.methods, {
                    i18n: this.Editor.I18nAPI.getMethodsForTool(e, t),
                });
            }
        },
        InlineToolbarAPI: class extends kt {
            get methods() {
                return { close: () => this.close(), open: () => this.open() };
            }
            open() {
                this.Editor.InlineToolbar.tryToShow();
            }
            close() {
                this.Editor.InlineToolbar.close();
            }
        },
        ListenersAPI: class extends kt {
            get methods() {
                return {
                    on: (e, t, n, o) => this.on(e, t, n, o),
                    off: (e, t, n, o) => this.off(e, t, n, o),
                    offById: (e) => this.offById(e),
                };
            }
            on(e, t, n, o) {
                return this.listeners.on(e, t, n, o);
            }
            off(e, t, n, o) {
                this.listeners.off(e, t, n, o);
            }
            offById(e) {
                this.listeners.offById(e);
            }
        },
        NotifierAPI: class extends kt {
            constructor({ config: e, eventsDispatcher: t }) {
                (super({ config: e, eventsDispatcher: t }),
                    (this.notifier = new Ft()));
            }
            get methods() {
                return { show: (e) => this.show(e) };
            }
            show(e) {
                return this.notifier.show(e);
            }
        },
        ReadOnlyAPI: class extends kt {
            get methods() {
                const e = () => this.isEnabled;
                return {
                    toggle: (e) => this.toggle(e),
                    get isEnabled() {
                        return e();
                    },
                };
            }
            toggle(e) {
                return this.Editor.ReadOnly.toggle(e);
            }
            get isEnabled() {
                return this.Editor.ReadOnly.isEnabled;
            }
        },
        SanitizerAPI: class extends kt {
            get methods() {
                return { clean: (e, t) => this.clean(e, t) };
            }
            clean(e, t) {
                return Wt(e, t);
            }
        },
        SaverAPI: class extends kt {
            get methods() {
                return { save: () => this.save() };
            }
            save() {
                const e = "Editor's content can not be saved in read-only mode";
                return this.Editor.ReadOnly.isEnabled
                    ? (We(e, 'warn'), Promise.reject(new Error(e)))
                    : this.Editor.Saver.save();
            }
        },
        SelectionAPI: class extends kt {
            constructor() {
                (super(...arguments), (this.selectionUtils = new xt()));
            }
            get methods() {
                return {
                    findParentTag: (e, t) => this.findParentTag(e, t),
                    expandToTag: (e) => this.expandToTag(e),
                    save: () => this.selectionUtils.save(),
                    restore: () => this.selectionUtils.restore(),
                    setFakeBackground: () =>
                        this.selectionUtils.setFakeBackground(),
                    removeFakeBackground: () =>
                        this.selectionUtils.removeFakeBackground(),
                };
            }
            findParentTag(e, t) {
                return this.selectionUtils.findParentTag(e, t);
            }
            expandToTag(e) {
                this.selectionUtils.expandToTag(e);
            }
        },
        ToolsAPI: class extends kt {
            get methods() {
                return {
                    getBlockTools: () =>
                        Array.from(this.Editor.Tools.blockTools.values()),
                };
            }
        },
        StylesAPI: class extends kt {
            get classes() {
                return {
                    block: 'cdx-block',
                    inlineToolButton: 'ce-inline-tool',
                    inlineToolButtonActive: 'ce-inline-tool--active',
                    input: 'cdx-input',
                    loader: 'cdx-loader',
                    button: 'cdx-button',
                    settingsButton: 'cdx-settings-button',
                    settingsButtonActive: 'cdx-settings-button--active',
                };
            }
        },
        ToolbarAPI: class extends kt {
            get methods() {
                return {
                    close: () => this.close(),
                    open: () => this.open(),
                    toggleBlockSettings: (e) => this.toggleBlockSettings(e),
                    toggleToolbox: (e) => this.toggleToolbox(e),
                };
            }
            open() {
                this.Editor.Toolbar.moveAndOpen();
            }
            close() {
                this.Editor.Toolbar.close();
            }
            toggleBlockSettings(e) {
                -1 !== this.Editor.BlockManager.currentBlockIndex
                    ? (e ?? !this.Editor.BlockSettings.opened)
                        ? (this.Editor.Toolbar.moveAndOpen(),
                          this.Editor.BlockSettings.open())
                        : this.Editor.BlockSettings.close()
                    : We(
                          "Could't toggle the Toolbar because there is no block selected ",
                          'warn',
                      );
            }
            toggleToolbox(e) {
                -1 !== this.Editor.BlockManager.currentBlockIndex
                    ? (e ?? !this.Editor.Toolbar.toolbox.opened)
                        ? (this.Editor.Toolbar.moveAndOpen(),
                          this.Editor.Toolbar.toolbox.open())
                        : this.Editor.Toolbar.toolbox.close()
                    : We(
                          "Could't toggle the Toolbox because there is no block selected ",
                          'warn',
                      );
            }
        },
        TooltipAPI: class extends kt {
            constructor({ config: e, eventsDispatcher: t }) {
                super({ config: e, eventsDispatcher: t });
            }
            get methods() {
                return {
                    show: (e, t, n) => this.show(e, t, n),
                    hide: () => this.hide(),
                    onHover: (e, t, n) => this.onHover(e, t, n),
                };
            }
            show(e, t, n) {
                !(function (e, t, n) {
                    (Xt(), null == Yt || Yt.show(e, t, n));
                })(e, t, n);
            }
            hide() {
                Zt();
            }
            onHover(e, t, n) {
                Jt(e, t, n);
            }
        },
        UiAPI: class extends kt {
            get methods() {
                return { nodes: this.editorNodes };
            }
            get editorNodes() {
                return {
                    wrapper: this.Editor.UI.nodes.wrapper,
                    redactor: this.Editor.UI.nodes.redactor,
                };
            }
        },
        BlockSettings: class extends kt {
            constructor() {
                (super(...arguments),
                    (this.opened = !1),
                    (this.selection = new xt()),
                    (this.popover = null),
                    (this.close = () => {
                        this.opened &&
                            ((this.opened = !1),
                            xt.isAtEditor || this.selection.restore(),
                            this.selection.clearSaved(),
                            !this.Editor.CrossBlockSelection
                                .isCrossBlockSelectionStarted &&
                                this.Editor.BlockManager.currentBlock &&
                                this.Editor.BlockSelection.unselectBlock(
                                    this.Editor.BlockManager.currentBlock,
                                ),
                            this.eventsDispatcher.emit(this.events.closed),
                            this.popover &&
                                (this.popover.off(
                                    bn.Closed,
                                    this.onPopoverClose,
                                ),
                                this.popover.destroy(),
                                this.popover.getElement().remove(),
                                (this.popover = null)));
                    }),
                    (this.onPopoverClose = () => {
                        this.close();
                    }));
            }
            get events() {
                return {
                    opened: 'block-settings-opened',
                    closed: 'block-settings-closed',
                };
            }
            get CSS() {
                return { settings: 'ce-settings' };
            }
            get flipper() {
                var e;
                if (null !== this.popover)
                    return 'flipper' in this.popover
                        ? null == (e = this.popover)
                            ? void 0
                            : e.flipper
                        : void 0;
            }
            make() {
                ((this.nodes.wrapper = ut.make('div', [this.CSS.settings])),
                    this.nodes.wrapper.setAttribute('data-cy', 'block-tunes'),
                    this.eventsDispatcher.on(_t, this.close));
            }
            destroy() {
                (this.removeAllNodes(),
                    this.listeners.destroy(),
                    this.eventsDispatcher.off(_t, this.close));
            }
            async open(e = this.Editor.BlockManager.currentBlock) {
                var t;
                ((this.opened = !0),
                    this.selection.save(),
                    this.Editor.BlockSelection.selectBlock(e),
                    this.Editor.BlockSelection.clearCache());
                const { toolTunes: n, commonTunes: o } = e.getTunes();
                this.eventsDispatcher.emit(this.events.opened);
                const i = dt() ? Fn : An;
                ((this.popover = new i({
                    searchable: !0,
                    items: await this.getTunesItems(e, o, n),
                    scopeElement: this.Editor.API.methods.ui.nodes.redactor,
                    messages: {
                        nothingFound: mt.ui(Qt.ui.popover, 'Nothing found'),
                        search: mt.ui(Qt.ui.popover, 'Filter'),
                    },
                })),
                    this.popover.on(bn.Closed, this.onPopoverClose),
                    null == (t = this.nodes.wrapper) ||
                        t.append(this.popover.getElement()),
                    this.popover.show());
            }
            getElement() {
                return this.nodes.wrapper;
            }
            async getTunesItems(e, t, n) {
                const o = [];
                void 0 !== n &&
                    n.length > 0 &&
                    (o.push(...n), o.push({ type: Mt.Separator }));
                const i = Array.from(this.Editor.Tools.blockTools.values()),
                    r = (await Lt(e, i)).reduce(
                        (t, n) => (
                            n.toolbox.forEach((o) => {
                                t.push({
                                    icon: o.icon,
                                    title: mt.t(Qt.toolNames, o.title),
                                    name: n.name,
                                    closeOnActivate: !0,
                                    onActivate: async () => {
                                        const {
                                                BlockManager: t,
                                                Caret: i,
                                                Toolbar: r,
                                            } = this.Editor,
                                            s = await t.convert(
                                                e,
                                                n.name,
                                                o.data,
                                            );
                                        (r.close(),
                                            i.setToBlock(s, i.positions.END));
                                    },
                                });
                            }),
                            t
                        ),
                        [],
                    );
                return (
                    r.length > 0 &&
                        (o.push({
                            icon: rn,
                            name: 'convert-to',
                            title: mt.ui(Qt.ui.popover, 'Convert to'),
                            children: { searchable: !0, items: r },
                        }),
                        o.push({ type: Mt.Separator })),
                    o.push(...t),
                    o.map((e) => this.resolveTuneAliases(e))
                );
            }
            resolveTuneAliases(e) {
                if (e.type === Mt.Separator || e.type === Mt.Html) return e;
                const t = (function (e, t) {
                    const n = {};
                    return (
                        Object.keys(e).forEach((o) => {
                            const i = t[o];
                            void 0 !== i ? (n[i] = e[o]) : (n[o] = e[o]);
                        }),
                        n
                    );
                })(e, { label: 'title' });
                return (
                    e.confirmation &&
                        (t.confirmation = this.resolveTuneAliases(
                            e.confirmation,
                        )),
                    t
                );
            }
        },
        Toolbar: class extends kt {
            constructor({ config: e, eventsDispatcher: t }) {
                (super({ config: e, eventsDispatcher: t }),
                    (this.toolboxInstance = null));
            }
            get CSS() {
                return {
                    toolbar: 'ce-toolbar',
                    content: 'ce-toolbar__content',
                    actions: 'ce-toolbar__actions',
                    actionsOpened: 'ce-toolbar__actions--opened',
                    toolbarOpened: 'ce-toolbar--opened',
                    openedToolboxHolderModifier: 'codex-editor--toolbox-opened',
                    plusButton: 'ce-toolbar__plus',
                    plusButtonShortcut: 'ce-toolbar__plus-shortcut',
                    settingsToggler: 'ce-toolbar__settings-btn',
                    settingsTogglerHidden: 'ce-toolbar__settings-btn--hidden',
                };
            }
            get opened() {
                return this.nodes.wrapper.classList.contains(
                    this.CSS.toolbarOpened,
                );
            }
            get toolbox() {
                var e;
                return {
                    opened:
                        null == (e = this.toolboxInstance) ? void 0 : e.opened,
                    close: () => {
                        var e;
                        null == (e = this.toolboxInstance) || e.close();
                    },
                    open: () => {
                        null !== this.toolboxInstance
                            ? ((this.Editor.BlockManager.currentBlock =
                                  this.hoveredBlock),
                              this.toolboxInstance.open())
                            : Ue(
                                  'toolbox.open() called before initialization is finished',
                                  'warn',
                              );
                    },
                    toggle: () => {
                        null !== this.toolboxInstance
                            ? this.toolboxInstance.toggle()
                            : Ue(
                                  'toolbox.toggle() called before initialization is finished',
                                  'warn',
                              );
                    },
                    hasFocus: () => {
                        var e;
                        return null == (e = this.toolboxInstance)
                            ? void 0
                            : e.hasFocus();
                    },
                };
            }
            get blockActions() {
                return {
                    hide: () => {
                        this.nodes.actions.classList.remove(
                            this.CSS.actionsOpened,
                        );
                    },
                    show: () => {
                        this.nodes.actions.classList.add(
                            this.CSS.actionsOpened,
                        );
                    },
                };
            }
            get blockTunesToggler() {
                return {
                    hide: () =>
                        this.nodes.settingsToggler.classList.add(
                            this.CSS.settingsTogglerHidden,
                        ),
                    show: () =>
                        this.nodes.settingsToggler.classList.remove(
                            this.CSS.settingsTogglerHidden,
                        ),
                };
            }
            toggleReadOnly(e) {
                e
                    ? (this.destroy(),
                      this.Editor.BlockSettings.destroy(),
                      this.disableModuleBindings())
                    : window.requestIdleCallback(
                          () => {
                              (this.drawUI(), this.enableModuleBindings());
                          },
                          { timeout: 2e3 },
                      );
            }
            moveAndOpen(e = this.Editor.BlockManager.currentBlock) {
                if (null === this.toolboxInstance)
                    return void Ue(
                        "Can't open Toolbar since Editor initialization is not finished yet",
                        'warn',
                    );
                if (
                    (this.toolboxInstance.opened &&
                        this.toolboxInstance.close(),
                    this.Editor.BlockSettings.opened &&
                        this.Editor.BlockSettings.close(),
                    !e)
                )
                    return;
                this.hoveredBlock = e;
                const t = e.holder,
                    { isMobile: n } = this.Editor.UI;
                let o;
                const i = e.firstInput,
                    r = t.getBoundingClientRect(),
                    s = void 0 !== i ? i.getBoundingClientRect() : null,
                    a = null !== s ? s.top - r.top : null,
                    l = null !== a ? a > 20 : void 0;
                if (n) o = t.offsetTop + t.offsetHeight;
                else if (void 0 === i || l) {
                    const n = parseInt(
                        window.getComputedStyle(e.pluginsContent).paddingTop,
                    );
                    o = t.offsetTop + n;
                } else {
                    const e = (function (e) {
                            const t = window.getComputedStyle(e),
                                n = parseFloat(t.fontSize),
                                o = parseFloat(t.lineHeight) || 1.2 * n,
                                i = parseFloat(t.paddingTop),
                                r = parseFloat(t.borderTopWidth);
                            return (
                                parseFloat(t.marginTop) +
                                r +
                                i +
                                (o - n) / 2 +
                                0.8 * n
                            );
                        })(i),
                        n = parseInt(
                            window.getComputedStyle(this.nodes.plusButton)
                                .height,
                            10,
                        ),
                        r = 8;
                    o = t.offsetTop + e - n + r + a;
                }
                ((this.nodes.wrapper.style.top = `${Math.floor(o)}px`),
                    1 === this.Editor.BlockManager.blocks.length && e.isEmpty
                        ? this.blockTunesToggler.hide()
                        : this.blockTunesToggler.show(),
                    this.open());
            }
            close() {
                var e, t;
                this.Editor.ReadOnly.isEnabled ||
                    (null == (e = this.nodes.wrapper) ||
                        e.classList.remove(this.CSS.toolbarOpened),
                    this.blockActions.hide(),
                    null == (t = this.toolboxInstance) || t.close(),
                    this.Editor.BlockSettings.close(),
                    this.reset());
            }
            reset() {
                this.nodes.wrapper.style.top = 'unset';
            }
            open(e = !0) {
                (this.nodes.wrapper.classList.add(this.CSS.toolbarOpened),
                    e ? this.blockActions.show() : this.blockActions.hide());
            }
            async make() {
                ((this.nodes.wrapper = ut.make('div', this.CSS.toolbar)),
                    ['content', 'actions'].forEach((e) => {
                        this.nodes[e] = ut.make('div', this.CSS[e]);
                    }),
                    ut.append(this.nodes.wrapper, this.nodes.content),
                    ut.append(this.nodes.content, this.nodes.actions),
                    (this.nodes.plusButton = ut.make(
                        'div',
                        this.CSS.plusButton,
                        {
                            innerHTML:
                                '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 7V12M12 17V12M17 12H12M12 12H7"/></svg>',
                        },
                    )),
                    ut.append(this.nodes.actions, this.nodes.plusButton),
                    this.readOnlyMutableListeners.on(
                        this.nodes.plusButton,
                        'click',
                        () => {
                            (Zt(!0), this.plusButtonClicked());
                        },
                        !1,
                    ));
                const e = ut.make('div');
                (e.appendChild(
                    document.createTextNode(
                        mt.ui(Qt.ui.toolbar.toolbox, 'Add'),
                    ),
                ),
                    e.appendChild(
                        ut.make('div', this.CSS.plusButtonShortcut, {
                            textContent: '/',
                        }),
                    ),
                    Jt(this.nodes.plusButton, e, { hidingDelay: 400 }),
                    (this.nodes.settingsToggler = ut.make(
                        'span',
                        this.CSS.settingsToggler,
                        {
                            innerHTML:
                                '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.40999 7.29999H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 7.29999H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.30999 12H9.3"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 12H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.40999 16.7H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 16.7H14.59"/></svg>',
                        },
                    )),
                    ut.append(this.nodes.actions, this.nodes.settingsToggler));
                const t = ut.make('div'),
                    n = ut.text(
                        mt.ui(Qt.ui.blockTunes.toggler, 'Click to tune'),
                    ),
                    o = await (async function (e, t) {
                        const n = navigator.keyboard;
                        if (!n) return t;
                        try {
                            return (await n.getLayoutMap()).get(e) || t;
                        } catch (e) {
                            return (console.error(e), t);
                        }
                    })('Slash', '/');
                (t.appendChild(n),
                    t.appendChild(
                        ut.make('div', this.CSS.plusButtonShortcut, {
                            textContent: st(`CMD + ${o}`),
                        }),
                    ),
                    Jt(this.nodes.settingsToggler, t, { hidingDelay: 400 }),
                    ut.append(this.nodes.actions, this.makeToolbox()),
                    ut.append(
                        this.nodes.actions,
                        this.Editor.BlockSettings.getElement(),
                    ),
                    ut.append(
                        this.Editor.UI.nodes.wrapper,
                        this.nodes.wrapper,
                    ));
            }
            makeToolbox() {
                return (
                    (this.toolboxInstance = new Yn({
                        api: this.Editor.API.methods,
                        tools: this.Editor.Tools.blockTools,
                        i18nLabels: {
                            filter: mt.ui(Qt.ui.popover, 'Filter'),
                            nothingFound: mt.ui(Qt.ui.popover, 'Nothing found'),
                        },
                    })),
                    this.toolboxInstance.on(Gn.Opened, () => {
                        this.Editor.UI.nodes.wrapper.classList.add(
                            this.CSS.openedToolboxHolderModifier,
                        );
                    }),
                    this.toolboxInstance.on(Gn.Closed, () => {
                        this.Editor.UI.nodes.wrapper.classList.remove(
                            this.CSS.openedToolboxHolderModifier,
                        );
                    }),
                    this.toolboxInstance.on(Gn.BlockAdded, ({ block: e }) => {
                        const { BlockManager: t, Caret: n } = this.Editor,
                            o = t.getBlockById(e.id);
                        0 === o.inputs.length &&
                            (o === t.lastBlock
                                ? (t.insertAtEnd(), n.setToBlock(t.lastBlock))
                                : n.setToBlock(t.nextBlock));
                    }),
                    this.toolboxInstance.getElement()
                );
            }
            plusButtonClicked() {
                var e;
                ((this.Editor.BlockManager.currentBlock = this.hoveredBlock),
                    null == (e = this.toolboxInstance) || e.toggle());
            }
            enableModuleBindings() {
                (this.readOnlyMutableListeners.on(
                    this.nodes.settingsToggler,
                    'mousedown',
                    (e) => {
                        var t;
                        (e.stopPropagation(),
                            this.settingsTogglerClicked(),
                            null != (t = this.toolboxInstance) &&
                                t.opened &&
                                this.toolboxInstance.close(),
                            Zt(!0));
                    },
                    !0,
                ),
                    dt() ||
                        this.eventsDispatcher.on(Xn, (e) => {
                            var t;
                            this.Editor.BlockSettings.opened ||
                                (null != (t = this.toolboxInstance) &&
                                    t.opened) ||
                                this.moveAndOpen(e.block);
                        }));
            }
            disableModuleBindings() {
                this.readOnlyMutableListeners.clearAll();
            }
            settingsTogglerClicked() {
                ((this.Editor.BlockManager.currentBlock = this.hoveredBlock),
                    this.Editor.BlockSettings.opened
                        ? this.Editor.BlockSettings.close()
                        : this.Editor.BlockSettings.open(this.hoveredBlock));
            }
            drawUI() {
                (this.Editor.BlockSettings.make(), this.make());
            }
            destroy() {
                (this.removeAllNodes(),
                    this.toolboxInstance && this.toolboxInstance.destroy());
            }
        },
        InlineToolbar: class extends kt {
            constructor({ config: e, eventsDispatcher: t }) {
                (super({ config: e, eventsDispatcher: t }),
                    (this.CSS = { inlineToolbar: 'ce-inline-toolbar' }),
                    (this.opened = !1),
                    (this.popover = null),
                    (this.toolbarVerticalMargin = dt() ? 20 : 6),
                    (this.tools = new Map()),
                    window.requestIdleCallback(
                        () => {
                            this.make();
                        },
                        { timeout: 2e3 },
                    ));
            }
            async tryToShow(e = !1) {
                (e && this.close(),
                    this.allowedToShow() &&
                        (await this.open(), this.Editor.Toolbar.close()));
            }
            close() {
                var e, t;
                if (this.opened) {
                    for (const [e, t] of this.tools) {
                        const n = this.getToolShortcut(e.name);
                        (void 0 !== n &&
                            Un.remove(this.Editor.UI.nodes.redactor, n),
                            Ve(t.clear) && t.clear());
                    }
                    ((this.tools = new Map()),
                        this.reset(),
                        (this.opened = !1),
                        null == (e = this.popover) || e.hide(),
                        null == (t = this.popover) || t.destroy(),
                        (this.popover = null));
                }
            }
            containsNode(e) {
                return (
                    void 0 !== this.nodes.wrapper &&
                    this.nodes.wrapper.contains(e)
                );
            }
            destroy() {
                var e;
                (this.removeAllNodes(),
                    null == (e = this.popover) || e.destroy(),
                    (this.popover = null));
            }
            make() {
                ((this.nodes.wrapper = ut.make('div', [
                    this.CSS.inlineToolbar,
                    ...(this.isRtl ? [this.Editor.UI.CSS.editorRtlFix] : []),
                ])),
                    this.nodes.wrapper.setAttribute(
                        'data-cy',
                        'inline-toolbar',
                    ),
                    ut.append(
                        this.Editor.UI.nodes.wrapper,
                        this.nodes.wrapper,
                    ));
            }
            async open() {
                var e;
                if (this.opened) return;
                ((this.opened = !0),
                    null !== this.popover && this.popover.destroy(),
                    this.createToolsInstances());
                const t = await this.getPopoverItems();
                ((this.popover = new Pn({
                    items: t,
                    scopeElement: this.Editor.API.methods.ui.nodes.redactor,
                    messages: {
                        nothingFound: mt.ui(Qt.ui.popover, 'Nothing found'),
                        search: mt.ui(Qt.ui.popover, 'Filter'),
                    },
                })),
                    this.move(this.popover.size.width),
                    null == (e = this.nodes.wrapper) ||
                        e.append(this.popover.getElement()),
                    this.popover.show());
            }
            move(e) {
                const t = xt.rect,
                    n = this.Editor.UI.nodes.wrapper.getBoundingClientRect(),
                    o = {
                        x: t.x - n.x,
                        y: t.y + t.height - n.top + this.toolbarVerticalMargin,
                    };
                (o.x + e + n.x > this.Editor.UI.contentRect.right &&
                    (o.x = this.Editor.UI.contentRect.right - e - n.x),
                    (this.nodes.wrapper.style.left = Math.floor(o.x) + 'px'),
                    (this.nodes.wrapper.style.top = Math.floor(o.y) + 'px'));
            }
            reset() {
                ((this.nodes.wrapper.style.left = '0'),
                    (this.nodes.wrapper.style.top = '0'));
            }
            allowedToShow() {
                const e = xt.get(),
                    t = xt.text;
                if (!e || !e.anchorNode || e.isCollapsed || t.length < 1)
                    return !1;
                const n = ut.isElement(e.anchorNode)
                    ? e.anchorNode
                    : e.anchorNode.parentElement;
                if (
                    null === n ||
                    (null !== e && ['IMG', 'INPUT'].includes(n.tagName))
                )
                    return !1;
                const o = this.Editor.BlockManager.getBlock(e.anchorNode);
                return (
                    !(
                        !o ||
                        !1 ===
                            this.getTools().some((e) =>
                                o.tool.inlineTools.has(e.name),
                            )
                    ) && null !== n.closest('[contenteditable]')
                );
            }
            getTools() {
                const e = this.Editor.BlockManager.currentBlock;
                return e
                    ? Array.from(e.tool.inlineTools.values()).filter(
                          (e) =>
                              !(
                                  this.Editor.ReadOnly.isEnabled &&
                                  !0 !== e.isReadOnlySupported
                              ),
                      )
                    : [];
            }
            createToolsInstances() {
                ((this.tools = new Map()),
                    this.getTools().forEach((e) => {
                        const t = e.create();
                        this.tools.set(e, t);
                    }));
            }
            async getPopoverItems() {
                const e = [];
                let t = 0;
                for (const [n, o] of this.tools) {
                    const i = await o.render(),
                        r = this.getToolShortcut(n.name);
                    if (void 0 !== r)
                        try {
                            this.enableShortcuts(n.name, r);
                        } catch {}
                    const s = void 0 !== r ? st(r) : void 0,
                        a = mt.t(Qt.toolNames, n.title || it(n.name));
                    ([i].flat().forEach((i) => {
                        var r, l;
                        const c = {
                            name: n.name,
                            onActivate: () => {
                                this.toolClicked(o);
                            },
                            hint: { title: a, description: s },
                        };
                        if (ut.isElement(i)) {
                            const t = { ...c, element: i, type: Mt.Html };
                            if (Ve(o.renderActions)) {
                                const e = o.renderActions();
                                t.children = {
                                    isOpen:
                                        null == (r = o.checkState)
                                            ? void 0
                                            : r.call(o, xt.get()),
                                    isFlippable: !1,
                                    items: [{ type: Mt.Html, element: e }],
                                };
                            } else
                                null == (l = o.checkState) ||
                                    l.call(o, xt.get());
                            e.push(t);
                        } else if (i.type === Mt.Html)
                            e.push({ ...c, ...i, type: Mt.Html });
                        else if (i.type === Mt.Separator)
                            e.push({ type: Mt.Separator });
                        else {
                            const n = { ...c, ...i, type: Mt.Default };
                            ('children' in n &&
                                0 !== t &&
                                e.push({ type: Mt.Separator }),
                                e.push(n),
                                'children' in n &&
                                    t < this.tools.size - 1 &&
                                    e.push({ type: Mt.Separator }));
                        }
                    }),
                        t++);
                }
                return e;
            }
            getToolShortcut(e) {
                const { Tools: t } = this.Editor,
                    n = t.inlineTools.get(e),
                    o = t.internal.inlineTools;
                return Array.from(o.keys()).includes(e)
                    ? this.inlineTools[e][Qn.Shortcut]
                    : null == n
                      ? void 0
                      : n.shortcut;
            }
            enableShortcuts(e, t) {
                Un.add({
                    name: t,
                    handler: (t) => {
                        var n;
                        const { currentBlock: o } = this.Editor.BlockManager;
                        o &&
                            o.tool.enabledInlineTools &&
                            (t.preventDefault(),
                            null == (n = this.popover) ||
                                n.activateItemByName(e));
                    },
                    on: document,
                });
            }
            toolClicked(e) {
                var t;
                const n = xt.range;
                (null == (t = e.surround) || t.call(e, n),
                    this.checkToolsState());
            }
            checkToolsState() {
                var e;
                null == (e = this.tools) ||
                    e.forEach((e) => {
                        var t;
                        null == (t = e.checkState) || t.call(e, xt.get());
                    });
            }
            get inlineTools() {
                const e = {};
                return (
                    Array.from(this.Editor.Tools.inlineTools.entries()).forEach(
                        ([t, n]) => {
                            e[t] = n.create();
                        },
                    ),
                    e
                );
            }
        },
        BlockEvents: class extends kt {
            keydown(e) {
                switch ((this.beforeKeydownProcessing(e), e.keyCode)) {
                    case Ae:
                        this.backspace(e);
                        break;
                    case Fe:
                        this.delete(e);
                        break;
                    case Me:
                        this.enter(e);
                        break;
                    case je:
                    case De:
                        this.arrowRightAndDown(e);
                        break;
                    case Re:
                    case $e:
                        this.arrowLeftAndUp(e);
                        break;
                    case Pe:
                        this.tabPressed(e);
                }
                ('/' === e.key &&
                    !e.ctrlKey &&
                    !e.metaKey &&
                    this.slashPressed(e),
                    'Slash' === e.code &&
                        (e.ctrlKey || e.metaKey) &&
                        (e.preventDefault(), this.commandSlashPressed()));
            }
            beforeKeydownProcessing(e) {
                this.needToolbarClosing(e) &&
                    Je(e.keyCode) &&
                    (this.Editor.Toolbar.close(),
                    e.ctrlKey ||
                        e.metaKey ||
                        e.altKey ||
                        e.shiftKey ||
                        this.Editor.BlockSelection.clearSelection(e));
            }
            keyup(e) {
                e.shiftKey || this.Editor.UI.checkEmptiness();
            }
            dragOver(e) {
                this.Editor.BlockManager.getBlockByChildNode(
                    e.target,
                ).dropTarget = !0;
            }
            dragLeave(e) {
                this.Editor.BlockManager.getBlockByChildNode(
                    e.target,
                ).dropTarget = !1;
            }
            handleCommandC(e) {
                const { BlockSelection: t } = this.Editor;
                t.anyBlockSelected && t.copySelectedBlocks(e);
            }
            handleCommandX(e) {
                const {
                    BlockSelection: t,
                    BlockManager: n,
                    Caret: o,
                } = this.Editor;
                t.anyBlockSelected &&
                    t.copySelectedBlocks(e).then(() => {
                        const i = n.removeSelectedBlocks(),
                            r = n.insertDefaultBlockAtIndex(i, !0);
                        (o.setToBlock(r, o.positions.START),
                            t.clearSelection(e));
                    });
            }
            tabPressed(e) {
                const { InlineToolbar: t, Caret: n } = this.Editor;
                t.opened ||
                    ((e.shiftKey
                        ? n.navigatePrevious(!0)
                        : n.navigateNext(!0)) &&
                        e.preventDefault());
            }
            commandSlashPressed() {
                this.Editor.BlockSelection.selectedBlocks.length > 1 ||
                    this.activateBlockSettings();
            }
            slashPressed(e) {
                this.Editor.BlockManager.currentBlock.isEmpty &&
                    (e.preventDefault(),
                    this.Editor.Caret.insertContentAtCaretPosition('/'),
                    this.activateToolbox());
            }
            enter(e) {
                const { BlockManager: t, UI: n } = this.Editor,
                    o = t.currentBlock;
                if (
                    void 0 === o ||
                    o.tool.isLineBreaksEnabled ||
                    (n.someToolbarOpened && n.someFlipperButtonFocused) ||
                    (e.shiftKey && !ht)
                )
                    return;
                let i = o;
                (void 0 !== o.currentInput && so(o.currentInput) && !o.hasMedia
                    ? this.Editor.BlockManager.insertDefaultBlockAtIndex(
                          this.Editor.BlockManager.currentBlockIndex,
                      )
                    : (i =
                          o.currentInput && ao(o.currentInput)
                              ? this.Editor.BlockManager.insertDefaultBlockAtIndex(
                                    this.Editor.BlockManager.currentBlockIndex +
                                        1,
                                )
                              : this.Editor.BlockManager.split()),
                    this.Editor.Caret.setToBlock(i),
                    this.Editor.Toolbar.moveAndOpen(i),
                    e.preventDefault());
            }
            backspace(e) {
                const { BlockManager: t, Caret: n } = this.Editor,
                    { currentBlock: o, previousBlock: i } = t;
                if (
                    void 0 !== o &&
                    xt.isCollapsed &&
                    o.currentInput &&
                    so(o.currentInput)
                )
                    if (
                        (e.preventDefault(),
                        this.Editor.Toolbar.close(),
                        o.currentInput === o.firstInput)
                    ) {
                        if (null !== i)
                            if (i.isEmpty) t.removeBlock(i);
                            else if (o.isEmpty) {
                                t.removeBlock(o);
                                const e = t.currentBlock;
                                n.setToBlock(e, n.positions.END);
                            } else
                                At(i, o)
                                    ? this.mergeBlocks(i, o)
                                    : n.setToBlock(i, n.positions.END);
                    } else n.navigatePrevious();
            }
            delete(e) {
                const { BlockManager: t, Caret: n } = this.Editor,
                    { currentBlock: o, nextBlock: i } = t;
                if (xt.isCollapsed && ao(o.currentInput))
                    if (
                        (e.preventDefault(),
                        this.Editor.Toolbar.close(),
                        o.currentInput === o.lastInput)
                    ) {
                        if (null !== i) {
                            if (!i.isEmpty)
                                return o.isEmpty
                                    ? (t.removeBlock(o),
                                      void n.setToBlock(i, n.positions.START))
                                    : void (At(o, i)
                                          ? this.mergeBlocks(o, i)
                                          : n.setToBlock(i, n.positions.START));
                            t.removeBlock(i);
                        }
                    } else n.navigateNext();
            }
            mergeBlocks(e, t) {
                const { BlockManager: n, Toolbar: o } = this.Editor;
                void 0 !== e.lastInput &&
                    (lo.focus(e.lastInput, !1),
                    n.mergeBlocks(e, t).then(() => {
                        o.close();
                    }));
            }
            arrowRightAndDown(e) {
                const t =
                    nn.usedKeys.includes(e.keyCode) &&
                    (!e.shiftKey || e.keyCode === Pe);
                if (this.Editor.UI.someToolbarOpened && t) return;
                this.Editor.Toolbar.close();
                const { currentBlock: n } = this.Editor.BlockManager,
                    o =
                        (void 0 !== (null == n ? void 0 : n.currentInput)
                            ? ao(n.currentInput)
                            : void 0) ||
                        this.Editor.BlockSelection.anyBlockSelected;
                e.shiftKey && e.keyCode === je && o
                    ? this.Editor.CrossBlockSelection.toggleBlockSelectedState()
                    : (
                            e.keyCode === je ||
                            (e.keyCode === De && !this.isRtl)
                                ? this.Editor.Caret.navigateNext()
                                : this.Editor.Caret.navigatePrevious()
                        )
                      ? e.preventDefault()
                      : (tt(() => {
                            this.Editor.BlockManager.currentBlock &&
                                this.Editor.BlockManager.currentBlock.updateCurrentInput();
                        }, 20)(),
                        this.Editor.BlockSelection.clearSelection(e));
            }
            arrowLeftAndUp(e) {
                if (this.Editor.UI.someToolbarOpened) {
                    if (
                        nn.usedKeys.includes(e.keyCode) &&
                        (!e.shiftKey || e.keyCode === Pe)
                    )
                        return;
                    this.Editor.UI.closeAllToolbars();
                }
                this.Editor.Toolbar.close();
                const { currentBlock: t } = this.Editor.BlockManager,
                    n =
                        (void 0 !== (null == t ? void 0 : t.currentInput)
                            ? so(t.currentInput)
                            : void 0) ||
                        this.Editor.BlockSelection.anyBlockSelected;
                e.shiftKey && e.keyCode === Re && n
                    ? this.Editor.CrossBlockSelection.toggleBlockSelectedState(
                          !1,
                      )
                    : (
                            e.keyCode === Re ||
                            (e.keyCode === $e && !this.isRtl)
                                ? this.Editor.Caret.navigatePrevious()
                                : this.Editor.Caret.navigateNext()
                        )
                      ? e.preventDefault()
                      : (tt(() => {
                            this.Editor.BlockManager.currentBlock &&
                                this.Editor.BlockManager.currentBlock.updateCurrentInput();
                        }, 20)(),
                        this.Editor.BlockSelection.clearSelection(e));
            }
            needToolbarClosing(e) {
                const t =
                        e.keyCode === Me && this.Editor.Toolbar.toolbox.opened,
                    n = e.keyCode === Me && this.Editor.BlockSettings.opened,
                    o = e.keyCode === Me && this.Editor.InlineToolbar.opened,
                    i = e.keyCode === Pe;
                return !(e.shiftKey || i || t || n || o);
            }
            activateToolbox() {
                (this.Editor.Toolbar.opened ||
                    this.Editor.Toolbar.moveAndOpen(),
                    this.Editor.Toolbar.toolbox.open());
            }
            activateBlockSettings() {
                (this.Editor.Toolbar.opened ||
                    this.Editor.Toolbar.moveAndOpen(),
                    this.Editor.BlockSettings.opened ||
                        this.Editor.BlockSettings.open());
            }
        },
        BlockManager: class extends kt {
            constructor() {
                (super(...arguments),
                    (this._currentBlockIndex = -1),
                    (this._blocks = null));
            }
            get currentBlockIndex() {
                return this._currentBlockIndex;
            }
            set currentBlockIndex(e) {
                this._currentBlockIndex = e;
            }
            get firstBlock() {
                return this._blocks[0];
            }
            get lastBlock() {
                return this._blocks[this._blocks.length - 1];
            }
            get currentBlock() {
                return this._blocks[this.currentBlockIndex];
            }
            set currentBlock(e) {
                this.currentBlockIndex = this.getBlockIndex(e);
            }
            get nextBlock() {
                return this.currentBlockIndex === this._blocks.length - 1
                    ? null
                    : this._blocks[this.currentBlockIndex + 1];
            }
            get nextContentfulBlock() {
                return this.blocks
                    .slice(this.currentBlockIndex + 1)
                    .find((e) => !!e.inputs.length);
            }
            get previousContentfulBlock() {
                return this.blocks
                    .slice(0, this.currentBlockIndex)
                    .reverse()
                    .find((e) => !!e.inputs.length);
            }
            get previousBlock() {
                return 0 === this.currentBlockIndex
                    ? null
                    : this._blocks[this.currentBlockIndex - 1];
            }
            get blocks() {
                return this._blocks.array;
            }
            get isEditorEmpty() {
                return this.blocks.every((e) => e.isEmpty);
            }
            prepare() {
                const e = new pr(this.Editor.UI.nodes.redactor);
                ((this._blocks = new Proxy(e, { set: pr.set, get: pr.get })),
                    this.listeners.on(document, 'copy', (e) =>
                        this.Editor.BlockEvents.handleCommandC(e),
                    ));
            }
            toggleReadOnly(e) {
                e ? this.disableModuleBindings() : this.enableModuleBindings();
            }
            composeBlock({ tool: e, data: t = {}, id: n, tunes: o = {} }) {
                const i = this.Editor.ReadOnly.isEnabled,
                    r = this.Editor.Tools.blockTools.get(e),
                    s = new $t(
                        {
                            id: n,
                            data: t,
                            tool: r,
                            api: this.Editor.API,
                            readOnly: i,
                            tunesData: o,
                        },
                        this.eventsDispatcher,
                    );
                return (
                    i ||
                        window.requestIdleCallback(
                            () => {
                                this.bindBlockEvents(s);
                            },
                            { timeout: 2e3 },
                        ),
                    s
                );
            }
            insert({
                id: e,
                tool: t = this.config.defaultBlock,
                data: n = {},
                index: o,
                needToFocus: i = !0,
                replace: r = !1,
                tunes: s = {},
            } = {}) {
                let a = o;
                void 0 === a && (a = this.currentBlockIndex + (r ? 0 : 1));
                const l = this.composeBlock({
                    id: e,
                    tool: t,
                    data: n,
                    tunes: s,
                });
                return (
                    r &&
                        this.blockDidMutated(fr, this.getBlockByIndex(a), {
                            index: a,
                        }),
                    this._blocks.insert(a, l, r),
                    this.blockDidMutated(gr, l, { index: a }),
                    i
                        ? (this.currentBlockIndex = a)
                        : a <= this.currentBlockIndex &&
                          this.currentBlockIndex++,
                    l
                );
            }
            insertMany(e, t = 0) {
                this._blocks.insertMany(e, t);
            }
            async update(e, t, n) {
                if (!t && !n) return e;
                const o = await e.data,
                    i = this.composeBlock({
                        id: e.id,
                        tool: e.name,
                        data: Object.assign({}, o, t ?? {}),
                        tunes: n ?? e.tunes,
                    }),
                    r = this.getBlockIndex(e);
                return (
                    this._blocks.replace(r, i),
                    this.blockDidMutated(mr, i, { index: r }),
                    i
                );
            }
            replace(e, t, n) {
                const o = this.getBlockIndex(e);
                return this.insert({ tool: t, data: n, index: o, replace: !0 });
            }
            paste(e, t, n = !1) {
                const o = this.insert({ tool: e, replace: n });
                try {
                    window.requestIdleCallback(() => {
                        o.call(Nt.ON_PASTE, t);
                    });
                } catch (t) {
                    Ue(`${e}: onPaste callback call is failed`, 'error', t);
                }
                return o;
            }
            insertDefaultBlockAtIndex(e, t = !1) {
                const n = this.composeBlock({ tool: this.config.defaultBlock });
                return (
                    (this._blocks[e] = n),
                    this.blockDidMutated(gr, n, { index: e }),
                    t
                        ? (this.currentBlockIndex = e)
                        : e <= this.currentBlockIndex &&
                          this.currentBlockIndex++,
                    n
                );
            }
            insertAtEnd() {
                return (
                    (this.currentBlockIndex = this.blocks.length - 1),
                    this.insert()
                );
            }
            async mergeBlocks(e, t) {
                let n;
                if (e.name === t.name && e.mergeable) {
                    const o = await t.data;
                    if (Ze(o))
                        return void console.error(
                            'Could not merge Block. Failed to extract original Block data.',
                        );
                    const [i] = Ut([o], e.tool.sanitizeConfig);
                    n = i;
                } else if (e.mergeable && Ot(t, 'export') && Ot(e, 'import')) {
                    n = Pt(
                        Wt(await t.exportDataAsString(), e.tool.sanitizeConfig),
                        e.tool.conversionConfig,
                    );
                }
                void 0 !== n &&
                    (await e.mergeWith(n),
                    this.removeBlock(t),
                    (this.currentBlockIndex = this._blocks.indexOf(e)));
            }
            removeBlock(e, t = !0) {
                return new Promise((n) => {
                    const o = this._blocks.indexOf(e);
                    if (!this.validateIndex(o))
                        throw new Error("Can't find a Block to remove");
                    (e.destroy(),
                        this._blocks.remove(o),
                        this.blockDidMutated(fr, e, { index: o }),
                        this.currentBlockIndex >= o && this.currentBlockIndex--,
                        this.blocks.length
                            ? 0 === o && (this.currentBlockIndex = 0)
                            : (this.unsetCurrentBlock(), t && this.insert()),
                        n());
                });
            }
            removeSelectedBlocks() {
                let e;
                for (let t = this.blocks.length - 1; t >= 0; t--)
                    this.blocks[t].selected &&
                        (this.removeBlock(this.blocks[t]), (e = t));
                return e;
            }
            removeAllBlocks() {
                for (let e = this.blocks.length - 1; e >= 0; e--)
                    this._blocks.remove(e);
                (this.unsetCurrentBlock(),
                    this.insert(),
                    this.currentBlock.firstInput.focus());
            }
            split() {
                const e = this.Editor.Caret.extractFragmentFromCaretPosition(),
                    t = ut.make('div');
                t.appendChild(e);
                const n = { text: ut.isEmpty(t) ? '' : t.innerHTML };
                return this.insert({ data: n });
            }
            getBlockByIndex(e) {
                return (
                    -1 === e && (e = this._blocks.length - 1),
                    this._blocks[e]
                );
            }
            getBlockIndex(e) {
                return this._blocks.indexOf(e);
            }
            getBlockById(e) {
                return this._blocks.array.find((t) => t.id === e);
            }
            getBlock(e) {
                ut.isElement(e) || (e = e.parentNode);
                const t = this._blocks.nodes,
                    n = e.closest(`.${$t.CSS.wrapper}`),
                    o = t.indexOf(n);
                if (o >= 0) return this._blocks[o];
            }
            setCurrentBlockByChildNode(e) {
                ut.isElement(e) || (e = e.parentNode);
                const t = e.closest(`.${$t.CSS.wrapper}`);
                if (!t) return;
                const n = t.closest(`.${this.Editor.UI.CSS.editorWrapper}`);
                return null != n && n.isEqualNode(this.Editor.UI.nodes.wrapper)
                    ? ((this.currentBlockIndex = this._blocks.nodes.indexOf(t)),
                      this.currentBlock.updateCurrentInput(),
                      this.currentBlock)
                    : void 0;
            }
            getBlockByChildNode(e) {
                if (!(e && e instanceof Node)) return;
                ut.isElement(e) || (e = e.parentNode);
                const t = e.closest(`.${$t.CSS.wrapper}`);
                return this.blocks.find((e) => e.holder === t);
            }
            swap(e, t) {
                (this._blocks.swap(e, t), (this.currentBlockIndex = t));
            }
            move(e, t = this.currentBlockIndex) {
                isNaN(e) || isNaN(t)
                    ? Ue(
                          "Warning during 'move' call: incorrect indices provided.",
                          'warn',
                      )
                    : this.validateIndex(e) && this.validateIndex(t)
                      ? (this._blocks.move(e, t),
                        (this.currentBlockIndex = e),
                        this.blockDidMutated('block-moved', this.currentBlock, {
                            fromIndex: t,
                            toIndex: e,
                        }))
                      : Ue(
                            "Warning during 'move' call: indices cannot be lower than 0 or greater than the amount of blocks.",
                            'warn',
                        );
            }
            async convert(e, t, n) {
                if (!(await e.save()))
                    throw new Error(
                        'Could not convert Block. Failed to extract original Block data.',
                    );
                const o = this.Editor.Tools.blockTools.get(t);
                if (!o)
                    throw new Error(
                        `Could not convert Block. Tool «${t}» not found.`,
                    );
                let i = Pt(
                    Wt(await e.exportDataAsString(), o.sanitizeConfig),
                    o.conversionConfig,
                    o.settings,
                );
                return (
                    n && (i = Object.assign(i, n)),
                    this.replace(e, o.name, i)
                );
            }
            unsetCurrentBlock() {
                this.currentBlockIndex = -1;
            }
            async clear(e = !1) {
                const t = new br();
                (this.blocks.forEach((e) => {
                    t.add(async () => {
                        await this.removeBlock(e, !1);
                    });
                }),
                    await t.completed,
                    this.unsetCurrentBlock(),
                    e && this.insert(),
                    this.Editor.UI.checkEmptiness());
            }
            async destroy() {
                await Promise.all(this.blocks.map((e) => e.destroy()));
            }
            bindBlockEvents(e) {
                const { BlockEvents: t } = this.Editor;
                (this.readOnlyMutableListeners.on(e.holder, 'keydown', (e) => {
                    t.keydown(e);
                }),
                    this.readOnlyMutableListeners.on(e.holder, 'keyup', (e) => {
                        t.keyup(e);
                    }),
                    this.readOnlyMutableListeners.on(
                        e.holder,
                        'dragover',
                        (e) => {
                            t.dragOver(e);
                        },
                    ),
                    this.readOnlyMutableListeners.on(
                        e.holder,
                        'dragleave',
                        (e) => {
                            t.dragLeave(e);
                        },
                    ),
                    e.on('didMutated', (e) =>
                        this.blockDidMutated(mr, e, {
                            index: this.getBlockIndex(e),
                        }),
                    ));
            }
            disableModuleBindings() {
                this.readOnlyMutableListeners.clearAll();
            }
            enableModuleBindings() {
                (this.readOnlyMutableListeners.on(document, 'cut', (e) =>
                    this.Editor.BlockEvents.handleCommandX(e),
                ),
                    this.blocks.forEach((e) => {
                        this.bindBlockEvents(e);
                    }));
            }
            validateIndex(e) {
                return !(e < 0 || e >= this._blocks.length);
            }
            blockDidMutated(e, t, n) {
                const o = new CustomEvent(e, {
                    detail: { target: new yt(t), ...n },
                });
                return (this.eventsDispatcher.emit(Et, { event: o }), t);
            }
        },
        BlockSelection: class extends kt {
            constructor() {
                (super(...arguments),
                    (this.anyBlockSelectedCache = null),
                    (this.needToSelectAll = !1),
                    (this.nativeInputSelected = !1),
                    (this.readyToBlockSelection = !1));
            }
            get sanitizerConfig() {
                return {
                    p: {},
                    h1: {},
                    h2: {},
                    h3: {},
                    h4: {},
                    h5: {},
                    h6: {},
                    ol: {},
                    ul: {},
                    li: {},
                    br: !0,
                    img: { src: !0, width: !0, height: !0 },
                    a: { href: !0 },
                    b: {},
                    i: {},
                    u: {},
                };
            }
            get allBlocksSelected() {
                const { BlockManager: e } = this.Editor;
                return e.blocks.every((e) => !0 === e.selected);
            }
            set allBlocksSelected(e) {
                const { BlockManager: t } = this.Editor;
                (t.blocks.forEach((t) => {
                    t.selected = e;
                }),
                    this.clearCache());
            }
            get anyBlockSelected() {
                const { BlockManager: e } = this.Editor;
                return (
                    null === this.anyBlockSelectedCache &&
                        (this.anyBlockSelectedCache = e.blocks.some(
                            (e) => !0 === e.selected,
                        )),
                    this.anyBlockSelectedCache
                );
            }
            get selectedBlocks() {
                return this.Editor.BlockManager.blocks.filter(
                    (e) => e.selected,
                );
            }
            prepare() {
                ((this.selection = new xt()),
                    Un.add({
                        name: 'CMD+A',
                        handler: (e) => {
                            const { BlockManager: t, ReadOnly: n } =
                                this.Editor;
                            if (n.isEnabled)
                                return (
                                    e.preventDefault(),
                                    void this.selectAllBlocks()
                                );
                            t.currentBlock && this.handleCommandA(e);
                        },
                        on: this.Editor.UI.nodes.redactor,
                    }));
            }
            toggleReadOnly() {
                (xt.get().removeAllRanges(), (this.allBlocksSelected = !1));
            }
            unSelectBlockByIndex(e) {
                const { BlockManager: t } = this.Editor;
                let n;
                ((n = isNaN(e) ? t.currentBlock : t.getBlockByIndex(e)),
                    (n.selected = !1),
                    this.clearCache());
            }
            clearSelection(e, t = !1) {
                const {
                    BlockManager: n,
                    Caret: o,
                    RectangleSelection: i,
                } = this.Editor;
                ((this.needToSelectAll = !1),
                    (this.nativeInputSelected = !1),
                    (this.readyToBlockSelection = !1));
                const r = e && e instanceof KeyboardEvent,
                    s = r && Je(e.keyCode);
                if (this.anyBlockSelected && r && s && !xt.isSelectionExists) {
                    const t = n.removeSelectedBlocks();
                    (n.insertDefaultBlockAtIndex(t, !0),
                        o.setToBlock(n.currentBlock),
                        tt(() => {
                            const t = e.key;
                            o.insertContentAtCaretPosition(
                                t.length > 1 ? '' : t,
                            );
                        }, 20)());
                }
                (this.Editor.CrossBlockSelection.clear(e),
                    this.anyBlockSelected && !i.isRectActivated()
                        ? (t && this.selection.restore(),
                          (this.allBlocksSelected = !1))
                        : this.Editor.RectangleSelection.clearSelection());
            }
            copySelectedBlocks(e) {
                e.preventDefault();
                const t = ut.make('div');
                this.selectedBlocks.forEach((e) => {
                    const n = Wt(e.holder.innerHTML, this.sanitizerConfig),
                        o = ut.make('p');
                    ((o.innerHTML = n), t.appendChild(o));
                });
                const n = Array.from(t.childNodes)
                        .map((e) => e.textContent)
                        .join('\n\n'),
                    o = t.innerHTML;
                return (
                    e.clipboardData.setData('text/plain', n),
                    e.clipboardData.setData('text/html', o),
                    Promise.all(this.selectedBlocks.map((e) => e.save())).then(
                        (t) => {
                            try {
                                e.clipboardData.setData(
                                    this.Editor.Paste.MIME_TYPE,
                                    JSON.stringify(t),
                                );
                            } catch {}
                        },
                    )
                );
            }
            selectBlockByIndex(e) {
                const { BlockManager: t } = this.Editor,
                    n = t.getBlockByIndex(e);
                void 0 !== n && this.selectBlock(n);
            }
            selectBlock(e) {
                (this.selection.save(),
                    xt.get().removeAllRanges(),
                    (e.selected = !0),
                    this.clearCache(),
                    this.Editor.InlineToolbar.close());
            }
            unselectBlock(e) {
                ((e.selected = !1), this.clearCache());
            }
            clearCache() {
                this.anyBlockSelectedCache = null;
            }
            destroy() {
                Un.remove(this.Editor.UI.nodes.redactor, 'CMD+A');
            }
            handleCommandA(e) {
                if (
                    (this.Editor.RectangleSelection.clearSelection(),
                    ut.isNativeInput(e.target) && !this.readyToBlockSelection)
                )
                    return void (this.readyToBlockSelection = !0);
                const t = this.Editor.BlockManager.getBlock(e.target),
                    n = t.inputs;
                n.length > 1 && !this.readyToBlockSelection
                    ? (this.readyToBlockSelection = !0)
                    : 1 !== n.length || this.needToSelectAll
                      ? this.needToSelectAll
                          ? (e.preventDefault(),
                            this.selectAllBlocks(),
                            (this.needToSelectAll = !1),
                            (this.readyToBlockSelection = !1))
                          : this.readyToBlockSelection &&
                            (e.preventDefault(),
                            this.selectBlock(t),
                            (this.needToSelectAll = !0))
                      : (this.needToSelectAll = !0);
            }
            selectAllBlocks() {
                (this.selection.save(),
                    xt.get().removeAllRanges(),
                    (this.allBlocksSelected = !0),
                    this.Editor.InlineToolbar.close());
            }
        },
        Caret: vr,
        CrossBlockSelection: class extends kt {
            constructor() {
                (super(...arguments),
                    (this.onMouseUp = () => {
                        (this.listeners.off(
                            document,
                            'mouseover',
                            this.onMouseOver,
                        ),
                            this.listeners.off(
                                document,
                                'mouseup',
                                this.onMouseUp,
                            ));
                    }),
                    (this.onMouseOver = (e) => {
                        const { BlockManager: t, BlockSelection: n } =
                            this.Editor;
                        if (null === e.relatedTarget && null === e.target)
                            return;
                        const o =
                                t.getBlockByChildNode(e.relatedTarget) ||
                                this.lastSelectedBlock,
                            i = t.getBlockByChildNode(e.target);
                        if (o && i && i !== o) {
                            if (o === this.firstSelectedBlock)
                                return (
                                    xt.get().removeAllRanges(),
                                    (o.selected = !0),
                                    (i.selected = !0),
                                    void n.clearCache()
                                );
                            if (i === this.firstSelectedBlock)
                                return (
                                    (o.selected = !1),
                                    (i.selected = !1),
                                    void n.clearCache()
                                );
                            (this.Editor.InlineToolbar.close(),
                                this.toggleBlocksSelectedState(o, i),
                                (this.lastSelectedBlock = i));
                        }
                    }));
            }
            async prepare() {
                this.listeners.on(document, 'mousedown', (e) => {
                    this.enableCrossBlockSelection(e);
                });
            }
            watchSelection(e) {
                if (e.button !== He) return;
                const { BlockManager: t } = this.Editor;
                ((this.firstSelectedBlock = t.getBlock(e.target)),
                    (this.lastSelectedBlock = this.firstSelectedBlock),
                    this.listeners.on(document, 'mouseover', this.onMouseOver),
                    this.listeners.on(document, 'mouseup', this.onMouseUp));
            }
            get isCrossBlockSelectionStarted() {
                return (
                    !!this.firstSelectedBlock &&
                    !!this.lastSelectedBlock &&
                    this.firstSelectedBlock !== this.lastSelectedBlock
                );
            }
            toggleBlockSelectedState(e = !0) {
                const { BlockManager: t, BlockSelection: n } = this.Editor;
                (this.lastSelectedBlock ||
                    (this.lastSelectedBlock = this.firstSelectedBlock =
                        t.currentBlock),
                    this.firstSelectedBlock === this.lastSelectedBlock &&
                        ((this.firstSelectedBlock.selected = !0),
                        n.clearCache(),
                        xt.get().removeAllRanges()));
                const o =
                        t.blocks.indexOf(this.lastSelectedBlock) + (e ? 1 : -1),
                    i = t.blocks[o];
                i &&
                    (this.lastSelectedBlock.selected !== i.selected
                        ? ((i.selected = !0), n.clearCache())
                        : ((this.lastSelectedBlock.selected = !1),
                          n.clearCache()),
                    (this.lastSelectedBlock = i),
                    this.Editor.InlineToolbar.close(),
                    i.holder.scrollIntoView({ block: 'nearest' }));
            }
            clear(e) {
                const {
                        BlockManager: t,
                        BlockSelection: n,
                        Caret: o,
                    } = this.Editor,
                    i = t.blocks.indexOf(this.firstSelectedBlock),
                    r = t.blocks.indexOf(this.lastSelectedBlock);
                if (
                    n.anyBlockSelected &&
                    i > -1 &&
                    r > -1 &&
                    e &&
                    e instanceof KeyboardEvent
                )
                    switch (e.keyCode) {
                        case je:
                        case De:
                            o.setToBlock(
                                t.blocks[Math.max(i, r)],
                                o.positions.END,
                            );
                            break;
                        case Re:
                        case $e:
                            o.setToBlock(
                                t.blocks[Math.min(i, r)],
                                o.positions.START,
                            );
                            break;
                        default:
                            o.setToBlock(
                                t.blocks[Math.max(i, r)],
                                o.positions.END,
                            );
                    }
                this.firstSelectedBlock = this.lastSelectedBlock = null;
            }
            enableCrossBlockSelection(e) {
                const { UI: t } = this.Editor;
                (xt.isCollapsed || this.Editor.BlockSelection.clearSelection(e),
                    t.nodes.redactor.contains(e.target)
                        ? this.watchSelection(e)
                        : this.Editor.BlockSelection.clearSelection(e));
            }
            toggleBlocksSelectedState(e, t) {
                const { BlockManager: n, BlockSelection: o } = this.Editor,
                    i = n.blocks.indexOf(e),
                    r = n.blocks.indexOf(t),
                    s = e.selected !== t.selected;
                for (let a = Math.min(i, r); a <= Math.max(i, r); a++) {
                    const i = n.blocks[a];
                    i !== this.firstSelectedBlock &&
                        i !== (s ? e : t) &&
                        ((n.blocks[a].selected = !n.blocks[a].selected),
                        o.clearCache());
                }
            }
        },
        DragNDrop: class extends kt {
            constructor() {
                (super(...arguments), (this.isStartedAtEditor = !1));
            }
            toggleReadOnly(e) {
                e ? this.disableModuleBindings() : this.enableModuleBindings();
            }
            enableModuleBindings() {
                const { UI: e } = this.Editor;
                (this.readOnlyMutableListeners.on(
                    e.nodes.holder,
                    'drop',
                    async (e) => {
                        await this.processDrop(e);
                    },
                    !0,
                ),
                    this.readOnlyMutableListeners.on(
                        e.nodes.holder,
                        'dragstart',
                        () => {
                            this.processDragStart();
                        },
                    ),
                    this.readOnlyMutableListeners.on(
                        e.nodes.holder,
                        'dragover',
                        (e) => {
                            this.processDragOver(e);
                        },
                        !0,
                    ));
            }
            disableModuleBindings() {
                this.readOnlyMutableListeners.clearAll();
            }
            async processDrop(e) {
                const { BlockManager: t, Paste: n, Caret: o } = this.Editor;
                (e.preventDefault(),
                    t.blocks.forEach((e) => {
                        e.dropTarget = !1;
                    }),
                    xt.isAtEditor &&
                        !xt.isCollapsed &&
                        this.isStartedAtEditor &&
                        document.execCommand('delete'),
                    (this.isStartedAtEditor = !1));
                const i = t.setCurrentBlockByChildNode(e.target);
                if (i) this.Editor.Caret.setToBlock(i, o.positions.END);
                else {
                    const e = t.setCurrentBlockByChildNode(t.lastBlock.holder);
                    this.Editor.Caret.setToBlock(e, o.positions.END);
                }
                await n.processDataTransfer(e.dataTransfer, !0);
            }
            processDragStart() {
                (xt.isAtEditor &&
                    !xt.isCollapsed &&
                    (this.isStartedAtEditor = !0),
                    this.Editor.InlineToolbar.close());
            }
            processDragOver(e) {
                e.preventDefault();
            }
        },
        ModificationsObserver: class extends kt {
            constructor({ config: e, eventsDispatcher: t }) {
                (super({ config: e, eventsDispatcher: t }),
                    (this.disabled = !1),
                    (this.batchingTimeout = null),
                    (this.batchingOnChangeQueue = new Map()),
                    (this.batchTime = 400),
                    (this.mutationObserver = new MutationObserver((e) => {
                        this.redactorChanged(e);
                    })),
                    this.eventsDispatcher.on(Et, (e) => {
                        this.particularBlockChanged(e.event);
                    }),
                    this.eventsDispatcher.on(St, () => {
                        this.disable();
                    }),
                    this.eventsDispatcher.on(Tt, () => {
                        this.enable();
                    }));
            }
            enable() {
                (this.mutationObserver.observe(this.Editor.UI.nodes.redactor, {
                    childList: !0,
                    subtree: !0,
                    characterData: !0,
                    attributes: !0,
                }),
                    (this.disabled = !1));
            }
            disable() {
                (this.mutationObserver.disconnect(), (this.disabled = !0));
            }
            particularBlockChanged(e) {
                this.disabled ||
                    !Ve(this.config.onChange) ||
                    (this.batchingOnChangeQueue.set(
                        `block:${e.detail.target.id}:event:${e.type}`,
                        e,
                    ),
                    this.batchingTimeout && clearTimeout(this.batchingTimeout),
                    (this.batchingTimeout = setTimeout(() => {
                        let e;
                        ((e =
                            1 === this.batchingOnChangeQueue.size
                                ? this.batchingOnChangeQueue.values().next()
                                      .value
                                : Array.from(
                                      this.batchingOnChangeQueue.values(),
                                  )),
                            this.config.onChange &&
                                this.config.onChange(
                                    this.Editor.API.methods,
                                    e,
                                ),
                            this.batchingOnChangeQueue.clear());
                    }, this.batchTime)));
            }
            redactorChanged(e) {
                this.eventsDispatcher.emit(Ct, { mutations: e });
            }
        },
        Paste: wr,
        ReadOnly: class extends kt {
            constructor() {
                (super(...arguments),
                    (this.toolsDontSupportReadOnly = []),
                    (this.readOnlyEnabled = !1));
            }
            get isEnabled() {
                return this.readOnlyEnabled;
            }
            async prepare() {
                const { Tools: e } = this.Editor,
                    { blockTools: t } = e,
                    n = [];
                (Array.from(t.entries()).forEach(([e, t]) => {
                    t.isReadOnlySupported || n.push(e);
                }),
                    (this.toolsDontSupportReadOnly = n),
                    this.config.readOnly &&
                        n.length > 0 &&
                        this.throwCriticalError(),
                    this.toggle(this.config.readOnly, !0));
            }
            async toggle(e = !this.readOnlyEnabled, t = !1) {
                e &&
                    this.toolsDontSupportReadOnly.length > 0 &&
                    this.throwCriticalError();
                const n = this.readOnlyEnabled;
                this.readOnlyEnabled = e;
                for (const t in this.Editor)
                    this.Editor[t].toggleReadOnly &&
                        this.Editor[t].toggleReadOnly(e);
                if (n === e) return this.readOnlyEnabled;
                if (t) return this.readOnlyEnabled;
                this.Editor.ModificationsObserver.disable();
                const o = await this.Editor.Saver.save();
                return (
                    await this.Editor.BlockManager.clear(),
                    await this.Editor.Renderer.render(o.blocks),
                    this.Editor.ModificationsObserver.enable(),
                    this.readOnlyEnabled
                );
            }
            throwCriticalError() {
                throw new bt(
                    `To enable read-only mode all connected tools should support it. Tools ${this.toolsDontSupportReadOnly.join(', ')} don't support read-only mode.`,
                );
            }
        },
        RectangleSelection: kr,
        Renderer: class extends kt {
            async render(e) {
                return new Promise((t) => {
                    const { Tools: n, BlockManager: o } = this.Editor;
                    if (0 === e.length) o.insert();
                    else {
                        const t = e.map(
                            ({ type: e, data: t, tunes: i, id: r }) => {
                                let s;
                                !1 === n.available.has(e) &&
                                    (We(
                                        `Tool «${e}» is not found. Check 'tools' property at the Editor.js config.`,
                                        'warn',
                                    ),
                                    (t = this.composeStubDataForTool(e, t, r)),
                                    (e = n.stubTool));
                                try {
                                    s = o.composeBlock({
                                        id: r,
                                        tool: e,
                                        data: t,
                                        tunes: i,
                                    });
                                } catch (a) {
                                    (Ue(
                                        `Block «${e}» skipped because of plugins error`,
                                        'error',
                                        { data: t, error: a },
                                    ),
                                        (t = this.composeStubDataForTool(
                                            e,
                                            t,
                                            r,
                                        )),
                                        (e = n.stubTool),
                                        (s = o.composeBlock({
                                            id: r,
                                            tool: e,
                                            data: t,
                                            tunes: i,
                                        })));
                                }
                                return s;
                            },
                        );
                        o.insertMany(t);
                    }
                    window.requestIdleCallback(
                        () => {
                            t();
                        },
                        { timeout: 2e3 },
                    );
                });
            }
            composeStubDataForTool(e, t, n) {
                const { Tools: o } = this.Editor;
                let i = e;
                if (o.unavailable.has(e)) {
                    const t = o.unavailable.get(e).toolbox;
                    void 0 !== t && void 0 !== t[0].title && (i = t[0].title);
                }
                return { savedData: { id: n, type: e, data: t }, title: i };
            }
        },
        Saver: class extends kt {
            async save() {
                const { BlockManager: e, Tools: t } = this.Editor,
                    n = e.blocks,
                    o = [];
                try {
                    n.forEach((e) => {
                        o.push(this.getSavedData(e));
                    });
                    const e = await Promise.all(o),
                        i = await Ut(
                            e,
                            (e) => t.blockTools.get(e).sanitizeConfig,
                        );
                    return this.makeOutput(i);
                } catch (e) {
                    We('Saving failed due to the Error %o', 'error', e);
                }
            }
            async getSavedData(e) {
                const t = await e.save(),
                    n = t && (await e.validate(t.data));
                return { ...t, isValid: n };
            }
            makeOutput(e) {
                const t = [];
                return (
                    e.forEach(
                        ({ id: e, tool: n, data: o, tunes: i, isValid: r }) => {
                            if (!r)
                                return void Ue(
                                    `Block «${n}» skipped because saved data is invalid`,
                                );
                            if (n === this.Editor.Tools.stubTool)
                                return void t.push(o);
                            const s = {
                                id: e,
                                type: n,
                                data: o,
                                ...(!Ze(i) && { tunes: i }),
                            };
                            t.push(s);
                        },
                    ),
                    { time: +new Date(), blocks: t, version: '2.31.0-rc.7' }
                );
            }
        },
        Tools: Hr,
        UI: class extends kt {
            constructor() {
                (super(...arguments),
                    (this.isMobile = !1),
                    (this.contentRectCache = null),
                    (this.resizeDebouncer = nt(() => {
                        this.windowResize();
                    }, 200)),
                    (this.selectionChangeDebounced = nt(() => {
                        this.selectionChanged();
                    }, 180)),
                    (this.documentTouchedListener = (e) => {
                        this.documentTouched(e);
                    }));
            }
            get CSS() {
                return {
                    editorWrapper: 'codex-editor',
                    editorWrapperNarrow: 'codex-editor--narrow',
                    editorZone: 'codex-editor__redactor',
                    editorZoneHidden: 'codex-editor__redactor--hidden',
                    editorEmpty: 'codex-editor--empty',
                    editorRtlFix: 'codex-editor--rtl',
                };
            }
            get contentRect() {
                if (null !== this.contentRectCache)
                    return this.contentRectCache;
                const e = this.nodes.wrapper.querySelector(
                    `.${$t.CSS.content}`,
                );
                return e
                    ? ((this.contentRectCache = e.getBoundingClientRect()),
                      this.contentRectCache)
                    : { width: 650, left: 0, right: 0 };
            }
            async prepare() {
                (this.setIsMobile(), this.make(), this.loadStyles());
            }
            toggleReadOnly(e) {
                e
                    ? this.unbindReadOnlySensitiveListeners()
                    : window.requestIdleCallback(
                          () => {
                              this.bindReadOnlySensitiveListeners();
                          },
                          { timeout: 2e3 },
                      );
            }
            checkEmptiness() {
                const { BlockManager: e } = this.Editor;
                this.nodes.wrapper.classList.toggle(
                    this.CSS.editorEmpty,
                    e.isEditorEmpty,
                );
            }
            get someToolbarOpened() {
                const {
                    Toolbar: e,
                    BlockSettings: t,
                    InlineToolbar: n,
                } = this.Editor;
                return !!(t.opened || n.opened || e.toolbox.opened);
            }
            get someFlipperButtonFocused() {
                return (
                    !!this.Editor.Toolbar.toolbox.hasFocus() ||
                    Object.entries(this.Editor)
                        .filter(([e, t]) => t.flipper instanceof nn)
                        .some(([e, t]) => t.flipper.hasFocus())
                );
            }
            destroy() {
                ((this.nodes.holder.innerHTML = ''),
                    this.unbindReadOnlyInsensitiveListeners());
            }
            closeAllToolbars() {
                const {
                    Toolbar: e,
                    BlockSettings: t,
                    InlineToolbar: n,
                } = this.Editor;
                (t.close(), n.close(), e.toolbox.close());
            }
            setIsMobile() {
                const e = window.innerWidth < 650;
                (e !== this.isMobile &&
                    this.eventsDispatcher.emit(_t, {
                        isEnabled: this.isMobile,
                    }),
                    (this.isMobile = e));
            }
            make() {
                ((this.nodes.holder = ut.getHolder(this.config.holder)),
                    (this.nodes.wrapper = ut.make('div', [
                        this.CSS.editorWrapper,
                        ...(this.isRtl ? [this.CSS.editorRtlFix] : []),
                    ])),
                    (this.nodes.redactor = ut.make('div', this.CSS.editorZone)),
                    this.nodes.holder.offsetWidth < this.contentRect.width &&
                        this.nodes.wrapper.classList.add(
                            this.CSS.editorWrapperNarrow,
                        ),
                    (this.nodes.redactor.style.paddingBottom =
                        this.config.minHeight + 'px'),
                    this.nodes.wrapper.appendChild(this.nodes.redactor),
                    this.nodes.holder.appendChild(this.nodes.wrapper),
                    this.bindReadOnlyInsensitiveListeners());
            }
            loadStyles() {
                const e = 'editor-js-styles';
                if (ut.get(e)) return;
                const t = ut.make('style', null, {
                    id: e,
                    textContent: zr.toString(),
                });
                (this.config.style &&
                    !Ze(this.config.style) &&
                    this.config.style.nonce &&
                    t.setAttribute('nonce', this.config.style.nonce),
                    ut.prepend(document.head, t));
            }
            bindReadOnlyInsensitiveListeners() {
                (this.listeners.on(
                    document,
                    'selectionchange',
                    this.selectionChangeDebounced,
                ),
                    this.listeners.on(window, 'resize', this.resizeDebouncer, {
                        passive: !0,
                    }),
                    this.listeners.on(
                        this.nodes.redactor,
                        'mousedown',
                        this.documentTouchedListener,
                        { capture: !0, passive: !0 },
                    ),
                    this.listeners.on(
                        this.nodes.redactor,
                        'touchstart',
                        this.documentTouchedListener,
                        { capture: !0, passive: !0 },
                    ));
            }
            unbindReadOnlyInsensitiveListeners() {
                (this.listeners.off(
                    document,
                    'selectionchange',
                    this.selectionChangeDebounced,
                ),
                    this.listeners.off(window, 'resize', this.resizeDebouncer),
                    this.listeners.off(
                        this.nodes.redactor,
                        'mousedown',
                        this.documentTouchedListener,
                    ),
                    this.listeners.off(
                        this.nodes.redactor,
                        'touchstart',
                        this.documentTouchedListener,
                    ));
            }
            bindReadOnlySensitiveListeners() {
                (this.readOnlyMutableListeners.on(
                    this.nodes.redactor,
                    'click',
                    (e) => {
                        this.redactorClicked(e);
                    },
                    !1,
                ),
                    this.readOnlyMutableListeners.on(
                        document,
                        'keydown',
                        (e) => {
                            this.documentKeydown(e);
                        },
                        !0,
                    ),
                    this.readOnlyMutableListeners.on(
                        document,
                        'mousedown',
                        (e) => {
                            this.documentClicked(e);
                        },
                        !0,
                    ),
                    this.watchBlockHoveredEvents(),
                    this.enableInputsEmptyMark());
            }
            watchBlockHoveredEvents() {
                let e;
                this.readOnlyMutableListeners.on(
                    this.nodes.redactor,
                    'mousemove',
                    ot((t) => {
                        const n = t.target.closest('.ce-block');
                        this.Editor.BlockSelection.anyBlockSelected ||
                            (n &&
                                e !== n &&
                                ((e = n),
                                this.eventsDispatcher.emit(Xn, {
                                    block: this.Editor.BlockManager.getBlockByChildNode(
                                        n,
                                    ),
                                })));
                    }, 20),
                    { passive: !0 },
                );
            }
            unbindReadOnlySensitiveListeners() {
                this.readOnlyMutableListeners.clearAll();
            }
            windowResize() {
                ((this.contentRectCache = null), this.setIsMobile());
            }
            documentKeydown(e) {
                switch (e.keyCode) {
                    case Me:
                        this.enterPressed(e);
                        break;
                    case Ae:
                    case Fe:
                        this.backspacePressed(e);
                        break;
                    case Ne:
                        this.escapePressed(e);
                        break;
                    default:
                        this.defaultBehaviour(e);
                }
            }
            defaultBehaviour(e) {
                const { currentBlock: t } = this.Editor.BlockManager,
                    n = e.target.closest(`.${this.CSS.editorWrapper}`),
                    o = e.altKey || e.ctrlKey || e.metaKey || e.shiftKey;
                void 0 === t || null !== n
                    ? n ||
                      (t && o) ||
                      (this.Editor.BlockManager.unsetCurrentBlock(),
                      this.Editor.Toolbar.close())
                    : this.Editor.BlockEvents.keydown(e);
            }
            backspacePressed(e) {
                const {
                    BlockManager: t,
                    BlockSelection: n,
                    Caret: o,
                } = this.Editor;
                if (n.anyBlockSelected && !xt.isSelectionExists) {
                    const i = t.removeSelectedBlocks(),
                        r = t.insertDefaultBlockAtIndex(i, !0);
                    (o.setToBlock(r, o.positions.START),
                        n.clearSelection(e),
                        e.preventDefault(),
                        e.stopPropagation(),
                        e.stopImmediatePropagation());
                }
            }
            escapePressed(e) {
                (this.Editor.BlockSelection.clearSelection(e),
                    this.Editor.Toolbar.toolbox.opened
                        ? (this.Editor.Toolbar.toolbox.close(),
                          this.Editor.Caret.setToBlock(
                              this.Editor.BlockManager.currentBlock,
                              this.Editor.Caret.positions.END,
                          ))
                        : this.Editor.BlockSettings.opened
                          ? this.Editor.BlockSettings.close()
                          : this.Editor.InlineToolbar.opened
                            ? this.Editor.InlineToolbar.close()
                            : this.Editor.Toolbar.close());
            }
            enterPressed(e) {
                const { BlockManager: t, BlockSelection: n } = this.Editor;
                if (this.someToolbarOpened) return;
                const o = t.currentBlockIndex >= 0;
                if (n.anyBlockSelected && !xt.isSelectionExists)
                    return (
                        n.clearSelection(e),
                        e.preventDefault(),
                        e.stopImmediatePropagation(),
                        void e.stopPropagation()
                    );
                if (
                    !this.someToolbarOpened &&
                    o &&
                    'BODY' === e.target.tagName
                ) {
                    const t = this.Editor.BlockManager.insert();
                    (e.preventDefault(),
                        this.Editor.Caret.setToBlock(t),
                        this.Editor.Toolbar.moveAndOpen(t));
                }
                this.Editor.BlockSelection.clearSelection(e);
            }
            documentClicked(e) {
                var t, n;
                if (!e.isTrusted) return;
                const o = e.target;
                this.nodes.holder.contains(o) ||
                    xt.isAtEditor ||
                    (this.Editor.BlockManager.unsetCurrentBlock(),
                    this.Editor.Toolbar.close());
                const i =
                        null == (t = this.Editor.BlockSettings.nodes.wrapper)
                            ? void 0
                            : t.contains(o),
                    r =
                        null == (n = this.Editor.Toolbar.nodes.settingsToggler)
                            ? void 0
                            : n.contains(o),
                    s = i || r;
                if (this.Editor.BlockSettings.opened && !s) {
                    this.Editor.BlockSettings.close();
                    const e = this.Editor.BlockManager.getBlockByChildNode(o);
                    this.Editor.Toolbar.moveAndOpen(e);
                }
                this.Editor.BlockSelection.clearSelection(e);
            }
            documentTouched(e) {
                let t = e.target;
                if (t === this.nodes.redactor) {
                    const n =
                            e instanceof MouseEvent
                                ? e.clientX
                                : e.touches[0].clientX,
                        o =
                            e instanceof MouseEvent
                                ? e.clientY
                                : e.touches[0].clientY;
                    t = document.elementFromPoint(n, o);
                }
                try {
                    this.Editor.BlockManager.setCurrentBlockByChildNode(t);
                } catch {
                    this.Editor.RectangleSelection.isRectActivated() ||
                        this.Editor.Caret.setToTheLastBlock();
                }
                this.Editor.ReadOnly.isEnabled ||
                    this.Editor.Toolbar.moveAndOpen();
            }
            redactorClicked(e) {
                if (!xt.isCollapsed) return;
                const t = e.target,
                    n = e.metaKey || e.ctrlKey;
                if (ut.isAnchor(t) && n) {
                    (e.stopImmediatePropagation(), e.stopPropagation());
                    const n = (function (e) {
                        try {
                            return new URL(e).href;
                        } catch {}
                        return '//' === e.substring(0, 2)
                            ? window.location.protocol + e
                            : window.location.origin + e;
                    })(t.getAttribute('href'));
                    !(function (e) {
                        window.open(e, '_blank');
                    })(n);
                } else this.processBottomZoneClick(e);
            }
            processBottomZoneClick(e) {
                const t = this.Editor.BlockManager.getBlockByIndex(-1),
                    n = ut.offset(t.holder).bottom,
                    o = e.pageY,
                    { BlockSelection: i } = this.Editor;
                if (
                    e.target instanceof Element &&
                    e.target.isEqualNode(this.nodes.redactor) &&
                    !i.anyBlockSelected &&
                    n < o
                ) {
                    (e.stopImmediatePropagation(), e.stopPropagation());
                    const {
                        BlockManager: t,
                        Caret: n,
                        Toolbar: o,
                    } = this.Editor;
                    ((!t.lastBlock.tool.isDefault || !t.lastBlock.isEmpty) &&
                        t.insertAtEnd(),
                        n.setToTheLastBlock(),
                        o.moveAndOpen(t.lastBlock));
                }
            }
            selectionChanged() {
                const { CrossBlockSelection: e, BlockSelection: t } =
                        this.Editor,
                    n = xt.anchorElement;
                if (
                    (e.isCrossBlockSelectionStarted &&
                        t.anyBlockSelected &&
                        xt.get().removeAllRanges(),
                    !n)
                )
                    return void (xt.range || this.Editor.InlineToolbar.close());
                const o = n.closest(`.${$t.CSS.content}`);
                ((null === o ||
                    o.closest(`.${xt.CSS.editorWrapper}`) !==
                        this.nodes.wrapper) &&
                    (this.Editor.InlineToolbar.containsNode(n) ||
                        this.Editor.InlineToolbar.close(),
                    'true' !== n.dataset.inlineToolbar)) ||
                    (this.Editor.BlockManager.currentBlock ||
                        this.Editor.BlockManager.setCurrentBlockByChildNode(n),
                    this.Editor.InlineToolbar.tryToShow(!0));
            }
            enableInputsEmptyMark() {
                function e(e) {
                    pt(e.target);
                }
                (this.readOnlyMutableListeners.on(
                    this.nodes.wrapper,
                    'input',
                    e,
                ),
                    this.readOnlyMutableListeners.on(
                        this.nodes.wrapper,
                        'focusin',
                        e,
                    ),
                    this.readOnlyMutableListeners.on(
                        this.nodes.wrapper,
                        'focusout',
                        e,
                    ));
            }
        },
    };
    class Wr {
        constructor(e) {
            let t, n;
            ((this.moduleInstances = {}),
                (this.eventsDispatcher = new vt()),
                (this.isReady = new Promise((e, o) => {
                    ((t = e), (n = o));
                })),
                Promise.resolve()
                    .then(async () => {
                        ((this.configuration = e),
                            this.validate(),
                            this.init(),
                            await this.start(),
                            await this.render());
                        const {
                            BlockManager: n,
                            Caret: o,
                            UI: i,
                            ModificationsObserver: r,
                        } = this.moduleInstances;
                        (i.checkEmptiness(),
                            r.enable(),
                            !0 === this.configuration.autofocus &&
                                !0 !== this.configuration.readOnly &&
                                o.setToBlock(n.blocks[0], o.positions.START),
                            t());
                    })
                    .catch((e) => {
                        (Ue(`Editor.js is not ready because of ${e}`, 'error'),
                            n(e));
                    }));
        }
        set configuration(e) {
            var t, n;
            (Ge(e) ? (this.config = { ...e }) : (this.config = { holder: e }),
                lt(!!this.config.holderId, 'config.holderId', 'config.holder'),
                this.config.holderId &&
                    !this.config.holder &&
                    ((this.config.holder = this.config.holderId),
                    (this.config.holderId = null)),
                null == this.config.holder && (this.config.holder = 'editorjs'),
                this.config.logLevel || (this.config.logLevel = Le.VERBOSE),
                (function (e) {
                    ze.logLevel = e;
                })(this.config.logLevel),
                lt(
                    !!this.config.initialBlock,
                    'config.initialBlock',
                    'config.defaultBlock',
                ),
                (this.config.defaultBlock =
                    this.config.defaultBlock ||
                    this.config.initialBlock ||
                    'paragraph'),
                (this.config.minHeight =
                    void 0 !== this.config.minHeight
                        ? this.config.minHeight
                        : 300));
            const o = { type: this.config.defaultBlock, data: {} };
            ((this.config.placeholder = this.config.placeholder || !1),
                (this.config.sanitizer = this.config.sanitizer || {
                    p: !0,
                    b: !0,
                    a: !0,
                }),
                (this.config.hideToolbar =
                    !!this.config.hideToolbar && this.config.hideToolbar),
                (this.config.tools = this.config.tools || {}),
                (this.config.i18n = this.config.i18n || {}),
                (this.config.data = this.config.data || { blocks: [] }),
                (this.config.onReady = this.config.onReady || (() => {})),
                (this.config.onChange = this.config.onChange || (() => {})),
                (this.config.inlineToolbar =
                    void 0 === this.config.inlineToolbar ||
                    this.config.inlineToolbar),
                (Ze(this.config.data) ||
                    !this.config.data.blocks ||
                    0 === this.config.data.blocks.length) &&
                    (this.config.data = { blocks: [o] }),
                (this.config.readOnly = this.config.readOnly || !1),
                null != (t = this.config.i18n) &&
                    t.messages &&
                    mt.setDictionary(this.config.i18n.messages),
                (this.config.i18n.direction =
                    (null == (n = this.config.i18n) ? void 0 : n.direction) ||
                    'ltr'));
        }
        get configuration() {
            return this.config;
        }
        validate() {
            const { holderId: e, holder: t } = this.config;
            if (e && t)
                throw Error(
                    "«holderId» and «holder» param can't assign at the same time.",
                );
            if (Ke(t) && !ut.get(t))
                throw Error(
                    `element with ID «${t}» is missing. Pass correct holder's ID.`,
                );
            if (t && Ge(t) && !ut.isElement(t))
                throw Error('«holder» value must be an Element node');
        }
        init() {
            (this.constructModules(), this.configureModules());
        }
        async start() {
            await [
                'Tools',
                'UI',
                'BlockManager',
                'Paste',
                'BlockSelection',
                'RectangleSelection',
                'CrossBlockSelection',
                'ReadOnly',
            ].reduce(
                (e, t) =>
                    e.then(async () => {
                        try {
                            await this.moduleInstances[t].prepare();
                        } catch (e) {
                            if (e instanceof bt) throw new Error(e.message);
                            Ue(
                                `Module ${t} was skipped because of %o`,
                                'warn',
                                e,
                            );
                        }
                    }),
                Promise.resolve(),
            );
        }
        render() {
            return this.moduleInstances.Renderer.render(
                this.config.data.blocks,
            );
        }
        constructModules() {
            Object.entries(Ur).forEach(([e, t]) => {
                try {
                    this.moduleInstances[e] = new t({
                        config: this.configuration,
                        eventsDispatcher: this.eventsDispatcher,
                    });
                } catch (t) {
                    Ue(
                        '[constructModules]',
                        `Module ${e} skipped because`,
                        'error',
                        t,
                    );
                }
            });
        }
        configureModules() {
            for (const e in this.moduleInstances)
                Object.prototype.hasOwnProperty.call(this.moduleInstances, e) &&
                    (this.moduleInstances[e].state = this.getModulesDiff(e));
        }
        getModulesDiff(e) {
            const t = {};
            for (const n in this.moduleInstances)
                n !== e && (t[n] = this.moduleInstances[n]);
            return t;
        }
    }
    /**
     * Editor.js
     *
     * @license Apache-2.0
     * @see Editor.js <https://editorjs.io>
     * @author CodeX Team <https://codex.so>
     */ class qr {
        static get version() {
            return '2.31.0-rc.7';
        }
        constructor(e) {
            let t = () => {};
            Ge(e) && Ve(e.onReady) && (t = e.onReady);
            const n = new Wr(e);
            this.isReady = n.isReady.then(() => {
                (this.exportAPI(n), t());
            });
        }
        exportAPI(e) {
            (['configuration'].forEach((t) => {
                this[t] = e[t];
            }),
                (this.destroy = () => {
                    (Object.values(e.moduleInstances).forEach((e) => {
                        (Ve(e.destroy) && e.destroy(), e.listeners.removeAll());
                    }),
                        null == Yt || Yt.destroy(),
                        (Yt = null),
                        (e = null));
                    for (const e in this)
                        Object.prototype.hasOwnProperty.call(this, e) &&
                            delete this[e];
                    Object.setPrototypeOf(this, null);
                }),
                Object.setPrototypeOf(this, e.moduleInstances.API.methods),
                delete this.exportAPI,
                Object.entries({
                    blocks: { clear: 'clear', render: 'render' },
                    caret: { focus: 'focus' },
                    events: { on: 'on', off: 'off', emit: 'emit' },
                    saver: { save: 'save' },
                }).forEach(([t, n]) => {
                    Object.entries(n).forEach(([n, o]) => {
                        this[o] = e.moduleInstances.API.methods[t][n];
                    });
                }));
        }
    }
    const Vr = {
            Version: '2.1.15',
            FileVersion: '0',
            Name: 'Unnamed Language',
            CaseSensitive: !1,
            IgnoreDiacritics: !0,
            ShowEtymology: !1,
            ShowInflection: !1,
            Inflections: [],
            UseLects: !1,
            HeaderTags: '',
            Alphabet: 'a b c d e f g h i j k l m n o p q r s t u v w x y z',
            Lexicon: {},
            Etymologies: {},
            Relatives: {},
            Pronunciations: {
                General:
                    'Use this field to write pronunciation rules to automatically transcribe your orthography in IPA. For example,\nth > θ\nThis rule will automatically transcribe any ⟨th⟩ in your orthography as [θ].\nRules can be much more complex than this. You can read the section on pronunciation rules in the Help tab for more information.\n\nThe most common mistake has to do with the fact that rules are applied in order from top to bottom. For example, if you have the following rules,\ne > ɛ\nae > æ\nthen the second rule will never be applied, because the first rule will always change ⟨e⟩ to [ɛ] before the second rule can be applied.\nThe solution in almost all cases like this is to change the order of the rules so that the ones with the longest patterns are applied first.\nae > æ\ne > ɛ\nNow both rules will be applied correctly. You can test this by removing the first set of rules from this demo.',
            },
            Orthographies: [
                {
                    name: 'Romanization',
                    font: 'Gentium',
                    root: 'rom',
                    lect: 'General',
                    rules: 'Your romanized orthography is the base form of input.',
                    display: !0,
                },
            ],
            ShowOrthography: !1,
            ShowPronunciation: !0,
            Phonotactics: {
                General: {
                    Onsets: '',
                    Medials: '',
                    Codas: '',
                    Vowels: '',
                    Illegals: '',
                },
            },
            UseAdvancedPhonotactics: !1,
            AdvancedPhonotactics: {
                Categories: {},
                Syllables: [],
                Constructs: [{ enabled: !0, structures: '' }],
                Illegals: [],
            },
            Lects: ['General'],
            Phrasebook: {},
            Docs: { blocks: [] },
            Diagnostics: [],
            FileTheme: 'default',
            OrderByDate: !1,
            SaveLocation: '',
            UploadToDatabase: !1,
        },
        Gr = Te(Vr),
        Kr = Te(structuredClone(Vr)),
        Yr = Te(0),
        Xr = Te(''),
        Zr = Te(
            (() => {
                const e = {};
                for (const t of c(Kr).Lects) e[t] = '';
                return e;
            })(),
        ),
        Jr = Te(''),
        Qr = Te(
            (() => {
                const e = {};
                for (const t of c(Kr).Lects) e[t] = '';
                return e;
            })(),
        ),
        es = Te(''),
        ts = Te(''),
        ns = Te(new qr()),
        os = Te('styles/dark.css'),
        is = Te(!0),
        rs = Te(0),
        ss = Te(!1),
        as = Te(!1),
        ls = Te(''),
        cs = Te('');
    const { ipcRenderer: ds } = require('electron'),
        hs = require('fs'),
        us = require('path');
    function ps(e, t) {
        (c(Kr).Diagnostics.push({
            Time: Date(),
            Version: c(Kr).Version,
            OS: 'browser',
            Action: e,
            Error: t.stack,
        }),
            ms.error(t.stack));
    }
    function fs(e) {
        c(Kr).Diagnostics.push({
            Time: Date(),
            Version: c(Kr).Version,
            OS: 'browser',
            Action: e,
        });
    }
    function gs(e, t) {
        !(async function (e) {
            let t;
            (await ds.invoke('getUserDataPath').then((e) => {
                t = e;
            }),
                e(t));
        })((n) => {
            const o = n + us.sep + 'Diagnostics' + us.sep;
            hs.existsSync(o) || hs.mkdirSync(o);
            const i = new Date().toString(),
                r = o + 'logs',
                s =
                    'Report: ' +
                    t +
                    '\nTime: ' +
                    i +
                    '\nVersion: ' +
                    ds.invoke('getVersion') +
                    '\nFile: (v' +
                    c(Kr).Version +
                    ') ' +
                    c(Kr).Name +
                    '\n' +
                    e +
                    '\n';
            hs.existsSync(r)
                ? hs.appendFile(r, s, (e) => {
                      e && ms.error(String(e), !1);
                  })
                : hs.writeFile(r, s, (e) => {
                      e && ms.error(String(e), !1);
                  });
        });
    }
    const ms = {
            log: (e, t = !0) => {
                t && gs(e, 'info');
                const n = '[22m[4mLexc Debug[24m:[22m [32m' + e + '[39m';
                (console.log(n), ds.invoke('debug', n));
            },
            logObj: (e, t = '', n = !0) => {
                n &&
                    gs(
                        'Object: ' + t + '\n' + JSON.stringify(e, null, 2),
                        'info',
                    );
                const o =
                    '[22m[4mLexc Debug[24m[22m [32m' +
                    t +
                    ':[39m\n' +
                    JSON.stringify(e, null, 2).replace(/(.*):/g, '[32m$1[39m:');
                (ds.invoke('debug', o), console.log(o));
            },
            warn: (e, t = !0) => {
                t && gs(e, 'warning');
                const n = '[22m[4mLexc Debug[24m[22m [33m' + e + '[39m';
                (ds.invoke('debug', n), console.log(n));
            },
            error: (e, t = !0) => {
                t && gs(e, 'error');
                const n = '[22m[4mLexc Debug[24m[22m [31m' + e + '[39m';
                (ds.invoke('debug', n), console.log(n));
            },
            logAndReturn: (e, t = '', n = !1) => (ms.logObj(e, t, n), e),
        },
        bs = () => c(Kr);
    function vs(e) {
        let t = bs().HeaderTags.toLowerCase().trim().split(/\s+/);
        t[0] || (t = []);
        let n = bs().Alphabet;
        const o = bs().IgnoreDiacritics,
            i = bs().CaseSensitive,
            r = structuredClone(e),
            s = [];
        for (const e of t) {
            s.push([]);
            for (const t in r)
                (() => {
                    const e = [];
                    return (
                        r[t].Senses.forEach((t) => {
                            e.push(...t.tags);
                        }),
                        e
                    );
                })().includes(e) && s[s.length - 1].push(t);
            for (const e of s[s.length - 1]) delete r[e];
        }
        const a = [];
        for (const e in r) a.push(e);
        (s.push(a), (n = i ? n.trim() : n.trim().toLowerCase()));
        const l = n.split(/\s+/),
            c = Array.from(new Set(l)).sort((e, t) => t.length - e.length),
            d = [];
        for (const e of s) {
            const t = {},
                n = [];
            for (const r of e) {
                let e = i ? r : r.toLowerCase();
                e = o ? e.normalize('NFD').replace(/\p{Diacritic}/gu, '') : e;
                for (const t of c)
                    e = e.replace(
                        new RegExp(
                            `${t.replace(/[-[\]{}()*+?.,\\/^$|#\s]/g, '\\$&')}`,
                            'g',
                        ),
                        `${l.indexOf(t)}.`,
                    );
                const s = e.split('.');
                for (const e of s) s[s.indexOf(e)] = +e || 0;
                ((t[r] = s), n.push(s));
            }
            n.sort((e, t) => {
                for (const n of e) {
                    const o = t[e.indexOf(n)];
                    if (n !== o) return n - o;
                }
                return 0;
            });
            const r = [];
            for (const e in t) r.push([e, n.indexOf(t[e])]);
            r.sort((e, t) => e[1] - t[1]);
            for (let e = 0; e < r.length; e++) r[e] = r[e][0];
            for (const e of r) d.push(e);
        }
        return d;
    }
    const ys = require('vex-js');
    let ws = !1;
    function ks(e, t, n) {
        let o = t;
        return (
            e.forEach((e) => {
                try {
                    o = (function (e, t, n) {
                        var o, i, r;
                        const s = c(Kr).CaseSensitive ? 'g' : 'gi';
                        let [a, l, d] = e.split('/'),
                            h = (t = ' ' + t + ' ');
                        const u = /\{(.+?)\}/g,
                            p = /\^|#/g,
                            f = /\{!(.+(?:\s+.+)*)\}/g,
                            g = /\s*,\s*/g,
                            m = /\s+/g,
                            b = [
                                '∆',
                                '∇',
                                '⊂',
                                '⊃',
                                '⊆',
                                '⊇',
                                '⊄',
                                '⊅',
                                '⊈',
                                '⊉',
                                '⊊',
                                '⊋',
                                '⊍',
                                '⊎',
                                '⊏',
                                '⊐',
                                '⊑',
                                '⊒',
                                '⊓',
                                '⊔',
                                '⊕',
                                '⊖',
                                '⊗',
                                '⊘',
                                '⊙',
                                '⊚',
                                '⊛',
                                '⊜',
                                '⊝',
                                '⊞',
                                '⊟',
                                '⊠',
                                '⊡',
                                '⊢',
                                '⊣',
                                '⊤',
                                '⊥',
                                '⊦',
                                '⊧',
                                '⊨',
                                '⊩',
                                '⊪',
                                '⊫',
                                '⊬',
                                '⊭',
                                '⊮',
                                '⊯',
                                '⊰',
                                '⊱',
                                '⊲',
                                '⊳',
                                '⊴',
                                '⊵',
                                '⊶',
                                '⊷',
                                '⊸',
                                '⊹',
                                '⊺',
                                '⊻',
                                '⊼',
                                '⊽',
                                '⊾',
                                '⊿',
                                '⋀',
                                '⋁',
                                '⋂',
                                '⋃',
                                '⋄',
                                '⋇',
                                '⋈',
                                '⋉',
                                '⋊',
                                '⋋',
                                '⋌',
                                '⋍',
                                '⋎',
                                '⋏',
                                '⋐',
                                '⋑',
                                '⋒',
                                '⋓',
                                '⋔',
                                '⋕',
                                '⋖',
                                '⋗',
                                '⋘',
                                '⋙',
                                '⋚',
                                '⋛',
                                '⋜',
                                '⋝',
                                '⋞',
                                '⋟',
                                '⋠',
                                '⋡',
                                '⋢',
                                '⋣',
                                '⋤',
                                '⋥',
                                '⋦',
                                '⋧',
                                '⋨',
                                '⋩',
                                '⋪',
                                '⋫',
                                '⋬',
                                '⋭',
                                '⋮',
                                '⋯',
                                '⋰',
                                '⋱',
                                '⋲',
                                '⋳',
                                '⋴',
                                '⋵',
                                '⋶',
                                '⋷',
                                '⋸',
                                '⋹',
                                '⋺',
                                '⋻',
                                '⋼',
                                '⋽',
                                '⋾',
                                '⌁',
                                '⌂',
                                '⌃',
                                '⌄',
                                '⌅',
                                '⌆',
                                '⌇',
                                '⌈',
                                '⌉',
                                '⌊',
                                '⌋',
                                '⌑',
                                '⌒',
                                '⌓',
                                '⌔',
                                '⌕',
                                '⌖',
                                '⌗',
                                '⌘',
                                '⌙',
                            ];
                        let v = 0;
                        (null === (o = a.match(u)) ||
                            void 0 === o ||
                            o.forEach((e) => {
                                ((n[b[v]] = e.replace(u, '$1').split(g)),
                                    (a = a.replace(e, b[v])),
                                    v++);
                            }),
                            null === (i = l.match(u)) ||
                                void 0 === i ||
                                i.forEach((e) => {
                                    ((n[b[v]] = e.replace(u, '$1').split(g)),
                                        (l = l.replace(e, b[v])),
                                        v++);
                                }),
                            null === (r = d.match(u)) ||
                                void 0 === r ||
                                r.forEach((e) => {
                                    ((n[b[v]] = e.replace(u, '$1').split(g)),
                                        (d = d.replace(e, b[v])),
                                        v++);
                                }),
                            (a = a
                                .replaceAll(p, '\\s')
                                .replaceAll(f, '(?:(?!$1).)')
                                .replaceAll(m, '')),
                            (l = l.replaceAll(m, '')),
                            (d = d
                                .replaceAll(p, '\\s')
                                .replaceAll(f, '(?:(?!$1).)')
                                .replaceAll(m, '')));
                        let y = '(' + d.replace('_', `)${a}(`) + ')';
                        Object.entries(n).forEach(([e, t]) => {
                            y = y.replaceAll(e, `(?:${t.join('|')})`);
                        });
                        const w = a.split('').filter((e) => e in n),
                            k = l.split('').filter((e) => e in n),
                            x = d.split('').filter((e) => e in n);
                        function C(e) {
                            let o = d.replaceAll('\\b', ''),
                                i = [];
                            (x.length > 0 &&
                                (x.forEach((t) => {
                                    const o = e.match(
                                        new RegExp(`(?:${n[t].join('|')})`, s),
                                    );
                                    i.push([t, o]);
                                }),
                                (i = [...new Set(i)].sort(
                                    (e, t) => t.length - e.length,
                                ))),
                                i.forEach(([e, t]) => {
                                    t.forEach((t) => {
                                        o = o.replace(e, t);
                                    });
                                }),
                                (o = o.replaceAll('\\s', ' ')));
                            for (const e of o.match(/\(\?:(.*)\)\?/g)
                                ? o.match(/\(\?:(.*)\)\?/g)
                                : []) {
                                const i = e.replace(/\(\?:(.*)\)\?/g, '$1'),
                                    r = o.replace(e, i);
                                let l = '(' + r.replace('_', `)${a}(`) + ')';
                                (Object.entries(n).forEach(([e, t]) => {
                                    l = l.replaceAll(e, `(?:${t.join('|')})`);
                                }),
                                    (o = t.match(new RegExp(l, s))
                                        ? r
                                        : o.replace(e, '')));
                            }
                            for (const e of o.match(/(.|\s)\?/g)
                                ? o.match(/(.|\s)\?/g)
                                : []) {
                                const i = e.replace(/(.|\s)\?/g, '$1'),
                                    r = o.replace(e, i);
                                let l = '(' + r.replace('_', `)${a}(`) + ')';
                                (Object.entries(n).forEach(([e, t]) => {
                                    l = l.replaceAll(e, `(?:${t.join('|')})`);
                                }),
                                    (o = t.match(new RegExp(l, s))
                                        ? r
                                        : o.replace(e, '')));
                            }
                            const r = o.replaceAll('?', '').indexOf('_'),
                                l = w[0]
                                    ? '_' === d
                                        ? e.length
                                        : (() => {
                                              let t = 0;
                                              return (
                                                  Object.entries(n)
                                                      .filter(([e]) =>
                                                          w.includes(e),
                                                      )
                                                      .forEach(([, n]) => {
                                                          const o = n.find(
                                                              (t) =>
                                                                  e.includes(t),
                                                          );
                                                          t += o ? o.length : 0;
                                                      }),
                                                  t
                                              );
                                          })()
                                    : a.length;
                            return (e = e.slice(r, r + l));
                        }
                        const E = t.match(new RegExp(y, s));
                        if (
                            (E && l.includes('_')
                                ? E.forEach((e) => {
                                      const t = C(e);
                                      h = h.replace(t, l.replaceAll('_', t));
                                  })
                                : (h = h.replaceAll(
                                      new RegExp(y, s),
                                      `$1${l}$2`,
                                  )),
                            k[0] && w[0])
                        ) {
                            let e = [];
                            E &&
                                ((e = E.map((e) => {
                                    const t = C(e),
                                        o = [
                                            t,
                                            k[
                                                w.indexOf(
                                                    Object.keys(n).find((e) =>
                                                        n[e].some(
                                                            (n) =>
                                                                n === t &&
                                                                w.includes(e),
                                                        ),
                                                    ),
                                                )
                                            ],
                                        ];
                                    return [
                                        o[0],
                                        o[1],
                                        n[o[1]][
                                            n[w[k.indexOf(o[1])]].indexOf(o[0])
                                        ]
                                            ? n[o[1]][
                                                  n[w[k.indexOf(o[1])]].indexOf(
                                                      o[0],
                                                  )
                                              ]
                                            : o[0],
                                    ];
                                })),
                                E.forEach((t, n) => {
                                    h = h.replace(
                                        t.replace(e[n][0], e[n][1]),
                                        t.replace(e[n][0], e[n][2]),
                                    );
                                }));
                        }
                        return h
                            .replaceAll(/[∅⦰]/g, '')
                            .replaceAll('␠', ' ')
                            .trim();
                    })(e, o, n);
                } catch (n) {
                    (ps(`Attempted to apply rule '${e}' to '${t}'`, n),
                        ws ||
                            ((ws = !0),
                            ys.dialog.alert({
                                message: `An error occurred while trying to apply rule '${e}' to '${t}'. The rule may be invalid. If you think this is a bug, please contact the developer.`,
                                callback: () => {
                                    ws = !1;
                                },
                            })));
                }
            }),
            o
        );
    }
    function xs(e) {
        return {
            rules: e
                .split(/\n|;/)
                .map((e) => e.trim())
                .filter((e) => e.match(/^.*(?:\/|>).*/))
                .map((e) =>
                    e.match(/\/.*_.*$/)
                        ? e
                        : e.match(/\/\s*$/)
                          ? e + '_'
                          : e + '/_',
                )
                .map((e) =>
                    e
                        .split(/(?:\/|>)/)
                        .map((e) => e.trim())
                        .join('/'),
                )
                .filter(
                    (e) =>
                        e.match(/^.+?\/.*?\/.*?_.*?$/) ||
                        e.match(/^.*?\/.+?\/.*?_.*?$/),
                ),
            categories: Object.fromEntries(
                e
                    .split('\n')
                    .map((e) => e.trim())
                    .filter((e) => e.match(/^.*::.*$/))
                    .map((e) => e.split('::'))
                    .map(([e, t]) => [
                        e.trim(),
                        t.split(',').map((e) => e.trim()),
                    ]),
            ),
        };
    }
    const Cs = () => c(Kr);
    function Es(e, t, n = !1) {
        let o;
        o = n ? n.Pronunciations[t] : Cs().Pronunciations[t];
        const i = xs(o);
        return ks(i.rules, e, i.categories);
    }
    function Ss(e) {
        c(Zr)[e] = Es(c(Xr), e);
        const t = Cs().Lexicon;
        for (const n in t)
            t[n].pronunciations.hasOwnProperty(e) &&
                !1 === t[n].pronunciations[e].irregular &&
                (t[n].pronunciations[e].ipa = Es(n, e));
        ((Cs().Lexicon = t), (c(Qr)[e] = Es(c(Jr), e)));
        const n = Cs().Phrasebook;
        for (const t in n)
            for (const o in n[t])
                if (n[t][o].pronunciations.hasOwnProperty(e)) {
                    !1 === n[t][o].pronunciations[e].irregular &&
                        (n[t][o].pronunciations[e].ipa = Es(o, e));
                    for (const i in n[t][o].variants)
                        n[t][o].variants[i].pronunciations[e].ipa = Es(i, e);
                }
        Cs().Phrasebook = n;
    }
    const Ts = { left: 'right', right: 'left', top: 'bottom', bottom: 'top' };
    function _s(e) {
        let t, n;
        return {
            c() {
                ((t = new D(!1)), (n = B()), (t.a = n));
            },
            m(o, i) {
                (t.m(e[1], o, i), k(o, n, i));
            },
            p(e, n) {
                2 & n && t.p(e[1]);
            },
            d(e) {
                (e && x(n), e && t.d());
            },
        };
    }
    function Bs(t) {
        let n,
            o,
            i = !t[10] && _s(t);
        return {
            c() {
                ((n = E('div')),
                    i && i.c(),
                    I(
                        n,
                        'class',
                        (o =
                            'tooltip animation-' +
                            t[8] +
                            ' ' +
                            t[0] +
                            ' ' +
                            t[4] +
                            ' svelte-ddnkaq'),
                    ),
                    M(n, 'min-width', t[7] + 'px'),
                    M(n, 'max-width', t[3] + 'px'),
                    M(n, 'text-align', t[2]),
                    R(n, 'show', t[9]),
                    R(n, 'arrowless', !t[5]));
            },
            m(e, o) {
                (k(e, n, o), i && i.m(n, null), t[14](n));
            },
            p(e, [t]) {
                (e[10]
                    ? i && (i.d(1), (i = null))
                    : i
                      ? i.p(e, t)
                      : ((i = _s(e)), i.c(), i.m(n, null)),
                    273 & t &&
                        o !==
                            (o =
                                'tooltip animation-' +
                                e[8] +
                                ' ' +
                                e[0] +
                                ' ' +
                                e[4] +
                                ' svelte-ddnkaq') &&
                        I(n, 'class', o),
                    128 & t && M(n, 'min-width', e[7] + 'px'),
                    8 & t && M(n, 'max-width', e[3] + 'px'),
                    4 & t && M(n, 'text-align', e[2]),
                    785 & t && R(n, 'show', e[9]),
                    305 & t && R(n, 'arrowless', !e[5]));
            },
            i: e,
            o: e,
            d(e) {
                (e && x(n), i && i.d(), t[14](null));
            },
        };
    }
    function Os(e, t, n) {
        let o,
            { content: i = '' } = t,
            { align: r = 'left' } = t,
            { position: s = 'top' } = t,
            { maxWidth: a = 200 } = t,
            { style: l = null } = t,
            { theme: c = '' } = t,
            { animation: d = '' } = t,
            { arrow: h = !0 } = t,
            { autoPosition: u = !1 } = t,
            p = null,
            f = 0,
            g = null,
            m = null,
            b = !1;
        return (
            K(() => {
                const e = d ? 200 : 0;
                if (
                    null !== p &&
                    (o &&
                        !g &&
                        (g = new i.component({ target: p, props: i.props })),
                    n(
                        7,
                        (f = ((e, t) => {
                            const n = e.getBoundingClientRect().width + 2,
                                o = window.getComputedStyle(e),
                                i =
                                    n -
                                    (parseInt(
                                        o.getPropertyValue('padding-left'),
                                        10,
                                    ) +
                                        parseInt(
                                            o.getPropertyValue('padding-right'),
                                            10,
                                        ));
                            return Math.round(Math.min(t, i || t));
                        })(p, a)),
                    ),
                    l && 'object' == typeof l)
                )
                    for (let e in l) {
                        const t = e
                                .replace(/-_$/g, '')
                                .replace(/([a-z0-9])([A-Z])/g, '$1-$2')
                                .replace(/([A-Z])([A-Z])(?=[a-z])/g, '$1-$2')
                                .toLowerCase(),
                            n = l[e];
                        p.style.setProperty(`--tooltip-${t}`, n);
                    }
                (u &&
                    !((e) => {
                        const t = e.getBoundingClientRect();
                        return (
                            t.top >= 0 &&
                            t.left >= 0 &&
                            t.bottom <=
                                (window.innerHeight ||
                                    document.documentElement.clientHeight) &&
                            t.right <=
                                (window.innerWidth ||
                                    document.documentElement.clientWidth)
                        );
                    })(p) &&
                    n(0, (s = Ts[s])),
                    d && n(8, (m = d)),
                    setTimeout(() => n(9, (b = !0)), e));
            }),
            (function (e) {
                G().$$.on_destroy.push(e);
            })(() => {
                g && (g.$destroy(), (g = null));
            }),
            (e.$$set = (e) => {
                ('content' in e && n(1, (i = e.content)),
                    'align' in e && n(2, (r = e.align)),
                    'position' in e && n(0, (s = e.position)),
                    'maxWidth' in e && n(3, (a = e.maxWidth)),
                    'style' in e && n(11, (l = e.style)),
                    'theme' in e && n(4, (c = e.theme)),
                    'animation' in e && n(12, (d = e.animation)),
                    'arrow' in e && n(5, (h = e.arrow)),
                    'autoPosition' in e && n(13, (u = e.autoPosition)));
            }),
            (e.$$.update = () => {
                2 & e.$$.dirty && n(10, (o = 'object' == typeof i));
            }),
            [
                s,
                i,
                r,
                a,
                c,
                h,
                p,
                f,
                m,
                b,
                o,
                l,
                d,
                u,
                function (e) {
                    Z[e ? 'unshift' : 'push'](() => {
                        ((p = e), n(6, p));
                    });
                },
            ]
        );
    }
    var Is = class extends Ee {
        constructor(e) {
            (super(),
                Ce(this, e, Os, Bs, s, {
                    content: 1,
                    align: 2,
                    position: 0,
                    maxWidth: 3,
                    style: 11,
                    theme: 4,
                    animation: 12,
                    arrow: 5,
                    autoPosition: 13,
                }));
        }
    };
    const Ls = (e, t) => {
        let n = null,
            o = e.getAttribute('title');
        o && (e.removeAttribute('title'), (t = { content: o, ...t }));
        const i = () => {
                n || (n = new Is({ target: e, props: t }));
            },
            r = () => {
                n && (n.$destroy(), (n = null));
            };
        return (
            e.addEventListener('mouseenter', i),
            e.addEventListener('mouseleave', r),
            (e.style.position = 'relative'),
            {
                destroy() {
                    (e.removeEventListener('mouseenter', i),
                        e.removeEventListener('mouseleave', r),
                        o && e.setAttribute('title', o));
                },
            }
        );
    };
    function As(e, t, n) {
        const o = e.slice();
        return ((o[2] = t[n]), o);
    }
    function Ps(e) {
        let t, n;
        function o(e, n) {
            return (
                3 & n && (t = null),
                null == t &&
                    (t = !!(
                        Object.keys(e[0]).length > 1 ||
                        e[1].UseLects ||
                        void 0 === e[0].General
                    )),
                t ? Ns : Ms
            );
        }
        let i = o(e, -1),
            r = i(e);
        return {
            c() {
                (r.c(), (n = B()));
            },
            m(e, t) {
                (r.m(e, t), k(e, n, t));
            },
            p(e, t) {
                i === (i = o(e, t)) && r
                    ? r.p(e, t)
                    : (r.d(1), (r = i(e)), r && (r.c(), r.m(n.parentNode, n)));
            },
            d(e) {
                (r.d(e), e && x(n));
            },
        };
    }
    function Ms(e) {
        let t,
            n,
            o,
            i = e[0].General.ipa + '',
            r = e[0].General.irregular && $s();
        return {
            c() {
                ((t = E('p')),
                    (n = T(i)),
                    (o = _()),
                    r && r.c(),
                    I(t, 'class', 'pronunciation'));
            },
            m(e, i) {
                (k(e, t, i), v(t, n), v(t, o), r && r.m(t, null));
            },
            p(e, o) {
                (1 & o && i !== (i = e[0].General.ipa + '') && A(n, i),
                    e[0].General.irregular
                        ? r || ((r = $s()), r.c(), r.m(t, null))
                        : r && (r.d(1), (r = null)));
            },
            d(e) {
                (e && x(t), r && r.d());
            },
        };
    }
    function Ns(e) {
        let t,
            n = Object.keys(e[0]),
            o = [];
        for (let t = 0; t < n.length; t += 1) o[t] = js(As(e, n, t));
        return {
            c() {
                for (let e = 0; e < o.length; e += 1) o[e].c();
                t = B();
            },
            m(e, n) {
                for (let t = 0; t < o.length; t += 1) o[t] && o[t].m(e, n);
                k(e, t, n);
            },
            p(e, i) {
                if (1 & i) {
                    let r;
                    for (n = Object.keys(e[0]), r = 0; r < n.length; r += 1) {
                        const s = As(e, n, r);
                        o[r]
                            ? o[r].p(s, i)
                            : ((o[r] = js(s)),
                              o[r].c(),
                              o[r].m(t.parentNode, t));
                    }
                    for (; r < o.length; r += 1) o[r].d(1);
                    o.length = n.length;
                }
            },
            d(e) {
                (C(o, e), e && x(t));
            },
        };
    }
    function $s(e) {
        let t, n, o;
        return {
            c() {
                ((t = E('span')),
                    (t.textContent = 'lightbulb'),
                    I(
                        t,
                        'title',
                        'irregular pronunciation: rules are not being applied',
                    ),
                    I(t, 'class', 'material-icons'),
                    M(t, 'font-size', '0.75em'),
                    M(t, 'margin-right', '-1em'));
            },
            m(e, i) {
                (k(e, t, i),
                    n ||
                        ((o = u(Ls.call(null, t, { position: 'bottom' }))),
                        (n = !0)));
            },
            d(e) {
                (e && x(t), (n = !1), o());
            },
        };
    }
    function Rs(e) {
        let t, n, o;
        return {
            c() {
                ((t = E('span')),
                    (t.textContent = 'lightbulb'),
                    I(
                        t,
                        'title',
                        'irregular pronunciation: rules are not being applied',
                    ),
                    I(t, 'class', 'material-icons'),
                    M(t, 'font-size', '0.75em'),
                    M(t, 'margin-right', '-1em'));
            },
            m(e, i) {
                (k(e, t, i),
                    n ||
                        ((o = u(Ls.call(null, t, { position: 'bottom' }))),
                        (n = !0)));
            },
            d(e) {
                (e && x(t), (n = !1), o());
            },
        };
    }
    function js(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c = e[2] + '',
            d = e[0][e[2]].ipa + '',
            h = e[0][e[2]].irregular && Rs();
        return {
            c() {
                ((t = E('p')),
                    (n = E('u')),
                    (o = T(c)),
                    (i = _()),
                    (r = E('span')),
                    (s = T(d)),
                    (a = _()),
                    h && h.c(),
                    (l = _()),
                    I(r, 'class', 'pronunciation'),
                    I(t, 'class', 'lect'));
            },
            m(e, c) {
                (k(e, t, c),
                    v(t, n),
                    v(n, o),
                    v(t, i),
                    v(t, r),
                    v(r, s),
                    v(r, a),
                    h && h.m(r, null),
                    v(t, l));
            },
            p(e, t) {
                (1 & t && c !== (c = e[2] + '') && A(o, c),
                    1 & t && d !== (d = e[0][e[2]].ipa + '') && A(s, d),
                    e[0][e[2]].irregular
                        ? h || ((h = Rs()), h.c(), h.m(r, null))
                        : h && (h.d(1), (h = null)));
            },
            d(e) {
                (e && x(t), h && h.d());
            },
        };
    }
    function Ds(t) {
        let n,
            o = t[1].ShowPronunciation && Ps(t);
        return {
            c() {
                (o && o.c(), (n = B()));
            },
            m(e, t) {
                (o && o.m(e, t), k(e, n, t));
            },
            p(e, [t]) {
                e[1].ShowPronunciation
                    ? o
                        ? o.p(e, t)
                        : ((o = Ps(e)), o.c(), o.m(n.parentNode, n))
                    : o && (o.d(1), (o = null));
            },
            i: e,
            o: e,
            d(e) {
                (o && o.d(e), e && x(n));
            },
        };
    }
    function Fs(e, t, n) {
        let o;
        d(e, Kr, (e) => n(1, (o = e)));
        let { pronunciations: i } = t;
        return (
            (e.$$set = (e) => {
                'pronunciations' in e && n(0, (i = e.pronunciations));
            }),
            [i, o]
        );
    }
    class Hs extends Ee {
        constructor(e) {
            (super(), Ce(this, e, Fs, Ds, s, { pronunciations: 0 }));
        }
    }
    function zs(e) {
        return e < 0.5 ? 4 * e * e * e : 0.5 * Math.pow(2 * e - 2, 3) + 1;
    }
    function Us(
        e,
        {
            delay: t = 0,
            duration: n = 400,
            easing: o = zs,
            amount: i = 5,
            opacity: r = 0,
        } = {},
    ) {
        const s = getComputedStyle(e),
            a = +s.opacity,
            l = 'none' === s.filter ? '' : s.filter,
            c = a * (1 - r),
            [d, h] = (function (e) {
                const t =
                    'string' == typeof e &&
                    e.match(/^\s*(-?[\d.]+)([^\s]*)\s*$/);
                return t ? [parseFloat(t[1]), t[2] || 'px'] : [e, 'px'];
            })(i);
        return {
            delay: t,
            duration: n,
            easing: o,
            css: (e, t) =>
                `opacity: ${a - c * t}; filter: ${l} blur(${t * d}${h});`,
        };
    }
    function Ws(
        e,
        { delay: t = 0, speed: n, duration: o, easing: i = zs } = {},
    ) {
        let r = e.getTotalLength();
        const s = getComputedStyle(e);
        return (
            'butt' !== s.strokeLinecap && (r += parseInt(s.strokeWidth)),
            void 0 === o
                ? (o = void 0 === n ? 800 : r / n)
                : 'function' == typeof o && (o = o(r)),
            {
                delay: t,
                duration: o,
                easing: i,
                css: (e, t) =>
                    `\n\t\t\tstroke-dasharray: ${r};\n\t\t\tstroke-dashoffset: ${t * r};\n\t\t`,
            }
        );
    }
    function qs(e, t, n) {
        const o = e.slice();
        return ((o[9] = t[n]), o);
    }
    function Vs(e, t, n) {
        const o = e.slice();
        return ((o[12] = t[n]), o);
    }
    function Gs(e, t, n) {
        const o = e.slice();
        return ((o[15] = t[n]), o);
    }
    function Ks(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c = e[1] ? '⏶' : '⏷',
            d = e[1] && !e[2] && Ys(e);
        return {
            c() {
                ((t = E('button')),
                    (n = T('Inflections ')),
                    (o = T(c)),
                    (i = _()),
                    d && d.c(),
                    (r = B()),
                    I(t, 'class', 'inflection hover-highlight'));
            },
            m(c, h) {
                (k(c, t, h),
                    v(t, n),
                    v(t, o),
                    k(c, i, h),
                    d && d.m(c, h),
                    k(c, r, h),
                    (s = !0),
                    a || ((l = O(t, 'click', e[8])), (a = !0)));
            },
            p(e, t) {
                ((!s || 2 & t) && c !== (c = e[1] ? '⏶' : '⏷') && A(o, c),
                    e[1] && !e[2]
                        ? d
                            ? (d.p(e, t), 6 & t && fe(d, 1))
                            : ((d = Ys(e)),
                              d.c(),
                              fe(d, 1),
                              d.m(r.parentNode, r))
                        : d &&
                          (ue(),
                          ge(d, 1, 1, () => {
                              d = null;
                          }),
                          pe()));
            },
            i(e) {
                s || (fe(d), (s = !0));
            },
            o(e) {
                (ge(d), (s = !1));
            },
            d(e) {
                (e && x(t), e && x(i), d && d.d(e), e && x(r), (a = !1), l());
            },
        };
    }
    function Ys(e) {
        let t,
            n,
            o,
            i = e[0].flat(),
            r = [];
        for (let t = 0; t < i.length; t += 1) r[t] = na(qs(e, i, t));
        return {
            c() {
                t = E('div');
                for (let e = 0; e < r.length; e += 1) r[e].c();
                I(t, 'class', 'inflection');
            },
            m(e, n) {
                k(e, t, n);
                for (let e = 0; e < r.length; e += 1) r[e] && r[e].m(t, null);
                o = !0;
            },
            p(e, n) {
                if (1 & n) {
                    let o;
                    for (i = e[0].flat(), o = 0; o < i.length; o += 1) {
                        const s = qs(e, i, o);
                        r[o]
                            ? r[o].p(s, n)
                            : ((r[o] = na(s)), r[o].c(), r[o].m(t, null));
                    }
                    for (; o < r.length; o += 1) r[o].d(1);
                    r.length = i.length;
                }
            },
            i(e) {
                o ||
                    (ne(() => {
                        o &&
                            (n ||
                                (n = be(
                                    t,
                                    Us,
                                    { amount: 10, duration: 333 },
                                    !0,
                                )),
                            n.run(1));
                    }),
                    (o = !0));
            },
            o(e) {
                (n || (n = be(t, Us, { amount: 10, duration: 333 }, !1)),
                    n.run(0),
                    (o = !1));
            },
            d(e) {
                (e && x(t), C(r, e), e && n && n.end());
            },
        };
    }
    function Xs(e) {
        let t,
            n = `h${e[9].data.level}`,
            o = `h${e[9].data.level}` && Zs(e);
        return {
            c() {
                (o && o.c(), (t = B()));
            },
            m(e, n) {
                (o && o.m(e, n), k(e, t, n));
            },
            p(e, i) {
                `h${e[9].data.level}`
                    ? n
                        ? s(n, `h${e[9].data.level}`)
                            ? (o.d(1),
                              (o = Zs(e)),
                              (n = `h${e[9].data.level}`),
                              o.c(),
                              o.m(t.parentNode, t))
                            : o.p(e, i)
                        : ((o = Zs(e)),
                          (n = `h${e[9].data.level}`),
                          o.c(),
                          o.m(t.parentNode, t))
                    : n && (o.d(1), (o = null), (n = `h${e[9].data.level}`));
            },
            d(e) {
                (e && x(t), o && o.d(e));
            },
        };
    }
    function Zs(e) {
        let t,
            n = e[9].data.text + '';
        return {
            c() {
                t = E(`h${e[9].data.level}`);
            },
            m(e, o) {
                (k(e, t, o), (t.innerHTML = n));
            },
            p(e, o) {
                1 & o && n !== (n = e[9].data.text + '') && (t.innerHTML = n);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Js(e) {
        let t,
            n = e[9].data.content,
            o = [];
        for (let t = 0; t < n.length; t += 1) o[t] = ea(Vs(e, n, t));
        return {
            c() {
                t = E('table');
                for (let e = 0; e < o.length; e += 1) o[e].c();
                M(t, 'margin', 'auto');
            },
            m(e, n) {
                k(e, t, n);
                for (let e = 0; e < o.length; e += 1) o[e] && o[e].m(t, null);
            },
            p(e, i) {
                if (1 & i) {
                    let r;
                    for (n = e[9].data.content, r = 0; r < n.length; r += 1) {
                        const s = Vs(e, n, r);
                        o[r]
                            ? o[r].p(s, i)
                            : ((o[r] = ea(s)), o[r].c(), o[r].m(t, null));
                    }
                    for (; r < o.length; r += 1) o[r].d(1);
                    o.length = n.length;
                }
            },
            d(e) {
                (e && x(t), C(o, e));
            },
        };
    }
    function Qs(e) {
        let t,
            n = e[15] + '';
        return {
            c() {
                t = E('td');
            },
            m(e, o) {
                (k(e, t, o), (t.innerHTML = n));
            },
            p(e, o) {
                1 & o && n !== (n = e[15] + '') && (t.innerHTML = n);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function ea(e) {
        let t,
            n,
            o = e[12],
            i = [];
        for (let t = 0; t < o.length; t += 1) i[t] = Qs(Gs(e, o, t));
        return {
            c() {
                t = E('tr');
                for (let e = 0; e < i.length; e += 1) i[e].c();
                n = _();
            },
            m(e, o) {
                k(e, t, o);
                for (let e = 0; e < i.length; e += 1) i[e] && i[e].m(t, null);
                v(t, n);
            },
            p(e, r) {
                if (1 & r) {
                    let s;
                    for (o = e[12], s = 0; s < o.length; s += 1) {
                        const a = Gs(e, o, s);
                        i[s]
                            ? i[s].p(a, r)
                            : ((i[s] = Qs(a)), i[s].c(), i[s].m(t, n));
                    }
                    for (; s < i.length; s += 1) i[s].d(1);
                    i.length = o.length;
                }
            },
            d(e) {
                (e && x(t), C(i, e));
            },
        };
    }
    function ta(e) {
        let t,
            n = e[9].data.text + '';
        return {
            c() {
                t = E('p');
            },
            m(e, o) {
                (k(e, t, o), (t.innerHTML = n));
            },
            p(e, o) {
                1 & o && n !== (n = e[9].data.text + '') && (t.innerHTML = n);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function na(e) {
        let t,
            n,
            o,
            i = 'header' === e[9].type && Xs(e),
            r = 'table' === e[9].type && Js(e),
            s = 'paragraph' === e[9].type && ta(e);
        return {
            c() {
                (i && i.c(),
                    (t = _()),
                    r && r.c(),
                    (n = _()),
                    s && s.c(),
                    (o = B()));
            },
            m(e, a) {
                (i && i.m(e, a),
                    k(e, t, a),
                    r && r.m(e, a),
                    k(e, n, a),
                    s && s.m(e, a),
                    k(e, o, a));
            },
            p(e, a) {
                ('header' === e[9].type
                    ? i
                        ? i.p(e, a)
                        : ((i = Xs(e)), i.c(), i.m(t.parentNode, t))
                    : i && (i.d(1), (i = null)),
                    'table' === e[9].type
                        ? r
                            ? r.p(e, a)
                            : ((r = Js(e)), r.c(), r.m(n.parentNode, n))
                        : r && (r.d(1), (r = null)),
                    'paragraph' === e[9].type
                        ? s
                            ? s.p(e, a)
                            : ((s = ta(e)), s.c(), s.m(o.parentNode, o))
                        : s && (s.d(1), (s = null)));
            },
            d(e) {
                (i && i.d(e),
                    e && x(t),
                    r && r.d(e),
                    e && x(n),
                    s && s.d(e),
                    e && x(o));
            },
        };
    }
    function oa(e) {
        let t,
            n,
            o = e[0][0] && Ks(e);
        return {
            c() {
                (o && o.c(), (t = B()));
            },
            m(e, i) {
                (o && o.m(e, i), k(e, t, i), (n = !0));
            },
            p(e, [n]) {
                e[0][0]
                    ? o
                        ? (o.p(e, n), 1 & n && fe(o, 1))
                        : ((o = Ks(e)), o.c(), fe(o, 1), o.m(t.parentNode, t))
                    : o &&
                      (ue(),
                      ge(o, 1, 1, () => {
                          o = null;
                      }),
                      pe());
            },
            i(e) {
                n || (fe(o), (n = !0));
            },
            o(e) {
                (ge(o), (n = !1));
            },
            d(e) {
                (o && o.d(e), e && x(t));
            },
        };
    }
    function ia(e, t, n) {
        let o, i, r;
        (d(e, Kr, (e) => n(6, (o = e))),
            d(e, as, (e) => n(7, (i = e))),
            d(e, ss, (e) => n(2, (r = e))));
        let s,
            { word: a } = t,
            { tags: l } = t,
            { readFromReference: c = !1 } = t,
            h = !1;
        return (
            (e.$$set = (e) => {
                ('word' in e && n(3, (a = e.word)),
                    'tags' in e && n(4, (l = e.tags)),
                    'readFromReference' in e &&
                        n(5, (c = e.readFromReference)));
            }),
            (e.$$.update = () => {
                if (249 & e.$$.dirty) {
                    (o.Inflections, o.Lexicon);
                    let e = '';
                    (n(
                        0,
                        (s = structuredClone(
                            c && 'object' == typeof i
                                ? i.Inflections
                                : o.Inflections,
                        )
                            .filter((e) => {
                                let t;
                                try {
                                    t = new RegExp(e.filter);
                                } catch (n) {
                                    (ms.error(
                                        `Invalid regular expression: /${e.filter}/`,
                                    ),
                                        (t = /.+/));
                                }
                                return (
                                    (!e.tags[0] ||
                                        e.tags.some((e) => l.includes(e))) &&
                                    a.match(t)
                                );
                            })
                            .map(
                                (t) => (
                                    (e += t.categories + '\n'),
                                    t.tables.blocks
                                ),
                            )),
                    ),
                        s.forEach((t, o) => {
                            t.forEach((t, i) => {
                                'table' === t.type &&
                                    t.data.content.forEach((t, r) => {
                                        t.forEach((t, l) => {
                                            const c = xs(
                                                    (function (e) {
                                                        const t =
                                                            document.createElement(
                                                                'div',
                                                            );
                                                        return (
                                                            (t.innerHTML = e),
                                                            t.textContent
                                                        );
                                                    })(t),
                                                ).rules,
                                                d = xs(e).categories;
                                            c[0] &&
                                                n(
                                                    0,
                                                    (s[o][i].data.content[r][
                                                        l
                                                    ] = ks(c, a, d)),
                                                    s,
                                                );
                                        });
                                    });
                            });
                        }));
                }
            }),
            [s, h, r, a, l, c, o, i, () => n(1, (h = !h))]
        );
    }
    class ra extends Ee {
        constructor(e) {
            (super(),
                Ce(this, e, ia, oa, s, {
                    word: 3,
                    tags: 4,
                    readFromReference: 5,
                }));
        }
    }
    function sa() {
        return {
            async: !1,
            baseUrl: null,
            breaks: !1,
            extensions: null,
            gfm: !0,
            headerIds: !0,
            headerPrefix: '',
            highlight: null,
            hooks: null,
            langPrefix: 'language-',
            mangle: !0,
            pedantic: !1,
            renderer: null,
            sanitize: !1,
            sanitizer: null,
            silent: !1,
            smartypants: !1,
            tokenizer: null,
            walkTokens: null,
            xhtml: !1,
        };
    }
    let aa = {
        async: !1,
        baseUrl: null,
        breaks: !1,
        extensions: null,
        gfm: !0,
        headerIds: !0,
        headerPrefix: '',
        highlight: null,
        hooks: null,
        langPrefix: 'language-',
        mangle: !0,
        pedantic: !1,
        renderer: null,
        sanitize: !1,
        sanitizer: null,
        silent: !1,
        smartypants: !1,
        tokenizer: null,
        walkTokens: null,
        xhtml: !1,
    };
    const la = /[&<>"']/,
        ca = new RegExp(la.source, 'g'),
        da = /[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/,
        ha = new RegExp(da.source, 'g'),
        ua = {
            '&': '&amp;',
            '<': '&lt;',
            '>': '&gt;',
            '"': '&quot;',
            "'": '&#39;',
        },
        pa = (e) => ua[e];
    function fa(e, t) {
        if (t) {
            if (la.test(e)) return e.replace(ca, pa);
        } else if (da.test(e)) return e.replace(ha, pa);
        return e;
    }
    const ga = /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi;
    function ma(e) {
        return e.replace(ga, (e, t) =>
            'colon' === (t = t.toLowerCase())
                ? ':'
                : '#' === t.charAt(0)
                  ? 'x' === t.charAt(1)
                      ? String.fromCharCode(parseInt(t.substring(2), 16))
                      : String.fromCharCode(+t.substring(1))
                  : '',
        );
    }
    const ba = /(^|[^\[])\^/g;
    function va(e, t) {
        ((e = 'string' == typeof e ? e : e.source), (t = t || ''));
        const n = {
            replace: (t, o) => (
                (o = (o = o.source || o).replace(ba, '$1')),
                (e = e.replace(t, o)),
                n
            ),
            getRegex: () => new RegExp(e, t),
        };
        return n;
    }
    const ya = /[^\w:]/g,
        wa = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;
    function ka(e, t, n) {
        if (e) {
            let e;
            try {
                e = decodeURIComponent(ma(n)).replace(ya, '').toLowerCase();
            } catch (e) {
                return null;
            }
            if (
                0 === e.indexOf('javascript:') ||
                0 === e.indexOf('vbscript:') ||
                0 === e.indexOf('data:')
            )
                return null;
        }
        t &&
            !wa.test(n) &&
            (n = (function (e, t) {
                xa[' ' + e] ||
                    (Ca.test(e)
                        ? (xa[' ' + e] = e + '/')
                        : (xa[' ' + e] = Ba(e, '/', !0)));
                e = xa[' ' + e];
                const n = -1 === e.indexOf(':');
                return '//' === t.substring(0, 2)
                    ? n
                        ? t
                        : e.replace(Ea, '$1') + t
                    : '/' === t.charAt(0)
                      ? n
                          ? t
                          : e.replace(Sa, '$1') + t
                      : e + t;
            })(t, n));
        try {
            n = encodeURI(n).replace(/%25/g, '%');
        } catch (e) {
            return null;
        }
        return n;
    }
    const xa = {},
        Ca = /^[^:]+:\/*[^/]*$/,
        Ea = /^([^:]+:)[\s\S]*$/,
        Sa = /^([^:]+:\/*[^/]*)[\s\S]*$/;
    const Ta = { exec: function () {} };
    function _a(e, t) {
        const n = e
            .replace(/\|/g, (e, t, n) => {
                let o = !1,
                    i = t;
                for (; --i >= 0 && '\\' === n[i]; ) o = !o;
                return o ? '|' : ' |';
            })
            .split(/ \|/);
        let o = 0;
        if (
            (n[0].trim() || n.shift(),
            n.length > 0 && !n[n.length - 1].trim() && n.pop(),
            n.length > t)
        )
            n.splice(t);
        else for (; n.length < t; ) n.push('');
        for (; o < n.length; o++) n[o] = n[o].trim().replace(/\\\|/g, '|');
        return n;
    }
    function Ba(e, t, n) {
        const o = e.length;
        if (0 === o) return '';
        let i = 0;
        for (; i < o; ) {
            const r = e.charAt(o - i - 1);
            if (r !== t || n) {
                if (r === t || !n) break;
                i++;
            } else i++;
        }
        return e.slice(0, o - i);
    }
    function Oa(e, t) {
        if (t < 1) return '';
        let n = '';
        for (; t > 1; ) (1 & t && (n += e), (t >>= 1), (e += e));
        return n + e;
    }
    function Ia(e, t, n, o) {
        const i = t.href,
            r = t.title ? fa(t.title) : null,
            s = e[1].replace(/\\([\[\]])/g, '$1');
        if ('!' !== e[0].charAt(0)) {
            o.state.inLink = !0;
            const e = {
                type: 'link',
                raw: n,
                href: i,
                title: r,
                text: s,
                tokens: o.inlineTokens(s),
            };
            return ((o.state.inLink = !1), e);
        }
        return { type: 'image', raw: n, href: i, title: r, text: fa(s) };
    }
    class La {
        constructor(e) {
            this.options = e || aa;
        }
        space(e) {
            const t = this.rules.block.newline.exec(e);
            if (t && t[0].length > 0) return { type: 'space', raw: t[0] };
        }
        code(e) {
            const t = this.rules.block.code.exec(e);
            if (t) {
                const e = t[0].replace(/^ {1,4}/gm, '');
                return {
                    type: 'code',
                    raw: t[0],
                    codeBlockStyle: 'indented',
                    text: this.options.pedantic ? e : Ba(e, '\n'),
                };
            }
        }
        fences(e) {
            const t = this.rules.block.fences.exec(e);
            if (t) {
                const e = t[0],
                    n = (function (e, t) {
                        const n = e.match(/^(\s+)(?:```)/);
                        if (null === n) return t;
                        const o = n[1];
                        return t
                            .split('\n')
                            .map((e) => {
                                const t = e.match(/^\s+/);
                                if (null === t) return e;
                                const [n] = t;
                                return n.length >= o.length
                                    ? e.slice(o.length)
                                    : e;
                            })
                            .join('\n');
                    })(e, t[3] || '');
                return {
                    type: 'code',
                    raw: e,
                    lang: t[2]
                        ? t[2].trim().replace(this.rules.inline._escapes, '$1')
                        : t[2],
                    text: n,
                };
            }
        }
        heading(e) {
            const t = this.rules.block.heading.exec(e);
            if (t) {
                let e = t[2].trim();
                if (/#$/.test(e)) {
                    const t = Ba(e, '#');
                    this.options.pedantic
                        ? (e = t.trim())
                        : (t && !/ $/.test(t)) || (e = t.trim());
                }
                return {
                    type: 'heading',
                    raw: t[0],
                    depth: t[1].length,
                    text: e,
                    tokens: this.lexer.inline(e),
                };
            }
        }
        hr(e) {
            const t = this.rules.block.hr.exec(e);
            if (t) return { type: 'hr', raw: t[0] };
        }
        blockquote(e) {
            const t = this.rules.block.blockquote.exec(e);
            if (t) {
                const e = t[0].replace(/^ *>[ \t]?/gm, ''),
                    n = this.lexer.state.top;
                this.lexer.state.top = !0;
                const o = this.lexer.blockTokens(e);
                return (
                    (this.lexer.state.top = n),
                    { type: 'blockquote', raw: t[0], tokens: o, text: e }
                );
            }
        }
        list(e) {
            let t = this.rules.block.list.exec(e);
            if (t) {
                let n,
                    o,
                    i,
                    r,
                    s,
                    a,
                    l,
                    c,
                    d,
                    h,
                    u,
                    p,
                    f = t[1].trim();
                const g = f.length > 1,
                    m = {
                        type: 'list',
                        raw: '',
                        ordered: g,
                        start: g ? +f.slice(0, -1) : '',
                        loose: !1,
                        items: [],
                    };
                ((f = g ? `\\d{1,9}\\${f.slice(-1)}` : `\\${f}`),
                    this.options.pedantic && (f = g ? f : '[*+-]'));
                const b = new RegExp(
                    `^( {0,3}${f})((?:[\t ][^\\n]*)?(?:\\n|$))`,
                );
                for (
                    ;
                    e &&
                    ((p = !1), (t = b.exec(e))) &&
                    !this.rules.block.hr.test(e);

                ) {
                    if (
                        ((n = t[0]),
                        (e = e.substring(n.length)),
                        (c = t[2]
                            .split('\n', 1)[0]
                            .replace(/^\t+/, (e) => ' '.repeat(3 * e.length))),
                        (d = e.split('\n', 1)[0]),
                        this.options.pedantic
                            ? ((r = 2), (u = c.trimLeft()))
                            : ((r = t[2].search(/[^ ]/)),
                              (r = r > 4 ? 1 : r),
                              (u = c.slice(r)),
                              (r += t[1].length)),
                        (a = !1),
                        !c &&
                            /^ *$/.test(d) &&
                            ((n += d + '\n'),
                            (e = e.substring(d.length + 1)),
                            (p = !0)),
                        !p)
                    ) {
                        const t = new RegExp(
                                `^ {0,${Math.min(3, r - 1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ \t][^\\n]*)?(?:\\n|$))`,
                            ),
                            o = new RegExp(
                                `^ {0,${Math.min(3, r - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`,
                            ),
                            i = new RegExp(
                                `^ {0,${Math.min(3, r - 1)}}(?:\`\`\`|~~~)`,
                            ),
                            s = new RegExp(`^ {0,${Math.min(3, r - 1)}}#`);
                        for (
                            ;
                            e &&
                            ((h = e.split('\n', 1)[0]),
                            (d = h),
                            this.options.pedantic &&
                                (d = d.replace(
                                    /^ {1,4}(?=( {4})*[^ ])/g,
                                    '  ',
                                )),
                            !i.test(d)) &&
                            !s.test(d) &&
                            !t.test(d) &&
                            !o.test(e);

                        ) {
                            if (d.search(/[^ ]/) >= r || !d.trim())
                                u += '\n' + d.slice(r);
                            else {
                                if (a) break;
                                if (c.search(/[^ ]/) >= 4) break;
                                if (i.test(c)) break;
                                if (s.test(c)) break;
                                if (o.test(c)) break;
                                u += '\n' + d;
                            }
                            (a || d.trim() || (a = !0),
                                (n += h + '\n'),
                                (e = e.substring(h.length + 1)),
                                (c = d.slice(r)));
                        }
                    }
                    (m.loose ||
                        (l ? (m.loose = !0) : /\n *\n *$/.test(n) && (l = !0)),
                        this.options.gfm &&
                            ((o = /^\[[ xX]\] /.exec(u)),
                            o &&
                                ((i = '[ ] ' !== o[0]),
                                (u = u.replace(/^\[[ xX]\] +/, '')))),
                        m.items.push({
                            type: 'list_item',
                            raw: n,
                            task: !!o,
                            checked: i,
                            loose: !1,
                            text: u,
                        }),
                        (m.raw += n));
                }
                ((m.items[m.items.length - 1].raw = n.trimRight()),
                    (m.items[m.items.length - 1].text = u.trimRight()),
                    (m.raw = m.raw.trimRight()));
                const v = m.items.length;
                for (s = 0; s < v; s++)
                    if (
                        ((this.lexer.state.top = !1),
                        (m.items[s].tokens = this.lexer.blockTokens(
                            m.items[s].text,
                            [],
                        )),
                        !m.loose)
                    ) {
                        const e = m.items[s].tokens.filter(
                                (e) => 'space' === e.type,
                            ),
                            t =
                                e.length > 0 &&
                                e.some((e) => /\n.*\n/.test(e.raw));
                        m.loose = t;
                    }
                if (m.loose) for (s = 0; s < v; s++) m.items[s].loose = !0;
                return m;
            }
        }
        html(e) {
            const t = this.rules.block.html.exec(e);
            if (t) {
                const e = {
                    type: 'html',
                    raw: t[0],
                    pre:
                        !this.options.sanitizer &&
                        ('pre' === t[1] ||
                            'script' === t[1] ||
                            'style' === t[1]),
                    text: t[0],
                };
                if (this.options.sanitize) {
                    const n = this.options.sanitizer
                        ? this.options.sanitizer(t[0])
                        : fa(t[0]);
                    ((e.type = 'paragraph'),
                        (e.text = n),
                        (e.tokens = this.lexer.inline(n)));
                }
                return e;
            }
        }
        def(e) {
            const t = this.rules.block.def.exec(e);
            if (t) {
                const e = t[1].toLowerCase().replace(/\s+/g, ' '),
                    n = t[2]
                        ? t[2]
                              .replace(/^<(.*)>$/, '$1')
                              .replace(this.rules.inline._escapes, '$1')
                        : '',
                    o = t[3]
                        ? t[3]
                              .substring(1, t[3].length - 1)
                              .replace(this.rules.inline._escapes, '$1')
                        : t[3];
                return { type: 'def', tag: e, raw: t[0], href: n, title: o };
            }
        }
        table(e) {
            const t = this.rules.block.table.exec(e);
            if (t) {
                const e = {
                    type: 'table',
                    header: _a(t[1]).map((e) => ({ text: e })),
                    align: t[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
                    rows:
                        t[3] && t[3].trim()
                            ? t[3].replace(/\n[ \t]*$/, '').split('\n')
                            : [],
                };
                if (e.header.length === e.align.length) {
                    e.raw = t[0];
                    let n,
                        o,
                        i,
                        r,
                        s = e.align.length;
                    for (n = 0; n < s; n++)
                        /^ *-+: *$/.test(e.align[n])
                            ? (e.align[n] = 'right')
                            : /^ *:-+: *$/.test(e.align[n])
                              ? (e.align[n] = 'center')
                              : /^ *:-+ *$/.test(e.align[n])
                                ? (e.align[n] = 'left')
                                : (e.align[n] = null);
                    for (s = e.rows.length, n = 0; n < s; n++)
                        e.rows[n] = _a(e.rows[n], e.header.length).map((e) => ({
                            text: e,
                        }));
                    for (s = e.header.length, o = 0; o < s; o++)
                        e.header[o].tokens = this.lexer.inline(
                            e.header[o].text,
                        );
                    for (s = e.rows.length, o = 0; o < s; o++)
                        for (r = e.rows[o], i = 0; i < r.length; i++)
                            r[i].tokens = this.lexer.inline(r[i].text);
                    return e;
                }
            }
        }
        lheading(e) {
            const t = this.rules.block.lheading.exec(e);
            if (t)
                return {
                    type: 'heading',
                    raw: t[0],
                    depth: '=' === t[2].charAt(0) ? 1 : 2,
                    text: t[1],
                    tokens: this.lexer.inline(t[1]),
                };
        }
        paragraph(e) {
            const t = this.rules.block.paragraph.exec(e);
            if (t) {
                const e =
                    '\n' === t[1].charAt(t[1].length - 1)
                        ? t[1].slice(0, -1)
                        : t[1];
                return {
                    type: 'paragraph',
                    raw: t[0],
                    text: e,
                    tokens: this.lexer.inline(e),
                };
            }
        }
        text(e) {
            const t = this.rules.block.text.exec(e);
            if (t)
                return {
                    type: 'text',
                    raw: t[0],
                    text: t[0],
                    tokens: this.lexer.inline(t[0]),
                };
        }
        escape(e) {
            const t = this.rules.inline.escape.exec(e);
            if (t) return { type: 'escape', raw: t[0], text: fa(t[1]) };
        }
        tag(e) {
            const t = this.rules.inline.tag.exec(e);
            if (t)
                return (
                    !this.lexer.state.inLink && /^<a /i.test(t[0])
                        ? (this.lexer.state.inLink = !0)
                        : this.lexer.state.inLink &&
                          /^<\/a>/i.test(t[0]) &&
                          (this.lexer.state.inLink = !1),
                    !this.lexer.state.inRawBlock &&
                    /^<(pre|code|kbd|script)(\s|>)/i.test(t[0])
                        ? (this.lexer.state.inRawBlock = !0)
                        : this.lexer.state.inRawBlock &&
                          /^<\/(pre|code|kbd|script)(\s|>)/i.test(t[0]) &&
                          (this.lexer.state.inRawBlock = !1),
                    {
                        type: this.options.sanitize ? 'text' : 'html',
                        raw: t[0],
                        inLink: this.lexer.state.inLink,
                        inRawBlock: this.lexer.state.inRawBlock,
                        text: this.options.sanitize
                            ? this.options.sanitizer
                                ? this.options.sanitizer(t[0])
                                : fa(t[0])
                            : t[0],
                    }
                );
        }
        link(e) {
            const t = this.rules.inline.link.exec(e);
            if (t) {
                const e = t[2].trim();
                if (!this.options.pedantic && /^</.test(e)) {
                    if (!/>$/.test(e)) return;
                    const t = Ba(e.slice(0, -1), '\\');
                    if ((e.length - t.length) % 2 == 0) return;
                } else {
                    const e = (function (e, t) {
                        if (-1 === e.indexOf(t[1])) return -1;
                        const n = e.length;
                        let o = 0,
                            i = 0;
                        for (; i < n; i++)
                            if ('\\' === e[i]) i++;
                            else if (e[i] === t[0]) o++;
                            else if (e[i] === t[1] && (o--, o < 0)) return i;
                        return -1;
                    })(t[2], '()');
                    if (e > -1) {
                        const n =
                            (0 === t[0].indexOf('!') ? 5 : 4) + t[1].length + e;
                        ((t[2] = t[2].substring(0, e)),
                            (t[0] = t[0].substring(0, n).trim()),
                            (t[3] = ''));
                    }
                }
                let n = t[2],
                    o = '';
                if (this.options.pedantic) {
                    const e = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(n);
                    e && ((n = e[1]), (o = e[3]));
                } else o = t[3] ? t[3].slice(1, -1) : '';
                return (
                    (n = n.trim()),
                    /^</.test(n) &&
                        (n =
                            this.options.pedantic && !/>$/.test(e)
                                ? n.slice(1)
                                : n.slice(1, -1)),
                    Ia(
                        t,
                        {
                            href: n
                                ? n.replace(this.rules.inline._escapes, '$1')
                                : n,
                            title: o
                                ? o.replace(this.rules.inline._escapes, '$1')
                                : o,
                        },
                        t[0],
                        this.lexer,
                    )
                );
            }
        }
        reflink(e, t) {
            let n;
            if (
                (n = this.rules.inline.reflink.exec(e)) ||
                (n = this.rules.inline.nolink.exec(e))
            ) {
                let e = (n[2] || n[1]).replace(/\s+/g, ' ');
                if (((e = t[e.toLowerCase()]), !e)) {
                    const e = n[0].charAt(0);
                    return { type: 'text', raw: e, text: e };
                }
                return Ia(n, e, n[0], this.lexer);
            }
        }
        emStrong(e, t, n = '') {
            let o = this.rules.inline.emStrong.lDelim.exec(e);
            if (!o) return;
            if (o[3] && n.match(/[\p{L}\p{N}]/u)) return;
            const i = o[1] || o[2] || '';
            if (
                !i ||
                (i && ('' === n || this.rules.inline.punctuation.exec(n)))
            ) {
                const n = o[0].length - 1;
                let i,
                    r,
                    s = n,
                    a = 0;
                const l =
                    '*' === o[0][0]
                        ? this.rules.inline.emStrong.rDelimAst
                        : this.rules.inline.emStrong.rDelimUnd;
                for (
                    l.lastIndex = 0, t = t.slice(-1 * e.length + n);
                    null != (o = l.exec(t));

                ) {
                    if (
                        ((i = o[1] || o[2] || o[3] || o[4] || o[5] || o[6]), !i)
                    )
                        continue;
                    if (((r = i.length), o[3] || o[4])) {
                        s += r;
                        continue;
                    }
                    if ((o[5] || o[6]) && n % 3 && !((n + r) % 3)) {
                        a += r;
                        continue;
                    }
                    if (((s -= r), s > 0)) continue;
                    r = Math.min(r, r + s + a);
                    const t = e.slice(
                        0,
                        n + o.index + (o[0].length - i.length) + r,
                    );
                    if (Math.min(n, r) % 2) {
                        const e = t.slice(1, -1);
                        return {
                            type: 'em',
                            raw: t,
                            text: e,
                            tokens: this.lexer.inlineTokens(e),
                        };
                    }
                    const l = t.slice(2, -2);
                    return {
                        type: 'strong',
                        raw: t,
                        text: l,
                        tokens: this.lexer.inlineTokens(l),
                    };
                }
            }
        }
        codespan(e) {
            const t = this.rules.inline.code.exec(e);
            if (t) {
                let e = t[2].replace(/\n/g, ' ');
                const n = /[^ ]/.test(e),
                    o = /^ /.test(e) && / $/.test(e);
                return (
                    n && o && (e = e.substring(1, e.length - 1)),
                    (e = fa(e, !0)),
                    { type: 'codespan', raw: t[0], text: e }
                );
            }
        }
        br(e) {
            const t = this.rules.inline.br.exec(e);
            if (t) return { type: 'br', raw: t[0] };
        }
        del(e) {
            const t = this.rules.inline.del.exec(e);
            if (t)
                return {
                    type: 'del',
                    raw: t[0],
                    text: t[2],
                    tokens: this.lexer.inlineTokens(t[2]),
                };
        }
        autolink(e, t) {
            const n = this.rules.inline.autolink.exec(e);
            if (n) {
                let e, o;
                return (
                    '@' === n[2]
                        ? ((e = fa(this.options.mangle ? t(n[1]) : n[1])),
                          (o = 'mailto:' + e))
                        : ((e = fa(n[1])), (o = e)),
                    {
                        type: 'link',
                        raw: n[0],
                        text: e,
                        href: o,
                        tokens: [{ type: 'text', raw: e, text: e }],
                    }
                );
            }
        }
        url(e, t) {
            let n;
            if ((n = this.rules.inline.url.exec(e))) {
                let e, o;
                if ('@' === n[2])
                    ((e = fa(this.options.mangle ? t(n[0]) : n[0])),
                        (o = 'mailto:' + e));
                else {
                    let t;
                    do {
                        ((t = n[0]),
                            (n[0] = this.rules.inline._backpedal.exec(
                                n[0],
                            )[0]));
                    } while (t !== n[0]);
                    ((e = fa(n[0])),
                        (o = 'www.' === n[1] ? 'http://' + n[0] : n[0]));
                }
                return {
                    type: 'link',
                    raw: n[0],
                    text: e,
                    href: o,
                    tokens: [{ type: 'text', raw: e, text: e }],
                };
            }
        }
        inlineText(e, t) {
            const n = this.rules.inline.text.exec(e);
            if (n) {
                let e;
                return (
                    (e = this.lexer.state.inRawBlock
                        ? this.options.sanitize
                            ? this.options.sanitizer
                                ? this.options.sanitizer(n[0])
                                : fa(n[0])
                            : n[0]
                        : fa(this.options.smartypants ? t(n[0]) : n[0])),
                    { type: 'text', raw: n[0], text: e }
                );
            }
        }
    }
    const Aa = {
        newline: /^(?: *(?:\n|$))+/,
        code: /^( {4}[^\n]+(?:\n(?: *(?:\n|$))*)?)+/,
        fences: /^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/,
        hr: /^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/,
        heading: /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/,
        blockquote: /^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,
        list: /^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/,
        html: '^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n *)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n *)+\\n|$))',
        def: /^ {0,3}\[(label)\]: *(?:\n *)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n *)?| *\n *)(title))? *(?:\n+|$)/,
        table: Ta,
        lheading: /^((?:.|\n(?!\n))+?)\n {0,3}(=+|-+) *(?:\n+|$)/,
        _paragraph:
            /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/,
        text: /^[^\n]+/,
        _label: /(?!\s*\])(?:\\.|[^\[\]\\])+/,
        _title: /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/,
    };
    ((Aa.def = va(Aa.def)
        .replace('label', Aa._label)
        .replace('title', Aa._title)
        .getRegex()),
        (Aa.bullet = /(?:[*+-]|\d{1,9}[.)])/),
        (Aa.listItemStart = va(/^( *)(bull) */)
            .replace('bull', Aa.bullet)
            .getRegex()),
        (Aa.list = va(Aa.list)
            .replace(/bull/g, Aa.bullet)
            .replace(
                'hr',
                '\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))',
            )
            .replace('def', '\\n+(?=' + Aa.def.source + ')')
            .getRegex()),
        (Aa._tag =
            'address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul'),
        (Aa._comment = /<!--(?!-?>)[\s\S]*?(?:-->|$)/),
        (Aa.html = va(Aa.html, 'i')
            .replace('comment', Aa._comment)
            .replace('tag', Aa._tag)
            .replace(
                'attribute',
                / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/,
            )
            .getRegex()),
        (Aa.paragraph = va(Aa._paragraph)
            .replace('hr', Aa.hr)
            .replace('heading', ' {0,3}#{1,6} ')
            .replace('|lheading', '')
            .replace('|table', '')
            .replace('blockquote', ' {0,3}>')
            .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n')
            .replace('list', ' {0,3}(?:[*+-]|1[.)]) ')
            .replace(
                'html',
                '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)',
            )
            .replace('tag', Aa._tag)
            .getRegex()),
        (Aa.blockquote = va(Aa.blockquote)
            .replace('paragraph', Aa.paragraph)
            .getRegex()),
        (Aa.normal = { ...Aa }),
        (Aa.gfm = {
            ...Aa.normal,
            table: '^ *([^\\n ].*\\|.*)\\n {0,3}(?:\\| *)?(:?-+:? *(?:\\| *:?-+:? *)*)(?:\\| *)?(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)',
        }),
        (Aa.gfm.table = va(Aa.gfm.table)
            .replace('hr', Aa.hr)
            .replace('heading', ' {0,3}#{1,6} ')
            .replace('blockquote', ' {0,3}>')
            .replace('code', ' {4}[^\\n]')
            .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n')
            .replace('list', ' {0,3}(?:[*+-]|1[.)]) ')
            .replace(
                'html',
                '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)',
            )
            .replace('tag', Aa._tag)
            .getRegex()),
        (Aa.gfm.paragraph = va(Aa._paragraph)
            .replace('hr', Aa.hr)
            .replace('heading', ' {0,3}#{1,6} ')
            .replace('|lheading', '')
            .replace('table', Aa.gfm.table)
            .replace('blockquote', ' {0,3}>')
            .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n')
            .replace('list', ' {0,3}(?:[*+-]|1[.)]) ')
            .replace(
                'html',
                '</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)',
            )
            .replace('tag', Aa._tag)
            .getRegex()),
        (Aa.pedantic = {
            ...Aa.normal,
            html: va(
                '^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|\'[^\']*\'|\\s[^\'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))',
            )
                .replace('comment', Aa._comment)
                .replace(
                    /tag/g,
                    '(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b',
                )
                .getRegex(),
            def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
            heading: /^(#{1,6})(.*)(?:\n+|$)/,
            fences: Ta,
            lheading: /^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/,
            paragraph: va(Aa.normal._paragraph)
                .replace('hr', Aa.hr)
                .replace('heading', ' *#{1,6} *[^\n]')
                .replace('lheading', Aa.lheading)
                .replace('blockquote', ' {0,3}>')
                .replace('|fences', '')
                .replace('|list', '')
                .replace('|html', '')
                .getRegex(),
        }));
    const Pa = {
        escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
        autolink: /^<(scheme:[^\s\x00-\x1f<>]*|email)>/,
        url: Ta,
        tag: '^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>',
        link: /^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,
        reflink: /^!?\[(label)\]\[(ref)\]/,
        nolink: /^!?\[(ref)\](?:\[\])?/,
        reflinkSearch: 'reflink|nolink(?!\\()',
        emStrong: {
            lDelim: /^(?:\*+(?:([punct_])|[^\s*]))|^_+(?:([punct*])|([^\s_]))/,
            rDelimAst:
                /^(?:[^_*\\]|\\.)*?\_\_(?:[^_*\\]|\\.)*?\*(?:[^_*\\]|\\.)*?(?=\_\_)|(?:[^*\\]|\\.)+(?=[^*])|[punct_](\*+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\*+)(?=[punct_\s]|$)|[punct_\s](\*+)(?=[^punct*_\s])|[\s](\*+)(?=[punct_])|[punct_](\*+)(?=[punct_])|(?:[^punct*_\s\\]|\\.)(\*+)(?=[^punct*_\s])/,
            rDelimUnd:
                /^(?:[^_*\\]|\\.)*?\*\*(?:[^_*\\]|\\.)*?\_(?:[^_*\\]|\\.)*?(?=\*\*)|(?:[^_\\]|\\.)+(?=[^_])|[punct*](\_+)(?=[\s]|$)|(?:[^punct*_\s\\]|\\.)(\_+)(?=[punct*\s]|$)|[punct*\s](\_+)(?=[^punct*_\s])|[\s](\_+)(?=[punct*])|[punct*](\_+)(?=[punct*])/,
        },
        code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
        br: /^( {2,}|\\)\n(?!\s*$)/,
        del: Ta,
        text: /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/,
        punctuation: /^([\spunctuation])/,
    };
    function Ma(e) {
        return e
            .replace(/---/g, '—')
            .replace(/--/g, '–')
            .replace(/(^|[-\u2014/(\[{"\s])'/g, '$1‘')
            .replace(/'/g, '’')
            .replace(/(^|[-\u2014/(\[{\u2018\s])"/g, '$1“')
            .replace(/"/g, '”')
            .replace(/\.{3}/g, '…');
    }
    function Na(e) {
        let t,
            n,
            o = '';
        const i = e.length;
        for (t = 0; t < i; t++)
            ((n = e.charCodeAt(t)),
                Math.random() > 0.5 && (n = 'x' + n.toString(16)),
                (o += '&#' + n + ';'));
        return o;
    }
    ((Pa._punctuation = '!"#$%&\'()+\\-.,/:;<=>?@\\[\\]`^{|}~'),
        (Pa.punctuation = va(Pa.punctuation)
            .replace(/punctuation/g, Pa._punctuation)
            .getRegex()),
        (Pa.blockSkip = /\[[^\]]*?\]\([^\)]*?\)|`[^`]*?`|<[^>]*?>/g),
        (Pa.escapedEmSt = /(?:^|[^\\])(?:\\\\)*\\[*_]/g),
        (Pa._comment = va(Aa._comment)
            .replace('(?:--\x3e|$)', '--\x3e')
            .getRegex()),
        (Pa.emStrong.lDelim = va(Pa.emStrong.lDelim)
            .replace(/punct/g, Pa._punctuation)
            .getRegex()),
        (Pa.emStrong.rDelimAst = va(Pa.emStrong.rDelimAst, 'g')
            .replace(/punct/g, Pa._punctuation)
            .getRegex()),
        (Pa.emStrong.rDelimUnd = va(Pa.emStrong.rDelimUnd, 'g')
            .replace(/punct/g, Pa._punctuation)
            .getRegex()),
        (Pa._escapes = /\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g),
        (Pa._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/),
        (Pa._email =
            /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/),
        (Pa.autolink = va(Pa.autolink)
            .replace('scheme', Pa._scheme)
            .replace('email', Pa._email)
            .getRegex()),
        (Pa._attribute =
            /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/),
        (Pa.tag = va(Pa.tag)
            .replace('comment', Pa._comment)
            .replace('attribute', Pa._attribute)
            .getRegex()),
        (Pa._label = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/),
        (Pa._href = /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/),
        (Pa._title =
            /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/),
        (Pa.link = va(Pa.link)
            .replace('label', Pa._label)
            .replace('href', Pa._href)
            .replace('title', Pa._title)
            .getRegex()),
        (Pa.reflink = va(Pa.reflink)
            .replace('label', Pa._label)
            .replace('ref', Aa._label)
            .getRegex()),
        (Pa.nolink = va(Pa.nolink).replace('ref', Aa._label).getRegex()),
        (Pa.reflinkSearch = va(Pa.reflinkSearch, 'g')
            .replace('reflink', Pa.reflink)
            .replace('nolink', Pa.nolink)
            .getRegex()),
        (Pa.normal = { ...Pa }),
        (Pa.pedantic = {
            ...Pa.normal,
            strong: {
                start: /^__|\*\*/,
                middle: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
                endAst: /\*\*(?!\*)/g,
                endUnd: /__(?!_)/g,
            },
            em: {
                start: /^_|\*/,
                middle: /^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,
                endAst: /\*(?!\*)/g,
                endUnd: /_(?!_)/g,
            },
            link: va(/^!?\[(label)\]\((.*?)\)/)
                .replace('label', Pa._label)
                .getRegex(),
            reflink: va(/^!?\[(label)\]\s*\[([^\]]*)\]/)
                .replace('label', Pa._label)
                .getRegex(),
        }),
        (Pa.gfm = {
            ...Pa.normal,
            escape: va(Pa.escape).replace('])', '~|])').getRegex(),
            _extended_email:
                /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
            url: /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
            _backpedal:
                /(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/,
            del: /^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,
            text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/,
        }),
        (Pa.gfm.url = va(Pa.gfm.url, 'i')
            .replace('email', Pa.gfm._extended_email)
            .getRegex()),
        (Pa.breaks = {
            ...Pa.gfm,
            br: va(Pa.br).replace('{2,}', '*').getRegex(),
            text: va(Pa.gfm.text)
                .replace('\\b_', '\\b_| {2,}\\n')
                .replace(/\{2,\}/g, '*')
                .getRegex(),
        }));
    class $a {
        constructor(e) {
            ((this.tokens = []),
                (this.tokens.links = Object.create(null)),
                (this.options = e || aa),
                (this.options.tokenizer = this.options.tokenizer || new La()),
                (this.tokenizer = this.options.tokenizer),
                (this.tokenizer.options = this.options),
                (this.tokenizer.lexer = this),
                (this.inlineQueue = []),
                (this.state = { inLink: !1, inRawBlock: !1, top: !0 }));
            const t = { block: Aa.normal, inline: Pa.normal };
            (this.options.pedantic
                ? ((t.block = Aa.pedantic), (t.inline = Pa.pedantic))
                : this.options.gfm &&
                  ((t.block = Aa.gfm),
                  this.options.breaks
                      ? (t.inline = Pa.breaks)
                      : (t.inline = Pa.gfm)),
                (this.tokenizer.rules = t));
        }
        static get rules() {
            return { block: Aa, inline: Pa };
        }
        static lex(e, t) {
            return new $a(t).lex(e);
        }
        static lexInline(e, t) {
            return new $a(t).inlineTokens(e);
        }
        lex(e) {
            let t;
            for (
                e = e.replace(/\r\n|\r/g, '\n'),
                    this.blockTokens(e, this.tokens);
                (t = this.inlineQueue.shift());

            )
                this.inlineTokens(t.src, t.tokens);
            return this.tokens;
        }
        blockTokens(e, t = []) {
            let n, o, i, r;
            for (
                e = this.options.pedantic
                    ? e.replace(/\t/g, '    ').replace(/^ +$/gm, '')
                    : e.replace(
                          /^( *)(\t+)/gm,
                          (e, t, n) => t + '    '.repeat(n.length),
                      );
                e;

            )
                if (
                    !(
                        this.options.extensions &&
                        this.options.extensions.block &&
                        this.options.extensions.block.some(
                            (o) =>
                                !!(n = o.call({ lexer: this }, e, t)) &&
                                ((e = e.substring(n.raw.length)),
                                t.push(n),
                                !0),
                        )
                    )
                )
                    if ((n = this.tokenizer.space(e)))
                        ((e = e.substring(n.raw.length)),
                            1 === n.raw.length && t.length > 0
                                ? (t[t.length - 1].raw += '\n')
                                : t.push(n));
                    else if ((n = this.tokenizer.code(e)))
                        ((e = e.substring(n.raw.length)),
                            (o = t[t.length - 1]),
                            !o || ('paragraph' !== o.type && 'text' !== o.type)
                                ? t.push(n)
                                : ((o.raw += '\n' + n.raw),
                                  (o.text += '\n' + n.text),
                                  (this.inlineQueue[
                                      this.inlineQueue.length - 1
                                  ].src = o.text)));
                    else if ((n = this.tokenizer.fences(e)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else if ((n = this.tokenizer.heading(e)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else if ((n = this.tokenizer.hr(e)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else if ((n = this.tokenizer.blockquote(e)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else if ((n = this.tokenizer.list(e)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else if ((n = this.tokenizer.html(e)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else if ((n = this.tokenizer.def(e)))
                        ((e = e.substring(n.raw.length)),
                            (o = t[t.length - 1]),
                            !o || ('paragraph' !== o.type && 'text' !== o.type)
                                ? this.tokens.links[n.tag] ||
                                  (this.tokens.links[n.tag] = {
                                      href: n.href,
                                      title: n.title,
                                  })
                                : ((o.raw += '\n' + n.raw),
                                  (o.text += '\n' + n.raw),
                                  (this.inlineQueue[
                                      this.inlineQueue.length - 1
                                  ].src = o.text)));
                    else if ((n = this.tokenizer.table(e)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else if ((n = this.tokenizer.lheading(e)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else {
                        if (
                            ((i = e),
                            this.options.extensions &&
                                this.options.extensions.startBlock)
                        ) {
                            let t = 1 / 0;
                            const n = e.slice(1);
                            let o;
                            (this.options.extensions.startBlock.forEach(
                                function (e) {
                                    ((o = e.call({ lexer: this }, n)),
                                        'number' == typeof o &&
                                            o >= 0 &&
                                            (t = Math.min(t, o)));
                                },
                            ),
                                t < 1 / 0 &&
                                    t >= 0 &&
                                    (i = e.substring(0, t + 1)));
                        }
                        if (this.state.top && (n = this.tokenizer.paragraph(i)))
                            ((o = t[t.length - 1]),
                                r && 'paragraph' === o.type
                                    ? ((o.raw += '\n' + n.raw),
                                      (o.text += '\n' + n.text),
                                      this.inlineQueue.pop(),
                                      (this.inlineQueue[
                                          this.inlineQueue.length - 1
                                      ].src = o.text))
                                    : t.push(n),
                                (r = i.length !== e.length),
                                (e = e.substring(n.raw.length)));
                        else if ((n = this.tokenizer.text(e)))
                            ((e = e.substring(n.raw.length)),
                                (o = t[t.length - 1]),
                                o && 'text' === o.type
                                    ? ((o.raw += '\n' + n.raw),
                                      (o.text += '\n' + n.text),
                                      this.inlineQueue.pop(),
                                      (this.inlineQueue[
                                          this.inlineQueue.length - 1
                                      ].src = o.text))
                                    : t.push(n));
                        else if (e) {
                            const t =
                                'Infinite loop on byte: ' + e.charCodeAt(0);
                            if (this.options.silent) {
                                console.error(t);
                                break;
                            }
                            throw new Error(t);
                        }
                    }
            return ((this.state.top = !0), t);
        }
        inline(e, t = []) {
            return (this.inlineQueue.push({ src: e, tokens: t }), t);
        }
        inlineTokens(e, t = []) {
            let n,
                o,
                i,
                r,
                s,
                a,
                l = e;
            if (this.tokens.links) {
                const e = Object.keys(this.tokens.links);
                if (e.length > 0)
                    for (
                        ;
                        null !=
                        (r = this.tokenizer.rules.inline.reflinkSearch.exec(l));

                    )
                        e.includes(r[0].slice(r[0].lastIndexOf('[') + 1, -1)) &&
                            (l =
                                l.slice(0, r.index) +
                                '[' +
                                Oa('a', r[0].length - 2) +
                                ']' +
                                l.slice(
                                    this.tokenizer.rules.inline.reflinkSearch
                                        .lastIndex,
                                ));
            }
            for (
                ;
                null != (r = this.tokenizer.rules.inline.blockSkip.exec(l));

            )
                l =
                    l.slice(0, r.index) +
                    '[' +
                    Oa('a', r[0].length - 2) +
                    ']' +
                    l.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
            for (
                ;
                null != (r = this.tokenizer.rules.inline.escapedEmSt.exec(l));

            )
                ((l =
                    l.slice(0, r.index + r[0].length - 2) +
                    '++' +
                    l.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex)),
                    this.tokenizer.rules.inline.escapedEmSt.lastIndex--);
            for (; e; )
                if (
                    (s || (a = ''),
                    (s = !1),
                    !(
                        this.options.extensions &&
                        this.options.extensions.inline &&
                        this.options.extensions.inline.some(
                            (o) =>
                                !!(n = o.call({ lexer: this }, e, t)) &&
                                ((e = e.substring(n.raw.length)),
                                t.push(n),
                                !0),
                        )
                    ))
                )
                    if ((n = this.tokenizer.escape(e)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else if ((n = this.tokenizer.tag(e)))
                        ((e = e.substring(n.raw.length)),
                            (o = t[t.length - 1]),
                            o && 'text' === n.type && 'text' === o.type
                                ? ((o.raw += n.raw), (o.text += n.text))
                                : t.push(n));
                    else if ((n = this.tokenizer.link(e)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else if ((n = this.tokenizer.reflink(e, this.tokens.links)))
                        ((e = e.substring(n.raw.length)),
                            (o = t[t.length - 1]),
                            o && 'text' === n.type && 'text' === o.type
                                ? ((o.raw += n.raw), (o.text += n.text))
                                : t.push(n));
                    else if ((n = this.tokenizer.emStrong(e, l, a)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else if ((n = this.tokenizer.codespan(e)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else if ((n = this.tokenizer.br(e)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else if ((n = this.tokenizer.del(e)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else if ((n = this.tokenizer.autolink(e, Na)))
                        ((e = e.substring(n.raw.length)), t.push(n));
                    else if (
                        this.state.inLink ||
                        !(n = this.tokenizer.url(e, Na))
                    ) {
                        if (
                            ((i = e),
                            this.options.extensions &&
                                this.options.extensions.startInline)
                        ) {
                            let t = 1 / 0;
                            const n = e.slice(1);
                            let o;
                            (this.options.extensions.startInline.forEach(
                                function (e) {
                                    ((o = e.call({ lexer: this }, n)),
                                        'number' == typeof o &&
                                            o >= 0 &&
                                            (t = Math.min(t, o)));
                                },
                            ),
                                t < 1 / 0 &&
                                    t >= 0 &&
                                    (i = e.substring(0, t + 1)));
                        }
                        if ((n = this.tokenizer.inlineText(i, Ma)))
                            ((e = e.substring(n.raw.length)),
                                '_' !== n.raw.slice(-1) &&
                                    (a = n.raw.slice(-1)),
                                (s = !0),
                                (o = t[t.length - 1]),
                                o && 'text' === o.type
                                    ? ((o.raw += n.raw), (o.text += n.text))
                                    : t.push(n));
                        else if (e) {
                            const t =
                                'Infinite loop on byte: ' + e.charCodeAt(0);
                            if (this.options.silent) {
                                console.error(t);
                                break;
                            }
                            throw new Error(t);
                        }
                    } else ((e = e.substring(n.raw.length)), t.push(n));
            return t;
        }
    }
    class Ra {
        constructor(e) {
            this.options = e || aa;
        }
        code(e, t, n) {
            const o = (t || '').match(/\S*/)[0];
            if (this.options.highlight) {
                const t = this.options.highlight(e, o);
                null != t && t !== e && ((n = !0), (e = t));
            }
            return (
                (e = e.replace(/\n$/, '') + '\n'),
                o
                    ? '<pre><code class="' +
                      this.options.langPrefix +
                      fa(o) +
                      '">' +
                      (n ? e : fa(e, !0)) +
                      '</code></pre>\n'
                    : '<pre><code>' + (n ? e : fa(e, !0)) + '</code></pre>\n'
            );
        }
        blockquote(e) {
            return `<blockquote>\n${e}</blockquote>\n`;
        }
        html(e) {
            return e;
        }
        heading(e, t, n, o) {
            if (this.options.headerIds) {
                return `<h${t} id="${this.options.headerPrefix + o.slug(n)}">${e}</h${t}>\n`;
            }
            return `<h${t}>${e}</h${t}>\n`;
        }
        hr() {
            return this.options.xhtml ? '<hr/>\n' : '<hr>\n';
        }
        list(e, t, n) {
            const o = t ? 'ol' : 'ul';
            return (
                '<' +
                o +
                (t && 1 !== n ? ' start="' + n + '"' : '') +
                '>\n' +
                e +
                '</' +
                o +
                '>\n'
            );
        }
        listitem(e) {
            return `<li>${e}</li>\n`;
        }
        checkbox(e) {
            return (
                '<input ' +
                (e ? 'checked="" ' : '') +
                'disabled="" type="checkbox"' +
                (this.options.xhtml ? ' /' : '') +
                '> '
            );
        }
        paragraph(e) {
            return `<p>${e}</p>\n`;
        }
        table(e, t) {
            return (
                t && (t = `<tbody>${t}</tbody>`),
                '<table>\n<thead>\n' + e + '</thead>\n' + t + '</table>\n'
            );
        }
        tablerow(e) {
            return `<tr>\n${e}</tr>\n`;
        }
        tablecell(e, t) {
            const n = t.header ? 'th' : 'td';
            return (
                (t.align ? `<${n} align="${t.align}">` : `<${n}>`) +
                e +
                `</${n}>\n`
            );
        }
        strong(e) {
            return `<strong>${e}</strong>`;
        }
        em(e) {
            return `<em>${e}</em>`;
        }
        codespan(e) {
            return `<code>${e}</code>`;
        }
        br() {
            return this.options.xhtml ? '<br/>' : '<br>';
        }
        del(e) {
            return `<del>${e}</del>`;
        }
        link(e, t, n) {
            if (
                null ===
                (e = ka(this.options.sanitize, this.options.baseUrl, e))
            )
                return n;
            let o = '<a href="' + e + '"';
            return (
                t && (o += ' title="' + t + '"'),
                (o += '>' + n + '</a>'),
                o
            );
        }
        image(e, t, n) {
            if (
                null ===
                (e = ka(this.options.sanitize, this.options.baseUrl, e))
            )
                return n;
            let o = `<img src="${e}" alt="${n}"`;
            return (
                t && (o += ` title="${t}"`),
                (o += this.options.xhtml ? '/>' : '>'),
                o
            );
        }
        text(e) {
            return e;
        }
    }
    class ja {
        strong(e) {
            return e;
        }
        em(e) {
            return e;
        }
        codespan(e) {
            return e;
        }
        del(e) {
            return e;
        }
        html(e) {
            return e;
        }
        text(e) {
            return e;
        }
        link(e, t, n) {
            return '' + n;
        }
        image(e, t, n) {
            return '' + n;
        }
        br() {
            return '';
        }
    }
    class Da {
        constructor() {
            this.seen = {};
        }
        serialize(e) {
            return e
                .toLowerCase()
                .trim()
                .replace(/<[!\/a-z].*?>/gi, '')
                .replace(
                    /[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g,
                    '',
                )
                .replace(/\s/g, '-');
        }
        getNextSafeSlug(e, t) {
            let n = e,
                o = 0;
            if (this.seen.hasOwnProperty(n)) {
                o = this.seen[e];
                do {
                    (o++, (n = e + '-' + o));
                } while (this.seen.hasOwnProperty(n));
            }
            return (t || ((this.seen[e] = o), (this.seen[n] = 0)), n);
        }
        slug(e, t = {}) {
            const n = this.serialize(e);
            return this.getNextSafeSlug(n, t.dryrun);
        }
    }
    class Fa {
        constructor(e) {
            ((this.options = e || aa),
                (this.options.renderer = this.options.renderer || new Ra()),
                (this.renderer = this.options.renderer),
                (this.renderer.options = this.options),
                (this.textRenderer = new ja()),
                (this.slugger = new Da()));
        }
        static parse(e, t) {
            return new Fa(t).parse(e);
        }
        static parseInline(e, t) {
            return new Fa(t).parseInline(e);
        }
        parse(e, t = !0) {
            let n,
                o,
                i,
                r,
                s,
                a,
                l,
                c,
                d,
                h,
                u,
                p,
                f,
                g,
                m,
                b,
                v,
                y,
                w,
                k = '';
            const x = e.length;
            for (n = 0; n < x; n++)
                if (
                    ((h = e[n]),
                    this.options.extensions &&
                        this.options.extensions.renderers &&
                        this.options.extensions.renderers[h.type] &&
                        ((w = this.options.extensions.renderers[h.type].call(
                            { parser: this },
                            h,
                        )),
                        !1 !== w ||
                            ![
                                'space',
                                'hr',
                                'heading',
                                'code',
                                'table',
                                'blockquote',
                                'list',
                                'html',
                                'paragraph',
                                'text',
                            ].includes(h.type)))
                )
                    k += w || '';
                else
                    switch (h.type) {
                        case 'space':
                            continue;
                        case 'hr':
                            k += this.renderer.hr();
                            continue;
                        case 'heading':
                            k += this.renderer.heading(
                                this.parseInline(h.tokens),
                                h.depth,
                                ma(
                                    this.parseInline(
                                        h.tokens,
                                        this.textRenderer,
                                    ),
                                ),
                                this.slugger,
                            );
                            continue;
                        case 'code':
                            k += this.renderer.code(h.text, h.lang, h.escaped);
                            continue;
                        case 'table':
                            for (
                                c = '', l = '', r = h.header.length, o = 0;
                                o < r;
                                o++
                            )
                                l += this.renderer.tablecell(
                                    this.parseInline(h.header[o].tokens),
                                    { header: !0, align: h.align[o] },
                                );
                            for (
                                c += this.renderer.tablerow(l),
                                    d = '',
                                    r = h.rows.length,
                                    o = 0;
                                o < r;
                                o++
                            ) {
                                for (
                                    a = h.rows[o], l = '', s = a.length, i = 0;
                                    i < s;
                                    i++
                                )
                                    l += this.renderer.tablecell(
                                        this.parseInline(a[i].tokens),
                                        { header: !1, align: h.align[i] },
                                    );
                                d += this.renderer.tablerow(l);
                            }
                            k += this.renderer.table(c, d);
                            continue;
                        case 'blockquote':
                            ((d = this.parse(h.tokens)),
                                (k += this.renderer.blockquote(d)));
                            continue;
                        case 'list':
                            for (
                                u = h.ordered,
                                    p = h.start,
                                    f = h.loose,
                                    r = h.items.length,
                                    d = '',
                                    o = 0;
                                o < r;
                                o++
                            )
                                ((m = h.items[o]),
                                    (b = m.checked),
                                    (v = m.task),
                                    (g = ''),
                                    m.task &&
                                        ((y = this.renderer.checkbox(b)),
                                        f
                                            ? m.tokens.length > 0 &&
                                              'paragraph' === m.tokens[0].type
                                                ? ((m.tokens[0].text =
                                                      y +
                                                      ' ' +
                                                      m.tokens[0].text),
                                                  m.tokens[0].tokens &&
                                                      m.tokens[0].tokens
                                                          .length > 0 &&
                                                      'text' ===
                                                          m.tokens[0].tokens[0]
                                                              .type &&
                                                      (m.tokens[0].tokens[0].text =
                                                          y +
                                                          ' ' +
                                                          m.tokens[0].tokens[0]
                                                              .text))
                                                : m.tokens.unshift({
                                                      type: 'text',
                                                      text: y,
                                                  })
                                            : (g += y)),
                                    (g += this.parse(m.tokens, f)),
                                    (d += this.renderer.listitem(g, v, b)));
                            k += this.renderer.list(d, u, p);
                            continue;
                        case 'html':
                            k += this.renderer.html(h.text);
                            continue;
                        case 'paragraph':
                            k += this.renderer.paragraph(
                                this.parseInline(h.tokens),
                            );
                            continue;
                        case 'text':
                            for (
                                d = h.tokens
                                    ? this.parseInline(h.tokens)
                                    : h.text;
                                n + 1 < x && 'text' === e[n + 1].type;

                            )
                                ((h = e[++n]),
                                    (d +=
                                        '\n' +
                                        (h.tokens
                                            ? this.parseInline(h.tokens)
                                            : h.text)));
                            k += t ? this.renderer.paragraph(d) : d;
                            continue;
                        default: {
                            const e =
                                'Token with "' +
                                h.type +
                                '" type was not found.';
                            if (this.options.silent)
                                return void console.error(e);
                            throw new Error(e);
                        }
                    }
            return k;
        }
        parseInline(e, t) {
            t = t || this.renderer;
            let n,
                o,
                i,
                r = '';
            const s = e.length;
            for (n = 0; n < s; n++)
                if (
                    ((o = e[n]),
                    this.options.extensions &&
                        this.options.extensions.renderers &&
                        this.options.extensions.renderers[o.type] &&
                        ((i = this.options.extensions.renderers[o.type].call(
                            { parser: this },
                            o,
                        )),
                        !1 !== i ||
                            ![
                                'escape',
                                'html',
                                'link',
                                'image',
                                'strong',
                                'em',
                                'codespan',
                                'br',
                                'del',
                                'text',
                            ].includes(o.type)))
                )
                    r += i || '';
                else
                    switch (o.type) {
                        case 'escape':
                        case 'text':
                            r += t.text(o.text);
                            break;
                        case 'html':
                            r += t.html(o.text);
                            break;
                        case 'link':
                            r += t.link(
                                o.href,
                                o.title,
                                this.parseInline(o.tokens, t),
                            );
                            break;
                        case 'image':
                            r += t.image(o.href, o.title, o.text);
                            break;
                        case 'strong':
                            r += t.strong(this.parseInline(o.tokens, t));
                            break;
                        case 'em':
                            r += t.em(this.parseInline(o.tokens, t));
                            break;
                        case 'codespan':
                            r += t.codespan(o.text);
                            break;
                        case 'br':
                            r += t.br();
                            break;
                        case 'del':
                            r += t.del(this.parseInline(o.tokens, t));
                            break;
                        default: {
                            const e =
                                'Token with "' +
                                o.type +
                                '" type was not found.';
                            if (this.options.silent)
                                return void console.error(e);
                            throw new Error(e);
                        }
                    }
            return r;
        }
    }
    class Ha {
        constructor(e) {
            this.options = e || aa;
        }
        static passThroughHooks = new Set(['preprocess', 'postprocess']);
        preprocess(e) {
            return e;
        }
        postprocess(e) {
            return e;
        }
    }
    function za(e, t) {
        return (n, o, i) => {
            'function' == typeof o && ((i = o), (o = null));
            const r = { ...o },
                s = (function (e, t, n) {
                    return (o) => {
                        if (
                            ((o.message +=
                                '\nPlease report this to https://github.com/markedjs/marked.'),
                            e)
                        ) {
                            const e =
                                '<p>An error occurred:</p><pre>' +
                                fa(o.message + '', !0) +
                                '</pre>';
                            return t
                                ? Promise.resolve(e)
                                : n
                                  ? void n(null, e)
                                  : e;
                        }
                        if (t) return Promise.reject(o);
                        if (!n) throw o;
                        n(o);
                    };
                })((o = { ...Ua.defaults, ...r }).silent, o.async, i);
            if (null == n)
                return s(
                    new Error('marked(): input parameter is undefined or null'),
                );
            if ('string' != typeof n)
                return s(
                    new Error(
                        'marked(): input parameter is of type ' +
                            Object.prototype.toString.call(n) +
                            ', string expected',
                    ),
                );
            if (
                ((function (e) {
                    e &&
                        e.sanitize &&
                        !e.silent &&
                        console.warn(
                            'marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options',
                        );
                })(o),
                o.hooks && (o.hooks.options = o),
                i)
            ) {
                const r = o.highlight;
                let a;
                try {
                    (o.hooks && (n = o.hooks.preprocess(n)), (a = e(n, o)));
                } catch (e) {
                    return s(e);
                }
                const l = function (e) {
                    let n;
                    if (!e)
                        try {
                            (o.walkTokens && Ua.walkTokens(a, o.walkTokens),
                                (n = t(a, o)),
                                o.hooks && (n = o.hooks.postprocess(n)));
                        } catch (t) {
                            e = t;
                        }
                    return ((o.highlight = r), e ? s(e) : i(null, n));
                };
                if (!r || r.length < 3) return l();
                if ((delete o.highlight, !a.length)) return l();
                let c = 0;
                return (
                    Ua.walkTokens(a, function (e) {
                        'code' === e.type &&
                            (c++,
                            setTimeout(() => {
                                r(e.text, e.lang, function (t, n) {
                                    if (t) return l(t);
                                    (null != n &&
                                        n !== e.text &&
                                        ((e.text = n), (e.escaped = !0)),
                                        c--,
                                        0 === c && l());
                                });
                            }, 0));
                    }),
                    void (0 === c && l())
                );
            }
            if (o.async)
                return Promise.resolve(o.hooks ? o.hooks.preprocess(n) : n)
                    .then((t) => e(t, o))
                    .then((e) =>
                        o.walkTokens
                            ? Promise.all(Ua.walkTokens(e, o.walkTokens)).then(
                                  () => e,
                              )
                            : e,
                    )
                    .then((e) => t(e, o))
                    .then((e) => (o.hooks ? o.hooks.postprocess(e) : e))
                    .catch(s);
            try {
                o.hooks && (n = o.hooks.preprocess(n));
                const i = e(n, o);
                o.walkTokens && Ua.walkTokens(i, o.walkTokens);
                let r = t(i, o);
                return (o.hooks && (r = o.hooks.postprocess(r)), r);
            } catch (e) {
                return s(e);
            }
        };
    }
    function Ua(e, t, n) {
        return za($a.lex, Fa.parse)(e, t, n);
    }
    function Wa(e) {
        return (
            (e = e.replaceAll(/__(.+)__/g, '<u>$1</u>')),
            (e = Ua.parse(e, { breaks: !0, smartypants: !0 }))
        );
    }
    function qa(e, t, n) {
        const o = e.slice();
        return ((o[5] = t[n]), o);
    }
    function Va(e) {
        let t, n;
        return {
            c() {
                ((t = E('p')), (n = T(e[0])), M(t, 'font-style', 'italic'));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, t) {
                1 & t && A(n, e[0]);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Ga(e) {
        let t,
            n,
            o = i() + '';
        function i() {
            return e[3](e[5]);
        }
        function r(...t) {
            return e[4](e[5], ...t);
        }
        return {
            c() {
                ((t = E('p')),
                    (n = T(o)),
                    M(t, 'font-family', e[2].Orthographies.find(r).font));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(s, a) {
                ((e = s),
                    7 & a && o !== (o = i() + '') && A(n, o),
                    4 & a &&
                        M(t, 'font-family', e[2].Orthographies.find(r).font));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Ka(e) {
        let t,
            n =
                'Romanization' !== e[5].name &&
                e[5].display &&
                ('rom' === e[5].root || e[5].lect in e[1].pronunciations) &&
                Ga(e);
        return {
            c() {
                (n && n.c(), (t = B()));
            },
            m(e, o) {
                (n && n.m(e, o), k(e, t, o));
            },
            p(e, o) {
                'Romanization' !== e[5].name &&
                e[5].display &&
                ('rom' === e[5].root || e[5].lect in e[1].pronunciations)
                    ? n
                        ? n.p(e, o)
                        : ((n = Ga(e)), n.c(), n.m(t.parentNode, t))
                    : n && (n.d(1), (n = null));
            },
            d(e) {
                (n && n.d(e), e && x(t));
            },
        };
    }
    function Ya(t) {
        let n,
            o,
            i = t[2].Orthographies.find(Xa).display,
            r = i && Va(t),
            s = t[2].Orthographies,
            a = [];
        for (let e = 0; e < s.length; e += 1) a[e] = Ka(qa(t, s, e));
        return {
            c() {
                (r && r.c(), (n = _()));
                for (let e = 0; e < a.length; e += 1) a[e].c();
                o = B();
            },
            m(e, t) {
                (r && r.m(e, t), k(e, n, t));
                for (let n = 0; n < a.length; n += 1) a[n] && a[n].m(e, t);
                k(e, o, t);
            },
            p(e, [t]) {
                if (
                    (4 & t && (i = e[2].Orthographies.find(Xa).display),
                    i
                        ? r
                            ? r.p(e, t)
                            : ((r = Va(e)), r.c(), r.m(n.parentNode, n))
                        : r && (r.d(1), (r = null)),
                    7 & t)
                ) {
                    let n;
                    for (s = e[2].Orthographies, n = 0; n < s.length; n += 1) {
                        const i = qa(e, s, n);
                        a[n]
                            ? a[n].p(i, t)
                            : ((a[n] = Ka(i)),
                              a[n].c(),
                              a[n].m(o.parentNode, o));
                    }
                    for (; n < a.length; n += 1) a[n].d(1);
                    a.length = s.length;
                }
            },
            i: e,
            o: e,
            d(e) {
                (r && r.d(e), e && x(n), C(a, e), e && x(o));
            },
        };
    }
    ((Ua.options = Ua.setOptions =
        function (e) {
            var t;
            return (
                (Ua.defaults = { ...Ua.defaults, ...e }),
                (t = Ua.defaults),
                (aa = t),
                Ua
            );
        }),
        (Ua.getDefaults = sa),
        (Ua.defaults = aa),
        (Ua.use = function (...e) {
            const t = Ua.defaults.extensions || {
                renderers: {},
                childTokens: {},
            };
            e.forEach((e) => {
                const n = { ...e };
                if (
                    ((n.async = Ua.defaults.async || n.async || !1),
                    e.extensions &&
                        (e.extensions.forEach((e) => {
                            if (!e.name)
                                throw new Error('extension name required');
                            if (e.renderer) {
                                const n = t.renderers[e.name];
                                t.renderers[e.name] = n
                                    ? function (...t) {
                                          let o = e.renderer.apply(this, t);
                                          return (
                                              !1 === o &&
                                                  (o = n.apply(this, t)),
                                              o
                                          );
                                      }
                                    : e.renderer;
                            }
                            if (e.tokenizer) {
                                if (
                                    !e.level ||
                                    ('block' !== e.level &&
                                        'inline' !== e.level)
                                )
                                    throw new Error(
                                        "extension level must be 'block' or 'inline'",
                                    );
                                (t[e.level]
                                    ? t[e.level].unshift(e.tokenizer)
                                    : (t[e.level] = [e.tokenizer]),
                                    e.start &&
                                        ('block' === e.level
                                            ? t.startBlock
                                                ? t.startBlock.push(e.start)
                                                : (t.startBlock = [e.start])
                                            : 'inline' === e.level &&
                                              (t.startInline
                                                  ? t.startInline.push(e.start)
                                                  : (t.startInline = [
                                                        e.start,
                                                    ]))));
                            }
                            e.childTokens &&
                                (t.childTokens[e.name] = e.childTokens);
                        }),
                        (n.extensions = t)),
                    e.renderer)
                ) {
                    const t = Ua.defaults.renderer || new Ra();
                    for (const n in e.renderer) {
                        const o = t[n];
                        t[n] = (...i) => {
                            let r = e.renderer[n].apply(t, i);
                            return (!1 === r && (r = o.apply(t, i)), r);
                        };
                    }
                    n.renderer = t;
                }
                if (e.tokenizer) {
                    const t = Ua.defaults.tokenizer || new La();
                    for (const n in e.tokenizer) {
                        const o = t[n];
                        t[n] = (...i) => {
                            let r = e.tokenizer[n].apply(t, i);
                            return (!1 === r && (r = o.apply(t, i)), r);
                        };
                    }
                    n.tokenizer = t;
                }
                if (e.hooks) {
                    const t = Ua.defaults.hooks || new Ha();
                    for (const n in e.hooks) {
                        const o = t[n];
                        Ha.passThroughHooks.has(n)
                            ? (t[n] = (i) => {
                                  if (Ua.defaults.async)
                                      return Promise.resolve(
                                          e.hooks[n].call(t, i),
                                      ).then((e) => o.call(t, e));
                                  const r = e.hooks[n].call(t, i);
                                  return o.call(t, r);
                              })
                            : (t[n] = (...i) => {
                                  let r = e.hooks[n].apply(t, i);
                                  return (!1 === r && (r = o.apply(t, i)), r);
                              });
                    }
                    n.hooks = t;
                }
                if (e.walkTokens) {
                    const t = Ua.defaults.walkTokens;
                    n.walkTokens = function (n) {
                        let o = [];
                        return (
                            o.push(e.walkTokens.call(this, n)),
                            t && (o = o.concat(t.call(this, n))),
                            o
                        );
                    };
                }
                Ua.setOptions(n);
            });
        }),
        (Ua.walkTokens = function (e, t) {
            let n = [];
            for (const o of e)
                switch (((n = n.concat(t.call(Ua, o))), o.type)) {
                    case 'table':
                        for (const e of o.header)
                            n = n.concat(Ua.walkTokens(e.tokens, t));
                        for (const e of o.rows)
                            for (const o of e)
                                n = n.concat(Ua.walkTokens(o.tokens, t));
                        break;
                    case 'list':
                        n = n.concat(Ua.walkTokens(o.items, t));
                        break;
                    default:
                        Ua.defaults.extensions &&
                        Ua.defaults.extensions.childTokens &&
                        Ua.defaults.extensions.childTokens[o.type]
                            ? Ua.defaults.extensions.childTokens[
                                  o.type
                              ].forEach(function (e) {
                                  n = n.concat(Ua.walkTokens(o[e], t));
                              })
                            : o.tokens &&
                              (n = n.concat(Ua.walkTokens(o.tokens, t)));
                }
            return n;
        }),
        (Ua.parseInline = za($a.lexInline, Fa.parseInline)),
        (Ua.Parser = Fa),
        (Ua.parser = Fa.parse),
        (Ua.Renderer = Ra),
        (Ua.TextRenderer = ja),
        (Ua.Lexer = $a),
        (Ua.lexer = $a.lex),
        (Ua.Tokenizer = La),
        (Ua.Slugger = Da),
        (Ua.Hooks = Ha),
        (Ua.parse = Ua),
        Ua.options,
        Ua.setOptions,
        Ua.use,
        Ua.walkTokens,
        Ua.parseInline);
    const Xa = (e) => 'Romanization' === e.name;
    function Za(e, t, n) {
        let o;
        d(e, Kr, (e) => n(2, (o = e)));
        let { word: i } = t,
            { source: r } = t;
        return (
            (e.$$set = (e) => {
                ('word' in e && n(0, (i = e.word)),
                    'source' in e && n(1, (r = e.source)));
            }),
            [
                i,
                r,
                o,
                (e) => {
                    const t = xs(
                        o.Orthographies.find((t) => t.name === e.name).rules,
                    );
                    return ks(
                        t.rules,
                        'rom' === e.root ? i : r.pronunciations[e.lect].ipa,
                        t.categories,
                    );
                },
                (e, t) => t.name === e.name,
            ]
        );
    }
    class Ja extends Ee {
        constructor(e) {
            (super(), Ce(this, e, Za, Ya, a, { word: 0, source: 1 }));
        }
    }
    function Qa(e, t, n) {
        const o = e.slice();
        return ((o[9] = t[n]), (o[11] = n), o);
    }
    function el(e, t, n) {
        const o = e.slice();
        return ((o[12] = t[n]), o);
    }
    function tl(e) {
        let t,
            n,
            o,
            i = e[11] + 1 + '';
        return {
            c() {
                ((t = E('div')),
                    (n = T(i)),
                    (o = T('.')),
                    I(t, 'class', 'sense'));
            },
            m(e, i) {
                (k(e, t, i), v(t, n), v(t, o));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function nl(e) {
        let t,
            n,
            o = e[12] + '';
        return {
            c() {
                ((t = E('div')), (n = T(o)), I(t, 'class', 'tag-item'));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, t) {
                2 & t && o !== (o = e[12] + '') && A(n, o);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function ol(e) {
        let t,
            n = !!e[12] && nl(e);
        return {
            c() {
                (n && n.c(), (t = B()));
            },
            m(e, o) {
                (n && n.m(e, o), k(e, t, o));
            },
            p(e, o) {
                e[12]
                    ? n
                        ? n.p(e, o)
                        : ((n = nl(e)), n.c(), n.m(t.parentNode, t))
                    : n && (n.d(1), (n = null));
            },
            d(e) {
                (n && n.d(e), e && x(t));
            },
        };
    }
    function il(e) {
        let t,
            n,
            o = e[9].lects.join(', ') + '';
        return {
            c() {
                ((t = E('p')), (n = T(o)), I(t, 'class', 'lect'));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, t) {
                2 & t && o !== (o = e[9].lects.join(', ') + '') && A(n, o);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function rl(e) {
        let t, n;
        return (
            (t = new ra({
                props: { word: e[0], tags: e[9].tags, readFromReference: e[3] },
            })),
            {
                c() {
                    ye(t.$$.fragment);
                },
                m(e, o) {
                    (we(t, e, o), (n = !0));
                },
                p(e, n) {
                    const o = {};
                    (1 & n && (o.word = e[0]),
                        2 & n && (o.tags = e[9].tags),
                        8 & n && (o.readFromReference = e[3]),
                        t.$set(o));
                },
                i(e) {
                    n || (fe(t.$$.fragment, e), (n = !0));
                },
                o(e) {
                    (ge(t.$$.fragment, e), (n = !1));
                },
                d(e) {
                    ke(t, e);
                },
            }
        );
    }
    function sl(e) {
        let t, n, o, i, r;
        return {
            c() {
                ((t = E('div')),
                    (t.textContent = 'etymology'),
                    (n = _()),
                    (o = E('p')),
                    (i = E('i')),
                    (r = T(e[5])),
                    I(t, 'class', 'tag-item'),
                    I(o, 'class', 'lex-body'));
            },
            m(e, s) {
                (k(e, t, s), k(e, n, s), k(e, o, s), v(o, i), v(i, r));
            },
            p(e, t) {
                32 & t && A(r, e[5]);
            },
            d(e) {
                (e && x(t), e && x(n), e && x(o));
            },
        };
    }
    function al(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c = Wa(e[9].definition) + '',
            d = e[1].Senses.length > 1 && tl(e),
            h = e[9].tags,
            u = [];
        for (let t = 0; t < h.length; t += 1) u[t] = ol(el(e, h, t));
        let p = e[4].UseLects && il(e),
            f = (e[4].ShowInflection || e[3]) && rl(e),
            g = e[4].ShowEtymology && !!e[5] && e[2] && sl(e);
        return {
            c() {
                (d && d.c(), (t = _()));
                for (let e = 0; e < u.length; e += 1) u[e].c();
                ((n = _()),
                    p && p.c(),
                    (o = _()),
                    (i = E('p')),
                    (r = _()),
                    f && f.c(),
                    (s = _()),
                    g && g.c(),
                    (a = B()),
                    M(i, 'margin-bottom', '-1em'));
            },
            m(e, h) {
                (d && d.m(e, h), k(e, t, h));
                for (let t = 0; t < u.length; t += 1) u[t] && u[t].m(e, h);
                (k(e, n, h),
                    p && p.m(e, h),
                    k(e, o, h),
                    k(e, i, h),
                    (i.innerHTML = c),
                    k(e, r, h),
                    f && f.m(e, h),
                    k(e, s, h),
                    g && g.m(e, h),
                    k(e, a, h),
                    (l = !0));
            },
            p(e, r) {
                if (
                    (e[1].Senses.length > 1
                        ? d || ((d = tl(e)), d.c(), d.m(t.parentNode, t))
                        : d && (d.d(1), (d = null)),
                    2 & r)
                ) {
                    let t;
                    for (h = e[9].tags, t = 0; t < h.length; t += 1) {
                        const o = el(e, h, t);
                        u[t]
                            ? u[t].p(o, r)
                            : ((u[t] = ol(o)),
                              u[t].c(),
                              u[t].m(n.parentNode, n));
                    }
                    for (; t < u.length; t += 1) u[t].d(1);
                    u.length = h.length;
                }
                (e[4].UseLects
                    ? p
                        ? p.p(e, r)
                        : ((p = il(e)), p.c(), p.m(o.parentNode, o))
                    : p && (p.d(1), (p = null)),
                    (!l || 2 & r) &&
                        c !== (c = Wa(e[9].definition) + '') &&
                        (i.innerHTML = c),
                    e[4].ShowInflection || e[3]
                        ? f
                            ? (f.p(e, r), 24 & r && fe(f, 1))
                            : ((f = rl(e)),
                              f.c(),
                              fe(f, 1),
                              f.m(s.parentNode, s))
                        : f &&
                          (ue(),
                          ge(f, 1, 1, () => {
                              f = null;
                          }),
                          pe()),
                    e[4].ShowEtymology && e[5] && e[2]
                        ? g
                            ? g.p(e, r)
                            : ((g = sl(e)), g.c(), g.m(a.parentNode, a))
                        : g && (g.d(1), (g = null)));
            },
            i(e) {
                l || (fe(f), (l = !0));
            },
            o(e) {
                (ge(f), (l = !1));
            },
            d(e) {
                (d && d.d(e),
                    e && x(t),
                    C(u, e),
                    e && x(n),
                    p && p.d(e),
                    e && x(o),
                    e && x(i),
                    e && x(r),
                    f && f.d(e),
                    e && x(s),
                    g && g.d(e),
                    e && x(a));
            },
        };
    }
    function ll(e) {
        let t, n, o, i, r, s, a, l;
        ((n = new Ja({ props: { word: e[0], source: e[1] } })),
            (i = new Hs({ props: { pronunciations: e[1].pronunciations } })));
        let c = e[1].Senses,
            d = [];
        for (let t = 0; t < c.length; t += 1) d[t] = al(Qa(e, c, t));
        const h = (e) =>
            ge(d[e], 1, 1, () => {
                d[e] = null;
            });
        return {
            c() {
                ((t = E('div')),
                    ye(n.$$.fragment),
                    (o = _()),
                    ye(i.$$.fragment),
                    (r = _()));
                for (let e = 0; e < d.length; e += 1) d[e].c();
                (I(t, 'id', e[0]), I(t, 'class', 'lex-entry prelined'));
            },
            m(c, h) {
                (k(c, t, h), we(n, t, null), v(t, o), we(i, t, null), v(t, r));
                for (let e = 0; e < d.length; e += 1) d[e] && d[e].m(t, null);
                ((s = !0), a || ((l = O(t, 'contextmenu', e[6])), (a = !0)));
            },
            p(e, [o]) {
                const r = {};
                (1 & o && (r.word = e[0]),
                    2 & o && (r.source = e[1]),
                    n.$set(r));
                const a = {};
                if (
                    (2 & o && (a.pronunciations = e[1].pronunciations),
                    i.$set(a),
                    63 & o)
                ) {
                    let n;
                    for (c = e[1].Senses, n = 0; n < c.length; n += 1) {
                        const i = Qa(e, c, n);
                        d[n]
                            ? (d[n].p(i, o), fe(d[n], 1))
                            : ((d[n] = al(i)),
                              d[n].c(),
                              fe(d[n], 1),
                              d[n].m(t, null));
                    }
                    for (ue(), n = c.length; n < d.length; n += 1) h(n);
                    pe();
                }
                (!s || 1 & o) && I(t, 'id', e[0]);
            },
            i(e) {
                if (!s) {
                    (fe(n.$$.fragment, e), fe(i.$$.fragment, e));
                    for (let e = 0; e < c.length; e += 1) fe(d[e]);
                    s = !0;
                }
            },
            o(e) {
                (ge(n.$$.fragment, e),
                    ge(i.$$.fragment, e),
                    (d = d.filter(Boolean)));
                for (let e = 0; e < d.length; e += 1) ge(d[e]);
                s = !1;
            },
            d(e) {
                (e && x(t), ke(n), ke(i), C(d, e), (a = !1), l());
            },
        };
    }
    function cl(e, t, n) {
        let o;
        d(e, Kr, (e) => n(4, (o = e)));
        const i = Y();
        let { word: r } = t,
            { source: s } = t,
            { showEtymology: a } = t,
            { showInflections: l = !1 } = t;
        let c = '';
        return (
            (e.$$set = (e) => {
                ('word' in e && n(0, (r = e.word)),
                    'source' in e && n(1, (s = e.source)),
                    'showEtymology' in e && n(2, (a = e.showEtymology)),
                    'showInflections' in e && n(3, (l = e.showInflections)));
            }),
            (e.$$.update = () => {
                19 & e.$$.dirty &&
                    (o.Etymologies,
                    o.Lexicon,
                    n(
                        5,
                        (c = (function () {
                            const e = [];
                            let t = [r],
                                n = 6;
                            for (
                                ;
                                Object.keys(o.Etymologies).some((e) =>
                                    o.Etymologies[e].descendants.some((e) =>
                                        t.includes(e.name),
                                    ),
                                ) && n;

                            )
                                (n--,
                                    e.push(
                                        Object.keys(o.Etymologies).filter(
                                            (i) => {
                                                const s = o.Etymologies[
                                                    i
                                                ].descendants.some((e) =>
                                                    t.includes(e.name),
                                                );
                                                return (
                                                    (e.flat().includes(r) ||
                                                        (i === r && s)) &&
                                                        (n = 0),
                                                    s
                                                );
                                            },
                                        ),
                                    ),
                                    (t = e[e.length - 1]));
                            e.reverse();
                            let i = '',
                                s = '';
                            return (
                                e.forEach((e) => {
                                    let t = e.join(', ');
                                    (t !== s && (i += t + ' → '), (s = t));
                                }),
                                (i = i ? i + r : ''),
                                i
                            );
                        })()),
                    ));
            }),
            [r, s, a, l, o, c, () => i('edit')]
        );
    }
    class dl extends Ee {
        constructor(e) {
            (super(),
                Ce(this, e, cl, ll, a, {
                    word: 0,
                    source: 1,
                    showEtymology: 2,
                    showInflections: 3,
                }));
        }
    }
    function hl(e, t, n) {
        const o = e.slice();
        return ((o[2] = t[n]), o);
    }
    function ul(e) {
        let t,
            n,
            o,
            i = e[2] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[2]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (2 & r && i !== (i = e[2] + '') && A(n, i),
                    2 & r &&
                        o !== (o = e[2]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function pl(t) {
        let n,
            o,
            r,
            s,
            a = Array.from(
                new Set(
                    Object.keys(t[1].Lexicon)
                        .map(t[4])
                        .flat(1 / 0),
                ),
            ).sort(),
            l = [];
        for (let e = 0; e < a.length; e += 1) l[e] = ul(hl(t, a, e));
        return {
            c() {
                ((n = E('select')),
                    (o = E('option')),
                    (o.textContent = 'Choose Tags'));
                for (let e = 0; e < l.length; e += 1) l[e].c();
                ((o.__value = 'existing tags'),
                    (o.value = o.__value),
                    void 0 === t[0] && ne(() => t[5].call(n)));
            },
            m(e, i) {
                (k(e, n, i), v(n, o));
                for (let e = 0; e < l.length; e += 1) l[e] && l[e].m(n, null);
                (N(n, t[0], !0),
                    r ||
                        ((s = [O(n, 'change', t[5]), O(n, 'change', t[6])]),
                        (r = !0)));
            },
            p(e, [t]) {
                if (2 & t) {
                    let o;
                    for (
                        a = Array.from(
                            new Set(
                                Object.keys(e[1].Lexicon)
                                    .map(e[4])
                                    .flat(1 / 0),
                            ),
                        ).sort(),
                            o = 0;
                        o < a.length;
                        o += 1
                    ) {
                        const i = hl(e, a, o);
                        l[o]
                            ? l[o].p(i, t)
                            : ((l[o] = ul(i)), l[o].c(), l[o].m(n, null));
                    }
                    for (; o < l.length; o += 1) l[o].d(1);
                    l.length = a.length;
                }
                3 & t && N(n, e[0]);
            },
            i: e,
            o: e,
            d(e) {
                (e && x(n), C(l, e), (r = !1), i(s));
            },
        };
    }
    function fl(e, t, n) {
        let o;
        d(e, Kr, (e) => n(1, (o = e)));
        const i = Y();
        let { tagSelector: r = 'existing tags' } = t,
            s = '';
        const a = () => i('select', s);
        return (
            (e.$$set = (e) => {
                'tagSelector' in e && n(0, (r = e.tagSelector));
            }),
            [
                r,
                o,
                s,
                a,
                (e) => o.Lexicon[e].Senses.map((e) => e.tags),
                function () {
                    ((r = $(this)), n(0, r));
                },
                () => {
                    (n(2, (s = 'existing tags' === r ? '' : `${r}`)),
                        a(),
                        n(0, (r = 'existing tags')));
                },
            ]
        );
    }
    class gl extends Ee {
        constructor(e) {
            (super(), Ce(this, e, fl, pl, s, { tagSelector: 0 }));
        }
    }
    function ml(e, t, n) {
        const o = e.slice();
        return ((o[16] = t[n]), o);
    }
    function bl(e) {
        let t,
            n,
            o,
            i,
            r,
            s = e[3] + 1 + '';
        return {
            c() {
                ((t = E('i')),
                    (n = T('Sense ')),
                    (o = T(s)),
                    (i = _()),
                    (r = E('br')));
            },
            m(e, s) {
                (k(e, t, s), v(t, n), v(t, o), k(e, i, s), k(e, r, s));
            },
            p(e, t) {
                8 & t && s !== (s = e[3] + 1 + '') && A(o, s);
            },
            d(e) {
                (e && x(t), e && x(i), e && x(r));
            },
        };
    }
    function vl(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a = e[4].Lects,
            l = [];
        for (let t = 0; t < a.length; t += 1) l[t] = yl(ml(e, a, t));
        return {
            c() {
                ((t = E('label')), (n = T('Lects')), (o = E('br')), (i = _()));
                for (let e = 0; e < l.length; e += 1) l[e].c();
                ((r = _()), (s = E('br')));
            },
            m(e, a) {
                (k(e, t, a), v(t, n), v(t, o), v(t, i));
                for (let e = 0; e < l.length; e += 1) l[e] && l[e].m(t, null);
                (k(e, r, a), k(e, s, a));
            },
            p(e, n) {
                if (146 & n) {
                    let o;
                    for (a = e[4].Lects, o = 0; o < a.length; o += 1) {
                        const i = ml(e, a, o);
                        l[o]
                            ? l[o].p(i, n)
                            : ((l[o] = yl(i)), l[o].c(), l[o].m(t, null));
                    }
                    for (; o < l.length; o += 1) l[o].d(1);
                    l.length = a.length;
                }
            },
            d(e) {
                (e && x(t), C(l, e), e && x(r), e && x(s));
            },
        };
    }
    function yl(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p = e[16] + '';
        function f() {
            return e[12](e[16]);
        }
        return {
            c() {
                ((t = E('label')),
                    (n = E('div')),
                    (o = E('input')),
                    (s = _()),
                    (a = E('span')),
                    (l = T(p)),
                    (c = _()),
                    (d = E('br')),
                    I(o, 'id', (i = e[16])),
                    I(o, 'type', 'checkbox'),
                    (o.checked = r = e[1].includes(e[16])),
                    M(n, 'display', 'inline-block'),
                    M(a, 'display', 'inline-block'));
            },
            m(e, i) {
                (k(e, t, i),
                    v(t, n),
                    v(n, o),
                    v(t, s),
                    v(t, a),
                    v(a, l),
                    v(t, c),
                    k(e, d, i),
                    h || ((u = O(o, 'change', f)), (h = !0)));
            },
            p(t, n) {
                ((e = t),
                    16 & n && i !== (i = e[16]) && I(o, 'id', i),
                    18 & n &&
                        r !== (r = e[1].includes(e[16])) &&
                        (o.checked = r),
                    16 & n && p !== (p = e[16] + '') && A(l, p));
            },
            d(e) {
                (e && x(t), e && x(d), (h = !1), u());
            },
        };
    }
    function wl(e) {
        let t,
            n,
            o,
            i,
            r,
            s = e[3] + 1 + '';
        return {
            c() {
                ((t = E('button')),
                    (n = T('Remove Sense ')),
                    (o = T(s)),
                    I(t, 'class', 'hover-highlight hover-shadow'));
            },
            m(s, a) {
                (k(s, t, a),
                    v(t, n),
                    v(t, o),
                    i || ((r = O(t, 'click', e[5])), (i = !0)));
            },
            p(e, t) {
                8 & t && s !== (s = e[3] + 1 + '') && A(o, s);
            },
            d(e) {
                (e && x(t), (i = !1), r());
            },
        };
    }
    function kl(e) {
        let t,
            n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            C,
            S,
            B,
            L,
            A,
            M = 'hide' !== e[3] && bl(e);
        ((g = new gl({})), g.$on('select', e[11]));
        let N = e[4].UseLects && vl(e),
            $ = !!e[3] && 'hide' !== e[3] && wl(e);
        return {
            c() {
                ((t = E('label')),
                    M && M.c(),
                    (n = _()),
                    (o = E('label')),
                    (r = T('Definition\n        ')),
                    (s = E('textarea')),
                    (a = _()),
                    (l = E('br')),
                    (c = _()),
                    (d = E('label')),
                    (h = T('Tags\n        ')),
                    (u = E('div')),
                    (p = E('textarea')),
                    (f = _()),
                    ye(g.$$.fragment),
                    (m = _()),
                    (b = E('br')),
                    (y = _()),
                    N && N.c(),
                    (w = _()),
                    $ && $.c(),
                    (C = _()),
                    (S = E('br')),
                    I(s, 'rows', '4'),
                    I(p, 'rows', '1'));
            },
            m(i, x) {
                (k(i, t, x),
                    M && M.m(t, null),
                    v(t, n),
                    v(t, o),
                    v(o, r),
                    v(o, s),
                    P(s, e[2]),
                    v(t, a),
                    v(t, l),
                    v(t, c),
                    v(t, d),
                    v(d, h),
                    v(d, u),
                    v(u, p),
                    P(p, e[0]),
                    v(u, f),
                    we(g, u, null),
                    v(t, m),
                    v(t, b),
                    v(t, y),
                    N && N.m(t, null),
                    v(t, w),
                    $ && $.m(t, null),
                    v(t, C),
                    v(t, S),
                    (B = !0),
                    L ||
                        ((A = [
                            O(s, 'input', e[8]),
                            O(s, 'keydown', e[9]),
                            O(p, 'input', e[10]),
                        ]),
                        (L = !0)));
            },
            p(e, [o]) {
                ('hide' !== e[3]
                    ? M
                        ? M.p(e, o)
                        : ((M = bl(e)), M.c(), M.m(t, n))
                    : M && (M.d(1), (M = null)),
                    4 & o && P(s, e[2]),
                    1 & o && P(p, e[0]),
                    e[4].UseLects
                        ? N
                            ? N.p(e, o)
                            : ((N = vl(e)), N.c(), N.m(t, w))
                        : N && (N.d(1), (N = null)),
                    e[3] && 'hide' !== e[3]
                        ? $
                            ? $.p(e, o)
                            : (($ = wl(e)), $.c(), $.m(t, C))
                        : $ && ($.d(1), ($ = null)));
            },
            i(e) {
                B || (fe(g.$$.fragment, e), (B = !0));
            },
            o(e) {
                (ge(g.$$.fragment, e), (B = !1));
            },
            d(e) {
                (e && x(t),
                    M && M.d(),
                    ke(g),
                    N && N.d(),
                    $ && $.d(),
                    (L = !1),
                    i(A));
            },
        };
    }
    function xl(e, t, n) {
        let o, i, r;
        (d(e, Xr, (e) => n(13, (o = e))),
            d(e, Zr, (e) => n(14, (i = e))),
            d(e, Kr, (e) => n(4, (r = e))));
        let { definition: s = '' } = t,
            { tags: a } = t,
            { index: l } = t;
        const c = Y(),
            u = () => c('commit');
        let { lects: p } = t;
        function f(e) {
            p.includes(e)
                ? n(1, (p = p.filter((t) => t !== e)))
                : (n(1, (p = [...p, e])), h(Zr, (i[e] = Es(o, e)), i));
        }
        return (
            (e.$$set = (e) => {
                ('definition' in e && n(2, (s = e.definition)),
                    'tags' in e && n(0, (a = e.tags)),
                    'index' in e && n(3, (l = e.index)),
                    'lects' in e && n(1, (p = e.lects)));
            }),
            (e.$$.update = () => {
                (e.$$.dirty,
                    18 & e.$$.dirty &&
                        p.filter((e) => !r.Lects.includes(e)).length > 0 &&
                        p
                            .filter((e) => !r.Lects.includes(e))
                            .forEach((e) => {
                                n(1, (p = p.filter((t) => t !== e)));
                            }));
            }),
            [
                a,
                p,
                s,
                l,
                r,
                () => c('remove'),
                u,
                f,
                function () {
                    ((s = this.value), n(2, s));
                },
                (e) => {
                    'Enter' === e.key && e.altKey && u();
                },
                function () {
                    ((a = this.value), n(0, a));
                },
                (e) =>
                    n(
                        0,
                        (a += e.detail ? (a ? ' ' + e.detail : e.detail) : ''),
                    ),
                (e) => f(e),
            ]
        );
    }
    class Cl extends Ee {
        constructor(e) {
            (super(),
                Ce(this, e, xl, kl, s, {
                    definition: 2,
                    tags: 0,
                    index: 3,
                    lects: 1,
                }));
        }
    }
    function El(e, t, n) {
        const o = e.slice();
        return ((o[46] = t[n]), o);
    }
    function Sl(e, t, n) {
        const o = e.slice();
        return ((o[49] = t[n]), o);
    }
    function Tl(e, t, n) {
        const o = e.slice();
        return ((o[52] = t[n]), (o[53] = t), (o[54] = n), o);
    }
    function _l(e, t, n) {
        const o = e.slice();
        return ((o[49] = t[n]), (o[55] = t), (o[56] = n), o);
    }
    function Bl(e) {
        let t, n, o, r;
        return {
            c() {
                ((t = E('span')),
                    (n = E('input')),
                    I(n, 'type', 'text'),
                    I(n, 'class', 'pronunciation'),
                    I(
                        t,
                        'title',
                        'This field is for the pronunciation of your word. It will auto-populate based on rules you set in the Phonology tab.',
                    ));
            },
            m(i, s) {
                (k(i, t, s),
                    v(t, n),
                    P(n, e[11].General),
                    o ||
                        ((r = [
                            O(n, 'input', e[23]),
                            u(Ls.call(null, t, { position: 'bottom' })),
                        ]),
                        (o = !0)));
            },
            p(e, t) {
                2048 & t[0] && n.value !== e[11].General && P(n, e[11].General);
            },
            d(e) {
                (e && x(t), (o = !1), i(r));
            },
        };
    }
    function Ol(e) {
        let t,
            n = e[9],
            o = [];
        for (let t = 0; t < n.length; t += 1) o[t] = Il(_l(e, n, t));
        return {
            c() {
                for (let e = 0; e < o.length; e += 1) o[e].c();
                t = B();
            },
            m(e, n) {
                for (let t = 0; t < o.length; t += 1) o[t] && o[t].m(e, n);
                k(e, t, n);
            },
            p(e, i) {
                if (2560 & i[0]) {
                    let r;
                    for (n = e[9], r = 0; r < n.length; r += 1) {
                        const s = _l(e, n, r);
                        o[r]
                            ? o[r].p(s, i)
                            : ((o[r] = Il(s)),
                              o[r].c(),
                              o[r].m(t.parentNode, t));
                    }
                    for (; r < o.length; r += 1) o[r].d(1);
                    o.length = n.length;
                }
            },
            d(e) {
                (C(o, e), e && x(t));
            },
        };
    }
    function Il(e) {
        let t,
            n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            p,
            f,
            g = e[49] + '';
        function m() {
            e[22].call(c, e[49]);
        }
        return {
            c() {
                ((t = E('div')),
                    (n = E('div')),
                    (o = E('p')),
                    (r = T(g)),
                    (s = _()),
                    (a = E('div')),
                    (l = E('span')),
                    (c = E('input')),
                    (h = _()),
                    I(o, 'class', 'lect'),
                    I(n, 'class', 'column text-right'),
                    I(c, 'type', 'text'),
                    I(c, 'class', 'pronunciation text-left'),
                    I(
                        l,
                        'title',
                        (d = `This field is for the pronunciation of your word in your ${e[49]} lect. It will auto-populate based on rules you set in the Phonology tab for this lect.`),
                    ),
                    I(a, 'class', 'column text-left'),
                    I(t, 'class', 'row narrow'));
            },
            m(i, d) {
                (k(i, t, d),
                    v(t, n),
                    v(n, o),
                    v(o, r),
                    v(t, s),
                    v(t, a),
                    v(a, l),
                    v(l, c),
                    P(c, e[11][e[49]]),
                    v(t, h),
                    p ||
                        ((f = [
                            O(c, 'input', m),
                            u(Ls.call(null, l, { position: 'bottom' })),
                        ]),
                        (p = !0)));
            },
            p(t, n) {
                ((e = t),
                    512 & n[0] && g !== (g = e[49] + '') && A(r, g),
                    2560 & n[0] &&
                        c.value !== e[11][e[49]] &&
                        P(c, e[11][e[49]]),
                    512 & n[0] &&
                        d !==
                            (d = `This field is for the pronunciation of your word in your ${e[49]} lect. It will auto-populate based on rules you set in the Phonology tab for this lect.`) &&
                        I(l, 'title', d));
            },
            d(e) {
                (e && x(t), (p = !1), i(f));
            },
        };
    }
    function Ll(e) {
        let t, n, o, i, r;
        function s(t) {
            e[24](t, e[52]);
        }
        function a(t) {
            e[25](t, e[52]);
        }
        function l(t) {
            e[26](t, e[52]);
        }
        let c = { index: e[54] };
        return (
            void 0 !== e[52].definition && (c.definition = e[52].definition),
            void 0 !== e[52].tags && (c.tags = e[52].tags),
            void 0 !== e[52].lects && (c.lects = e[52].lects),
            (t = new Cl({ props: c })),
            Z.push(() => ve(t, 'definition', s)),
            Z.push(() => ve(t, 'tags', a)),
            Z.push(() => ve(t, 'lects', l)),
            t.$on('remove', function () {
                return e[27](e[54]);
            }),
            t.$on('commit', e[28]),
            {
                c() {
                    ye(t.$$.fragment);
                },
                m(e, n) {
                    (we(t, e, n), (r = !0));
                },
                p(r, s) {
                    e = r;
                    const a = {};
                    (!n &&
                        32 & s[0] &&
                        ((n = !0),
                        (a.definition = e[52].definition),
                        oe(() => (n = !1))),
                        !o &&
                            32 & s[0] &&
                            ((o = !0),
                            (a.tags = e[52].tags),
                            oe(() => (o = !1))),
                        !i &&
                            32 & s[0] &&
                            ((i = !0),
                            (a.lects = e[52].lects),
                            oe(() => (i = !1))),
                        t.$set(a));
                },
                i(e) {
                    r || (fe(t.$$.fragment, e), (r = !0));
                },
                o(e) {
                    (ge(t.$$.fragment, e), (r = !1));
                },
                d(e) {
                    ke(t, e);
                },
            }
        );
    }
    function Al(t) {
        let n, o, r, s, a, l;
        return {
            c() {
                ((n = E('div')),
                    (o = E('button')),
                    (o.textContent = 'Overwrite Entry'),
                    (r = _()),
                    (s = E('button')),
                    (s.textContent = 'Append Definition'),
                    I(o, 'id', 'overwrite'),
                    I(o, 'class', 'hover-shadow'),
                    I(
                        o,
                        'title',
                        'If you want to replace an existing entry with a new one, you can use this button to overwrite it.',
                    ),
                    I(s, 'id', 'append'),
                    I(s, 'class', 'hover-shadow hover-highlight'),
                    I(
                        s,
                        'title',
                        'If you want to add new sense(s) to an existing word, you can use this button to append your work to the existing entry.',
                    ),
                    I(n, 'class', 'row'),
                    I(n, 'id', 'definition-exists'));
            },
            m(e, i) {
                (k(e, n, i),
                    v(n, o),
                    v(n, r),
                    v(n, s),
                    a ||
                        ((l = [
                            u(Ls.call(null, o, { position: 'bottom' })),
                            O(o, 'click', t[31]),
                            u(Ls.call(null, s, { position: 'bottom' })),
                            O(s, 'click', t[32]),
                        ]),
                        (a = !0)));
            },
            p: e,
            d(e) {
                (e && x(n), (a = !1), i(l));
            },
        };
    }
    function Pl(t) {
        let n, o, i;
        return {
            c() {
                ((n = E('button')),
                    (n.textContent = 'Add Word'),
                    I(n, 'class', 'hover-highlight hover-shadow'),
                    I(n, 'id', 'add-word-button'));
            },
            m(e, r) {
                (k(e, n, r), o || ((i = O(n, 'click', t[30])), (o = !0)));
            },
            p: e,
            d(e) {
                (e && x(n), (o = !1), i());
            },
        };
    }
    function Ml(e) {
        let t;
        return {
            c() {
                ((t = E('label')),
                    (t.textContent = 'Search by word…'),
                    I(t, 'for', 'search-wrd'),
                    M(t, 'position', 'absolute'),
                    M(t, 'top', '0.5em'),
                    M(t, 'left', '1em'));
            },
            m(e, n) {
                k(e, t, n);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Nl(e) {
        let t;
        return {
            c() {
                ((t = E('label')),
                    (t.textContent = 'Search by tags…'),
                    I(t, 'for', 'search-tag'),
                    M(t, 'position', 'absolute'),
                    M(t, 'top', '0.5em'),
                    M(t, 'left', '1em'));
            },
            m(e, n) {
                k(e, t, n);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function $l(e) {
        let t;
        return {
            c() {
                ((t = E('label')),
                    (t.textContent = 'Search definitions…'),
                    I(t, 'for', 'search-def'),
                    M(t, 'position', 'absolute'),
                    M(t, 'top', '0.33em'),
                    M(t, 'left', '1em'));
            },
            m(e, n) {
                k(e, t, n);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Rl(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l = e[6].Lects,
            c = [];
        for (let t = 0; t < l.length; t += 1) c[t] = jl(Sl(e, l, t));
        return {
            c() {
                ((t = E('div')),
                    (n = E('label')),
                    (o = T('Filter by lect: \n                            ')),
                    (i = E('select')),
                    (r = E('option')),
                    (r.textContent = 'All'));
                for (let e = 0; e < c.length; e += 1) c[e].c();
                ((r.__value = ''),
                    (r.value = r.__value),
                    void 0 === e[3] && ne(() => e[36].call(i)),
                    I(t, 'class', 'column'));
            },
            m(l, d) {
                (k(l, t, d), v(t, n), v(n, o), v(n, i), v(i, r));
                for (let e = 0; e < c.length; e += 1) c[e] && c[e].m(i, null);
                (N(i, e[3], !0), s || ((a = O(i, 'change', e[36])), (s = !0)));
            },
            p(e, t) {
                if (64 & t[0]) {
                    let n;
                    for (l = e[6].Lects, n = 0; n < l.length; n += 1) {
                        const o = Sl(e, l, n);
                        c[n]
                            ? c[n].p(o, t)
                            : ((c[n] = jl(o)), c[n].c(), c[n].m(i, null));
                    }
                    for (; n < c.length; n += 1) c[n].d(1);
                    c.length = l.length;
                }
                72 & t[0] && N(i, e[3]);
            },
            d(e) {
                (e && x(t), C(c, e), (s = !1), a());
            },
        };
    }
    function jl(e) {
        let t,
            n,
            o,
            i = e[49] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[49]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (64 & r[0] && i !== (i = e[49] + '') && A(n, i),
                    64 & r[0] &&
                        o !== (o = e[49]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Dl(t) {
        let n;
        return {
            c() {
                ((n = E('p')),
                    (n.textContent = 'Add new words on the left'),
                    I(n, 'class', 'info'),
                    I(n, 'id', 'lex-body'));
            },
            m(e, t) {
                k(e, n, t);
            },
            p: e,
            d(e) {
                e && x(n);
            },
        };
    }
    function Fl(e) {
        let t, n;
        return (
            (t = new dl({
                props: {
                    word: e[46],
                    source: e[6].Lexicon[e[46]],
                    showEtymology: !0,
                },
            })),
            t.$on('edit', function () {
                return e[37](e[46]);
            }),
            {
                c() {
                    ye(t.$$.fragment);
                },
                m(e, o) {
                    (we(t, e, o), (n = !0));
                },
                p(n, o) {
                    e = n;
                    const i = {};
                    (128 & o[0] && (i.word = e[46]),
                        192 & o[0] && (i.source = e[6].Lexicon[e[46]]),
                        t.$set(i));
                },
                i(e) {
                    n || (fe(t.$$.fragment, e), (n = !0));
                },
                o(e) {
                    (ge(t.$$.fragment, e), (n = !1));
                },
                d(e) {
                    ke(t, e);
                },
            }
        );
    }
    function Hl(e) {
        let t,
            n,
            o,
            i = Object.keys(e[6].Lexicon).length + '',
            r = 1 === Object.keys(e[6].Lexicon).length ? 'Entry' : 'Entries';
        return {
            c() {
                ((t = T(i)), (n = _()), (o = T(r)));
            },
            m(e, i) {
                (k(e, t, i), k(e, n, i), k(e, o, i));
            },
            p(e, n) {
                (64 & n[0] &&
                    i !== (i = Object.keys(e[6].Lexicon).length + '') &&
                    A(t, i),
                    64 & n[0] &&
                        r !==
                            (r =
                                1 === Object.keys(e[6].Lexicon).length
                                    ? 'Entry'
                                    : 'Entries') &&
                        A(o, r));
            },
            d(e) {
                (e && x(t), e && x(n), e && x(o));
            },
        };
    }
    function zl(e) {
        let t,
            n,
            o,
            i = (e[4][0] ? e[4].length : '0') + '',
            r = 1 === e[4].length && e[4][0] ? 'Match' : 'Matches';
        return {
            c() {
                ((t = T(i)), (n = _()), (o = T(r)));
            },
            m(e, i) {
                (k(e, t, i), k(e, n, i), k(e, o, i));
            },
            p(e, n) {
                (16 & n[0] &&
                    i !== (i = (e[4][0] ? e[4].length : '0') + '') &&
                    A(t, i),
                    16 & n[0] &&
                        r !==
                            (r =
                                1 === e[4].length && e[4][0]
                                    ? 'Match'
                                    : 'Matches') &&
                        A(o, r));
            },
            d(e) {
                (e && x(t), e && x(n), e && x(o));
            },
        };
    }
    function Ul(e) {
        let t,
            n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            S,
            T,
            B,
            L,
            A,
            N,
            $,
            j,
            D,
            F,
            H,
            z,
            U,
            W,
            q,
            V,
            G,
            K,
            Y,
            X,
            Z,
            J,
            Q,
            ee,
            te,
            ne,
            oe,
            ie,
            re,
            se,
            ae,
            le,
            ce,
            de,
            he;
        function me(e, t) {
            return e[6].UseLects ? Ol : Bl;
        }
        let be = me(e),
            ve = be(e),
            ye = e[5],
            we = [];
        for (let t = 0; t < ye.length; t += 1) we[t] = Ll(Tl(e, ye, t));
        const ke = (e) =>
            ge(we[e], 1, 1, () => {
                we[e] = null;
            });
        function xe(e, t) {
            return e[10] in e[6].Lexicon ? Al : Pl;
        }
        let Ce = xe(e),
            Ee = Ce(e),
            Se = !e[0] && Ml(),
            Te = !e[2] && Nl(),
            _e = !e[1] && $l(),
            Be = e[6].UseLects && Rl(e),
            Oe = e[7],
            Ie = [];
        for (let t = 0; t < Oe.length; t += 1) Ie[t] = Fl(El(e, Oe, t));
        const Le = (e) =>
            ge(Ie[e], 1, 1, () => {
                Ie[e] = null;
            });
        let Ae = null;
        function Pe(e, t) {
            return e[4][0] ? zl : Hl;
        }
        Oe.length || (Ae = Dl());
        let Me = Pe(e),
            Ne = Me(e);
        return {
            c() {
                ((t = E('div')),
                    (n = E('div')),
                    (o = E('div')),
                    (r = E('label')),
                    (r.textContent = 'Case Sensitivity'),
                    (s = _()),
                    (a = E('input')),
                    (l = _()),
                    (c = E('div')),
                    (d = E('label')),
                    (d.textContent = 'Ignore Diacritics'),
                    (h = _()),
                    (p = E('input')),
                    (f = _()),
                    (g = E('input')),
                    (m = _()),
                    (b = E('div')),
                    (y = E('div')),
                    (w = E('button')),
                    (S = _()),
                    (T = E('div')),
                    (B = E('label')),
                    (B.textContent = 'New Word'),
                    (L = _()),
                    (A = E('input')),
                    (N = _()),
                    ve.c(),
                    ($ = _()));
                for (let e = 0; e < we.length; e += 1) we[e].c();
                ((j = _()),
                    (D = E('button')),
                    (D.textContent = 'Add Sense'),
                    (F = _()),
                    Ee.c(),
                    (H = _()),
                    (z = E('div')),
                    (U = _()),
                    (W = E('div')),
                    (q = E('div')),
                    (V = E('div')),
                    Se && Se.c(),
                    (G = _()),
                    (K = E('input')),
                    (Y = _()),
                    (X = E('div')),
                    Te && Te.c(),
                    (Z = _()),
                    (J = E('input')),
                    (Q = _()),
                    (ee = E('div')),
                    (te = E('div')),
                    _e && _e.c(),
                    (ne = _()),
                    (oe = E('input')),
                    (ie = _()),
                    Be && Be.c(),
                    (re = _()),
                    (se = E('div')));
                for (let e = 0; e < Ie.length; e += 1) Ie[e].c();
                (Ae && Ae.c(),
                    (ae = _()),
                    (le = E('p')),
                    Ne.c(),
                    I(r, 'for', 'case-sensitive'),
                    M(r, 'margin', 'auto'),
                    I(
                        r,
                        'title',
                        'This setting determines whether or not alphabetization is case sensitive.',
                    ),
                    I(a, 'type', 'checkbox'),
                    M(a, 'width', '15px'),
                    M(a, 'margin', 'auto'),
                    I(a, 'id', 'case-sensitive'),
                    I(o, 'class', 'narrow-col'),
                    I(d, 'for', 'ignore-diacritic'),
                    M(d, 'margin', 'auto'),
                    M(d, 'text-align', 'right'),
                    I(
                        d,
                        'title',
                        'This setting determines whether or not diacritics are taken into account during alphabetization.',
                    ),
                    I(p, 'type', 'checkbox'),
                    M(p, 'width', '15px'),
                    M(p, 'margin', 'auto'),
                    I(p, 'id', 'ignore-diacritic'),
                    I(c, 'class', 'narrow-col'),
                    I(g, 'id', 'alph-input'),
                    I(g, 'type', 'text'),
                    I(n, 'class', 'container row text-center header'),
                    I(w, 'class', 'collapser'),
                    I(B, 'for', 'wrd-input'),
                    I(
                        B,
                        'title',
                        'Write your new word here in its romanized form.',
                    ),
                    I(A, 'id', 'wrd-input'),
                    I(A, 'type', 'text'),
                    I(D, 'class', 'hover-highlight hover-shadow'),
                    I(D, 'id', 'add-sense-button'),
                    I(
                        D,
                        'title',
                        'If this word has unrelated definitions, adding multiple senses is a good way to separate them visually and give them separate sets of tags.',
                    ),
                    M(z, 'width', '100vw'),
                    I(T, 'class', 'text-center scrolled'),
                    M(T, 'height', '100%'),
                    M(T, 'overflow-x', 'hidden'),
                    R(T, 'collapsed', e[8]),
                    I(y, 'class', 'container collapsible-column'),
                    M(y, 'height', '100%'),
                    I(K, 'id', 'search-wrd'),
                    I(K, 'type', 'text'),
                    I(K, 'class', 'search'),
                    I(V, 'class', 'column search-container'),
                    I(J, 'id', 'search-tag'),
                    I(J, 'type', 'text'),
                    I(J, 'class', 'search'),
                    I(X, 'class', 'column search-container'),
                    I(q, 'class', 'row'),
                    I(oe, 'id', 'search-def'),
                    I(oe, 'type', 'text'),
                    I(oe, 'class', 'search'),
                    I(te, 'class', 'search-container column'),
                    I(ee, 'class', 'row'),
                    I(se, 'class', 'scrolled'),
                    M(se, 'height', '88%'),
                    I(le, 'id', 'entry-counter'),
                    I(W, 'class', 'container column text-center'),
                    M(W, 'height', '100%'),
                    I(b, 'class', 'row'),
                    M(b, 'height', '84vh'),
                    I(t, 'class', 'tab-pane'));
            },
            m(i, x) {
                (k(i, t, x),
                    v(t, n),
                    v(n, o),
                    v(o, r),
                    v(o, s),
                    v(o, a),
                    (a.checked = e[6].CaseSensitive),
                    v(n, l),
                    v(n, c),
                    v(c, d),
                    v(c, h),
                    v(c, p),
                    (p.checked = e[6].IgnoreDiacritics),
                    v(n, f),
                    v(n, g),
                    P(g, e[6].Alphabet),
                    v(t, m),
                    v(t, b),
                    v(b, y),
                    v(y, w),
                    v(y, S),
                    v(y, T),
                    v(T, B),
                    v(T, L),
                    v(T, A),
                    P(A, e[10]),
                    v(T, N),
                    ve.m(T, null),
                    v(T, $));
                for (let e = 0; e < we.length; e += 1)
                    we[e] && we[e].m(T, null);
                (v(T, j),
                    v(T, D),
                    v(T, F),
                    Ee.m(T, null),
                    v(T, H),
                    v(T, z),
                    v(b, U),
                    v(b, W),
                    v(W, q),
                    v(q, V),
                    Se && Se.m(V, null),
                    v(V, G),
                    v(V, K),
                    P(K, e[0]),
                    v(q, Y),
                    v(q, X),
                    Te && Te.m(X, null),
                    v(X, Z),
                    v(X, J),
                    P(J, e[2]),
                    v(W, Q),
                    v(W, ee),
                    v(ee, te),
                    _e && _e.m(te, null),
                    v(te, ne),
                    v(te, oe),
                    P(oe, e[1]),
                    v(ee, ie),
                    Be && Be.m(ee, null),
                    v(W, re),
                    v(W, se));
                for (let e = 0; e < Ie.length; e += 1)
                    Ie[e] && Ie[e].m(se, null);
                (Ae && Ae.m(se, null),
                    v(W, ae),
                    v(W, le),
                    Ne.m(le, null),
                    (ce = !0),
                    de ||
                        ((he = [
                            u(Ls.call(null, r, { position: 'bottom' })),
                            O(a, 'change', e[16]),
                            u(Ls.call(null, d, { position: 'bottom' })),
                            O(p, 'change', e[17]),
                            O(g, 'input', e[18]),
                            O(w, 'click', e[19]),
                            u(Ls.call(null, B, { position: 'bottom' })),
                            O(A, 'input', e[20]),
                            O(A, 'input', e[21]),
                            u(Ls.call(null, D, { position: 'right' })),
                            O(D, 'click', e[29]),
                            O(K, 'input', e[33]),
                            O(K, 'input', e[14]),
                            O(J, 'input', e[34]),
                            O(J, 'input', e[14]),
                            O(oe, 'input', e[35]),
                            O(oe, 'input', e[14]),
                        ]),
                        (de = !0)));
            },
            p(e, t) {
                if (
                    (64 & t[0] && (a.checked = e[6].CaseSensitive),
                    64 & t[0] && (p.checked = e[6].IgnoreDiacritics),
                    64 & t[0] &&
                        g.value !== e[6].Alphabet &&
                        P(g, e[6].Alphabet),
                    1024 & t[0] && A.value !== e[10] && P(A, e[10]),
                    be === (be = me(e)) && ve
                        ? ve.p(e, t)
                        : (ve.d(1), (ve = be(e)), ve && (ve.c(), ve.m(T, $))),
                    8224 & t[0])
                ) {
                    let n;
                    for (ye = e[5], n = 0; n < ye.length; n += 1) {
                        const o = Tl(e, ye, n);
                        we[n]
                            ? (we[n].p(o, t), fe(we[n], 1))
                            : ((we[n] = Ll(o)),
                              we[n].c(),
                              fe(we[n], 1),
                              we[n].m(T, j));
                    }
                    for (ue(), n = ye.length; n < we.length; n += 1) ke(n);
                    pe();
                }
                if (
                    (Ce === (Ce = xe(e)) && Ee
                        ? Ee.p(e, t)
                        : (Ee.d(1), (Ee = Ce(e)), Ee && (Ee.c(), Ee.m(T, H))),
                    (!ce || 256 & t[0]) && R(T, 'collapsed', e[8]),
                    e[0]
                        ? Se && (Se.d(1), (Se = null))
                        : Se || ((Se = Ml()), Se.c(), Se.m(V, G)),
                    1 & t[0] && K.value !== e[0] && P(K, e[0]),
                    e[2]
                        ? Te && (Te.d(1), (Te = null))
                        : Te || ((Te = Nl()), Te.c(), Te.m(X, Z)),
                    4 & t[0] && J.value !== e[2] && P(J, e[2]),
                    e[1]
                        ? _e && (_e.d(1), (_e = null))
                        : _e || ((_e = $l()), _e.c(), _e.m(te, ne)),
                    2 & t[0] && oe.value !== e[1] && P(oe, e[1]),
                    e[6].UseLects
                        ? Be
                            ? Be.p(e, t)
                            : ((Be = Rl(e)), Be.c(), Be.m(ee, null))
                        : Be && (Be.d(1), (Be = null)),
                    4288 & t[0])
                ) {
                    let n;
                    for (Oe = e[7], n = 0; n < Oe.length; n += 1) {
                        const o = El(e, Oe, n);
                        Ie[n]
                            ? (Ie[n].p(o, t), fe(Ie[n], 1))
                            : ((Ie[n] = Fl(o)),
                              Ie[n].c(),
                              fe(Ie[n], 1),
                              Ie[n].m(se, null));
                    }
                    for (ue(), n = Oe.length; n < Ie.length; n += 1) Le(n);
                    (pe(),
                        !Oe.length && Ae
                            ? Ae.p(e, t)
                            : Oe.length
                              ? Ae && (Ae.d(1), (Ae = null))
                              : ((Ae = Dl()), Ae.c(), Ae.m(se, null)));
                }
                Me === (Me = Pe(e)) && Ne
                    ? Ne.p(e, t)
                    : (Ne.d(1), (Ne = Me(e)), Ne && (Ne.c(), Ne.m(le, null)));
            },
            i(e) {
                if (!ce) {
                    for (let e = 0; e < ye.length; e += 1) fe(we[e]);
                    for (let e = 0; e < Oe.length; e += 1) fe(Ie[e]);
                    ce = !0;
                }
            },
            o(e) {
                we = we.filter(Boolean);
                for (let e = 0; e < we.length; e += 1) ge(we[e]);
                Ie = Ie.filter(Boolean);
                for (let e = 0; e < Ie.length; e += 1) ge(Ie[e]);
                ce = !1;
            },
            d(e) {
                (e && x(t),
                    ve.d(),
                    C(we, e),
                    Ee.d(),
                    Se && Se.d(),
                    Te && Te.d(),
                    _e && _e.d(),
                    Be && Be.d(),
                    C(Ie, e),
                    Ae && Ae.d(),
                    Ne.d(),
                    (de = !1),
                    i(he));
            },
        };
    }
    function Wl(e, t, n) {
        let o, i, r, s, a;
        (d(e, Kr, (e) => n(6, (o = e))),
            d(e, Xr, (e) => n(10, (i = e))),
            d(e, Zr, (e) => n(11, (r = e))),
            d(e, ss, (e) => n(38, (s = e))),
            d(e, Yr, (e) => n(39, (a = e))));
        var l =
            (this && this.__rest) ||
            function (e, t) {
                var n = {};
                for (var o in e)
                    Object.prototype.hasOwnProperty.call(e, o) &&
                        t.indexOf(o) < 0 &&
                        (n[o] = e[o]);
                if (
                    null != e &&
                    'function' == typeof Object.getOwnPropertySymbols
                ) {
                    var i = 0;
                    for (o = Object.getOwnPropertySymbols(e); i < o.length; i++)
                        t.indexOf(o[i]) < 0 &&
                            Object.prototype.propertyIsEnumerable.call(
                                e,
                                o[i],
                            ) &&
                            (n[o[i]] = e[o[i]]);
                }
                return n;
            };
        const { ipcRenderer: c } = require('electron'),
            u = require('vex-js');
        c.on('update-lexicon-for-gods-sake-please', () => {
            h(Kr, (o.Lexicon = Object.assign({}, o.Lexicon)), o);
        });
        let p,
            f,
            g,
            m = [''],
            b = '',
            v = '',
            y = '',
            w = '',
            k = [],
            x = !1,
            C = [{ definition: '', tags: '', lects: [...o.Lects] }];
        function E(e) {
            const t = document.getElementById(e);
            t &&
                (a && h(Yr, (a = 0), a),
                n(1, (v = '')),
                n(2, (y = '')),
                n(0, (b = '')),
                n(3, (w = '')),
                t.scrollIntoView({ behavior: 'smooth', block: 'center' }));
        }
        function S(e) {
            let t = !0;
            ((i || m[0]) &&
                (t = confirm(
                    'There is text in the word entry fields. Are you sure you want to overwrite it?',
                )),
                t &&
                    (h(Xr, (i = e), i),
                    h(Zr, (r = {}), r),
                    Object.keys(o.Lexicon[e].pronunciations).forEach((t) => {
                        h(Zr, (r[t] = o.Lexicon[e].pronunciations[t].ipa), r);
                    }),
                    n(
                        5,
                        (C = [...o.Lexicon[e].Senses].map((e) => ({
                            definition: e.definition,
                            tags: e.tags.join(' '),
                            lects: e.lects,
                        }))),
                    ),
                    h(ss, (s = !0), s),
                    window.setTimeout(() => {
                        let t = o.Lexicon,
                            n = e;
                        t[n];
                        let i = l(t, ['symbol' == typeof n ? n : n + '']);
                        (h(Kr, (o.Lexicon = i), o), h(ss, (s = !1), s));
                    }, 100)));
        }
        function T(e, t) {
            const s = (e) => C[''] !== e && !!e.definition,
                a = (e) => ({
                    definition: e.definition,
                    tags: e.tags.split(/\s+/g),
                    lects: e.lects,
                });
            (t
                ? o.Lexicon[e].Senses.push(...C.filter(s).map(a))
                : h(
                      Kr,
                      (o.Lexicon[e] = {
                          pronunciations: (() => {
                              const t = {};
                              return (
                                  Object.keys(r)
                                      .filter((e) =>
                                          C.map((e) => e.lects)
                                              .flat()
                                              .includes(e),
                                      )
                                      .forEach((n) => {
                                          t[n] = {
                                              ipa: r[n].trim(),
                                              irregular:
                                                  r[n].trim() !== Es(e, n),
                                          };
                                      }),
                                  t
                              );
                          })(),
                          Senses: C.filter(s).map(a),
                          Timestamp: Date.now(),
                      }),
                      o,
                  ),
                h(Kr, (o.Lexicon = Object.assign({}, o.Lexicon)), o),
                h(Xr, (i = ''), i),
                h(
                    Zr,
                    (r = (() => {
                        const e = {};
                        return (
                            o.Lects.forEach((t) => {
                                e[t] = '';
                            }),
                            e
                        );
                    })()),
                    r,
                ),
                n(
                    5,
                    (C = [{ definition: '', tags: '', lects: [...o.Lects] }]),
                ));
        }
        function _(e) {
            let t = i.trim();
            t &&
                C[0].definition &&
                C.map((e) => e.lects).flat().length &&
                (!(function (e) {
                    const t = bs()
                        .Alphabet.trim()
                        .split(/\s+/)
                        .sort((e, t) => t.length - e.length);
                    return (
                        (e = bs().CaseSensitive ? e : e.toLowerCase()),
                        (e = bs().IgnoreDiacritics
                            ? e.normalize('NFD').replace(/\p{Diacritic}/gu, '')
                            : e),
                        t.forEach((t) => {
                            e = e.replaceAll(t, '');
                        }),
                        !e.replaceAll(/\s+/g, '')
                    );
                })(t)
                    ? u.dialog.confirm({
                          message:
                              'The word contains characters not present in the alphabet. Are you sure you want to add it?',
                          callback: (n) => {
                              n && (T(t, e), window.setTimeout(() => E(t), 50));
                          },
                      })
                    : (T(t, e), window.setTimeout(() => E(t), 50)));
        }
        c.on('lexicon link', (e, t) => {
            (console.log('link:', t), E(t));
        });
        return (
            (e.$$.update = () => {
                (e.$$.dirty[0],
                    80 & e.$$.dirty[0] &&
                        n(
                            15,
                            (p = k.reduce(
                                (e, t) => (
                                    t in o.Lexicon && (e[t] = o.Lexicon[t]),
                                    e
                                ),
                                {},
                            )),
                        ),
                    32848 & e.$$.dirty[0] &&
                        (o.Lexicon,
                        o.Pronunciations,
                        o.ShowEtymology,
                        o.Etymologies,
                        o.ShowInflection,
                        o.Inflections,
                        o.Alphabet,
                        o.Orthographies,
                        n(7, (f = vs(k.length ? p : o.Lexicon)))),
                    96 & e.$$.dirty[0] &&
                        (o.Lects,
                        o.UseLects,
                        n(
                            9,
                            (g = Array.from(
                                new Set(
                                    C.map((e) => [...e.lects])
                                        .flat()
                                        .filter((e) => o.Lects.includes(e)),
                                ),
                            )),
                        )));
            }),
            [
                b,
                v,
                y,
                w,
                k,
                C,
                o,
                f,
                x,
                g,
                i,
                r,
                S,
                _,
                function () {
                    let e = o.CaseSensitive ? b.trim() : b.toLowerCase().trim(),
                        t = v.toLowerCase().trim(),
                        i = y.toLowerCase().trim();
                    if ((n(4, (k = [])), e || t || i || w)) {
                        for (let r in o.Lexicon) {
                            let s = o.Lexicon[r],
                                a = !0;
                            if (
                                !w ||
                                s.Senses.some((e) => e.lects.includes(w))
                            ) {
                                if (e) {
                                    let t = o.CaseSensitive
                                        ? r
                                        : r.toLowerCase();
                                    if ('!' === e[0]) {
                                        if (t !== e.split('!')[1]) {
                                            a = !1;
                                            continue;
                                        }
                                    } else if (
                                        !(
                                            '^' +
                                            t.replaceAll(/\s+/g, '^') +
                                            '^'
                                        ).includes(e.replaceAll(/\s+/g, '^'))
                                    ) {
                                        a = !1;
                                        continue;
                                    }
                                }
                                if (t)
                                    if ('!' === t[0]) {
                                        if (
                                            !s.Senses.some(
                                                (e) =>
                                                    e.definition ===
                                                    t.split('!')[1],
                                            )
                                        ) {
                                            a = !1;
                                            continue;
                                        }
                                    } else if (
                                        !s.Senses.some((e) =>
                                            ['^', e.definition, '^']
                                                .join()
                                                .replaceAll(/\s+/g, '^')
                                                .toLowerCase()
                                                .includes(
                                                    t.replaceAll(/\s+/g, '^'),
                                                ),
                                        )
                                    ) {
                                        a = !1;
                                        continue;
                                    }
                                if (i) {
                                    let e = i.split(/\s+/);
                                    for (let t of e)
                                        if ('!' === t[0]) {
                                            if (
                                                !s.Senses.some((e) =>
                                                    e.tags.some(
                                                        (e) =>
                                                            e.toLowerCase() ===
                                                            t.split('!')[1],
                                                    ),
                                                )
                                            ) {
                                                a = !1;
                                                continue;
                                            }
                                        } else if (
                                            !s.Senses.some((e) =>
                                                e.tags.some((e) =>
                                                    `^${e.toLowerCase()}^`.includes(
                                                        t,
                                                    ),
                                                ),
                                            )
                                        ) {
                                            a = !1;
                                            continue;
                                        }
                                }
                                a && n(4, (k = [...k, r]));
                            } else a = !1;
                        }
                        k.length || n(4, (k = [null]));
                    }
                },
                p,
                function () {
                    ((o.CaseSensitive = this.checked), Kr.set(o));
                },
                function () {
                    ((o.IgnoreDiacritics = this.checked), Kr.set(o));
                },
                function () {
                    ((o.Alphabet = this.value), Kr.set(o));
                },
                () => n(8, (x = !x)),
                function () {
                    ((i = this.value), Xr.set(i));
                },
                () => {
                    g.forEach((e) => {
                        h(Zr, (r[e] = Es(i, e)), r);
                    });
                },
                function (e) {
                    ((r[e] = this.value), Zr.set(r));
                },
                function () {
                    ((r.General = this.value), Zr.set(r));
                },
                function (t, o) {
                    e.$$.not_equal(o.definition, t) &&
                        ((o.definition = t), n(5, C));
                },
                function (t, o) {
                    e.$$.not_equal(o.tags, t) && ((o.tags = t), n(5, C));
                },
                function (t, o) {
                    e.$$.not_equal(o.lects, t) && ((o.lects = t), n(5, C));
                },
                (e) => {
                    n(5, (C = C.filter((t, n) => n !== e)));
                },
                () => {
                    _(!1);
                },
                () => {
                    n(
                        5,
                        (C = [
                            ...C,
                            { definition: '', tags: '', lects: [...o.Lects] },
                        ]),
                    );
                },
                () => _(!1),
                () => _(!1),
                () => _(!0),
                function () {
                    ((b = this.value), n(0, b));
                },
                function () {
                    ((y = this.value), n(2, y));
                },
                function () {
                    ((v = this.value), n(1, v));
                },
                function () {
                    ((w = $(this)), n(3, w));
                },
                (e) => S(e),
            ]
        );
    }
    class ql extends Ee {
        constructor(e) {
            (super(), Ce(this, e, Wl, Ul, s, {}, null, [-1, -1]));
        }
    }
    function Vl(e, t, n) {
        const o = e.slice();
        return ((o[9] = t[n]), (o[11] = n), o);
    }
    function Gl(e, t, n) {
        const o = e.slice();
        return ((o[12] = t[n]), (o[11] = n), o);
    }
    function Kl(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            C,
            E = e[12].name + '',
            _ = e[12].source + '';
        function B() {
            return e[6](e[12]);
        }
        return {
            c() {
                ((t = S('g')),
                    (n = S('rect')),
                    (r = S('text')),
                    (s = T(E)),
                    (d = S('text')),
                    (h = T(_)),
                    (g = S('path')),
                    I(n, 'class', 'lex'),
                    I(
                        n,
                        'x',
                        (o =
                            (e[0] / (e[2].parents.length + 1)) * (e[11] + 1) -
                            60),
                    ),
                    I(
                        n,
                        'y',
                        (i = e[1] / 9 - e[3][e[11]] - 15 + Math.max(...e[3])),
                    ),
                    I(n, 'width', '120'),
                    I(r, 'class', 'lex-entry'),
                    I(
                        r,
                        'x',
                        (a = (e[0] / (e[2].parents.length + 1)) * (e[11] + 1)),
                    ),
                    I(r, 'y', (l = e[1] / 9 - e[3][e[11]] + Math.max(...e[3]))),
                    I(r, 'text-anchor', 'middle'),
                    I(r, 'dominant-baseline', 'middle'),
                    I(d, 'class', 'tag-item'),
                    I(
                        d,
                        'x',
                        (u = (e[0] / (e[2].parents.length + 1)) * (e[11] + 1)),
                    ),
                    I(
                        d,
                        'y',
                        (p = e[1] / 9 - e[3][e[11]] + 15 + Math.max(...e[3])),
                    ),
                    I(d, 'text-anchor', 'middle'),
                    I(d, 'dominant-baseline', 'middle'),
                    I(
                        g,
                        'd',
                        (m = `M ${(e[0] / (e[2].parents.length + 1)) * (e[11] + 1)}, ${e[1] / 9 - e[3][e[11]] + 20 + Math.max(...e[3])} C ${(e[0] / (e[2].parents.length + 1)) * (e[11] + 1)}, ${e[1] / 9 - e[3][e[11]] + 50 + Math.max(...e[3])}  ${e[0] / 2}, ${e[1] / 2 - 40}  ${e[0] / 2}, ${e[1] / 2 - 10}`),
                    ),
                    I(g, 'fill', 'none'));
            },
            m(e, o) {
                (k(e, t, o),
                    v(t, n),
                    v(t, r),
                    v(r, s),
                    v(t, d),
                    v(d, h),
                    v(t, g),
                    (y = !0),
                    w || ((C = O(t, 'mousedown', B)), (w = !0)));
            },
            p(t, c) {
                ((e = t),
                    (!y ||
                        (5 & c &&
                            o !==
                                (o =
                                    (e[0] / (e[2].parents.length + 1)) *
                                        (e[11] + 1) -
                                    60))) &&
                        I(n, 'x', o),
                    (!y ||
                        (10 & c &&
                            i !==
                                (i =
                                    e[1] / 9 -
                                    e[3][e[11]] -
                                    15 +
                                    Math.max(...e[3])))) &&
                        I(n, 'y', i),
                    (!y || 4 & c) && E !== (E = e[12].name + '') && A(s, E),
                    (!y ||
                        (5 & c &&
                            a !==
                                (a =
                                    (e[0] / (e[2].parents.length + 1)) *
                                    (e[11] + 1)))) &&
                        I(r, 'x', a),
                    (!y ||
                        (10 & c &&
                            l !==
                                (l =
                                    e[1] / 9 -
                                    e[3][e[11]] +
                                    Math.max(...e[3])))) &&
                        I(r, 'y', l),
                    (!y || 4 & c) && _ !== (_ = e[12].source + '') && A(h, _),
                    (!y ||
                        (5 & c &&
                            u !==
                                (u =
                                    (e[0] / (e[2].parents.length + 1)) *
                                    (e[11] + 1)))) &&
                        I(d, 'x', u),
                    (!y ||
                        (10 & c &&
                            p !==
                                (p =
                                    e[1] / 9 -
                                    e[3][e[11]] +
                                    15 +
                                    Math.max(...e[3])))) &&
                        I(d, 'y', p),
                    (!y ||
                        (15 & c &&
                            m !==
                                (m = `M ${(e[0] / (e[2].parents.length + 1)) * (e[11] + 1)}, ${e[1] / 9 - e[3][e[11]] + 20 + Math.max(...e[3])} C ${(e[0] / (e[2].parents.length + 1)) * (e[11] + 1)}, ${e[1] / 9 - e[3][e[11]] + 50 + Math.max(...e[3])}  ${e[0] / 2}, ${e[1] / 2 - 40}  ${e[0] / 2}, ${e[1] / 2 - 10}`))) &&
                        I(g, 'd', m));
            },
            i(e) {
                y ||
                    (ne(() => {
                        y &&
                            (c ||
                                (c = be(
                                    r,
                                    Us,
                                    { amount: 10, duration: 999 },
                                    !0,
                                )),
                            c.run(1));
                    }),
                    ne(() => {
                        y &&
                            (f ||
                                (f = be(
                                    d,
                                    Us,
                                    { amount: 10, duration: 999 },
                                    !0,
                                )),
                            f.run(1));
                    }),
                    ne(() => {
                        y &&
                            (b || (b = be(g, Ws, { duration: 999 }, !0)),
                            b.run(1));
                    }),
                    (y = !0));
            },
            o(e) {
                (c || (c = be(r, Us, { amount: 10, duration: 999 }, !1)),
                    c.run(0),
                    f || (f = be(d, Us, { amount: 10, duration: 999 }, !1)),
                    f.run(0),
                    b || (b = be(g, Ws, { duration: 999 }, !1)),
                    b.run(0),
                    (y = !1));
            },
            d(e) {
                (e && x(t),
                    e && c && c.end(),
                    e && f && f.end(),
                    e && b && b.end(),
                    (w = !1),
                    C());
            },
        };
    }
    function Yl(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            C,
            E = e[9].name + '',
            _ = e[9].source + '';
        function B() {
            return e[7](e[9]);
        }
        return {
            c() {
                ((t = S('g')),
                    (n = S('rect')),
                    (r = S('text')),
                    (s = T(E)),
                    (d = S('text')),
                    (h = T(_)),
                    (g = S('path')),
                    I(n, 'class', 'lex'),
                    I(
                        n,
                        'x',
                        (o =
                            (e[0] / (e[2].children.length + 1)) * (e[11] + 1) -
                            60),
                    ),
                    I(
                        n,
                        'y',
                        (i =
                            e[1] +
                            e[4][e[11]] -
                            e[1] / 9 -
                            15 -
                            Math.max(...e[4])),
                    ),
                    I(n, 'width', '120'),
                    I(r, 'class', 'lex-entry'),
                    I(
                        r,
                        'x',
                        (a = (e[0] / (e[2].children.length + 1)) * (e[11] + 1)),
                    ),
                    I(
                        r,
                        'y',
                        (l = e[1] + e[4][e[11]] - e[1] / 9 - Math.max(...e[4])),
                    ),
                    I(r, 'text-anchor', 'middle'),
                    I(r, 'dominant-baseline', 'middle'),
                    I(d, 'class', 'tag-item'),
                    I(
                        d,
                        'x',
                        (u = (e[0] / (e[2].children.length + 1)) * (e[11] + 1)),
                    ),
                    I(
                        d,
                        'y',
                        (p =
                            e[1] +
                            e[4][e[11]] -
                            e[1] / 9 +
                            15 -
                            Math.max(...e[4])),
                    ),
                    I(d, 'text-anchor', 'middle'),
                    I(d, 'dominant-baseline', 'middle'),
                    I(
                        g,
                        'd',
                        (m = `M ${e[0] / 2}, ${e[1] / 2 + 10} C ${e[0] / 2}, ${e[1] / 2 + 40}  ${(e[0] / (e[2].children.length + 1)) * (e[11] + 1)}, ${e[1] + e[4][e[11]] - e[1] / 9 - 40 - Math.max(...e[4])}  ${(e[0] / (e[2].children.length + 1)) * (e[11] + 1)}, ${e[1] + e[4][e[11]] - e[1] / 9 - 10 - Math.max(...e[4])}`),
                    ),
                    I(g, 'fill', 'none'));
            },
            m(e, o) {
                (k(e, t, o),
                    v(t, n),
                    v(t, r),
                    v(r, s),
                    v(t, d),
                    v(d, h),
                    v(t, g),
                    (y = !0),
                    w || ((C = O(t, 'mousedown', B)), (w = !0)));
            },
            p(t, c) {
                ((e = t),
                    (!y ||
                        (5 & c &&
                            o !==
                                (o =
                                    (e[0] / (e[2].children.length + 1)) *
                                        (e[11] + 1) -
                                    60))) &&
                        I(n, 'x', o),
                    (!y ||
                        (18 & c &&
                            i !==
                                (i =
                                    e[1] +
                                    e[4][e[11]] -
                                    e[1] / 9 -
                                    15 -
                                    Math.max(...e[4])))) &&
                        I(n, 'y', i),
                    (!y || 4 & c) && E !== (E = e[9].name + '') && A(s, E),
                    (!y ||
                        (5 & c &&
                            a !==
                                (a =
                                    (e[0] / (e[2].children.length + 1)) *
                                    (e[11] + 1)))) &&
                        I(r, 'x', a),
                    (!y ||
                        (18 & c &&
                            l !==
                                (l =
                                    e[1] +
                                    e[4][e[11]] -
                                    e[1] / 9 -
                                    Math.max(...e[4])))) &&
                        I(r, 'y', l),
                    (!y || 4 & c) && _ !== (_ = e[9].source + '') && A(h, _),
                    (!y ||
                        (5 & c &&
                            u !==
                                (u =
                                    (e[0] / (e[2].children.length + 1)) *
                                    (e[11] + 1)))) &&
                        I(d, 'x', u),
                    (!y ||
                        (18 & c &&
                            p !==
                                (p =
                                    e[1] +
                                    e[4][e[11]] -
                                    e[1] / 9 +
                                    15 -
                                    Math.max(...e[4])))) &&
                        I(d, 'y', p),
                    (!y ||
                        (23 & c &&
                            m !==
                                (m = `M ${e[0] / 2}, ${e[1] / 2 + 10} C ${e[0] / 2}, ${e[1] / 2 + 40}  ${(e[0] / (e[2].children.length + 1)) * (e[11] + 1)}, ${e[1] + e[4][e[11]] - e[1] / 9 - 40 - Math.max(...e[4])}  ${(e[0] / (e[2].children.length + 1)) * (e[11] + 1)}, ${e[1] + e[4][e[11]] - e[1] / 9 - 10 - Math.max(...e[4])}`))) &&
                        I(g, 'd', m));
            },
            i(e) {
                y ||
                    (ne(() => {
                        y &&
                            (c ||
                                (c = be(
                                    r,
                                    Us,
                                    { amount: 10, duration: 999 },
                                    !0,
                                )),
                            c.run(1));
                    }),
                    ne(() => {
                        y &&
                            (f ||
                                (f = be(
                                    d,
                                    Us,
                                    { amount: 10, duration: 999 },
                                    !0,
                                )),
                            f.run(1));
                    }),
                    ne(() => {
                        y &&
                            (b || (b = be(g, Ws, { duration: 999 }, !0)),
                            b.run(1));
                    }),
                    (y = !0));
            },
            o(e) {
                (c || (c = be(r, Us, { amount: 10, duration: 999 }, !1)),
                    c.run(0),
                    f || (f = be(d, Us, { amount: 10, duration: 999 }, !1)),
                    f.run(0),
                    b || (b = be(g, Ws, { duration: 999 }, !1)),
                    b.run(0),
                    (y = !1));
            },
            d(e) {
                (e && x(t),
                    e && c && c.end(),
                    e && f && f.end(),
                    e && b && b.end(),
                    (w = !1),
                    C());
            },
        };
    }
    function Xl(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c = e[2].name + '',
            d = e[2].parents,
            h = [];
        for (let t = 0; t < d.length; t += 1) h[t] = Kl(Gl(e, d, t));
        const u = (e) =>
            ge(h[e], 1, 1, () => {
                h[e] = null;
            });
        let p = e[2].children,
            f = [];
        for (let t = 0; t < p.length; t += 1) f[t] = Yl(Vl(e, p, t));
        const g = (e) =>
            ge(f[e], 1, 1, () => {
                f[e] = null;
            });
        return {
            c() {
                ((t = S('svg')), (n = S('g')));
                for (let e = 0; e < h.length; e += 1) h[e].c();
                ((o = S('g')), (i = S('text')), (r = T(c)));
                for (let e = 0; e < f.length; e += 1) f[e].c();
                (I(i, 'class', 'lex-entry'),
                    I(i, 'x', (s = e[0] / 2)),
                    I(i, 'y', (a = e[1] / 2)),
                    I(i, 'text-anchor', 'middle'),
                    I(i, 'dominant-baseline', 'middle'),
                    I(t, 'width', e[0]),
                    I(t, 'height', e[1]));
            },
            m(e, s) {
                (k(e, t, s), v(t, n));
                for (let e = 0; e < h.length; e += 1) h[e] && h[e].m(n, null);
                (v(n, o), v(o, i), v(i, r));
                for (let e = 0; e < f.length; e += 1) f[e] && f[e].m(n, null);
                l = !0;
            },
            p(e, [m]) {
                if (47 & m) {
                    let t;
                    for (d = e[2].parents, t = 0; t < d.length; t += 1) {
                        const i = Gl(e, d, t);
                        h[t]
                            ? (h[t].p(i, m), fe(h[t], 1))
                            : ((h[t] = Kl(i)),
                              h[t].c(),
                              fe(h[t], 1),
                              h[t].m(n, o));
                    }
                    for (ue(), t = d.length; t < h.length; t += 1) u(t);
                    pe();
                }
                if (
                    ((!l || 4 & m) && c !== (c = e[2].name + '') && A(r, c),
                    (!l || (1 & m && s !== (s = e[0] / 2))) && I(i, 'x', s),
                    (!l || (2 & m && a !== (a = e[1] / 2))) && I(i, 'y', a),
                    55 & m)
                ) {
                    let t;
                    for (p = e[2].children, t = 0; t < p.length; t += 1) {
                        const o = Vl(e, p, t);
                        f[t]
                            ? (f[t].p(o, m), fe(f[t], 1))
                            : ((f[t] = Yl(o)),
                              f[t].c(),
                              fe(f[t], 1),
                              f[t].m(n, null));
                    }
                    for (ue(), t = p.length; t < f.length; t += 1) g(t);
                    pe();
                }
                ((!l || 1 & m) && I(t, 'width', e[0]),
                    (!l || 2 & m) && I(t, 'height', e[1]));
            },
            i(e) {
                if (!l) {
                    for (let e = 0; e < d.length; e += 1) fe(h[e]);
                    for (let e = 0; e < p.length; e += 1) fe(f[e]);
                    l = !0;
                }
            },
            o(e) {
                h = h.filter(Boolean);
                for (let e = 0; e < h.length; e += 1) ge(h[e]);
                f = f.filter(Boolean);
                for (let e = 0; e < f.length; e += 1) ge(f[e]);
                l = !1;
            },
            d(e) {
                (e && x(t), C(h, e), C(f, e));
            },
        };
    }
    function Zl(e) {
        const t = e.length;
        if (0 === t) return [];
        const n = [];
        for (let e = 0; e < t; e++) {
            const o = (e + 0.5) / t,
                i = 1 - 4 * Math.pow(o - 0.5, 2);
            n.push(Math.round(i * Math.pow(t, 2)));
        }
        return n;
    }
    function Jl(e, t, n) {
        const o = Y(),
            i = (e) => {
                o('select', e);
            };
        let r,
            s,
            { width: a } = t,
            { height: l } = t,
            { tree: c } = t;
        return (
            (e.$$set = (e) => {
                ('width' in e && n(0, (a = e.width)),
                    'height' in e && n(1, (l = e.height)),
                    'tree' in e && n(2, (c = e.tree)));
            }),
            (e.$$.update = () => {
                4 & e.$$.dirty &&
                    (n(3, (r = Zl(c.parents))), n(4, (s = Zl(c.children))));
            }),
            [
                a,
                l,
                c,
                r,
                s,
                i,
                (e) => {
                    i(e.name);
                },
                (e) => {
                    i(e.name);
                },
            ]
        );
    }
    class Ql extends Ee {
        constructor(e) {
            (super(), Ce(this, e, Jl, Xl, a, { width: 0, height: 1, tree: 2 }));
        }
    }
    function ec(e, t, n) {
        const o = e.slice();
        return ((o[40] = t[n]), o);
    }
    function tc(e, t, n) {
        const o = e.slice();
        return ((o[43] = t[n]), o);
    }
    function nc(e, t, n) {
        const o = e.slice();
        return ((o[43] = t[n]), o);
    }
    function oc(e, t, n) {
        const o = e.slice();
        return ((o[48] = t[n]), o);
    }
    function ic(e, t, n) {
        const o = e.slice();
        return ((o[43] = t[n]), o);
    }
    function rc(e, t, n) {
        const o = e.slice();
        return ((o[43] = t[n]), o);
    }
    function sc(e, t, n) {
        const o = e.slice();
        return ((o[43] = t[n]), o);
    }
    function ac(e, t, n) {
        const o = e.slice();
        return ((o[43] = t[n]), o);
    }
    function lc(e) {
        let t;
        return {
            c() {
                ((t = E('label')),
                    (t.textContent = 'Search…'),
                    I(t, 'for', 'search'),
                    M(t, 'position', 'absolute'),
                    M(t, 'top', '0.333em'),
                    M(t, 'left', '1.2em'));
            },
            m(e, n) {
                k(e, t, n);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function cc(t) {
        let n;
        return {
            c() {
                ((n = E('p')),
                    (n.textContent = 'Lexicon entries will appear here.'),
                    I(n, 'class', 'info'));
            },
            m(e, t) {
                k(e, n, t);
            },
            p: e,
            d(e) {
                e && x(n);
            },
        };
    }
    function dc(e) {
        let t,
            n,
            o,
            i,
            r,
            s = e[43] + '';
        function a() {
            return e[19](e[43]);
        }
        return {
            c() {
                ((t = E('div')),
                    (n = T(s)),
                    (o = _()),
                    I(t, 'class', 'lex-entry'),
                    R(t, 'selected', e[43] === e[0]));
            },
            m(e, s) {
                (k(e, t, s),
                    v(t, n),
                    v(t, o),
                    i || ((r = O(t, 'mousedown', a)), (i = !0)));
            },
            p(o, i) {
                ((e = o),
                    64 & i[0] && s !== (s = e[43] + '') && A(n, s),
                    65 & i[0] && R(t, 'selected', e[43] === e[0]));
            },
            d(e) {
                (e && x(t), (i = !1), r());
            },
        };
    }
    function hc(t) {
        let n;
        return {
            c() {
                ((n = E('p')),
                    (n.textContent =
                        'External-source etymology entries will appear here.'),
                    I(n, 'class', 'info'));
            },
            m(e, t) {
                k(e, n, t);
            },
            p: e,
            d(e) {
                e && x(n);
            },
        };
    }
    function uc(e) {
        let t,
            n,
            o,
            i,
            r,
            s = e[43] + '';
        function a() {
            return e[20](e[43]);
        }
        return {
            c() {
                ((t = E('div')),
                    (n = T(s)),
                    (o = _()),
                    I(t, 'class', 'lex-entry'),
                    R(t, 'selected', e[43] === e[0]));
            },
            m(e, s) {
                (k(e, t, s),
                    v(t, n),
                    v(t, o),
                    i || ((r = O(t, 'mousedown', a)), (i = !0)));
            },
            p(o, i) {
                ((e = o),
                    128 & i[0] && s !== (s = e[43] + '') && A(n, s),
                    129 & i[0] && R(t, 'selected', e[43] === e[0]));
            },
            d(e) {
                (e && x(t), (i = !1), r());
            },
        };
    }
    function pc(t) {
        let n;
        return {
            c() {
                ((n = E('p')),
                    (n.textContent =
                        'Select an entry from the left to view and edit its etymology.'),
                    I(n, 'class', 'info'));
            },
            m(e, t) {
                k(e, n, t);
            },
            p: e,
            i: e,
            o: e,
            d(e) {
                e && x(n);
            },
        };
    }
    function fc(e) {
        let t, n, o, i, r, s, a;
        ((t = new Ql({ props: { tree: e[9], width: e[10], height: e[11] } })),
            t.$on('select', e[21]));
        const l = [mc, gc],
            c = [];
        function d(e, t) {
            return (
                3 & t[0] && (o = null),
                e[0] in e[1].Lexicon
                    ? 0
                    : (null == o &&
                          (o = !!Object.entries(e[1].Relatives).some(e[17])),
                      o ? 1 : -1)
            );
        }
        return (
            ~(i = d(e, [-1, -1])) && (r = c[i] = l[i](e)),
            {
                c() {
                    (ye(t.$$.fragment), (n = _()), r && r.c(), (s = B()));
                },
                m(e, o) {
                    (we(t, e, o),
                        k(e, n, o),
                        ~i && c[i].m(e, o),
                        k(e, s, o),
                        (a = !0));
                },
                p(e, n) {
                    const o = {};
                    (512 & n[0] && (o.tree = e[9]),
                        1024 & n[0] && (o.width = e[10]),
                        2048 & n[0] && (o.height = e[11]),
                        t.$set(o));
                    let a = i;
                    ((i = d(e, n)),
                        i === a
                            ? ~i && c[i].p(e, n)
                            : (r &&
                                  (ue(),
                                  ge(c[a], 1, 1, () => {
                                      c[a] = null;
                                  }),
                                  pe()),
                              ~i
                                  ? ((r = c[i]),
                                    r
                                        ? r.p(e, n)
                                        : ((r = c[i] = l[i](e)), r.c()),
                                    fe(r, 1),
                                    r.m(s.parentNode, s))
                                  : (r = null)));
                },
                i(e) {
                    a || (fe(t.$$.fragment, e), fe(r), (a = !0));
                },
                o(e) {
                    (ge(t.$$.fragment, e), ge(r), (a = !1));
                },
                d(e) {
                    (ke(t, e), e && x(n), ~i && c[i].d(e), e && x(s));
                },
            }
        );
    }
    function gc(e) {
        let t, n;
        return (
            (t = new dl({
                props: {
                    word: e[0],
                    source: e[1].Relatives[
                        Object.entries(e[1].Relatives).find(e[22])[0]
                    ][e[0]],
                    showEtymology: !1,
                },
            })),
            {
                c() {
                    ye(t.$$.fragment);
                },
                m(e, o) {
                    (we(t, e, o), (n = !0));
                },
                p(e, n) {
                    const o = {};
                    (1 & n[0] && (o.word = e[0]),
                        3 & n[0] &&
                            (o.source =
                                e[1].Relatives[
                                    Object.entries(e[1].Relatives).find(
                                        e[22],
                                    )[0]
                                ][e[0]]),
                        t.$set(o));
                },
                i(e) {
                    n || (fe(t.$$.fragment, e), (n = !0));
                },
                o(e) {
                    (ge(t.$$.fragment, e), (n = !1));
                },
                d(e) {
                    ke(t, e);
                },
            }
        );
    }
    function mc(e) {
        let t, n;
        return (
            (t = new dl({
                props: {
                    word: e[0],
                    source: e[1].Lexicon[e[0]],
                    showEtymology: !1,
                },
            })),
            {
                c() {
                    ye(t.$$.fragment);
                },
                m(e, o) {
                    (we(t, e, o), (n = !0));
                },
                p(e, n) {
                    const o = {};
                    (1 & n[0] && (o.word = e[0]),
                        3 & n[0] && (o.source = e[1].Lexicon[e[0]]),
                        t.$set(o));
                },
                i(e) {
                    n || (fe(t.$$.fragment, e), (n = !0));
                },
                o(e) {
                    (ge(t.$$.fragment, e), (n = !1));
                },
                d(e) {
                    ke(t, e);
                },
            }
        );
    }
    function bc(t) {
        let n, o, i;
        return {
            c() {
                ((n = E('button')),
                    (n.textContent = 'Delete Empty Etymology'),
                    I(n, 'class', 'hover-highlight hover-shadow'));
            },
            m(e, r) {
                (k(e, n, r), o || ((i = O(n, 'click', t[23])), (o = !0)));
            },
            p: e,
            d(e) {
                (e && x(n), (o = !1), i());
            },
        };
    }
    function vc(e) {
        let t, n, o, r, s, a, l, c, d;
        return {
            c() {
                ((t = E('label')),
                    (n = T('New Ancestor\n                                ')),
                    (o = E('input')),
                    (r = _()),
                    (s = E('label')),
                    (a = T(
                        'Source Language\n                                ',
                    )),
                    (l = E('input')),
                    I(o, 'type', 'text'),
                    I(l, 'type', 'text'));
            },
            m(i, h) {
                (k(i, t, h),
                    v(t, n),
                    v(t, o),
                    P(o, e[2][0]),
                    k(i, r, h),
                    k(i, s, h),
                    v(s, a),
                    v(s, l),
                    P(l, e[2][1]),
                    c ||
                        ((d = [O(o, 'input', e[27]), O(l, 'input', e[28])]),
                        (c = !0)));
            },
            p(e, t) {
                (196 & t[0] && o.value !== e[2][0] && P(o, e[2][0]),
                    196 & t[0] && l.value !== e[2][1] && P(l, e[2][1]));
            },
            d(e) {
                (e && x(t), e && x(r), e && x(s), (c = !1), i(d));
            },
        };
    }
    function yc(e) {
        let t,
            n,
            o,
            r,
            s,
            a = e[6],
            l = [];
        for (let t = 0; t < a.length; t += 1) l[t] = wc(rc(e, a, t));
        let c = e[7],
            d = [];
        for (let t = 0; t < c.length; t += 1) d[t] = kc(ic(e, c, t));
        return {
            c() {
                ((t = E('select')), (n = E('optgroup')));
                for (let e = 0; e < l.length; e += 1) l[e].c();
                o = E('optgroup');
                for (let e = 0; e < d.length; e += 1) d[e].c();
                (I(n, 'label', 'Internal'),
                    I(o, 'label', 'External'),
                    void 0 === e[2][0] && ne(() => e[25].call(t)));
            },
            m(i, a) {
                (k(i, t, a), v(t, n));
                for (let e = 0; e < l.length; e += 1) l[e] && l[e].m(n, null);
                v(t, o);
                for (let e = 0; e < d.length; e += 1) d[e] && d[e].m(o, null);
                (N(t, e[2][0], !0),
                    r ||
                        ((s = [O(t, 'change', e[25]), O(t, 'change', e[26])]),
                        (r = !0)));
            },
            p(e, i) {
                if (64 & i[0]) {
                    let t;
                    for (a = e[6], t = 0; t < a.length; t += 1) {
                        const o = rc(e, a, t);
                        l[t]
                            ? l[t].p(o, i)
                            : ((l[t] = wc(o)), l[t].c(), l[t].m(n, null));
                    }
                    for (; t < l.length; t += 1) l[t].d(1);
                    l.length = a.length;
                }
                if (128 & i[0]) {
                    let t;
                    for (c = e[7], t = 0; t < c.length; t += 1) {
                        const n = ic(e, c, t);
                        d[t]
                            ? d[t].p(n, i)
                            : ((d[t] = kc(n)), d[t].c(), d[t].m(o, null));
                    }
                    for (; t < d.length; t += 1) d[t].d(1);
                    d.length = c.length;
                }
                196 & i[0] && N(t, e[2][0]);
            },
            d(e) {
                (e && x(t), C(l, e), C(d, e), (r = !1), i(s));
            },
        };
    }
    function wc(e) {
        let t,
            n,
            o,
            i = e[43] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[43]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (64 & r[0] && i !== (i = e[43] + '') && A(n, i),
                    64 & r[0] &&
                        o !== (o = e[43]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function kc(e) {
        let t,
            n,
            o,
            i = e[43] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[43]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (128 & r[0] && i !== (i = e[43] + '') && A(n, i),
                    128 & r[0] &&
                        o !== (o = e[43]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function xc(t) {
        let n;
        return {
            c() {
                ((n = E('p')),
                    (n.textContent = 'This entry has no ancestors.'),
                    I(n, 'class', 'info'));
            },
            m(e, t) {
                k(e, n, t);
            },
            p: e,
            d(e) {
                e && x(n);
            },
        };
    }
    function Cc(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f = e[48].name + '',
            g = e[48].source + '';
        function m() {
            return e[30](e[48]);
        }
        return {
            c() {
                ((t = E('div')),
                    (n = E('div')),
                    (o = E('p')),
                    (i = T(f)),
                    (r = _()),
                    (s = E('p')),
                    (a = T(g)),
                    (l = _()),
                    (c = E('div')),
                    (d = E('button')),
                    (d.textContent = 'Sever'),
                    (h = _()),
                    I(o, 'class', 'lex-body'),
                    I(s, 'class', 'tag-item'),
                    I(n, 'class', 'column'),
                    I(d, 'class', 'hover-highlight hover-shadow'),
                    I(c, 'class', 'column'),
                    I(t, 'class', 'row'));
            },
            m(e, f) {
                (k(e, t, f),
                    v(t, n),
                    v(n, o),
                    v(o, i),
                    v(n, r),
                    v(n, s),
                    v(s, a),
                    v(t, l),
                    v(t, c),
                    v(c, d),
                    v(t, h),
                    u || ((p = O(d, 'click', m)), (u = !0)));
            },
            p(t, n) {
                ((e = t),
                    512 & n[0] && f !== (f = e[48].name + '') && A(i, f),
                    512 & n[0] && g !== (g = e[48].source + '') && A(a, g));
            },
            d(e) {
                (e && x(t), (u = !1), p());
            },
        };
    }
    function Ec(e) {
        let t, n, o, r, s, a, l, c, d;
        return {
            c() {
                ((t = E('label')),
                    (n = T('New Descendant\n                                ')),
                    (o = E('input')),
                    (r = _()),
                    (s = E('label')),
                    (a = T(
                        'Source Language\n                                ',
                    )),
                    (l = E('input')),
                    I(o, 'type', 'text'),
                    I(l, 'type', 'text'));
            },
            m(i, h) {
                (k(i, t, h),
                    v(t, n),
                    v(t, o),
                    P(o, e[3][0]),
                    k(i, r, h),
                    k(i, s, h),
                    v(s, a),
                    v(s, l),
                    P(l, e[3][1]),
                    c ||
                        ((d = [O(o, 'input', e[34]), O(l, 'input', e[35])]),
                        (c = !0)));
            },
            p(e, t) {
                (200 & t[0] && o.value !== e[3][0] && P(o, e[3][0]),
                    200 & t[0] && l.value !== e[3][1] && P(l, e[3][1]));
            },
            d(e) {
                (e && x(t), e && x(r), e && x(s), (c = !1), i(d));
            },
        };
    }
    function Sc(e) {
        let t,
            n,
            o,
            r,
            s,
            a = e[6],
            l = [];
        for (let t = 0; t < a.length; t += 1) l[t] = Tc(nc(e, a, t));
        let c = e[7],
            d = [];
        for (let t = 0; t < c.length; t += 1) d[t] = _c(tc(e, c, t));
        return {
            c() {
                ((t = E('select')), (n = E('optgroup')));
                for (let e = 0; e < l.length; e += 1) l[e].c();
                o = E('optgroup');
                for (let e = 0; e < d.length; e += 1) d[e].c();
                (I(n, 'label', 'Internal'),
                    I(o, 'label', 'External'),
                    void 0 === e[3][0] && ne(() => e[32].call(t)));
            },
            m(i, a) {
                (k(i, t, a), v(t, n));
                for (let e = 0; e < l.length; e += 1) l[e] && l[e].m(n, null);
                v(t, o);
                for (let e = 0; e < d.length; e += 1) d[e] && d[e].m(o, null);
                (N(t, e[3][0], !0),
                    r ||
                        ((s = [O(t, 'change', e[32]), O(t, 'change', e[33])]),
                        (r = !0)));
            },
            p(e, i) {
                if (64 & i[0]) {
                    let t;
                    for (a = e[6], t = 0; t < a.length; t += 1) {
                        const o = nc(e, a, t);
                        l[t]
                            ? l[t].p(o, i)
                            : ((l[t] = Tc(o)), l[t].c(), l[t].m(n, null));
                    }
                    for (; t < l.length; t += 1) l[t].d(1);
                    l.length = a.length;
                }
                if (128 & i[0]) {
                    let t;
                    for (c = e[7], t = 0; t < c.length; t += 1) {
                        const n = tc(e, c, t);
                        d[t]
                            ? d[t].p(n, i)
                            : ((d[t] = _c(n)), d[t].c(), d[t].m(o, null));
                    }
                    for (; t < d.length; t += 1) d[t].d(1);
                    d.length = c.length;
                }
                200 & i[0] && N(t, e[3][0]);
            },
            d(e) {
                (e && x(t), C(l, e), C(d, e), (r = !1), i(s));
            },
        };
    }
    function Tc(e) {
        let t,
            n,
            o,
            i = e[43] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[43]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (64 & r[0] && i !== (i = e[43] + '') && A(n, i),
                    64 & r[0] &&
                        o !== (o = e[43]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function _c(e) {
        let t,
            n,
            o,
            i = e[43] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[43]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (128 & r[0] && i !== (i = e[43] + '') && A(n, i),
                    128 & r[0] &&
                        o !== (o = e[43]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Bc(e) {
        let t,
            n = e[38]() + '';
        return {
            c() {
                t = T(n);
            },
            m(e, n) {
                k(e, t, n);
            },
            p(e, o) {
                512 & o[0] && n !== (n = e[38]() + '') && A(t, n);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Oc(e) {
        let t,
            n = e[9].children,
            o = [];
        for (let t = 0; t < n.length; t += 1) o[t] = Lc(ec(e, n, t));
        let i = null;
        return (
            n.length || (i = Ic()),
            {
                c() {
                    for (let e = 0; e < o.length; e += 1) o[e].c();
                    ((t = B()), i && i.c());
                },
                m(e, n) {
                    for (let t = 0; t < o.length; t += 1) o[t] && o[t].m(e, n);
                    (k(e, t, n), i && i.m(e, n));
                },
                p(e, r) {
                    if (515 & r[0]) {
                        let s;
                        for (n = e[9].children, s = 0; s < n.length; s += 1) {
                            const i = ec(e, n, s);
                            o[s]
                                ? o[s].p(i, r)
                                : ((o[s] = Lc(i)),
                                  o[s].c(),
                                  o[s].m(t.parentNode, t));
                        }
                        for (; s < o.length; s += 1) o[s].d(1);
                        ((o.length = n.length),
                            !n.length && i
                                ? i.p(e, r)
                                : n.length
                                  ? i && (i.d(1), (i = null))
                                  : ((i = Ic()), i.c(), i.m(t.parentNode, t)));
                    }
                },
                d(e) {
                    (C(o, e), e && x(t), i && i.d(e));
                },
            }
        );
    }
    function Ic(t) {
        let n;
        return {
            c() {
                ((n = E('p')),
                    (n.textContent = 'This entry has no descendants.'),
                    I(n, 'class', 'info'));
            },
            m(e, t) {
                k(e, n, t);
            },
            p: e,
            d(e) {
                e && x(n);
            },
        };
    }
    function Lc(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f = e[40].name + '',
            g = e[40].source + '';
        function m() {
            return e[37](e[40]);
        }
        return {
            c() {
                ((t = E('div')),
                    (n = E('div')),
                    (o = E('p')),
                    (i = T(f)),
                    (r = _()),
                    (s = E('p')),
                    (a = T(g)),
                    (l = _()),
                    (c = E('div')),
                    (d = E('button')),
                    (d.textContent = 'Sever'),
                    (h = _()),
                    I(o, 'class', 'lex-body'),
                    I(s, 'class', 'tag-item'),
                    I(n, 'class', 'column'),
                    I(d, 'class', 'hover-highlight hover-shadow'),
                    I(c, 'class', 'column'),
                    I(t, 'class', 'row'));
            },
            m(e, f) {
                (k(e, t, f),
                    v(t, n),
                    v(n, o),
                    v(o, i),
                    v(n, r),
                    v(n, s),
                    v(s, a),
                    v(t, l),
                    v(t, c),
                    v(c, d),
                    v(t, h),
                    u || ((p = O(d, 'click', m)), (u = !0)));
            },
            p(t, n) {
                ((e = t),
                    512 & n[0] && f !== (f = e[40].name + '') && A(i, f),
                    512 & n[0] && g !== (g = e[40].source + '') && A(a, g));
            },
            d(e) {
                (e && x(t), (u = !1), p());
            },
        };
    }
    function Ac(e) {
        let t,
            n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            S,
            B,
            L,
            A,
            N,
            $,
            R,
            j,
            D,
            F,
            H,
            z,
            U,
            W,
            q,
            V,
            G,
            K,
            Y,
            X,
            Z,
            J,
            Q,
            ee,
            te,
            ne,
            oe,
            ie,
            re,
            se,
            ae,
            le,
            ce,
            de,
            he,
            me,
            be,
            ve,
            ye = !e[8] && lc(),
            we = e[6],
            ke = [];
        for (let t = 0; t < we.length; t += 1) ke[t] = dc(ac(e, we, t));
        let xe = null;
        we.length || (xe = cc());
        let Ce = e[7],
            Ee = [];
        for (let t = 0; t < Ce.length; t += 1) Ee[t] = uc(sc(e, Ce, t));
        let Se = null;
        Ce.length || (Se = hc());
        const Te = [fc, pc],
            _e = [];
        function Be(e, t) {
            return e[0] ? 0 : 1;
        }
        (($ = Be(e)), (R = _e[$] = Te[$](e)));
        let Oe =
            !(e[9]?.parents && e[9].parents[0]) &&
            !(e[9]?.children && e[9].children[0]) &&
            !!e[0] &&
            bc(e);
        function Ie(e, t) {
            return e[4] ? vc : yc;
        }
        let Le = Ie(e),
            Ae = Le(e),
            Pe = e[9].parents,
            Me = [];
        for (let t = 0; t < Pe.length; t += 1) Me[t] = Cc(oc(e, Pe, t));
        let Ne = null;
        function $e(e, t) {
            return e[5] ? Ec : Sc;
        }
        Pe.length || (Ne = xc());
        let Re = $e(e),
            je = Re(e);
        function De(e, t) {
            return e[9] ? Oc : Bc;
        }
        let Fe = De(e),
            He = Fe(e);
        return {
            c() {
                ((t = E('div')),
                    (n = E('div')),
                    (o = E('div')),
                    (r = E('p')),
                    (r.textContent = 'Entries'),
                    (s = _()),
                    (a = E('hr')),
                    (l = _()),
                    (c = E('div')),
                    ye && ye.c(),
                    (d = _()),
                    (h = E('input')),
                    (u = _()),
                    (p = E('p')),
                    (p.innerHTML = '⦓ <i>Internal</i> ⦔'),
                    (f = _()),
                    (g = E('div')));
                for (let e = 0; e < ke.length; e += 1) ke[e].c();
                (xe && xe.c(),
                    (m = _()),
                    (b = E('br')),
                    (y = _()),
                    (w = E('p')),
                    (w.innerHTML = '⦔ <i>External</i> ⦓'),
                    (S = _()),
                    (B = E('div')));
                for (let e = 0; e < Ee.length; e += 1) Ee[e].c();
                (Se && Se.c(),
                    (L = _()),
                    (A = E('div')),
                    (N = E('div')),
                    R.c(),
                    (j = _()),
                    (D = E('hr')),
                    (F = _()),
                    Oe && Oe.c(),
                    (H = _()),
                    (z = E('div')),
                    (U = E('div')),
                    (W = E('p')),
                    (W.textContent = 'Ancestors'),
                    (q = _()),
                    (V = E('label')),
                    (G = T('Manual Entry\n                            ')),
                    (K = E('input')),
                    (Y = _()),
                    Ae.c(),
                    (X = _()),
                    (Z = E('button')),
                    (Z.textContent = 'Link'),
                    (J = _()),
                    (Q = E('div')));
                for (let e = 0; e < Me.length; e += 1) Me[e].c();
                (Ne && Ne.c(),
                    (ee = _()),
                    (te = E('div')),
                    (ne = E('p')),
                    (ne.textContent = 'Descendants'),
                    (oe = _()),
                    (ie = E('label')),
                    (re = T('Manual Entry\n                            ')),
                    (se = E('input')),
                    (ae = _()),
                    je.c(),
                    (le = _()),
                    (ce = E('button')),
                    (ce.textContent = 'Link'),
                    (de = _()),
                    (he = E('div')),
                    He.c(),
                    I(h, 'id', 'search'),
                    I(h, 'type', 'text'),
                    I(h, 'class', 'search'),
                    M(h, 'margin', 'auto'),
                    M(h, 'width', '90%'),
                    I(c, 'class', 'search-container'),
                    I(g, 'class', 'column scrolled'),
                    M(g, 'max-height', '40%'),
                    I(B, 'class', 'column scrolled'),
                    M(B, 'max-height', '40%'),
                    I(o, 'class', 'container column'),
                    M(o, 'max-width', '18%'),
                    I(K, 'type', 'checkbox'),
                    I(Z, 'class', 'hover-highlight hover-shadow'),
                    I(Q, 'class', 'column scrolled'),
                    I(U, 'class', 'column'),
                    I(se, 'type', 'checkbox'),
                    I(ce, 'class', 'hover-highlight hover-shadow'),
                    I(he, 'class', 'column scrolled'),
                    I(te, 'class', 'column'),
                    I(z, 'class', 'row'),
                    I(N, 'class', 'scrolled'),
                    M(N, 'max-height', '100%'),
                    I(A, 'class', 'container column'),
                    M(A, 'height', '94vh'),
                    I(n, 'class', 'row'),
                    M(n, 'height', '94vh'),
                    I(t, 'class', 'tab-pane'));
            },
            m(i, x) {
                (k(i, t, x),
                    v(t, n),
                    v(n, o),
                    v(o, r),
                    v(o, s),
                    v(o, a),
                    v(o, l),
                    v(o, c),
                    ye && ye.m(c, null),
                    v(c, d),
                    v(c, h),
                    P(h, e[8]),
                    v(o, u),
                    v(o, p),
                    v(o, f),
                    v(o, g));
                for (let e = 0; e < ke.length; e += 1)
                    ke[e] && ke[e].m(g, null);
                (xe && xe.m(g, null),
                    v(o, m),
                    v(o, b),
                    v(o, y),
                    v(o, w),
                    v(o, S),
                    v(o, B));
                for (let e = 0; e < Ee.length; e += 1)
                    Ee[e] && Ee[e].m(B, null);
                (Se && Se.m(B, null),
                    v(n, L),
                    v(n, A),
                    v(A, N),
                    _e[$].m(N, null),
                    v(N, j),
                    v(N, D),
                    v(N, F),
                    Oe && Oe.m(N, null),
                    v(N, H),
                    v(N, z),
                    v(z, U),
                    v(U, W),
                    v(U, q),
                    v(U, V),
                    v(V, G),
                    v(V, K),
                    (K.checked = e[4]),
                    v(U, Y),
                    Ae.m(U, null),
                    v(U, X),
                    v(U, Z),
                    v(U, J),
                    v(U, Q));
                for (let e = 0; e < Me.length; e += 1)
                    Me[e] && Me[e].m(Q, null);
                (Ne && Ne.m(Q, null),
                    v(z, ee),
                    v(z, te),
                    v(te, ne),
                    v(te, oe),
                    v(te, ie),
                    v(ie, re),
                    v(ie, se),
                    (se.checked = e[5]),
                    v(te, ae),
                    je.m(te, null),
                    v(te, le),
                    v(te, ce),
                    v(te, de),
                    v(te, he),
                    He.m(he, null),
                    (me = !0),
                    be ||
                        ((ve = [
                            O(h, 'input', e[18]),
                            O(h, 'input', e[12]),
                            O(K, 'change', e[24]),
                            O(Z, 'click', e[29]),
                            O(se, 'change', e[31]),
                            O(ce, 'click', e[36]),
                        ]),
                        (be = !0)));
            },
            p(e, t) {
                if (
                    (e[8]
                        ? ye && (ye.d(1), (ye = null))
                        : ye || ((ye = lc()), ye.c(), ye.m(c, d)),
                    256 & t[0] && h.value !== e[8] && P(h, e[8]),
                    67 & t[0])
                ) {
                    let n;
                    for (we = e[6], n = 0; n < we.length; n += 1) {
                        const o = ac(e, we, n);
                        ke[n]
                            ? ke[n].p(o, t)
                            : ((ke[n] = dc(o)), ke[n].c(), ke[n].m(g, null));
                    }
                    for (; n < ke.length; n += 1) ke[n].d(1);
                    ((ke.length = we.length),
                        !we.length && xe
                            ? xe.p(e, t)
                            : we.length
                              ? xe && (xe.d(1), (xe = null))
                              : ((xe = cc()), xe.c(), xe.m(g, null)));
                }
                if (129 & t[0]) {
                    let n;
                    for (Ce = e[7], n = 0; n < Ce.length; n += 1) {
                        const o = sc(e, Ce, n);
                        Ee[n]
                            ? Ee[n].p(o, t)
                            : ((Ee[n] = uc(o)), Ee[n].c(), Ee[n].m(B, null));
                    }
                    for (; n < Ee.length; n += 1) Ee[n].d(1);
                    ((Ee.length = Ce.length),
                        !Ce.length && Se
                            ? Se.p(e, t)
                            : Ce.length
                              ? Se && (Se.d(1), (Se = null))
                              : ((Se = hc()), Se.c(), Se.m(B, null)));
                }
                let n = $;
                if (
                    (($ = Be(e)),
                    $ === n
                        ? _e[$].p(e, t)
                        : (ue(),
                          ge(_e[n], 1, 1, () => {
                              _e[n] = null;
                          }),
                          pe(),
                          (R = _e[$]),
                          R ? R.p(e, t) : ((R = _e[$] = Te[$](e)), R.c()),
                          fe(R, 1),
                          R.m(N, j)),
                    (e[9]?.parents && e[9].parents[0]) ||
                    (e[9]?.children && e[9].children[0]) ||
                    !e[0]
                        ? Oe && (Oe.d(1), (Oe = null))
                        : Oe
                          ? Oe.p(e, t)
                          : ((Oe = bc(e)), Oe.c(), Oe.m(N, H)),
                    16 & t[0] && (K.checked = e[4]),
                    Le === (Le = Ie(e)) && Ae
                        ? Ae.p(e, t)
                        : (Ae.d(1), (Ae = Le(e)), Ae && (Ae.c(), Ae.m(U, X))),
                    515 & t[0])
                ) {
                    let n;
                    for (Pe = e[9].parents, n = 0; n < Pe.length; n += 1) {
                        const o = oc(e, Pe, n);
                        Me[n]
                            ? Me[n].p(o, t)
                            : ((Me[n] = Cc(o)), Me[n].c(), Me[n].m(Q, null));
                    }
                    for (; n < Me.length; n += 1) Me[n].d(1);
                    ((Me.length = Pe.length),
                        !Pe.length && Ne
                            ? Ne.p(e, t)
                            : Pe.length
                              ? Ne && (Ne.d(1), (Ne = null))
                              : ((Ne = xc()), Ne.c(), Ne.m(Q, null)));
                }
                (32 & t[0] && (se.checked = e[5]),
                    Re === (Re = $e(e)) && je
                        ? je.p(e, t)
                        : (je.d(1), (je = Re(e)), je && (je.c(), je.m(te, le))),
                    Fe === (Fe = De(e)) && He
                        ? He.p(e, t)
                        : (He.d(1),
                          (He = Fe(e)),
                          He && (He.c(), He.m(he, null))));
            },
            i(e) {
                me || (fe(R), (me = !0));
            },
            o(e) {
                (ge(R), (me = !1));
            },
            d(e) {
                (e && x(t),
                    ye && ye.d(),
                    C(ke, e),
                    xe && xe.d(),
                    C(Ee, e),
                    Se && Se.d(),
                    _e[$].d(),
                    Oe && Oe.d(),
                    Ae.d(),
                    C(Me, e),
                    Ne && Ne.d(),
                    je.d(),
                    He.d(),
                    (be = !1),
                    i(ve));
            },
        };
    }
    function Pc(e, t, n) {
        let o, i;
        (d(e, as, (e) => n(16, (o = e))), d(e, Kr, (e) => n(1, (i = e))));
        let r,
            s,
            a,
            l,
            c,
            u,
            p,
            f = ['', ''],
            g = ['', ''],
            m = !1,
            b = !1,
            v = '',
            y = [],
            w = '';
        return (
            (e.$$.update = () => {
                (8194 & e.$$.dirty[0] &&
                    n(
                        14,
                        (r = y.reduce(
                            (e, t) => (
                                t in i.Lexicon && (e[t] = i.Lexicon[t]),
                                e
                            ),
                            {},
                        )),
                    ),
                    24578 & e.$$.dirty[0] &&
                        (i.Alphabet, n(6, (s = vs(y.length ? r : i.Lexicon)))),
                    40962 & e.$$.dirty[0] &&
                        (i.Alphabet,
                        i.Relatives,
                        i.Etymologies,
                        (() => {
                            const e = {};
                            (Object.keys(i.Relatives).forEach((t) => {
                                Object.keys(i.Relatives[t]).forEach((n) => {
                                    n in i.Lexicon ||
                                        (e[n] = i.Relatives[t][n]);
                                });
                            }),
                                Object.keys(i.Etymologies).forEach((t) => {
                                    t in i.Lexicon ||
                                        (e[t] = {
                                            Senses: [],
                                            pronunciations: {},
                                            Timestamp: Date.now(),
                                        });
                                }),
                                n(
                                    15,
                                    (l = y.reduce(
                                        (t, n) => (n in e && (t[n] = e[n]), t),
                                        {},
                                    )),
                                ),
                                n(7, (a = vs(y.length ? l : e))));
                        })()),
                    65539 & e.$$.dirty[0] &&
                        (i.Etymologies,
                        n(
                            9,
                            (c = (function () {
                                const e = [];
                                Object.keys(i.Etymologies).forEach((t) => {
                                    if (
                                        t !== v &&
                                        i.Etymologies[t].descendants.some(
                                            (e) => e.name === v,
                                        )
                                    ) {
                                        const n =
                                            '<< THIS LANGUAGE >>' ===
                                            i.Etymologies[t].source
                                                ? i.Name
                                                : i.Etymologies[t].source;
                                        e.push([t, n]);
                                    }
                                });
                                const t = [];
                                return (
                                    v in i.Etymologies &&
                                        i.Etymologies[v].descendants.forEach(
                                            (e) => {
                                                t.push([
                                                    e.name,
                                                    '<< THIS LANGUAGE >>' ===
                                                    e.source
                                                        ? i.Name
                                                        : e.source,
                                                ]);
                                            },
                                        ),
                                    {
                                        name: v,
                                        children: t.map((e) => ({
                                            name: e[0],
                                            source: e[1],
                                        })),
                                        parents: e.map((e) => ({
                                            name: e[0],
                                            source: e[1],
                                        })),
                                    }
                                );
                            })()),
                        ),
                        n(10, (u = 0.82 * window.innerWidth * (o ? 0.66 : 1))),
                        n(11, (p = 0.47 * window.innerHeight))));
            }),
            [
                v,
                i,
                f,
                g,
                m,
                b,
                s,
                a,
                w,
                c,
                u,
                p,
                function () {
                    let e = {};
                    for (const t in i.Relatives)
                        e = Object.assign(Object.assign({}, e), i.Relatives[t]);
                    ((e = Object.assign(Object.assign({}, e), i.Lexicon)),
                        n(
                            13,
                            (y = Object.keys(e).filter((e) => {
                                let t, n;
                                return (
                                    (t = i.CaseSensitive ? e : e.toLowerCase()),
                                    (t = i.IgnoreDiacritics
                                        ? e.normalize('NFD')
                                        : e),
                                    (n = i.CaseSensitive ? w : w.toLowerCase()),
                                    (n = i.IgnoreDiacritics
                                        ? n.normalize('NFD')
                                        : n),
                                    `^${t.replaceAll(/\s+/g, '^')}^`.includes(n)
                                );
                            })),
                        ));
                },
                y,
                r,
                l,
                o,
                ([e, t]) => Object.keys(t).includes(v),
                function () {
                    ((w = this.value), n(8, w));
                },
                (e) => {
                    (n(0, (v = e)),
                        e in i.Etymologies ||
                            h(
                                Kr,
                                (i.Etymologies[e] = {
                                    descendants: [],
                                    source: '<< THIS LANGUAGE >>',
                                }),
                                i,
                            ));
                },
                (e) => {
                    n(0, (v = e));
                },
                (e) => n(0, (v = e.detail)),
                ([e, t]) => Object.keys(t).includes(v),
                () => {
                    const { [v]: e, ...t } = i.Etymologies;
                    (h(Kr, (i.Etymologies = t), i), n(0, (v = '')));
                },
                function () {
                    ((m = this.checked), n(4, m));
                },
                function () {
                    ((f[0] = $(this)),
                        n(2, f),
                        n(7, a),
                        n(1, i),
                        n(13, y),
                        n(15, l),
                        n(6, s),
                        n(1, i),
                        n(13, y),
                        n(14, r));
                },
                () => n(2, (f[1] = i.Name), f),
                function () {
                    ((f[0] = this.value),
                        n(2, f),
                        n(7, a),
                        n(1, i),
                        n(13, y),
                        n(15, l),
                        n(6, s),
                        n(1, i),
                        n(13, y),
                        n(14, r));
                },
                function () {
                    ((f[1] = this.value),
                        n(2, f),
                        n(7, a),
                        n(1, i),
                        n(13, y),
                        n(15, l),
                        n(6, s),
                        n(1, i),
                        n(13, y),
                        n(14, r));
                },
                () => {
                    f[0] &&
                        (f[0] in i.Etymologies ||
                            h(
                                Kr,
                                (i.Etymologies[f[0]] = {
                                    source:
                                        f[1] === i.Name
                                            ? '<< THIS LANGUAGE >>'
                                            : f[1],
                                    descendants: [],
                                }),
                                i,
                            ),
                        i.Etymologies[f[0]].descendants.push({
                            name: v,
                            source: i.Etymologies[v].source,
                        }),
                        h(Kr, (i.Etymologies = { ...i.Etymologies }), i),
                        n(2, (f = ['', ''])));
                },
                (e) => {
                    (h(
                        Kr,
                        (i.Etymologies[e.name].descendants = i.Etymologies[
                            e.name
                        ].descendants.filter((e) => e.name !== v)),
                        i,
                    ),
                        h(Kr, (i.Etymologies = { ...i.Etymologies }), i));
                },
                function () {
                    ((b = this.checked), n(5, b));
                },
                function () {
                    ((g[0] = $(this)),
                        n(3, g),
                        n(7, a),
                        n(1, i),
                        n(13, y),
                        n(15, l),
                        n(6, s),
                        n(1, i),
                        n(13, y),
                        n(14, r));
                },
                () => n(3, (g[1] = i.Name), g),
                function () {
                    ((g[0] = this.value),
                        n(3, g),
                        n(7, a),
                        n(1, i),
                        n(13, y),
                        n(15, l),
                        n(6, s),
                        n(1, i),
                        n(13, y),
                        n(14, r));
                },
                function () {
                    ((g[1] = this.value),
                        n(3, g),
                        n(7, a),
                        n(1, i),
                        n(13, y),
                        n(15, l),
                        n(6, s),
                        n(1, i),
                        n(13, y),
                        n(14, r));
                },
                () => {
                    g[0] &&
                        (g[0] in i.Etymologies ||
                            h(
                                Kr,
                                (i.Etymologies[g[0]] = {
                                    source: g[1],
                                    descendants: [],
                                }),
                                i,
                            ),
                        i.Etymologies[v].descendants.push({
                            name: g[0],
                            source:
                                g[1] === i.Name ? '<< THIS LANGUAGE >>' : g[1],
                        }),
                        h(Kr, (i.Etymologies = { ...i.Etymologies }), i),
                        n(3, (g = ['', ''])));
                },
                (e) => {
                    (h(
                        Kr,
                        (i.Etymologies[v].descendants = i.Etymologies[
                            v
                        ].descendants.filter((t) => t.name !== e.name)),
                        i,
                    ),
                        h(Kr, (i.Etymologies = { ...i.Etymologies }), i));
                },
                () => (console.log(c), ''),
            ]
        );
    }
    class Mc extends Ee {
        constructor(e) {
            (super(), Ce(this, e, Pc, Ac, s, {}, null, [-1, -1]));
        }
    }
    function Nc(e, t, n) {
        const o = e.slice();
        return ((o[11] = t[n]), (o[13] = n), o);
    }
    function $c(e, t, n) {
        const o = e.slice();
        return ((o[14] = t[n]), o);
    }
    function Rc(e, t, n) {
        const o = e.slice();
        return ((o[17] = t[n]), o);
    }
    function jc(e) {
        let t,
            n = e[2]().Phrasebook[e[3]()][e[0]].tags,
            o = [];
        for (let t = 0; t < n.length; t += 1) o[t] = Dc(Rc(e, n, t));
        return {
            c() {
                for (let e = 0; e < o.length; e += 1) o[e].c();
                t = B();
            },
            m(e, n) {
                for (let t = 0; t < o.length; t += 1) o[t] && o[t].m(e, n);
                k(e, t, n);
            },
            p(e, i) {
                if (13 & i) {
                    let r;
                    for (
                        n = e[2]().Phrasebook[e[3]()][e[0]].tags, r = 0;
                        r < n.length;
                        r += 1
                    ) {
                        const s = Rc(e, n, r);
                        o[r]
                            ? o[r].p(s, i)
                            : ((o[r] = Dc(s)),
                              o[r].c(),
                              o[r].m(t.parentNode, t));
                    }
                    for (; r < o.length; r += 1) o[r].d(1);
                    o.length = n.length;
                }
            },
            d(e) {
                (C(o, e), e && x(t));
            },
        };
    }
    function Dc(e) {
        let t,
            n,
            o = e[17] + '';
        return {
            c() {
                ((t = E('div')), (n = T(o)), I(t, 'class', 'tag-item'));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, t) {
                1 & t && o !== (o = e[17] + '') && A(n, o);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Fc(e) {
        let t,
            n,
            o,
            i,
            r = Array(
                Math.ceil(
                    Object.keys(e[2]().Phrasebook[e[3]()][e[0]].variants)
                        .length / 3,
                ),
            ),
            s = [];
        for (let t = 0; t < r.length; t += 1) s[t] = zc(Nc(e, r, t));
        const a = (e) =>
            ge(s[e], 1, 1, () => {
                s[e] = null;
            });
        return {
            c() {
                ((t = E('p')), (t.textContent = '⋲ ᴠᴀʀɪᴀɴᴛꜱ ⋺'), (n = _()));
                for (let e = 0; e < s.length; e += 1) s[e].c();
                o = B();
            },
            m(e, r) {
                (k(e, t, r), k(e, n, r));
                for (let t = 0; t < s.length; t += 1) s[t] && s[t].m(e, r);
                (k(e, o, r), (i = !0));
            },
            p(e, t) {
                if (13 & t) {
                    let n;
                    for (
                        r = Array(
                            Math.ceil(
                                Object.keys(
                                    e[2]().Phrasebook[e[3]()][e[0]].variants,
                                ).length / 3,
                            ),
                        ),
                            n = 0;
                        n < r.length;
                        n += 1
                    ) {
                        const i = Nc(e, r, n);
                        s[n]
                            ? (s[n].p(i, t), fe(s[n], 1))
                            : ((s[n] = zc(i)),
                              s[n].c(),
                              fe(s[n], 1),
                              s[n].m(o.parentNode, o));
                    }
                    for (ue(), n = r.length; n < s.length; n += 1) a(n);
                    pe();
                }
            },
            i(e) {
                if (!i) {
                    for (let e = 0; e < r.length; e += 1) fe(s[e]);
                    i = !0;
                }
            },
            o(e) {
                s = s.filter(Boolean);
                for (let e = 0; e < s.length; e += 1) ge(s[e]);
                i = !1;
            },
            d(e) {
                (e && x(t), e && x(n), C(s, e), e && x(o));
            },
        };
    }
    function Hc(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l =
                Wa(
                    e[2]().Phrasebook[e[3]()][e[0]].variants[e[14]].description,
                ) + '';
        return (
            (n = new Ja({
                props: {
                    word: e[14],
                    source: e[2]().Phrasebook[e[3]()][e[0]].variants[e[14]],
                },
            })),
            (i = new Hs({
                props: {
                    pronunciations:
                        e[2]().Phrasebook[e[3]()][e[0]].variants[e[14]]
                            .pronunciations,
                },
            })),
            {
                c() {
                    ((t = E('div')),
                        ye(n.$$.fragment),
                        (o = _()),
                        ye(i.$$.fragment),
                        (r = _()),
                        (s = E('p')),
                        I(s, 'class', 'prelined'),
                        M(s, 'margin', '0 1rem 0.5rem 1rem'),
                        I(t, 'class', 'column'));
                },
                m(e, c) {
                    (k(e, t, c),
                        we(n, t, null),
                        v(t, o),
                        we(i, t, null),
                        v(t, r),
                        v(t, s),
                        (s.innerHTML = l),
                        (a = !0));
                },
                p(e, t) {
                    const o = {};
                    (1 & t && (o.word = e[14]),
                        1 & t &&
                            (o.source =
                                e[2]().Phrasebook[e[3]()][e[0]].variants[
                                    e[14]
                                ]),
                        n.$set(o));
                    const r = {};
                    (1 & t &&
                        (r.pronunciations =
                            e[2]().Phrasebook[e[3]()][e[0]].variants[
                                e[14]
                            ].pronunciations),
                        i.$set(r),
                        (!a || 1 & t) &&
                            l !==
                                (l =
                                    Wa(
                                        e[2]().Phrasebook[e[3]()][e[0]]
                                            .variants[e[14]].description,
                                    ) + '') &&
                            (s.innerHTML = l));
                },
                i(e) {
                    a || (fe(n.$$.fragment, e), fe(i.$$.fragment, e), (a = !0));
                },
                o(e) {
                    (ge(n.$$.fragment, e), ge(i.$$.fragment, e), (a = !1));
                },
                d(e) {
                    (e && x(t), ke(n), ke(i));
                },
            }
        );
    }
    function zc(e) {
        let t,
            n,
            o,
            i,
            r,
            s = Object.keys(e[2]().Phrasebook[e[3]()][e[0]].variants).slice(
                3 * e[13],
                3 * e[13] + 3,
            ),
            a = [];
        for (let t = 0; t < s.length; t += 1) a[t] = Hc($c(e, s, t));
        const l = (e) =>
            ge(a[e], 1, 1, () => {
                a[e] = null;
            });
        return {
            c() {
                t = E('div');
                for (let e = 0; e < a.length; e += 1) a[e].c();
                ((n = _()), (o = E('br')), (i = _()), I(t, 'class', 'row'));
            },
            m(e, s) {
                k(e, t, s);
                for (let e = 0; e < a.length; e += 1) a[e] && a[e].m(t, null);
                (v(t, n), v(t, o), v(t, i), (r = !0));
            },
            p(e, o) {
                if (13 & o) {
                    let i;
                    for (
                        s = Object.keys(
                            e[2]().Phrasebook[e[3]()][e[0]].variants,
                        ).slice(3 * e[13], 3 * e[13] + 3),
                            i = 0;
                        i < s.length;
                        i += 1
                    ) {
                        const r = $c(e, s, i);
                        a[i]
                            ? (a[i].p(r, o), fe(a[i], 1))
                            : ((a[i] = Hc(r)),
                              a[i].c(),
                              fe(a[i], 1),
                              a[i].m(t, n));
                    }
                    for (ue(), i = s.length; i < a.length; i += 1) l(i);
                    pe();
                }
            },
            i(e) {
                if (!r) {
                    for (let e = 0; e < s.length; e += 1) fe(a[e]);
                    r = !0;
                }
            },
            o(e) {
                a = a.filter(Boolean);
                for (let e = 0; e < a.length; e += 1) ge(a[e]);
                r = !1;
            },
            d(e) {
                (e && x(t), C(a, e));
            },
        };
    }
    function Uc(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u = !!e[2]().Phrasebook[e[3]()][e[0]].tags[0],
            p = Wa(e[2]().Phrasebook[e[3]()][e[0]].description) + '',
            f = !!Object.keys(e[2]().Phrasebook[e[3]()][e[0]].variants).length;
        ((n = new Ja({
            props: { word: e[0], source: e[2]().Phrasebook[e[3]()][e[0]] },
        })),
            (i = new Hs({
                props: {
                    pronunciations:
                        e[2]().Phrasebook[e[3]()][e[0]].pronunciations,
                },
            })));
        let g = u && jc(e),
            m = f && Fc(e);
        return {
            c() {
                ((t = E('div')),
                    ye(n.$$.fragment),
                    (o = _()),
                    ye(i.$$.fragment),
                    (r = _()),
                    g && g.c(),
                    (s = _()),
                    (a = E('p')),
                    (l = _()),
                    m && m.c(),
                    I(a, 'class', 'prelined'),
                    I(t, 'class', 'lex-entry'),
                    I(t, 'id', e[0]));
            },
            m(u, f) {
                (k(u, t, f),
                    we(n, t, null),
                    v(t, o),
                    we(i, t, null),
                    v(t, r),
                    g && g.m(t, null),
                    v(t, s),
                    v(t, a),
                    (a.innerHTML = p),
                    v(t, l),
                    m && m.m(t, null),
                    (c = !0),
                    d || ((h = O(t, 'contextmenu', e[1])), (d = !0)));
            },
            p(e, [o]) {
                const r = {};
                (1 & o && (r.word = e[0]),
                    1 & o && (r.source = e[2]().Phrasebook[e[3]()][e[0]]),
                    n.$set(r));
                const l = {};
                (1 & o &&
                    (l.pronunciations =
                        e[2]().Phrasebook[e[3]()][e[0]].pronunciations),
                    i.$set(l),
                    1 & o && (u = !!e[2]().Phrasebook[e[3]()][e[0]].tags[0]),
                    u
                        ? g
                            ? g.p(e, o)
                            : ((g = jc(e)), g.c(), g.m(t, s))
                        : g && (g.d(1), (g = null)),
                    (!c || 1 & o) &&
                        p !==
                            (p =
                                Wa(
                                    e[2]().Phrasebook[e[3]()][e[0]].description,
                                ) + '') &&
                        (a.innerHTML = p),
                    1 & o &&
                        (f = !!Object.keys(
                            e[2]().Phrasebook[e[3]()][e[0]].variants,
                        ).length),
                    f
                        ? m
                            ? (m.p(e, o), 1 & o && fe(m, 1))
                            : ((m = Fc(e)), m.c(), fe(m, 1), m.m(t, null))
                        : m &&
                          (ue(),
                          ge(m, 1, 1, () => {
                              m = null;
                          }),
                          pe()),
                    (!c || 1 & o) && I(t, 'id', e[0]));
            },
            i(e) {
                c ||
                    (fe(n.$$.fragment, e),
                    fe(i.$$.fragment, e),
                    fe(m),
                    (c = !0));
            },
            o(e) {
                (ge(n.$$.fragment, e), ge(i.$$.fragment, e), ge(m), (c = !1));
            },
            d(e) {
                (e && x(t),
                    ke(n),
                    ke(i),
                    g && g.d(),
                    m && m.d(),
                    (d = !1),
                    h());
            },
        };
    }
    function Wc(e, t, n) {
        let o, i, r;
        (d(e, ts, (e) => n(8, (o = e))),
            d(e, Kr, (e) => n(9, (i = e))),
            d(e, as, (e) => n(6, (r = e))));
        const s = Y();
        let { phrase: a = '' } = t,
            l = r,
            { reference: c = !1 } = t,
            { refCat: h = '' } = t;
        return (
            (e.$$set = (e) => {
                ('phrase' in e && n(0, (a = e.phrase)),
                    'reference' in e && n(4, (c = e.reference)),
                    'refCat' in e && n(5, (h = e.refCat)));
            }),
            (e.$$.update = () => {
                64 & e.$$.dirty && (l = r);
            }),
            [a, () => s('edit'), () => (c ? l : i), () => (c ? h : o), c, h, r]
        );
    }
    class qc extends Ee {
        constructor(e) {
            (super(),
                Ce(this, e, Wc, Uc, s, { phrase: 0, reference: 4, refCat: 5 }));
        }
    }
    function Vc(e, t, n) {
        const o = e.slice();
        return ((o[11] = t[n]), (o[12] = t), (o[13] = n), o);
    }
    function Gc(e) {
        let t, n, o;
        return {
            c() {
                ((t = E('input')),
                    I(t, 'type', 'text'),
                    I(t, 'class', 'pronunciation'));
            },
            m(i, r) {
                (k(i, t, r),
                    P(t, e[2].General),
                    n || ((o = O(t, 'input', e[8])), (n = !0)));
            },
            p(e, n) {
                4 & n && t.value !== e[2].General && P(t, e[2].General);
            },
            d(e) {
                (e && x(t), (n = !1), o());
            },
        };
    }
    function Kc(e) {
        let t,
            n = e[3],
            o = [];
        for (let t = 0; t < n.length; t += 1) o[t] = Yc(Vc(e, n, t));
        return {
            c() {
                for (let e = 0; e < o.length; e += 1) o[e].c();
                t = B();
            },
            m(e, n) {
                for (let t = 0; t < o.length; t += 1) o[t] && o[t].m(e, n);
                k(e, t, n);
            },
            p(e, i) {
                if (12 & i) {
                    let r;
                    for (n = e[3], r = 0; r < n.length; r += 1) {
                        const s = Vc(e, n, r);
                        o[r]
                            ? o[r].p(s, i)
                            : ((o[r] = Yc(s)),
                              o[r].c(),
                              o[r].m(t.parentNode, t));
                    }
                    for (; r < o.length; r += 1) o[r].d(1);
                    o.length = n.length;
                }
            },
            d(e) {
                (C(o, e), e && x(t));
            },
        };
    }
    function Yc(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d = e[11] + '';
        function h() {
            e[7].call(s, e[11]);
        }
        return {
            c() {
                ((t = E('div')),
                    (n = E('div')),
                    (o = T(d)),
                    (i = _()),
                    (r = E('div')),
                    (s = E('input')),
                    (a = _()),
                    I(n, 'class', 'column text-right lect'),
                    I(s, 'type', 'text'),
                    I(s, 'class', 'pronunciation text-left'),
                    I(r, 'class', 'column text-left'),
                    I(t, 'class', 'row'));
            },
            m(d, u) {
                (k(d, t, u),
                    v(t, n),
                    v(n, o),
                    v(t, i),
                    v(t, r),
                    v(r, s),
                    P(s, e[2][e[11]]),
                    v(t, a),
                    l || ((c = O(s, 'input', h)), (l = !0)));
            },
            p(t, n) {
                ((e = t),
                    8 & n && d !== (d = e[11] + '') && A(o, d),
                    12 & n && s.value !== e[2][e[11]] && P(s, e[2][e[11]]));
            },
            d(e) {
                (e && x(t), (l = !1), c());
            },
        };
    }
    function Xc(t) {
        let n, o, r, s, a, l, c, d, h;
        function u(e, t) {
            return e[4].UseLects ? Kc : Gc;
        }
        let p = u(t),
            f = p(t);
        return {
            c() {
                ((n = E('div')),
                    (o = E('input')),
                    (r = _()),
                    f.c(),
                    (s = _()),
                    (a = E('textarea')),
                    (l = _()),
                    (c = E('br')),
                    I(o, 'type', 'text'),
                    I(n, 'class', 'variant-div'));
            },
            m(e, i) {
                (k(e, n, i),
                    v(n, o),
                    P(o, t[0]),
                    v(n, r),
                    f.m(n, null),
                    v(n, s),
                    v(n, a),
                    P(a, t[1]),
                    v(n, l),
                    v(n, c),
                    d ||
                        ((h = [
                            O(o, 'keyup', t[5]),
                            O(o, 'input', t[6]),
                            O(a, 'input', t[9]),
                        ]),
                        (d = !0)));
            },
            p(e, [t]) {
                (1 & t && o.value !== e[0] && P(o, e[0]),
                    p === (p = u(e)) && f
                        ? f.p(e, t)
                        : (f.d(1), (f = p(e)), f && (f.c(), f.m(n, s))),
                    2 & t && P(a, e[1]));
            },
            i: e,
            o: e,
            d(e) {
                (e && x(n), f.d(), (d = !1), i(h));
            },
        };
    }
    function Zc(e, t, n) {
        let o;
        d(e, Kr, (e) => n(4, (o = e)));
        let { phrase: i = '' } = t,
            { description: r = '' } = t,
            { lects: s } = t,
            { pronunciations: a = {} } = t;
        const l = Y();
        return (
            (e.$$set = (e) => {
                ('phrase' in e && n(0, (i = e.phrase)),
                    'description' in e && n(1, (r = e.description)),
                    'lects' in e && n(3, (s = e.lects)),
                    'pronunciations' in e && n(2, (a = e.pronunciations)));
            }),
            (e.$$.update = () => {
                9 & e.$$.dirty &&
                    s.forEach((e) => {
                        n(2, (a[e] = Es(i, e)), a);
                    });
            }),
            [
                i,
                r,
                a,
                s,
                o,
                () => l('update'),
                function () {
                    ((i = this.value), n(0, i));
                },
                function (e) {
                    ((a[e] = this.value), n(2, a), n(3, s), n(0, i));
                },
                function () {
                    ((a.General = this.value), n(2, a), n(3, s), n(0, i));
                },
                function () {
                    ((r = this.value), n(1, r));
                },
            ]
        );
    }
    class Jc extends Ee {
        constructor(e) {
            (super(),
                Ce(this, e, Zc, Xc, s, {
                    phrase: 0,
                    description: 1,
                    lects: 3,
                    pronunciations: 2,
                }));
        }
    }
    function Qc(e, t, n) {
        const o = e.slice();
        return ((o[40] = t[n]), (o[41] = t), (o[42] = n), o);
    }
    function ed(e, t, n) {
        const o = e.slice();
        return ((o[43] = t[n]), (o[44] = t), (o[45] = n), o);
    }
    function td(e, t, n) {
        const o = e.slice();
        return ((o[46] = t[n]), o);
    }
    function nd(e, t, n) {
        const o = e.slice();
        return ((o[43] = t[n]), o);
    }
    function od(e, t, n) {
        const o = e.slice();
        return ((o[51] = t[n]), o);
    }
    function id(t) {
        let n;
        return {
            c() {
                ((n = E('p')),
                    (n.textContent = 'Categories will appear here.'),
                    I(n, 'class', 'info'));
            },
            m(e, t) {
                k(e, n, t);
            },
            p: e,
            d(e) {
                e && x(n);
            },
        };
    }
    function rd(e) {
        let t,
            n,
            o,
            i,
            r,
            s = e[51] + '';
        function a() {
            return e[19](e[51]);
        }
        return {
            c() {
                ((t = E('div')),
                    (n = T(s)),
                    (o = _()),
                    I(t, 'class', 'lex-entry capitalize'),
                    R(t, 'selected', e[51] === e[5]));
            },
            m(e, s) {
                (k(e, t, s),
                    v(t, n),
                    v(t, o),
                    i || ((r = O(t, 'mousedown', a)), (i = !0)));
            },
            p(o, i) {
                ((e = o),
                    16 & i[0] && s !== (s = e[51] + '') && A(n, s),
                    48 & i[0] && R(t, 'selected', e[51] === e[5]));
            },
            d(e) {
                (e && x(t), (i = !1), r());
            },
        };
    }
    function sd(e) {
        let t;
        return {
            c() {
                ((t = E('label')),
                    (t.textContent = 'Search by phrase…'),
                    I(t, 'for', 'search-phrase'),
                    M(t, 'position', 'absolute'),
                    M(t, 'top', '.5em'),
                    M(t, 'left', '1em'));
            },
            m(e, n) {
                k(e, t, n);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function ad(e) {
        let t;
        return {
            c() {
                ((t = E('label')),
                    (t.textContent = 'Search by tags…'),
                    I(t, 'for', 'search-tags'),
                    M(t, 'position', 'absolute'),
                    M(t, 'top', '.5em'),
                    M(t, 'left', '1em'));
            },
            m(e, n) {
                k(e, t, n);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function ld(e) {
        let t;
        return {
            c() {
                ((t = E('label')),
                    (t.textContent = 'Search descriptions…'),
                    I(t, 'for', 'search-description'),
                    M(t, 'position', 'absolute'),
                    M(t, 'top', '.5em'),
                    M(t, 'left', '1em'));
            },
            m(e, n) {
                k(e, t, n);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function cd(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l = e[4].Lects,
            c = [];
        for (let t = 0; t < l.length; t += 1) c[t] = dd(nd(e, l, t));
        return {
            c() {
                ((t = E('div')),
                    (n = E('label')),
                    (o = T('Filter by lect:\n                             ')),
                    (i = E('select')),
                    (r = E('option')),
                    (r.textContent = 'All'));
                for (let e = 0; e < c.length; e += 1) c[e].c();
                ((r.__value = ''),
                    (r.value = r.__value),
                    void 0 === e[3] && ne(() => e[23].call(i)),
                    I(t, 'class', 'column'));
            },
            m(l, d) {
                (k(l, t, d), v(t, n), v(n, o), v(n, i), v(i, r));
                for (let e = 0; e < c.length; e += 1) c[e] && c[e].m(i, null);
                (N(i, e[3], !0), s || ((a = O(i, 'change', e[23])), (s = !0)));
            },
            p(e, t) {
                if (16 & t[0]) {
                    let n;
                    for (l = e[4].Lects, n = 0; n < l.length; n += 1) {
                        const o = nd(e, l, n);
                        c[n]
                            ? c[n].p(o, t)
                            : ((c[n] = dd(o)), c[n].c(), c[n].m(i, null));
                    }
                    for (; n < c.length; n += 1) c[n].d(1);
                    c.length = l.length;
                }
                24 & t[0] && N(i, e[3]);
            },
            d(e) {
                (e && x(t), C(c, e), (s = !1), a());
            },
        };
    }
    function dd(e) {
        let t,
            n,
            o,
            i = e[43] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[43]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (16 & r[0] && i !== (i = e[43] + '') && A(n, i),
                    16 & r[0] &&
                        o !== (o = e[43]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function hd(t) {
        let n;
        return {
            c() {
                ((n = E('p')),
                    (n.textContent =
                        'Select a category from the left or add your first phrase entry.'),
                    I(n, 'class', 'info'));
            },
            m(e, t) {
                k(e, n, t);
            },
            p: e,
            i: e,
            o: e,
            d(e) {
                e && x(n);
            },
        };
    }
    function ud(e) {
        let t,
            n,
            o = e[6],
            i = [];
        for (let t = 0; t < o.length; t += 1) i[t] = pd(td(e, o, t));
        const r = (e) =>
            ge(i[e], 1, 1, () => {
                i[e] = null;
            });
        return {
            c() {
                for (let e = 0; e < i.length; e += 1) i[e].c();
                t = B();
            },
            m(e, o) {
                for (let t = 0; t < i.length; t += 1) i[t] && i[t].m(e, o);
                (k(e, t, o), (n = !0));
            },
            p(e, n) {
                if (65600 & n[0]) {
                    let s;
                    for (o = e[6], s = 0; s < o.length; s += 1) {
                        const r = td(e, o, s);
                        i[s]
                            ? (i[s].p(r, n), fe(i[s], 1))
                            : ((i[s] = pd(r)),
                              i[s].c(),
                              fe(i[s], 1),
                              i[s].m(t.parentNode, t));
                    }
                    for (ue(), s = o.length; s < i.length; s += 1) r(s);
                    pe();
                }
            },
            i(e) {
                if (!n) {
                    for (let e = 0; e < o.length; e += 1) fe(i[e]);
                    n = !0;
                }
            },
            o(e) {
                i = i.filter(Boolean);
                for (let e = 0; e < i.length; e += 1) ge(i[e]);
                n = !1;
            },
            d(e) {
                (C(i, e), e && x(t));
            },
        };
    }
    function pd(e) {
        let t, n;
        return (
            (t = new qc({ props: { phrase: e[46] } })),
            t.$on('edit', function () {
                return e[24](e[46]);
            }),
            {
                c() {
                    ye(t.$$.fragment);
                },
                m(e, o) {
                    (we(t, e, o), (n = !0));
                },
                p(n, o) {
                    e = n;
                    const i = {};
                    (64 & o[0] && (i.phrase = e[46]), t.$set(i));
                },
                i(e) {
                    n || (fe(t.$$.fragment, e), (n = !0));
                },
                o(e) {
                    (ge(t.$$.fragment, e), (n = !1));
                },
                d(e) {
                    ke(t, e);
                },
            }
        );
    }
    function fd(e) {
        let t, n, o;
        return {
            c() {
                ((t = E('input')),
                    I(t, 'type', 'text'),
                    I(t, 'class', 'pronunciation'));
            },
            m(i, r) {
                (k(i, t, r),
                    P(t, e[12].General),
                    n || ((o = O(t, 'input', e[29])), (n = !0)));
            },
            p(e, n) {
                4096 & n[0] && t.value !== e[12].General && P(t, e[12].General);
            },
            d(e) {
                (e && x(t), (n = !1), o());
            },
        };
    }
    function gd(e) {
        let t,
            n = e[10],
            o = [];
        for (let t = 0; t < n.length; t += 1) o[t] = md(ed(e, n, t));
        return {
            c() {
                for (let e = 0; e < o.length; e += 1) o[e].c();
                t = B();
            },
            m(e, n) {
                for (let t = 0; t < o.length; t += 1) o[t] && o[t].m(e, n);
                k(e, t, n);
            },
            p(e, i) {
                if (5120 & i[0]) {
                    let r;
                    for (n = e[10], r = 0; r < n.length; r += 1) {
                        const s = ed(e, n, r);
                        o[r]
                            ? o[r].p(s, i)
                            : ((o[r] = md(s)),
                              o[r].c(),
                              o[r].m(t.parentNode, t));
                    }
                    for (; r < o.length; r += 1) o[r].d(1);
                    o.length = n.length;
                }
            },
            d(e) {
                (C(o, e), e && x(t));
            },
        };
    }
    function md(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d,
            h = e[43] + '';
        function u() {
            e[28].call(a, e[43]);
        }
        return {
            c() {
                ((t = E('div')),
                    (n = E('div')),
                    (o = E('p')),
                    (i = T(h)),
                    (r = _()),
                    (s = E('div')),
                    (a = E('input')),
                    (l = _()),
                    I(o, 'class', 'lect'),
                    I(n, 'class', 'column text-right'),
                    I(a, 'type', 'text'),
                    I(a, 'class', 'pronunciation text-left'),
                    I(s, 'class', 'column text-left'),
                    I(t, 'class', 'row narrow'));
            },
            m(h, p) {
                (k(h, t, p),
                    v(t, n),
                    v(n, o),
                    v(o, i),
                    v(t, r),
                    v(t, s),
                    v(s, a),
                    P(a, e[12][e[43]]),
                    v(t, l),
                    c || ((d = O(a, 'input', u)), (c = !0)));
            },
            p(t, n) {
                ((e = t),
                    1024 & n[0] && h !== (h = e[43] + '') && A(i, h),
                    5120 & n[0] &&
                        a.value !== e[12][e[43]] &&
                        P(a, e[12][e[43]]));
            },
            d(e) {
                (e && x(t), (c = !1), d());
            },
        };
    }
    function bd(t) {
        let n;
        return {
            c() {
                ((n = E('p')),
                    (n.textContent =
                        'Click the button below to add a variation for this phrase'),
                    I(n, 'class', 'info'));
            },
            m(e, t) {
                k(e, n, t);
            },
            p: e,
            d(e) {
                e && x(n);
            },
        };
    }
    function vd(e) {
        let t, n, o, i, r;
        function s(t) {
            e[34](t, e[42]);
        }
        function a(t) {
            e[35](t, e[42]);
        }
        function l(t) {
            e[36](t, e[42]);
        }
        let c = { lects: e[10] };
        return (
            void 0 !== e[9][e[42]].phrase && (c.phrase = e[9][e[42]].phrase),
            void 0 !== e[9][e[42]].pronunciations &&
                (c.pronunciations = e[9][e[42]].pronunciations),
            void 0 !== e[9][e[42]].description &&
                (c.description = e[9][e[42]].description),
            (t = new Jc({ props: c })),
            Z.push(() => ve(t, 'phrase', s)),
            Z.push(() => ve(t, 'pronunciations', a)),
            Z.push(() => ve(t, 'description', l)),
            t.$on('update', function () {
                return e[37](e[42]);
            }),
            {
                c() {
                    ye(t.$$.fragment);
                },
                m(e, n) {
                    (we(t, e, n), (r = !0));
                },
                p(r, s) {
                    e = r;
                    const a = {};
                    (1024 & s[0] && (a.lects = e[10]),
                        !n &&
                            512 & s[0] &&
                            ((n = !0),
                            (a.phrase = e[9][e[42]].phrase),
                            oe(() => (n = !1))),
                        !o &&
                            512 & s[0] &&
                            ((o = !0),
                            (a.pronunciations = e[9][e[42]].pronunciations),
                            oe(() => (o = !1))),
                        !i &&
                            512 & s[0] &&
                            ((i = !0),
                            (a.description = e[9][e[42]].description),
                            oe(() => (i = !1))),
                        t.$set(a));
                },
                i(e) {
                    r || (fe(t.$$.fragment, e), (r = !0));
                },
                o(e) {
                    (ge(t.$$.fragment, e), (r = !1));
                },
                d(e) {
                    ke(t, e);
                },
            }
        );
    }
    function yd(e) {
        let t,
            n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            S,
            T,
            B,
            L,
            A,
            N,
            $,
            j,
            D,
            F,
            H,
            z,
            U,
            W,
            q,
            V,
            G,
            K,
            Y,
            X,
            J,
            Q,
            ee,
            te,
            ne,
            ie,
            re,
            se,
            ae,
            le,
            ce,
            de,
            he,
            me,
            be,
            xe,
            Ce,
            Ee,
            Se,
            Te,
            _e,
            Be,
            Oe = Object.keys(e[4].Phrasebook),
            Ie = [];
        for (let t = 0; t < Oe.length; t += 1) Ie[t] = rd(od(e, Oe, t));
        let Le = null;
        Oe.length || (Le = id());
        let Ae = !e[0] && sd(),
            Pe = !e[2] && ad(),
            Me = !e[1] && ld(),
            Ne = e[4].UseLects && cd(e);
        const $e = [ud, hd],
            Re = [];
        function je(e, t) {
            return (
                16 & t[0] && (F = null),
                null == F && (F = !!Object.keys(e[4].Phrasebook).length),
                F ? 0 : 1
            );
        }
        function De(e, t) {
            return e[4].UseLects ? gd : fd;
        }
        ((H = je(e, [-1, -1])), (z = Re[H] = $e[H](e)));
        let Fe = De(e),
            He = Fe(e);
        function ze(t) {
            e[30](t);
        }
        function Ue(t) {
            e[31](t);
        }
        function We(t) {
            e[32](t);
        }
        let qe = { index: 'hide' };
        (void 0 !== e[8] && (qe.definition = e[8]),
            void 0 !== e[11] && (qe.tags = e[11]),
            void 0 !== e[10] && (qe.lects = e[10]),
            (ne = new Cl({ props: qe })),
            Z.push(() => ve(ne, 'definition', ze)),
            Z.push(() => ve(ne, 'tags', Ue)),
            Z.push(() => ve(ne, 'lects', We)));
        let Ve = e[9],
            Ge = [];
        for (let t = 0; t < Ve.length; t += 1) Ge[t] = vd(Qc(e, Ve, t));
        const Ke = (e) =>
            ge(Ge[e], 1, 1, () => {
                Ge[e] = null;
            });
        let Ye = null;
        return (
            Ve.length || (Ye = bd()),
            {
                c() {
                    ((t = E('div')),
                        (n = E('div')),
                        (o = E('div')),
                        (r = E('p')),
                        (r.textContent = 'Categories'),
                        (s = _()),
                        (a = E('hr')),
                        (l = _()),
                        (c = E('div')));
                    for (let e = 0; e < Ie.length; e += 1) Ie[e].c();
                    (Le && Le.c(),
                        (d = _()),
                        (h = E('div')),
                        (p = E('div')),
                        (f = E('div')),
                        Ae && Ae.c(),
                        (g = _()),
                        (m = E('input')),
                        (b = _()),
                        (y = E('div')),
                        Pe && Pe.c(),
                        (w = _()),
                        (S = E('input')),
                        (T = _()),
                        (B = E('div')),
                        (L = E('div')),
                        Me && Me.c(),
                        (A = _()),
                        (N = E('input')),
                        ($ = _()),
                        Ne && Ne.c(),
                        (j = _()),
                        (D = E('div')),
                        z.c(),
                        (U = _()),
                        (W = E('div')),
                        (q = E('div')),
                        (V = E('button')),
                        (G = _()),
                        (K = E('div')),
                        (Y = E('div')),
                        (X = E('label')),
                        (X.textContent = 'Phrase'),
                        (J = _()),
                        (Q = E('input')),
                        (ee = _()),
                        He.c(),
                        (te = _()),
                        ye(ne.$$.fragment),
                        (ae = _()),
                        (le = E('label')),
                        (ce = E('p')),
                        (ce.textContent = 'Category'),
                        (de = _()),
                        (he = E('input')),
                        (me = _()),
                        (be = E('button')),
                        (be.textContent = 'Add Phrase'),
                        (xe = _()),
                        (Ce = E('div')));
                    for (let e = 0; e < Ge.length; e += 1) Ge[e].c();
                    (Ye && Ye.c(),
                        (Ee = _()),
                        (Se = E('button')),
                        (Se.textContent = '+ Variant'),
                        I(
                            r,
                            'title',
                            'This panel will fill with category names as you assign phrases to new ones.',
                        ),
                        I(c, 'class', 'column scrolled'),
                        M(c, 'max-height', '90%'),
                        I(c, 'id', 'category-body'),
                        I(o, 'class', 'container column'),
                        M(o, 'max-width', '18%'),
                        I(m, 'id', 'search-phrase'),
                        I(m, 'type', 'text'),
                        I(m, 'class', 'search'),
                        I(f, 'class', 'column search-container'),
                        I(S, 'id', 'search-tags'),
                        I(S, 'type', 'text'),
                        I(S, 'class', 'search'),
                        I(y, 'class', 'column search-container'),
                        I(p, 'class', 'row'),
                        I(N, 'id', 'search-description'),
                        I(N, 'type', 'text'),
                        I(N, 'class', 'search'),
                        I(L, 'class', 'column search-container'),
                        I(B, 'class', 'row'),
                        I(D, 'class', 'column scrolled'),
                        I(D, 'id', 'phrasebook-body'),
                        M(D, 'max-height', '88%'),
                        I(h, 'class', 'container column'),
                        M(h, 'overflow', 'hidden'),
                        I(n, 'class', 'row'),
                        M(n, 'height', '58vh'),
                        I(V, 'class', 'collapser-h'),
                        I(q, 'class', 'row'),
                        M(q, 'width', '100vh'),
                        I(X, 'for', 'phrase'),
                        I(
                            X,
                            'title',
                            'Write a new phrase in your language here. The pronunciation is updated the same as in the Lexicon tab.',
                        ),
                        I(Q, 'type', 'text'),
                        I(
                            ce,
                            'title',
                            'Use this field to assign this phrase to a category, or to create a new one with this phrase as its first member.',
                        ),
                        I(he, 'type', 'text'),
                        I(be, 'class', 'hover-shadow hover-highlight'),
                        I(Y, 'class', 'column scrolled'),
                        M(Y, 'max-height', '100%'),
                        I(Se, 'class', 'hover-shadow hover-highlight'),
                        I(
                            Se,
                            'title',
                            'If there are multiple ways to say your phrase, you can add variant entries for it along with descriptions.',
                        ),
                        I(Ce, 'class', 'column scrolled'),
                        M(Ce, 'max-height', '100%'),
                        I(Ce, 'id', 'variants-body'),
                        I(K, 'class', 'row'),
                        M(K, 'height', '92%'),
                        R(K, 'collapsed', e[7]),
                        I(W, 'class', 'container collapsible-row'),
                        M(W, 'height', '34vh'),
                        I(t, 'class', 'tab-pane'));
                },
                m(i, x) {
                    (k(i, t, x),
                        v(t, n),
                        v(n, o),
                        v(o, r),
                        v(o, s),
                        v(o, a),
                        v(o, l),
                        v(o, c));
                    for (let e = 0; e < Ie.length; e += 1)
                        Ie[e] && Ie[e].m(c, null);
                    (Le && Le.m(c, null),
                        v(n, d),
                        v(n, h),
                        v(h, p),
                        v(p, f),
                        Ae && Ae.m(f, null),
                        v(f, g),
                        v(f, m),
                        P(m, e[0]),
                        v(p, b),
                        v(p, y),
                        Pe && Pe.m(y, null),
                        v(y, w),
                        v(y, S),
                        P(S, e[2]),
                        v(h, T),
                        v(h, B),
                        v(B, L),
                        Me && Me.m(L, null),
                        v(L, A),
                        v(L, N),
                        P(N, e[1]),
                        v(B, $),
                        Ne && Ne.m(B, null),
                        v(h, j),
                        v(h, D),
                        Re[H].m(D, null),
                        v(t, U),
                        v(t, W),
                        v(W, q),
                        v(q, V),
                        v(W, G),
                        v(W, K),
                        v(K, Y),
                        v(Y, X),
                        v(Y, J),
                        v(Y, Q),
                        P(Q, e[13]),
                        v(Y, ee),
                        He.m(Y, null),
                        v(Y, te),
                        we(ne, Y, null),
                        v(Y, ae),
                        v(Y, le),
                        v(le, ce),
                        v(le, de),
                        v(le, he),
                        P(he, e[14]),
                        v(Y, me),
                        v(Y, be),
                        v(K, xe),
                        v(K, Ce));
                    for (let e = 0; e < Ge.length; e += 1)
                        Ge[e] && Ge[e].m(Ce, null);
                    (Ye && Ye.m(Ce, null),
                        v(Ce, Ee),
                        v(Ce, Se),
                        (Te = !0),
                        _e ||
                            ((Be = [
                                u(Ls.call(null, r, { position: 'bottom' })),
                                O(m, 'input', e[20]),
                                O(S, 'input', e[21]),
                                O(N, 'input', e[22]),
                                O(V, 'click', e[25]),
                                u(Ls.call(null, X, { position: 'right' })),
                                O(Q, 'input', e[26]),
                                O(Q, 'input', e[27]),
                                u(Ls.call(null, ce, { position: 'right' })),
                                O(he, 'input', e[33]),
                                O(be, 'click', e[18]),
                                O(Se, 'click', e[17]),
                                u(
                                    Ls.call(null, Se, {
                                        position: 'bottom',
                                        autoPosition: !0,
                                    }),
                                ),
                            ]),
                            (_e = !0)));
                },
                p(e, t) {
                    if (32816 & t[0]) {
                        let n;
                        for (
                            Oe = Object.keys(e[4].Phrasebook), n = 0;
                            n < Oe.length;
                            n += 1
                        ) {
                            const o = od(e, Oe, n);
                            Ie[n]
                                ? Ie[n].p(o, t)
                                : ((Ie[n] = rd(o)),
                                  Ie[n].c(),
                                  Ie[n].m(c, null));
                        }
                        for (; n < Ie.length; n += 1) Ie[n].d(1);
                        ((Ie.length = Oe.length),
                            !Oe.length && Le
                                ? Le.p(e, t)
                                : Oe.length
                                  ? Le && (Le.d(1), (Le = null))
                                  : ((Le = id()), Le.c(), Le.m(c, null)));
                    }
                    (e[0]
                        ? Ae && (Ae.d(1), (Ae = null))
                        : Ae || ((Ae = sd()), Ae.c(), Ae.m(f, g)),
                        1 & t[0] && m.value !== e[0] && P(m, e[0]),
                        e[2]
                            ? Pe && (Pe.d(1), (Pe = null))
                            : Pe || ((Pe = ad()), Pe.c(), Pe.m(y, w)),
                        4 & t[0] && S.value !== e[2] && P(S, e[2]),
                        e[1]
                            ? Me && (Me.d(1), (Me = null))
                            : Me || ((Me = ld()), Me.c(), Me.m(L, A)),
                        2 & t[0] && N.value !== e[1] && P(N, e[1]),
                        e[4].UseLects
                            ? Ne
                                ? Ne.p(e, t)
                                : ((Ne = cd(e)), Ne.c(), Ne.m(B, null))
                            : Ne && (Ne.d(1), (Ne = null)));
                    let n = H;
                    ((H = je(e, t)),
                        H === n
                            ? Re[H].p(e, t)
                            : (ue(),
                              ge(Re[n], 1, 1, () => {
                                  Re[n] = null;
                              }),
                              pe(),
                              (z = Re[H]),
                              z ? z.p(e, t) : ((z = Re[H] = $e[H](e)), z.c()),
                              fe(z, 1),
                              z.m(D, null)),
                        8192 & t[0] && Q.value !== e[13] && P(Q, e[13]),
                        Fe === (Fe = De(e)) && He
                            ? He.p(e, t)
                            : (He.d(1),
                              (He = Fe(e)),
                              He && (He.c(), He.m(Y, te))));
                    const o = {};
                    if (
                        (!ie &&
                            256 & t[0] &&
                            ((ie = !0),
                            (o.definition = e[8]),
                            oe(() => (ie = !1))),
                        !re &&
                            2048 & t[0] &&
                            ((re = !0), (o.tags = e[11]), oe(() => (re = !1))),
                        !se &&
                            1024 & t[0] &&
                            ((se = !0), (o.lects = e[10]), oe(() => (se = !1))),
                        ne.$set(o),
                        16384 & t[0] && he.value !== e[14] && P(he, e[14]),
                        1536 & t[0])
                    ) {
                        let n;
                        for (Ve = e[9], n = 0; n < Ve.length; n += 1) {
                            const o = Qc(e, Ve, n);
                            Ge[n]
                                ? (Ge[n].p(o, t), fe(Ge[n], 1))
                                : ((Ge[n] = vd(o)),
                                  Ge[n].c(),
                                  fe(Ge[n], 1),
                                  Ge[n].m(Ce, Ee));
                        }
                        for (ue(), n = Ve.length; n < Ge.length; n += 1) Ke(n);
                        (pe(),
                            !Ve.length && Ye
                                ? Ye.p(e, t)
                                : Ve.length
                                  ? Ye && (Ye.d(1), (Ye = null))
                                  : ((Ye = bd()), Ye.c(), Ye.m(Ce, Ee)));
                    }
                    (!Te || 128 & t[0]) && R(K, 'collapsed', e[7]);
                },
                i(e) {
                    if (!Te) {
                        (fe(z), fe(ne.$$.fragment, e));
                        for (let e = 0; e < Ve.length; e += 1) fe(Ge[e]);
                        Te = !0;
                    }
                },
                o(e) {
                    (ge(z), ge(ne.$$.fragment, e), (Ge = Ge.filter(Boolean)));
                    for (let e = 0; e < Ge.length; e += 1) ge(Ge[e]);
                    Te = !1;
                },
                d(e) {
                    (e && x(t),
                        C(Ie, e),
                        Le && Le.d(),
                        Ae && Ae.d(),
                        Pe && Pe.d(),
                        Me && Me.d(),
                        Ne && Ne.d(),
                        Re[H].d(),
                        He.d(),
                        ke(ne),
                        C(Ge, e),
                        Ye && Ye.d(),
                        (_e = !1),
                        i(Be));
                },
            }
        );
    }
    function wd(e, t, n) {
        let o, i, r, s, a;
        (d(e, Kr, (e) => n(4, (o = e))),
            d(e, ts, (e) => n(5, (i = e))),
            d(e, Qr, (e) => n(12, (r = e))),
            d(e, Jr, (e) => n(13, (s = e))),
            d(e, es, (e) => n(14, (a = e))));
        const l = require('vex-js');
        h(es, (a = i), a);
        let c = '',
            u = '',
            p = '',
            f = '',
            g = [],
            m = !1,
            b = '',
            v = [],
            y = [...o.Lects],
            w = '';
        function k(e) {
            (h(ts, (i = e), i), h(es, (a = e), a));
        }
        function x(e) {
            (h(Jr, (s = e), s),
                h(es, (a = i), a),
                h(
                    Qr,
                    (r = (() => {
                        let t = {};
                        return (
                            Object.keys(
                                o.Phrasebook[i][e].pronunciations,
                            ).forEach((n) => {
                                t[n] = o.Phrasebook[i][e].pronunciations[n].ipa;
                            }),
                            t
                        );
                    })()),
                    r,
                ),
                n(8, (b = o.Phrasebook[i][e].description)),
                n(9, (v = [])));
            for (let t in o.Phrasebook[i][e].variants)
                n(
                    9,
                    (v = [
                        ...v,
                        {
                            phrase: t,
                            pronunciations:
                                o.Phrasebook[i][e].variants[t].pronunciations,
                            description:
                                o.Phrasebook[i][e].variants[t].description,
                        },
                    ]),
                );
            (delete o.Phrasebook[i][e],
                0 === Object.keys(o.Phrasebook[i]).length &&
                    (delete o.Phrasebook[i], h(ts, (i = ''), i)),
                h(Kr, (o = Object.assign({}, o)), o));
        }
        return (
            (e.$$.update = () => {
                63 & e.$$.dirty[0] &&
                    (o.Phrasebook,
                    n(
                        6,
                        (g = (function () {
                            if (!i) return [];
                            const e = o.Phrasebook[i],
                                t = c.trim(),
                                n = u.toLowerCase().trim(),
                                r = p.toLowerCase().trim();
                            let s = [];
                            for (let o in e) {
                                let i = '^' + o.replaceAll(/\s+/g, '^') + '^';
                                (t && !i.toLowerCase().includes(t)) ||
                                    (n &&
                                        !e[o].description
                                            .toLowerCase()
                                            .includes(n)) ||
                                    (r &&
                                        !e[o].tags
                                            .join(' ')
                                            .toLowerCase()
                                            .includes(r)) ||
                                    (f && !e[o].lects.includes(f)) ||
                                    s.push(o);
                                for (let i in e[o].variants) {
                                    let r = e[o].variants[i],
                                        a =
                                            '^' +
                                            i.replaceAll(/\s+/g, '^') +
                                            '^';
                                    (t && !a.toLowerCase().includes(t)) ||
                                        (n &&
                                            !r.description
                                                .toLowerCase()
                                                .includes(n)) ||
                                        s.push(o);
                                }
                            }
                            return [...new Set(s)];
                        })()),
                    ));
            }),
            [
                c,
                u,
                p,
                f,
                o,
                i,
                g,
                m,
                b,
                v,
                y,
                w,
                r,
                s,
                a,
                k,
                x,
                function () {
                    n(
                        9,
                        (v = [
                            ...v,
                            {
                                phrase: '',
                                pronunciations: (() => {
                                    let e = {};
                                    return (y.forEach((t) => (e[t] = '')), e);
                                })(),
                                description: '',
                            },
                        ]),
                    );
                },
                function () {
                    let e = s.trim();
                    if (!e) return;
                    let t = b.trim();
                    if (!t) return;
                    let c = a.trim();
                    if (!c) return;
                    let d = {};
                    function u() {
                        (o.Phrasebook.hasOwnProperty(c) ||
                            h(Kr, (o.Phrasebook[c] = {}), o),
                            h(
                                Kr,
                                (o.Phrasebook[c][e] = {
                                    pronunciations: d,
                                    lects: Object.keys(d),
                                    tags: w.split(/\s+/g),
                                    description: t,
                                    variants: (() => {
                                        let e = {};
                                        for (const t of v) {
                                            const n = t.phrase.trim();
                                            if (!n) continue;
                                            const o = t.description.trim();
                                            if (!o) continue;
                                            let i = {};
                                            (Object.keys(
                                                t.pronunciations,
                                            ).forEach((e) => {
                                                i[e] = {
                                                    ipa: t.pronunciations[
                                                        e
                                                    ].trim(),
                                                    irregular:
                                                        t.pronunciations[
                                                            e
                                                        ].trim() !== Es(n, e),
                                                };
                                            }),
                                                (e[n] = {
                                                    pronunciations: i,
                                                    description: o,
                                                }));
                                        }
                                        return e;
                                    })(),
                                }),
                                o,
                            ),
                            h(Kr, (o = Object.assign({}, o)), o),
                            h(Jr, (s = ''), s),
                            h(
                                Qr,
                                (r = (() => {
                                    let e = {};
                                    return (
                                        Object.keys(o.Pronunciations).forEach(
                                            (t) => {
                                                e[t] = '';
                                            },
                                        ),
                                        e
                                    );
                                })()),
                                r,
                            ),
                            n(8, (b = '')),
                            n(9, (v = [])),
                            h(ts, (i = c), i));
                    }
                    (console.log(r, y),
                        Object.keys(r)
                            .filter((e) => y.includes(e))
                            .forEach((t) => {
                                (console.log(t),
                                    (d[t] = {
                                        ipa: r[t].trim(),
                                        irregular: r[t].trim() !== Es(e, t),
                                    }));
                            }),
                        o.Phrasebook.hasOwnProperty(c) &&
                        o.Phrasebook[c].hasOwnProperty(e)
                            ? l.dialog.confirm({
                                  message:
                                      'This phrase already exists in this category. Are you sure you want to overwrite it?',
                                  callback: (e) => {
                                      e && u();
                                  },
                              })
                            : u());
                },
                (e) => k(e),
                function () {
                    ((c = this.value), n(0, c));
                },
                function () {
                    ((p = this.value), n(2, p));
                },
                function () {
                    ((u = this.value), n(1, u));
                },
                function () {
                    ((f = $(this)), n(3, f));
                },
                (e) => x(e),
                () => n(7, (m = !m)),
                function () {
                    ((s = this.value), Jr.set(s));
                },
                () => {
                    y.forEach((e) => {
                        h(Qr, (r[e] = Es(s, e)), r);
                    });
                },
                function (e) {
                    ((r[e] = this.value), Qr.set(r));
                },
                function () {
                    ((r.General = this.value), Qr.set(r));
                },
                function (e) {
                    ((b = e), n(8, b));
                },
                function (e) {
                    ((w = e), n(11, w));
                },
                function (e) {
                    ((y = e), n(10, y));
                },
                function () {
                    ((a = this.value), es.set(a));
                },
                function (t, o) {
                    e.$$.not_equal(v[o].phrase, t) &&
                        ((v[o].phrase = t), n(9, v));
                },
                function (t, o) {
                    e.$$.not_equal(v[o].pronunciations, t) &&
                        ((v[o].pronunciations = t), n(9, v));
                },
                function (t, o) {
                    e.$$.not_equal(v[o].description, t) &&
                        ((v[o].description = t), n(9, v));
                },
                (e) => {
                    y.forEach((t) => {
                        n(9, (v[e].pronunciations[t] = Es(v[e].phrase, t)), v);
                    });
                },
            ]
        );
    }
    class kd extends Ee {
        constructor(e) {
            (super(), Ce(this, e, wd, yd, s, {}, null, [-1, -1]));
        }
    }
    function xd(e, t, n) {
        const o = e.slice();
        return ((o[41] = t[n]), o);
    }
    function Cd(e, t, n) {
        const o = e.slice();
        return ((o[44] = t[n]), (o[46] = n), o);
    }
    function Ed(e, t, n) {
        const o = e.slice();
        return ((o[47] = t[n]), o);
    }
    function Sd(e, t, n) {
        const o = e.slice();
        return ((o[50] = t[n]), (o[51] = t), (o[46] = n), o);
    }
    function Td(e) {
        let t,
            n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            C,
            S,
            B,
            L,
            N,
            $,
            R,
            j,
            D,
            F,
            H,
            z,
            U,
            W,
            q,
            V,
            G,
            K,
            Y,
            X,
            Z,
            J,
            Q,
            ee,
            te,
            ne;
        return {
            c() {
                ((t = E('label')),
                    (t.textContent = 'Onset Consonants'),
                    (n = _()),
                    (o = E('textarea')),
                    (r = _()),
                    (s = E('br')),
                    (a = _()),
                    (l = E('label')),
                    (l.textContent = 'Medial Consonants'),
                    (c = _()),
                    (d = E('textarea')),
                    (h = _()),
                    (p = E('br')),
                    (f = _()),
                    (g = E('label')),
                    (g.textContent = 'Coda Consonants'),
                    (m = _()),
                    (b = E('textarea')),
                    (y = _()),
                    (w = E('br')),
                    (C = _()),
                    (S = E('label')),
                    (S.textContent = 'Vowels'),
                    (B = _()),
                    (L = E('textarea')),
                    (N = _()),
                    ($ = E('br')),
                    (R = _()),
                    (j = E('label')),
                    (j.textContent = 'Illegal Combinations'),
                    (D = _()),
                    (F = E('textarea')),
                    (H = _()),
                    (z = E('br')),
                    (U = E('br')),
                    (W = _()),
                    (q = E('label')),
                    (q.textContent = 'Trial Words'),
                    (V = _()),
                    (G = E('input')),
                    (K = _()),
                    (Y = E('p')),
                    (X = T(e[10])),
                    (Z = _()),
                    (J = E('br')),
                    (Q = _()),
                    (ee = E('button')),
                    (ee.textContent = 'Generate Words'),
                    I(t, 'for', 'onsets'),
                    I(
                        t,
                        'title',
                        'This field is for defining consonants and cluster that can occur word-initially.',
                    ),
                    I(o, 'id', 'onsets'),
                    I(o, 'class', 'phonology'),
                    I(l, 'for', 'medials'),
                    I(
                        l,
                        'title',
                        'This field is for defining consonants and clusters that can occur word-medially.',
                    ),
                    I(d, 'id', 'medials'),
                    I(d, 'class', 'phonology'),
                    I(g, 'for', 'codas'),
                    I(
                        g,
                        'title',
                        'This field is for defining consonants and clusters that can occur word-finally.',
                    ),
                    I(b, 'id', 'codas'),
                    I(b, 'class', 'phonology'),
                    I(S, 'for', 'vowels'),
                    I(
                        S,
                        'title',
                        'This field is for defining vowels or sounds which can occur as a syllable’s nucleus.',
                    ),
                    I(L, 'id', 'vowels'),
                    I(L, 'class', 'phonology'),
                    I(j, 'for', 'illegals'),
                    I(
                        j,
                        'title',
                        'This field is for defining combinations of characters that should never occur.',
                    ),
                    I(F, 'id', 'illegals'),
                    I(F, 'class', 'phonology'),
                    I(q, 'for', 'trial'),
                    I(
                        q,
                        'title',
                        'This field allows you to begin typing a word while being shown possible completions for it.',
                    ),
                    I(G, 'type', 'text'),
                    I(G, 'id', 'trial'),
                    M(Y, 'font-family', 'Gentium'),
                    I(ee, 'class', 'hover-highlight hover-shadow'));
            },
            m(i, x) {
                (k(i, t, x),
                    k(i, n, x),
                    k(i, o, x),
                    P(o, e[3].Phonotactics.General.Onsets),
                    k(i, r, x),
                    k(i, s, x),
                    k(i, a, x),
                    k(i, l, x),
                    k(i, c, x),
                    k(i, d, x),
                    P(d, e[3].Phonotactics.General.Medials),
                    k(i, h, x),
                    k(i, p, x),
                    k(i, f, x),
                    k(i, g, x),
                    k(i, m, x),
                    k(i, b, x),
                    P(b, e[3].Phonotactics.General.Codas),
                    k(i, y, x),
                    k(i, w, x),
                    k(i, C, x),
                    k(i, S, x),
                    k(i, B, x),
                    k(i, L, x),
                    P(L, e[3].Phonotactics.General.Vowels),
                    k(i, N, x),
                    k(i, $, x),
                    k(i, R, x),
                    k(i, j, x),
                    k(i, D, x),
                    k(i, F, x),
                    P(F, e[3].Phonotactics.General.Illegals),
                    k(i, H, x),
                    k(i, z, x),
                    k(i, U, x),
                    k(i, W, x),
                    k(i, q, x),
                    k(i, V, x),
                    k(i, G, x),
                    P(G, e[0]),
                    k(i, K, x),
                    k(i, Y, x),
                    v(Y, X),
                    k(i, Z, x),
                    k(i, J, x),
                    k(i, Q, x),
                    k(i, ee, x),
                    te ||
                        ((ne = [
                            u(Ls.call(null, t, { position: 'right' })),
                            O(o, 'input', e[28]),
                            u(Ls.call(null, l, { position: 'right' })),
                            O(d, 'input', e[29]),
                            u(Ls.call(null, g, { position: 'right' })),
                            O(b, 'input', e[30]),
                            u(Ls.call(null, S, { position: 'right' })),
                            O(L, 'input', e[31]),
                            u(Ls.call(null, j, { position: 'right' })),
                            O(F, 'input', e[32]),
                            u(Ls.call(null, q, { position: 'right' })),
                            O(G, 'input', e[33]),
                            O(ee, 'click', e[34]),
                        ]),
                        (te = !0)));
            },
            p(e, t) {
                (8 & t[0] && P(o, e[3].Phonotactics.General.Onsets),
                    8 & t[0] && P(d, e[3].Phonotactics.General.Medials),
                    8 & t[0] && P(b, e[3].Phonotactics.General.Codas),
                    8 & t[0] && P(L, e[3].Phonotactics.General.Vowels),
                    8 & t[0] && P(F, e[3].Phonotactics.General.Illegals),
                    1 & t[0] && G.value !== e[0] && P(G, e[0]),
                    1024 & t[0] && A(X, e[10]));
            },
            d(e) {
                (e && x(t),
                    e && x(n),
                    e && x(o),
                    e && x(r),
                    e && x(s),
                    e && x(a),
                    e && x(l),
                    e && x(c),
                    e && x(d),
                    e && x(h),
                    e && x(p),
                    e && x(f),
                    e && x(g),
                    e && x(m),
                    e && x(b),
                    e && x(y),
                    e && x(w),
                    e && x(C),
                    e && x(S),
                    e && x(B),
                    e && x(L),
                    e && x(N),
                    e && x($),
                    e && x(R),
                    e && x(j),
                    e && x(D),
                    e && x(F),
                    e && x(H),
                    e && x(z),
                    e && x(U),
                    e && x(W),
                    e && x(q),
                    e && x(V),
                    e && x(G),
                    e && x(K),
                    e && x(Y),
                    e && x(Z),
                    e && x(J),
                    e && x(Q),
                    e && x(ee),
                    (te = !1),
                    i(ne));
            },
        };
    }
    function _d(e) {
        let t,
            n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            S,
            B,
            L,
            A,
            M,
            N,
            $,
            R,
            j,
            D,
            F,
            H = e[6],
            z = [];
        for (let t = 0; t < H.length; t += 1) z[t] = Bd(Sd(e, H, t));
        return {
            c() {
                ((t = E('div')),
                    (n = E('div')),
                    (o = E('label')),
                    (r = T('Categories\n                            ')),
                    (s = E('textarea')),
                    (a = _()),
                    (l = E('div')),
                    (c = E('label')),
                    (d = T('Syllables\n                            ')),
                    (h = E('textarea')),
                    (p = _()),
                    (f = E('div')),
                    (g = E('div')),
                    (m = E('label')),
                    (b = T('Structures\n                            ')));
                for (let e = 0; e < z.length; e += 1) z[e].c();
                ((y = _()),
                    (w = E('button')),
                    (w.textContent = 'Add Set'),
                    (S = _()),
                    (B = E('div')),
                    (L = E('label')),
                    (A = T('Illegals\n                            ')),
                    (M = E('textarea')),
                    (N = _()),
                    ($ = E('br')),
                    (R = _()),
                    (j = E('button')),
                    (j.textContent = 'Generate Words'),
                    I(s, 'class', 'phonology text-left'),
                    I(s, 'rows', '8'),
                    I(
                        o,
                        'title',
                        'This field is for defining categories of phonemes. See the Help tab for more information.',
                    ),
                    I(n, 'class', 'column'),
                    I(h, 'class', 'phonology text-left'),
                    I(h, 'rows', '8'),
                    I(
                        c,
                        'title',
                        'This field is for defining syllable structures. See the Help tab for more information.',
                    ),
                    I(l, 'class', 'column'),
                    I(t, 'class', 'row'),
                    I(w, 'class', 'hover-highlight hover-shadow'),
                    I(
                        m,
                        'title',
                        'This field is for defining word structures. See the Help tab for more information.',
                    ),
                    I(g, 'class', 'column'),
                    I(M, 'class', 'phonology text-left'),
                    I(M, 'rows', '4'),
                    I(
                        L,
                        'title',
                        'This field is for defining illegal combinations in words. See the Help tab for more information.',
                    ),
                    I(B, 'class', 'column'),
                    I(f, 'class', 'row'),
                    I(j, 'class', 'hover-highlight hover-shadow'));
            },
            m(i, x) {
                (k(i, t, x),
                    v(t, n),
                    v(n, o),
                    v(o, r),
                    v(o, s),
                    P(s, e[4]),
                    v(t, a),
                    v(t, l),
                    v(l, c),
                    v(c, d),
                    v(c, h),
                    P(h, e[5]),
                    k(i, p, x),
                    k(i, f, x),
                    v(f, g),
                    v(g, m),
                    v(m, b));
                for (let e = 0; e < z.length; e += 1) z[e] && z[e].m(m, null);
                (v(m, y),
                    v(m, w),
                    v(f, S),
                    v(f, B),
                    v(B, L),
                    v(L, A),
                    v(L, M),
                    P(M, e[7]),
                    k(i, N, x),
                    k(i, $, x),
                    k(i, R, x),
                    k(i, j, x),
                    D ||
                        ((F = [
                            O(s, 'input', e[20]),
                            O(s, 'blur', e[12]),
                            u(Ls.call(null, o, { position: 'right' })),
                            O(h, 'input', e[21]),
                            O(h, 'blur', e[13]),
                            u(Ls.call(null, c, { position: 'left' })),
                            O(w, 'click', e[25]),
                            u(Ls.call(null, m, { position: 'right' })),
                            O(M, 'input', e[26]),
                            O(M, 'blur', e[15]),
                            u(Ls.call(null, L, { position: 'left' })),
                            O(j, 'click', e[27]),
                        ]),
                        (D = !0)));
            },
            p(e, t) {
                if (
                    (16 & t[0] && P(s, e[4]),
                    32 & t[0] && P(h, e[5]),
                    16448 & t[0])
                ) {
                    let n;
                    for (H = e[6], n = 0; n < H.length; n += 1) {
                        const o = Sd(e, H, n);
                        z[n]
                            ? z[n].p(o, t)
                            : ((z[n] = Bd(o)), z[n].c(), z[n].m(m, y));
                    }
                    for (; n < z.length; n += 1) z[n].d(1);
                    z.length = H.length;
                }
                128 & t[0] && P(M, e[7]);
            },
            d(e) {
                (e && x(t),
                    e && x(p),
                    e && x(f),
                    C(z, e),
                    e && x(N),
                    e && x($),
                    e && x(R),
                    e && x(j),
                    (D = !1),
                    i(F));
            },
        };
    }
    function Bd(e) {
        let t, n, o, r, s, a, l, c, d, h, u, p;
        function f() {
            e[22].call(r, e[51], e[46]);
        }
        function g() {
            return e[23](e[46]);
        }
        function m() {
            e[24].call(h, e[51], e[46]);
        }
        return {
            c() {
                ((t = E('div')),
                    (n = E('div')),
                    (o = E('div')),
                    (r = E('input')),
                    (s = _()),
                    (a = E('div')),
                    (l = E('button')),
                    (l.textContent = '-'),
                    (c = _()),
                    (d = E('div')),
                    (h = E('textarea')),
                    I(r, 'type', 'checkbox'),
                    I(o, 'class', 'row'),
                    I(l, 'class', 'hover-highlight hover-shadow'),
                    I(a, 'class', 'row'),
                    I(n, 'class', 'column narrow'),
                    I(h, 'class', 'phonology text-left'),
                    I(h, 'rows', '3'),
                    I(d, 'class', 'column'),
                    I(t, 'class', 'row'));
            },
            m(i, b) {
                (k(i, t, b),
                    v(t, n),
                    v(n, o),
                    v(o, r),
                    (r.checked = e[50].enabled),
                    v(n, s),
                    v(n, a),
                    v(a, l),
                    v(t, c),
                    v(t, d),
                    v(d, h),
                    P(h, e[50].structures),
                    u ||
                        ((p = [
                            O(r, 'change', f),
                            O(r, 'change', e[14]),
                            O(l, 'click', g),
                            O(h, 'input', m),
                            O(h, 'blur', e[14]),
                        ]),
                        (u = !0)));
            },
            p(t, n) {
                ((e = t),
                    64 & n[0] && (r.checked = e[50].enabled),
                    64 & n[0] && P(h, e[50].structures));
            },
            d(e) {
                (e && x(t), (u = !1), i(p));
            },
        };
    }
    function Od(e) {
        let t,
            n,
            o,
            i = e[47] + '';
        return {
            c() {
                ((t = E('div')),
                    (n = E('p')),
                    (o = T(i)),
                    I(n, 'class', 'prelined'),
                    M(n, 'font-family', 'Gentium'),
                    I(t, 'class', 'column'));
            },
            m(e, i) {
                (k(e, t, i), v(t, n), v(n, o));
            },
            p(e, t) {
                256 & t[0] && i !== (i = e[47] + '') && A(o, i);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Id(e) {
        let t,
            n,
            o = e[8].slice(3 * e[46], 3 * e[46] + 3),
            i = [];
        for (let t = 0; t < o.length; t += 1) i[t] = Od(Ed(e, o, t));
        return {
            c() {
                t = E('div');
                for (let e = 0; e < i.length; e += 1) i[e].c();
                ((n = _()), I(t, 'class', 'row'));
            },
            m(e, o) {
                k(e, t, o);
                for (let e = 0; e < i.length; e += 1) i[e] && i[e].m(t, null);
                v(t, n);
            },
            p(e, r) {
                if (256 & r[0]) {
                    let s;
                    for (
                        o = e[8].slice(3 * e[46], 3 * e[46] + 3), s = 0;
                        s < o.length;
                        s += 1
                    ) {
                        const a = Ed(e, o, s);
                        i[s]
                            ? i[s].p(a, r)
                            : ((i[s] = Od(a)), i[s].c(), i[s].m(t, n));
                    }
                    for (; s < i.length; s += 1) i[s].d(1);
                    i.length = o.length;
                }
            },
            d(e) {
                (e && x(t), C(i, e));
            },
        };
    }
    function Ld(e) {
        let t,
            n,
            o,
            r = e[3].Lects,
            s = [];
        for (let t = 0; t < r.length; t += 1) s[t] = Ad(xd(e, r, t));
        return {
            c() {
                t = E('select');
                for (let e = 0; e < s.length; e += 1) s[e].c();
                void 0 === e[2] && ne(() => e[35].call(t));
            },
            m(i, r) {
                k(i, t, r);
                for (let e = 0; e < s.length; e += 1) s[e] && s[e].m(t, null);
                (N(t, e[2], !0),
                    n ||
                        ((o = [O(t, 'change', e[35]), O(t, 'change', e[17])]),
                        (n = !0)));
            },
            p(e, n) {
                if (8 & n[0]) {
                    let o;
                    for (r = e[3].Lects, o = 0; o < r.length; o += 1) {
                        const i = xd(e, r, o);
                        s[o]
                            ? s[o].p(i, n)
                            : ((s[o] = Ad(i)), s[o].c(), s[o].m(t, null));
                    }
                    for (; o < s.length; o += 1) s[o].d(1);
                    s.length = r.length;
                }
                12 & n[0] && N(t, e[2]);
            },
            d(e) {
                (e && x(t), C(s, e), (n = !1), i(o));
            },
        };
    }
    function Ad(e) {
        let t,
            n,
            o,
            i = e[41] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[41]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (8 & r[0] && i !== (i = e[41] + '') && A(n, i),
                    8 & r[0] &&
                        o !== (o = e[41]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Pd(t) {
        let n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            S,
            B,
            L,
            A,
            N,
            $,
            R,
            j,
            D,
            F,
            H,
            z,
            U;
        function W(e, t) {
            return e[3].UseAdvancedPhonotactics ? _d : Td;
        }
        let q = W(t),
            V = q(t),
            G = Array(t[8].length / 3).fill(null),
            K = [];
        for (let e = 0; e < G.length; e += 1) K[e] = Id(Cd(t, G, e));
        let Y = t[3].UseLects && Ld(t);
        return {
            c() {
                ((n = E('div')),
                    (o = E('div')),
                    (r = E('div')),
                    (s = E('label')),
                    (a = E('input')),
                    (l = T('\n                Use Advanced Phonotactics')),
                    (c = _()),
                    (d = E('br')),
                    (h = E('br')),
                    (p = _()),
                    V.c(),
                    (f = _()));
                for (let e = 0; e < K.length; e += 1) K[e].c();
                ((g = _()),
                    (m = E('div')),
                    (b = E('label')),
                    (y = T('Pronunciations\n                ')),
                    Y && Y.c(),
                    (w = _()),
                    (S = E('textarea')),
                    (L = _()),
                    (A = E('br')),
                    (N = E('br')),
                    ($ = _()),
                    (R = E('label')),
                    (j = T('Rule Testing\n                ')),
                    (D = E('textarea')),
                    (F = _()),
                    (H = E('textarea')),
                    I(a, 'type', 'checkbox'),
                    I(
                        s,
                        'title',
                        'Turn this on to show a type of word generator better suited for complex structures.',
                    ),
                    I(r, 'class', 'container column scrolled'),
                    M(r, 'height', '100%'),
                    I(S, 'class', 'prelined'),
                    I(S, 'rows', '24'),
                    M(S, 'text-align', 'left'),
                    I(S, 'id', 'pronunciations-input'),
                    (S.value = B = t[3].Pronunciations[t[2]]),
                    I(
                        b,
                        'title',
                        'This field is for writing pronunciation rules to convert your romanization to phonetic notation. See the Help tab for more information.',
                    ),
                    I(D, 'class', 'prelined'),
                    I(D, 'rows', '2'),
                    I(
                        R,
                        'title',
                        'This field allows you to test that your rules are working as expected.',
                    ),
                    I(H, 'class', 'pronunciation'),
                    I(H, 'rows', '2'),
                    (H.readOnly = !0),
                    I(m, 'class', 'container column scrolled'),
                    M(m, 'height', '100%'),
                    I(o, 'class', 'row'),
                    M(o, 'height', '92vh'),
                    I(n, 'class', 'tab-pane'));
            },
            m(e, i) {
                (k(e, n, i),
                    v(n, o),
                    v(o, r),
                    v(r, s),
                    v(s, a),
                    (a.checked = t[3].UseAdvancedPhonotactics),
                    v(s, l),
                    v(r, c),
                    v(r, d),
                    v(r, h),
                    v(r, p),
                    V.m(r, null),
                    v(r, f));
                for (let e = 0; e < K.length; e += 1) K[e] && K[e].m(r, null);
                (v(o, g),
                    v(o, m),
                    v(m, b),
                    v(b, y),
                    Y && Y.m(b, null),
                    v(b, w),
                    v(b, S),
                    v(m, L),
                    v(m, A),
                    v(m, N),
                    v(m, $),
                    v(m, R),
                    v(R, j),
                    v(R, D),
                    P(D, t[1]),
                    v(m, F),
                    v(m, H),
                    P(H, t[9]),
                    z ||
                        ((U = [
                            O(a, 'change', t[19]),
                            u(Ls.call(null, s, { position: 'right' })),
                            O(S, 'blur', t[36]),
                            u(Ls.call(null, b, { position: 'bottom' })),
                            O(D, 'input', t[37]),
                            u(Ls.call(null, R, { position: 'top' })),
                            O(H, 'input', t[38]),
                        ]),
                        (z = !0)));
            },
            p(e, t) {
                if (
                    (8 & t[0] && (a.checked = e[3].UseAdvancedPhonotactics),
                    q === (q = W(e)) && V
                        ? V.p(e, t)
                        : (V.d(1), (V = q(e)), V && (V.c(), V.m(r, f))),
                    256 & t[0])
                ) {
                    let n;
                    for (
                        G = Array(e[8].length / 3).fill(null), n = 0;
                        n < G.length;
                        n += 1
                    ) {
                        const o = Cd(e, G, n);
                        K[n]
                            ? K[n].p(o, t)
                            : ((K[n] = Id(o)), K[n].c(), K[n].m(r, null));
                    }
                    for (; n < K.length; n += 1) K[n].d(1);
                    K.length = G.length;
                }
                (e[3].UseLects
                    ? Y
                        ? Y.p(e, t)
                        : ((Y = Ld(e)), Y.c(), Y.m(b, w))
                    : Y && (Y.d(1), (Y = null)),
                    12 & t[0] &&
                        B !== (B = e[3].Pronunciations[e[2]]) &&
                        (S.value = B),
                    2 & t[0] && P(D, e[1]),
                    512 & t[0] && P(H, e[9]));
            },
            i: e,
            o: e,
            d(e) {
                (e && x(n), V.d(), C(K, e), Y && Y.d(), (z = !1), i(U));
            },
        };
    }
    function Md(e, t, n) {
        let o, i, r, s;
        (d(e, Kr, (e) => n(3, (r = e))), d(e, rs, (e) => n(18, (s = e))));
        var a =
            (this && this.__rest) ||
            function (e, t) {
                var n = {};
                for (var o in e)
                    Object.prototype.hasOwnProperty.call(e, o) &&
                        t.indexOf(o) < 0 &&
                        (n[o] = e[o]);
                if (
                    null != e &&
                    'function' == typeof Object.getOwnPropertySymbols
                ) {
                    var i = 0;
                    for (o = Object.getOwnPropertySymbols(e); i < o.length; i++)
                        t.indexOf(o[i]) < 0 &&
                            Object.prototype.propertyIsEnumerable.call(
                                e,
                                o[i],
                            ) &&
                            (n[o[i]] = e[o[i]]);
                }
                return n;
            };
        let l = '',
            c = '';
        function u(e) {
            const t = e.target.value.trim(),
                n = r.Pronunciations,
                o = v;
            n[o];
            const i = a(n, ['symbol' == typeof o ? o : o + '']);
            h(
                Kr,
                (r.Pronunciations = Object.assign(Object.assign({}, i), {
                    [v]: t,
                })),
                r,
            );
        }
        let p = '',
            f = '',
            g = [{ enabled: !0, structures: '' }],
            m = '';
        function b(e = 1) {
            let t = '';
            const n = (t) => {
                for (let n of r.AdvancedPhonotactics.Illegals)
                    if (t.includes(n) && '' !== n)
                        return e <= 20 ? b(e + 1) : '[ ∅ ]';
                return t;
            };
            if (
                r.AdvancedPhonotactics.Constructs.every(
                    (e) => !e.enabled || '' === e.structures.trim(),
                )
            ) {
                for (let e = 0; e < Math.floor(4 * Math.random()) + 1; e++) {
                    let e =
                        r.AdvancedPhonotactics.Syllables[
                            Math.floor(
                                Math.random() *
                                    r.AdvancedPhonotactics.Syllables.length,
                            )
                        ];
                    (e.includes('::') &&
                        (e = e.split('::')[1].trim().split(/\s+/g)[
                            Math.floor(
                                Math.random() *
                                    e.split('::')[1].trim().split(/\s+/g)
                                        .length,
                            )
                        ]),
                        e.split('').forEach((e) => {
                            r.AdvancedPhonotactics.Categories[e]
                                ? (t +=
                                      r.AdvancedPhonotactics.Categories[e][
                                          Math.floor(
                                              Math.random() *
                                                  r.AdvancedPhonotactics
                                                      .Categories[e].length,
                                          )
                                      ])
                                : (t += e);
                        }));
                }
                return n(t);
            }
            let o = [];
            for (let e of r.AdvancedPhonotactics.Constructs)
                e.enabled && (o = o.concat(e.structures.split(/\s+/g)));
            let i = o[Math.floor(Math.random() * o.length)].split(''),
                s = new Array(i.length).fill([]);
            for (let e = 0; e < i.length; e++) {
                let t = i[e];
                for (
                    let n = 0;
                    n < r.AdvancedPhonotactics.Syllables.length;
                    n++
                )
                    r.AdvancedPhonotactics.Syllables[n]
                        .replaceAll(/\s+/g, '')
                        .slice(0, 3) ===
                        t + '::' &&
                        (s[e] = s[e].concat(
                            r.AdvancedPhonotactics.Syllables[n]
                                .split('::')[1]
                                .trim()
                                .split(/\s+/g),
                        ));
                0 === s[e].length && (s[e] = [t]);
            }
            let a = '';
            for (let e = 0; e < s.length; e++) {
                a += s[e][Math.floor(Math.random() * s[e].length)];
            }
            for (let e = 0; e < a.length; e++) {
                let n = a[e];
                r.AdvancedPhonotactics.Categories[n]
                    ? (t +=
                          r.AdvancedPhonotactics.Categories[n][
                              Math.floor(
                                  Math.random() *
                                      r.AdvancedPhonotactics.Categories[n]
                                          .length,
                              )
                          ])
                    : (t += n);
            }
            return n(t);
        }
        let v = r.Lects[0],
            y = Array(24).fill('');
        return (
            (e.$$.update = () => {
                (262144 & e.$$.dirty[0] &&
                    s &&
                    (n(
                        4,
                        (p = Object.keys(r.AdvancedPhonotactics.Categories)
                            .map(
                                (e) =>
                                    `${e} :: ${r.AdvancedPhonotactics.Categories[e].join(' ')}`,
                            )
                            .join('\n')),
                    ),
                    n(5, (f = r.AdvancedPhonotactics.Syllables.join('\n'))),
                    n(6, (g = r.AdvancedPhonotactics.Constructs)),
                    n(7, (m = r.AdvancedPhonotactics.Illegals.join(' ')))),
                    1 & e.$$.dirty[0] &&
                        n(
                            10,
                            (o = (function (e) {
                                const t = () =>
                                        0 === Math.floor(2 * Math.random()),
                                    n = (e) =>
                                        e[Math.floor(Math.random() * e.length)],
                                    o = {
                                        Onsets: Cs().Phonotactics.General.Onsets.split(
                                            /\s+/g,
                                        ),
                                        Medials:
                                            Cs().Phonotactics.General.Medials.split(
                                                /\s+/g,
                                            ),
                                        Codas: Cs().Phonotactics.General.Codas.split(
                                            /\s+/g,
                                        ),
                                        Vowels: Cs().Phonotactics.General.Vowels.split(
                                            /\s+/g,
                                        ),
                                        Illegals:
                                            Cs().Phonotactics.General.Illegals.split(
                                                /\s+/g,
                                            ),
                                    };
                                let i = '^' + e;
                                const r = (e) => (
                                    (e += '^'),
                                    o.Illegals.some((t) => e.includes(t)) &&
                                    o.Illegals[0]
                                        ? ''
                                        : e.replace(/\^/g, '')
                                );
                                let s = !1;
                                for (const e of o.Vowels)
                                    if (
                                        i.includes(e) &&
                                        i.lastIndexOf(e) === i.length - e.length
                                    ) {
                                        if (t()) {
                                            ((i += n(o.Medials) + n(o.Vowels)),
                                                (s = !0));
                                            break;
                                        }
                                        return ((i += n(o.Codas)), r(i));
                                    }
                                return !s && ((i += n(o.Vowels)), t())
                                    ? (t() && (i += n(o.Codas)), r(i))
                                    : (t()
                                          ? (i += n(o.Codas))
                                          : ((i += n(o.Medials) + n(o.Vowels)),
                                            t() && (i += n(o.Codas))),
                                      r(i));
                            })(l)),
                        ),
                    12 & e.$$.dirty[0] &&
                        (r.Lects,
                        n(2, (v = r.UseLects ? v : r.Lects[0])),
                        r.Lects.includes(v) || n(2, (v = r.Lects[0]))),
                    6 & e.$$.dirty[0] && n(9, (i = Es(c, v))));
            }),
            [
                l,
                c,
                v,
                r,
                p,
                f,
                g,
                m,
                y,
                i,
                o,
                u,
                function () {
                    (h(Kr, (r.AdvancedPhonotactics.Categories = {}), r),
                        p.split('\n').forEach((e) => {
                            let t = e.split('::')[0].trim();
                            (r.AdvancedPhonotactics.Categories[t] ||
                                h(
                                    Kr,
                                    (r.AdvancedPhonotactics.Categories[t] = []),
                                    r,
                                ),
                                e
                                    .split('::')[1]
                                    .trim()
                                    .split(/\s+/g)
                                    .forEach((e) => {
                                        r.AdvancedPhonotactics.Categories[
                                            t
                                        ].push(e);
                                    }));
                        }));
                },
                function () {
                    (h(Kr, (r.AdvancedPhonotactics.Syllables = []), r),
                        f.split('\n').forEach((e) => {
                            r.AdvancedPhonotactics.Syllables.push(e.trim());
                        }));
                },
                function () {
                    h(Kr, (r.AdvancedPhonotactics.Constructs = []), r);
                    for (let e of g)
                        r.AdvancedPhonotactics.Constructs.push({
                            enabled: e.enabled,
                            structures: e.structures.trim(),
                        });
                },
                function () {
                    (h(Kr, (r.AdvancedPhonotactics.Illegals = []), r),
                        m.split(/\s+/g).forEach((e) => {
                            r.AdvancedPhonotactics.Illegals.push(e.trim());
                        }));
                },
                b,
                function () {
                    document.getElementById('pronunciations-input').value =
                        r.Pronunciations[v];
                },
                s,
                function () {
                    ((r.UseAdvancedPhonotactics = this.checked), Kr.set(r));
                },
                function () {
                    ((p = this.value), n(4, p));
                },
                function () {
                    ((f = this.value), n(5, f));
                },
                function (e, t) {
                    ((e[t].enabled = this.checked), n(6, g));
                },
                (e) => {
                    g.length > 1 &&
                        (g.splice(e, 1),
                        g[0].structures,
                        n(6, (g[0].structures = g[0].structures.trim()), g));
                },
                function (e, t) {
                    ((e[t].structures = this.value), n(6, g));
                },
                () => {
                    (g.push({ enabled: !0, structures: ' ' }),
                        g[0].structures,
                        n(6, (g[0].structures = g[0].structures.trim()), g));
                },
                function () {
                    ((m = this.value), n(7, m));
                },
                () =>
                    n(
                        8,
                        (y = Array(24)
                            .fill(null)
                            .map((e) => b())),
                    ),
                function () {
                    ((r.Phonotactics.General.Onsets = this.value), Kr.set(r));
                },
                function () {
                    ((r.Phonotactics.General.Medials = this.value), Kr.set(r));
                },
                function () {
                    ((r.Phonotactics.General.Codas = this.value), Kr.set(r));
                },
                function () {
                    ((r.Phonotactics.General.Vowels = this.value), Kr.set(r));
                },
                function () {
                    ((r.Phonotactics.General.Illegals = this.value), Kr.set(r));
                },
                function () {
                    ((l = this.value), n(0, l));
                },
                () =>
                    n(
                        8,
                        (y = Array(24)
                            .fill(null)
                            .map((e) =>
                                (function () {
                                    const e = () => {
                                        const e = {
                                                Onsets: Cs().Phonotactics.General.Onsets.split(
                                                    /\s+/g,
                                                ),
                                                Medials:
                                                    Cs().Phonotactics.General.Medials.split(
                                                        /\s+/g,
                                                    ),
                                                Codas: Cs().Phonotactics.General.Codas.split(
                                                    /\s+/g,
                                                ),
                                                Vowels: Cs().Phonotactics.General.Vowels.split(
                                                    /\s+/g,
                                                ),
                                                Illegals:
                                                    Cs().Phonotactics.General.Illegals.split(
                                                        /\s+/g,
                                                    ),
                                            },
                                            t = () =>
                                                0 ===
                                                Math.floor(2 * Math.random()),
                                            n = (e) =>
                                                e[
                                                    Math.floor(
                                                        Math.random() *
                                                            e.length,
                                                    )
                                                ];
                                        let o = '^';
                                        (t() || (o += n(e.Onsets)),
                                            (o += n(e.Vowels)));
                                        for (let i = 0; i < 2; i++)
                                            (t() || 2 === o.length) &&
                                                ((o += n(e.Medials)),
                                                (o += n(e.Vowels)));
                                        return (
                                            t() && (o += n(e.Codas)),
                                            (o += '^'),
                                            e.Illegals.some((e) =>
                                                o.includes(e),
                                            ) && e.Illegals[0]
                                                ? ''
                                                : o.replace(/\^/g, '')
                                        );
                                    };
                                    for (let t = 0; t < 50; t++) {
                                        const t = e();
                                        if (t) return t;
                                    }
                                    return '';
                                })(),
                            )),
                    ),
                function () {
                    ((v = $(this)), n(2, v), n(3, r));
                },
                (e) => {
                    (u(e), Ss(v));
                },
                function () {
                    ((c = this.value), n(1, c));
                },
                function () {
                    ((i = this.value), n(9, i), n(1, c), n(2, v), n(3, r));
                },
            ]
        );
    }
    class Nd extends Ee {
        constructor(e) {
            (super(), Ce(this, e, Md, Pd, s, {}, null, [-1, -1]));
        }
    }
    !(function () {
        try {
            if (typeof document < 'u') {
                var e = document.createElement('style');
                (e.appendChild(
                    document.createTextNode(
                        '.ce-header{padding:.6em 0 3px;margin:0;line-height:1.25em;outline:none}.ce-header p,.ce-header div{padding:0!important;margin:0!important}',
                    ),
                ),
                    document.head.appendChild(e));
            }
        } catch (e) {
            console.error('vite-plugin-css-injected-by-js', e);
        }
    })();
    /**
     * Header block for the Editor.js.
     *
     * @author CodeX (team@ifmo.su)
     * @copyright CodeX 2018
     * @license MIT
     * @version 2.0.0
     */
    class $d {
        constructor({ data: e, config: t, api: n, readOnly: o }) {
            ((this.api = n),
                (this.readOnly = o),
                (this._settings = t),
                (this._data = this.normalizeData(e)),
                (this._element = this.getTag()));
        }
        get _CSS() {
            return { block: this.api.styles.block, wrapper: 'ce-header' };
        }
        isHeaderData(e) {
            return void 0 !== e.text;
        }
        normalizeData(e) {
            const t = { text: '', level: this.defaultLevel.number };
            return (
                this.isHeaderData(e) &&
                    ((t.text = e.text || ''),
                    void 0 !== e.level &&
                        !isNaN(parseInt(e.level.toString())) &&
                        (t.level = parseInt(e.level.toString()))),
                t
            );
        }
        render() {
            return this._element;
        }
        renderSettings() {
            return this.levels.map((e) => ({
                icon: e.svg,
                label: this.api.i18n.t(`Heading ${e.number}`),
                onActivate: () => this.setLevel(e.number),
                closeOnActivate: !0,
                isActive: this.currentLevel.number === e.number,
                render: () => document.createElement('div'),
            }));
        }
        setLevel(e) {
            this.data = { level: e, text: this.data.text };
        }
        merge(e) {
            this._element.insertAdjacentHTML('beforeend', e.text);
        }
        validate(e) {
            return '' !== e.text.trim();
        }
        save(e) {
            return { text: e.innerHTML, level: this.currentLevel.number };
        }
        static get conversionConfig() {
            return { export: 'text', import: 'text' };
        }
        static get sanitize() {
            return { level: !1, text: {} };
        }
        static get isReadOnlySupported() {
            return !0;
        }
        get data() {
            return (
                (this._data.text = this._element.innerHTML),
                (this._data.level = this.currentLevel.number),
                this._data
            );
        }
        set data(e) {
            if (
                ((this._data = this.normalizeData(e)),
                void 0 !== e.level && this._element.parentNode)
            ) {
                const e = this.getTag();
                ((e.innerHTML = this._element.innerHTML),
                    this._element.parentNode.replaceChild(e, this._element),
                    (this._element = e));
            }
            void 0 !== e.text &&
                (this._element.innerHTML = this._data.text || '');
        }
        getTag() {
            const e = document.createElement(this.currentLevel.tag);
            return (
                (e.innerHTML = this._data.text || ''),
                e.classList.add(this._CSS.wrapper),
                (e.contentEditable = this.readOnly ? 'false' : 'true'),
                (e.dataset.placeholder = this.api.i18n.t(
                    this._settings.placeholder || '',
                )),
                e
            );
        }
        get currentLevel() {
            let e = this.levels.find((e) => e.number === this._data.level);
            return (e || (e = this.defaultLevel), e);
        }
        get defaultLevel() {
            if (this._settings.defaultLevel) {
                const e = this.levels.find(
                    (e) => e.number === this._settings.defaultLevel,
                );
                if (e) return e;
                console.warn(
                    "(ง'̀-'́)ง Heading Tool: the default level specified was not found in available levels",
                );
            }
            return this.levels[1];
        }
        get levels() {
            const e = [
                {
                    number: 1,
                    tag: 'H1',
                    svg: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19 17V10.2135C19 10.1287 18.9011 10.0824 18.836 10.1367L16 12.5"/></svg>',
                },
                {
                    number: 2,
                    tag: 'H2',
                    svg: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 11C16 10 19 9.5 19 12C19 13.9771 16.0684 13.9997 16.0012 16.8981C15.9999 16.9533 16.0448 17 16.1 17L19.3 17"/></svg>',
                },
                {
                    number: 3,
                    tag: 'H3',
                    svg: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 11C16 10.5 16.8323 10 17.6 10C18.3677 10 19.5 10.311 19.5 11.5C19.5 12.5315 18.7474 12.9022 18.548 12.9823C18.5378 12.9864 18.5395 13.0047 18.5503 13.0063C18.8115 13.0456 20 13.3065 20 14.8C20 16 19.5 17 17.8 17C17.8 17 16 17 16 16.3"/></svg>',
                },
                {
                    number: 4,
                    tag: 'H4',
                    svg: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M18 10L15.2834 14.8511C15.246 14.9178 15.294 15 15.3704 15C16.8489 15 18.7561 15 20.2 15M19 17C19 15.7187 19 14.8813 19 13.6"/></svg>',
                },
                {
                    number: 5,
                    tag: 'H5',
                    svg: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 15.9C16 15.9 16.3768 17 17.8 17C19.5 17 20 15.6199 20 14.7C20 12.7323 17.6745 12.0486 16.1635 12.9894C16.094 13.0327 16 12.9846 16 12.9027V10.1C16 10.0448 16.0448 10 16.1 10H19.8"/></svg>',
                },
                {
                    number: 6,
                    tag: 'H6',
                    svg: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M6 7L6 12M6 17L6 12M6 12L12 12M12 7V12M12 17L12 12"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M19.5 10C16.5 10.5 16 13.3285 16 15M16 15V15C16 16.1046 16.8954 17 18 17H18.3246C19.3251 17 20.3191 16.3492 20.2522 15.3509C20.0612 12.4958 16 12.6611 16 15Z"/></svg>',
                },
            ];
            return this._settings.levels
                ? e.filter((e) => this._settings.levels.includes(e.number))
                : e;
        }
        onPaste(e) {
            const t = e.detail;
            if ('data' in t) {
                const e = t.data;
                let n = this.defaultLevel.number;
                switch (e.tagName) {
                    case 'H1':
                        n = 1;
                        break;
                    case 'H2':
                        n = 2;
                        break;
                    case 'H3':
                        n = 3;
                        break;
                    case 'H4':
                        n = 4;
                        break;
                    case 'H5':
                        n = 5;
                        break;
                    case 'H6':
                        n = 6;
                }
                (this._settings.levels &&
                    (n = this._settings.levels.reduce((e, t) =>
                        Math.abs(t - n) < Math.abs(e - n) ? t : e,
                    )),
                    (this.data = { level: n, text: e.innerHTML }));
            }
        }
        static get pasteConfig() {
            return { tags: ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'] };
        }
        static get toolbox() {
            return {
                icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9 7L9 12M9 17V12M9 12L15 12M15 7V12M15 17L15 12"/></svg>',
                title: 'Heading',
            };
        }
    }
    !(function () {
        try {
            if (typeof document < 'u') {
                var e = document.createElement('style');
                (e.appendChild(
                    document.createTextNode(
                        '.ce-paragraph{line-height:1.6em;outline:none}.ce-block:only-of-type .ce-paragraph[data-placeholder-active]:empty:before,.ce-block:only-of-type .ce-paragraph[data-placeholder-active][data-empty=true]:before{content:attr(data-placeholder-active)}.ce-paragraph p:first-of-type{margin-top:0}.ce-paragraph p:last-of-type{margin-bottom:0}',
                    ),
                ),
                    document.head.appendChild(e));
            }
        } catch (e) {
            console.error('vite-plugin-css-injected-by-js', e);
        }
    })();
    /**
     * Base Paragraph Block for the Editor.js.
     * Represents a regular text block
     *
     * @author CodeX (team@codex.so)
     * @copyright CodeX 2018
     * @license The MIT License (MIT)
     */
    class Rd {
        static get DEFAULT_PLACEHOLDER() {
            return '';
        }
        constructor({ data: e, config: t, api: n, readOnly: o }) {
            ((this.api = n),
                (this.readOnly = o),
                (this._CSS = {
                    block: this.api.styles.block,
                    wrapper: 'ce-paragraph',
                }),
                this.readOnly || (this.onKeyUp = this.onKeyUp.bind(this)),
                (this._placeholder = t.placeholder
                    ? t.placeholder
                    : Rd.DEFAULT_PLACEHOLDER),
                (this._data = e ?? {}),
                (this._element = null),
                (this._preserveBlank = t.preserveBlank ?? !1));
        }
        onKeyUp(e) {
            if (
                ('Backspace' !== e.code && 'Delete' !== e.code) ||
                !this._element
            )
                return;
            const { textContent: t } = this._element;
            '' === t && (this._element.innerHTML = '');
        }
        drawView() {
            const e = document.createElement('DIV');
            return (
                e.classList.add(this._CSS.wrapper, this._CSS.block),
                (e.contentEditable = 'false'),
                (e.dataset.placeholderActive = this.api.i18n.t(
                    this._placeholder,
                )),
                this._data.text && (e.innerHTML = this._data.text),
                this.readOnly ||
                    ((e.contentEditable = 'true'),
                    e.addEventListener('keyup', this.onKeyUp)),
                e
            );
        }
        render() {
            return ((this._element = this.drawView()), this._element);
        }
        merge(e) {
            if (!this._element) return;
            this._data.text += e.text;
            const t = (function (e) {
                const t = document.createElement('div');
                t.innerHTML = e.trim();
                const n = document.createDocumentFragment();
                return (n.append(...Array.from(t.childNodes)), n);
            })(e.text);
            (this._element.appendChild(t), this._element.normalize());
        }
        validate(e) {
            return !('' === e.text.trim() && !this._preserveBlank);
        }
        save(e) {
            return { text: e.innerHTML };
        }
        onPaste(e) {
            const t = { text: e.detail.data.innerHTML };
            ((this._data = t),
                window.requestAnimationFrame(() => {
                    this._element &&
                        (this._element.innerHTML = this._data.text || '');
                }));
        }
        static get conversionConfig() {
            return { export: 'text', import: 'text' };
        }
        static get sanitize() {
            return { text: { br: !0 } };
        }
        static get isReadOnlySupported() {
            return !0;
        }
        static get pasteConfig() {
            return { tags: ['P'] };
        }
        static get toolbox() {
            return {
                icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 9V7.2C8 7.08954 8.08954 7 8.2 7L12 7M16 9V7.2C16 7.08954 15.9105 7 15.8 7L12 7M12 7L12 17M12 17H10M12 17H14"/></svg>',
                title: 'Text',
            };
        }
    }
    function jd(e, t, n = {}) {
        const o = document.createElement(e);
        Array.isArray(t) ? o.classList.add(...t) : t && o.classList.add(t);
        for (const e in n)
            Object.prototype.hasOwnProperty.call(n, e) && (o[e] = n[e]);
        return o;
    }
    function Dd(e) {
        const t = e.getBoundingClientRect();
        return {
            y1: Math.floor(t.top + window.pageYOffset),
            x1: Math.floor(t.left + window.pageXOffset),
            x2: Math.floor(t.right + window.pageXOffset),
            y2: Math.floor(t.bottom + window.pageYOffset),
        };
    }
    function Fd(e, t) {
        const n = Dd(e),
            o = Dd(t);
        return {
            fromTopBorder: o.y1 - n.y1,
            fromLeftBorder: o.x1 - n.x1,
            fromRightBorder: n.x2 - o.x2,
            fromBottomBorder: n.y2 - o.y2,
        };
    }
    function Hd(e, t) {
        return t.parentNode.insertBefore(e, t);
    }
    function zd(e, t = !0) {
        const n = document.createRange(),
            o = window.getSelection();
        (n.selectNodeContents(e),
            n.collapse(t),
            o.removeAllRanges(),
            o.addRange(n));
    }
    !(function () {
        var e;
        try {
            if (typeof document < 'u') {
                var t = document.createElement('style');
                ((t.nonce =
                    null ==
                    (e = document.head.querySelector(
                        'meta[property=csp-nonce]',
                    ))
                        ? void 0
                        : e.content),
                    t.appendChild(
                        document.createTextNode(
                            '.tc-wrap{--color-background:#f9f9fb;--color-text-secondary:#7b7e89;--color-border:#e8e8eb;--cell-size:34px;--toolbox-icon-size:18px;--toolbox-padding:6px;--toolbox-aiming-field-size:calc(var(--toolbox-icon-size) + var(--toolbox-padding)*2);border-left:0;position:relative;height:100%;width:100%;margin-top:var(--toolbox-icon-size);box-sizing:border-box;display:grid;grid-template-columns:calc(100% - var(--cell-size)) var(--cell-size)}.tc-wrap--readonly{grid-template-columns:100% var(--cell-size)}.tc-wrap svg{vertical-align:top}@media print{.tc-wrap{border-left-color:var(--color-border);border-left-style:solid;border-left-width:1px;grid-template-columns:100% var(--cell-size)}}@media print{.tc-wrap .tc-row:after{display:none}}.tc-table{position:relative;width:100%;height:100%;display:grid;font-size:14px;border-top:1px solid var(--color-border);line-height:1.4}.tc-table:after{width:calc(var(--cell-size));height:100%;left:calc(var(--cell-size)*-1);top:0}.tc-table:after,.tc-table:before{position:absolute;content:""}.tc-table:before{width:100%;height:var(--toolbox-aiming-field-size);top:calc(var(--toolbox-aiming-field-size)*-1);left:0}.tc-table--heading .tc-row:first-child{font-weight:600;border-bottom:2px solid var(--color-border)}.tc-table--heading .tc-row:first-child [contenteditable]:empty:before{content:attr(heading);color:var(--color-text-secondary)}.tc-table--heading .tc-row:first-child:after{bottom:-2px;border-bottom:2px solid var(--color-border)}.tc-add-column,.tc-add-row{display:flex;color:var(--color-text-secondary)}@media print{.tc-add{display:none}}.tc-add-column{padding:4px 0;justify-content:center;border-top:1px solid var(--color-border)}.tc-add-column--disabled{visibility:hidden}@media print{.tc-add-column{display:none}}.tc-add-row{height:var(--cell-size);align-items:center;padding-left:4px;position:relative}.tc-add-row--disabled{display:none}.tc-add-row:before{content:"";position:absolute;right:calc(var(--cell-size)*-1);width:var(--cell-size);height:100%}@media print{.tc-add-row{display:none}}.tc-add-column,.tc-add-row{transition:0s;cursor:pointer;will-change:background-color}.tc-add-column:hover,.tc-add-row:hover{transition:background-color .1s ease;background-color:var(--color-background)}.tc-add-row{margin-top:1px}.tc-add-row:hover:before{transition:.1s;background-color:var(--color-background)}.tc-row{display:grid;grid-template-columns:repeat(auto-fit,minmax(10px,1fr));position:relative;border-bottom:1px solid var(--color-border)}.tc-row:after{content:"";pointer-events:none;position:absolute;width:var(--cell-size);height:100%;bottom:-1px;right:calc(var(--cell-size)*-1);border-bottom:1px solid var(--color-border)}.tc-row--selected{background:var(--color-background)}.tc-row--selected:after{background:var(--color-background)}.tc-cell{border-right:1px solid var(--color-border);padding:6px 12px;overflow:hidden;outline:none;line-break:normal}.tc-cell--selected{background:var(--color-background)}.tc-wrap--readonly .tc-row:after{display:none}.tc-toolbox{--toolbox-padding:6px;--popover-margin:30px;--toggler-click-zone-size:30px;--toggler-dots-color:#7b7e89;--toggler-dots-color-hovered:#1d202b;position:absolute;cursor:pointer;z-index:1;opacity:0;transition:opacity .1s;will-change:left,opacity}.tc-toolbox--column{top:calc(var(--toggler-click-zone-size)*-1);transform:translate(calc(var(--toggler-click-zone-size)*-1/2));will-change:left,opacity}.tc-toolbox--row{left:calc(var(--popover-margin)*-1);transform:translateY(calc(var(--toggler-click-zone-size)*-1/2));margin-top:-1px;will-change:top,opacity}.tc-toolbox--showed{opacity:1}.tc-toolbox .tc-popover{position:absolute;top:0;left:var(--popover-margin)}.tc-toolbox__toggler{display:flex;align-items:center;justify-content:center;width:var(--toggler-click-zone-size);height:var(--toggler-click-zone-size);color:var(--toggler-dots-color);opacity:0;transition:opacity .15s ease;will-change:opacity}.tc-toolbox__toggler:hover{color:var(--toggler-dots-color-hovered)}.tc-toolbox__toggler svg{fill:currentColor}.tc-wrap:hover .tc-toolbox__toggler{opacity:1}.tc-settings .cdx-settings-button{width:50%;margin:0}.tc-popover{--color-border:#eaeaea;--color-background:#fff;--color-background-hover:rgba(232,232,235,.49);--color-background-confirm:#e24a4a;--color-background-confirm-hover:#d54040;--color-text-confirm:#fff;background:var(--color-background);border:1px solid var(--color-border);box-shadow:0 3px 15px -3px #0d142121;border-radius:6px;padding:6px;display:none;will-change:opacity,transform}.tc-popover--opened{display:block;animation:menuShowing .1s cubic-bezier(.215,.61,.355,1) forwards}.tc-popover__item{display:flex;align-items:center;padding:2px 14px 2px 2px;border-radius:5px;cursor:pointer;white-space:nowrap;-webkit-user-select:none;-moz-user-select:none;user-select:none}.tc-popover__item:hover{background:var(--color-background-hover)}.tc-popover__item:not(:last-of-type){margin-bottom:2px}.tc-popover__item-icon{display:inline-flex;width:26px;height:26px;align-items:center;justify-content:center;background:var(--color-background);border-radius:5px;border:1px solid var(--color-border);margin-right:8px}.tc-popover__item-label{line-height:22px;font-size:14px;font-weight:500}.tc-popover__item--confirm{background:var(--color-background-confirm);color:var(--color-text-confirm)}.tc-popover__item--confirm:hover{background-color:var(--color-background-confirm-hover)}.tc-popover__item--confirm .tc-popover__item-icon{background:var(--color-background-confirm);border-color:#0000001a}.tc-popover__item--confirm .tc-popover__item-icon svg{transition:transform .2s ease-in;transform:rotate(90deg) scale(1.2)}.tc-popover__item--hidden{display:none}@keyframes menuShowing{0%{opacity:0;transform:translateY(-8px) scale(.9)}70%{opacity:1;transform:translateY(2px)}to{transform:translateY(0)}}',
                        ),
                    ),
                    document.head.appendChild(t));
            }
        } catch (e) {
            console.error('vite-plugin-css-injected-by-js', e);
        }
    })();
    class Ud {
        constructor({ items: e }) {
            ((this.items = e), (this.wrapper = void 0), (this.itemEls = []));
        }
        static get CSS() {
            return {
                popover: 'tc-popover',
                popoverOpened: 'tc-popover--opened',
                item: 'tc-popover__item',
                itemHidden: 'tc-popover__item--hidden',
                itemConfirmState: 'tc-popover__item--confirm',
                itemIcon: 'tc-popover__item-icon',
                itemLabel: 'tc-popover__item-label',
            };
        }
        render() {
            return (
                (this.wrapper = jd('div', Ud.CSS.popover)),
                this.items.forEach((e, t) => {
                    const n = jd('div', Ud.CSS.item),
                        o = jd('div', Ud.CSS.itemIcon, { innerHTML: e.icon }),
                        i = jd('div', Ud.CSS.itemLabel, {
                            textContent: e.label,
                        });
                    ((n.dataset.index = t),
                        n.appendChild(o),
                        n.appendChild(i),
                        this.wrapper.appendChild(n),
                        this.itemEls.push(n));
                }),
                this.wrapper.addEventListener('click', (e) => {
                    this.popoverClicked(e);
                }),
                this.wrapper
            );
        }
        popoverClicked(e) {
            const t = e.target.closest(`.${Ud.CSS.item}`);
            if (!t) return;
            const n = t.dataset.index,
                o = this.items[n];
            !o.confirmationRequired || this.hasConfirmationState(t)
                ? o.onClick()
                : this.setConfirmationState(t);
        }
        setConfirmationState(e) {
            e.classList.add(Ud.CSS.itemConfirmState);
        }
        clearConfirmationState(e) {
            e.classList.remove(Ud.CSS.itemConfirmState);
        }
        hasConfirmationState(e) {
            return e.classList.contains(Ud.CSS.itemConfirmState);
        }
        get opened() {
            return this.wrapper.classList.contains(Ud.CSS.popoverOpened);
        }
        open() {
            (this.items.forEach((e, t) => {
                'function' == typeof e.hideIf &&
                    this.itemEls[t].classList.toggle(
                        Ud.CSS.itemHidden,
                        e.hideIf(),
                    );
            }),
                this.wrapper.classList.add(Ud.CSS.popoverOpened));
        }
        close() {
            (this.wrapper.classList.remove(Ud.CSS.popoverOpened),
                this.itemEls.forEach((e) => {
                    this.clearConfirmationState(e);
                }));
        }
    }
    const Wd =
            '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 8L12 12M12 12L16 16M12 12L16 8M12 12L8 16"/></svg>',
        qd =
            '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M12 7V12M12 17V12M17 12H12M12 12H7"/></svg>';
    class Vd {
        constructor({
            api: e,
            items: t,
            onOpen: n,
            onClose: o,
            cssModifier: i = '',
        }) {
            ((this.api = e),
                (this.items = t),
                (this.onOpen = n),
                (this.onClose = o),
                (this.cssModifier = i),
                (this.popover = null),
                (this.wrapper = this.createToolbox()));
        }
        static get CSS() {
            return {
                toolbox: 'tc-toolbox',
                toolboxShowed: 'tc-toolbox--showed',
                toggler: 'tc-toolbox__toggler',
            };
        }
        get element() {
            return this.wrapper;
        }
        createToolbox() {
            const e = jd('div', [
                Vd.CSS.toolbox,
                this.cssModifier
                    ? `${Vd.CSS.toolbox}--${this.cssModifier}`
                    : '',
            ]);
            e.dataset.mutationFree = 'true';
            const t = this.createPopover(),
                n = this.createToggler();
            return (e.appendChild(n), e.appendChild(t), e);
        }
        createToggler() {
            const e = jd('div', Vd.CSS.toggler, {
                innerHTML:
                    '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.41 9.66H9.4"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 9.66H14.59"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M9.31 14.36H9.3"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2.6" d="M14.6 14.36H14.59"/></svg>',
            });
            return (
                e.addEventListener('click', () => {
                    this.togglerClicked();
                }),
                e
            );
        }
        createPopover() {
            return (
                (this.popover = new Ud({ items: this.items })),
                this.popover.render()
            );
        }
        togglerClicked() {
            this.popover.opened
                ? (this.popover.close(), this.onClose())
                : (this.popover.open(), this.onOpen());
        }
        show(e) {
            const t = e();
            (Object.entries(t).forEach(([e, t]) => {
                this.wrapper.style[e] = t;
            }),
                this.wrapper.classList.add(Vd.CSS.toolboxShowed));
        }
        hide() {
            (this.popover.close(),
                this.wrapper.classList.remove(Vd.CSS.toolboxShowed));
        }
    }
    const Gd = 'tc-wrap',
        Kd = 'tc-wrap--readonly',
        Yd = 'tc-table',
        Xd = 'tc-row',
        Zd = 'tc-table--heading',
        Jd = 'tc-row--selected',
        Qd = 'tc-cell',
        eh = 'tc-cell--selected',
        th = 'tc-add-row',
        nh = 'tc-add-row--disabled',
        oh = 'tc-add-column',
        ih = 'tc-add-column--disabled';
    class rh {
        constructor(e, t, n, o) {
            ((this.readOnly = e),
                (this.api = t),
                (this.data = n),
                (this.config = o),
                (this.wrapper = null),
                (this.table = null),
                (this.toolboxColumn = this.createColumnToolbox()),
                (this.toolboxRow = this.createRowToolbox()),
                this.createTableWrapper(),
                (this.hoveredRow = 0),
                (this.hoveredColumn = 0),
                (this.selectedRow = 0),
                (this.selectedColumn = 0),
                (this.tunes = { withHeadings: !1 }),
                this.resize(),
                this.fill(),
                (this.focusedCell = { row: 0, column: 0 }),
                (this.documentClicked = (e) => {
                    const t = null !== e.target.closest(`.${Yd}`),
                        n = null === e.target.closest(`.${Gd}`);
                    (t || n) && this.hideToolboxes();
                    const o = e.target.closest(`.${th}`),
                        i = e.target.closest(`.${oh}`);
                    o && o.parentNode === this.wrapper
                        ? (this.addRow(void 0, !0), this.hideToolboxes())
                        : i &&
                          i.parentNode === this.wrapper &&
                          (this.addColumn(void 0, !0), this.hideToolboxes());
                }),
                this.readOnly || this.bindEvents());
        }
        getWrapper() {
            return this.wrapper;
        }
        bindEvents() {
            (document.addEventListener('click', this.documentClicked),
                this.table.addEventListener(
                    'mousemove',
                    (function (e, t) {
                        let n = 0;
                        return function (...o) {
                            const i = new Date().getTime();
                            if (!(i - n < e)) return ((n = i), t(...o));
                        };
                    })(150, (e) => this.onMouseMoveInTable(e)),
                    { passive: !0 },
                ),
                (this.table.onkeypress = (e) => this.onKeyPressListener(e)),
                this.table.addEventListener('keydown', (e) =>
                    this.onKeyDownListener(e),
                ),
                this.table.addEventListener('focusin', (e) =>
                    this.focusInTableListener(e),
                ));
        }
        createColumnToolbox() {
            return new Vd({
                api: this.api,
                cssModifier: 'column',
                items: [
                    {
                        label: this.api.i18n.t('Add column to left'),
                        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.9167 14.9167L11.5833 18.25M11.5833 18.25L8.25 14.9167M11.5833 18.25L11.5833 10.0833C11.5833 9.19928 11.9345 8.35143 12.5596 7.72631C13.1848 7.10119 14.0326 6.75 14.9167 6.75"/></svg>',
                        hideIf: () =>
                            this.numberOfColumns === this.config.maxcols,
                        onClick: () => {
                            (this.addColumn(this.selectedColumn, !0),
                                this.hideToolboxes());
                        },
                    },
                    {
                        label: this.api.i18n.t('Add column to right'),
                        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.13333 14.9167L12.4667 18.25M12.4667 18.25L15.8 14.9167M12.4667 18.25L12.4667 10.0833C12.4667 9.19928 12.1155 8.35143 11.4904 7.72631C10.8652 7.10119 10.0174 6.75 9.13333 6.75"/></svg>',
                        hideIf: () =>
                            this.numberOfColumns === this.config.maxcols,
                        onClick: () => {
                            (this.addColumn(this.selectedColumn + 1, !0),
                                this.hideToolboxes());
                        },
                    },
                    {
                        label: this.api.i18n.t('Delete column'),
                        icon: Wd,
                        hideIf: () => 1 === this.numberOfColumns,
                        confirmationRequired: !0,
                        onClick: () => {
                            (this.deleteColumn(this.selectedColumn),
                                this.hideToolboxes());
                        },
                    },
                ],
                onOpen: () => {
                    (this.selectColumn(this.hoveredColumn),
                        this.hideRowToolbox());
                },
                onClose: () => {
                    this.unselectColumn();
                },
            });
        }
        createRowToolbox() {
            return new Vd({
                api: this.api,
                cssModifier: 'row',
                items: [
                    {
                        label: this.api.i18n.t('Add row above'),
                        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 15.8333L18.2167 12.5M18.2167 12.5L14.8833 9.16667M18.2167 12.5L10.05 12.5C9.16595 12.5 8.31811 12.8512 7.69299 13.4763C7.06787 14.1014 6.71667 14.9493 6.71667 15.8333"/></svg>',
                        hideIf: () => this.numberOfRows === this.config.maxrows,
                        onClick: () => {
                            (this.addRow(this.selectedRow, !0),
                                this.hideToolboxes());
                        },
                    },
                    {
                        label: this.api.i18n.t('Add row below'),
                        icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.8833 9.16666L18.2167 12.5M18.2167 12.5L14.8833 15.8333M18.2167 12.5H10.05C9.16594 12.5 8.31809 12.1488 7.69297 11.5237C7.06785 10.8986 6.71666 10.0507 6.71666 9.16666"/></svg>',
                        hideIf: () => this.numberOfRows === this.config.maxrows,
                        onClick: () => {
                            (this.addRow(this.selectedRow + 1, !0),
                                this.hideToolboxes());
                        },
                    },
                    {
                        label: this.api.i18n.t('Delete row'),
                        icon: Wd,
                        hideIf: () => 1 === this.numberOfRows,
                        confirmationRequired: !0,
                        onClick: () => {
                            (this.deleteRow(this.selectedRow),
                                this.hideToolboxes());
                        },
                    },
                ],
                onOpen: () => {
                    (this.selectRow(this.hoveredRow), this.hideColumnToolbox());
                },
                onClose: () => {
                    this.unselectRow();
                },
            });
        }
        moveCursorToNextRow() {
            this.focusedCell.row !== this.numberOfRows
                ? ((this.focusedCell.row += 1),
                  this.focusCell(this.focusedCell))
                : (this.addRow(),
                  (this.focusedCell.row += 1),
                  this.focusCell(this.focusedCell),
                  this.updateToolboxesPosition(0, 0));
        }
        getCell(e, t) {
            return this.table.querySelectorAll(`.${Xd}:nth-child(${e}) .${Qd}`)[
                t - 1
            ];
        }
        getRow(e) {
            return this.table.querySelector(`.${Xd}:nth-child(${e})`);
        }
        getRowByCell(e) {
            return e.parentElement;
        }
        getRowFirstCell(e) {
            return e.querySelector(`.${Qd}:first-child`);
        }
        setCellContent(e, t, n) {
            this.getCell(e, t).innerHTML = n;
        }
        addColumn(e = -1, t = !1) {
            var n;
            let o = this.numberOfColumns;
            if (
                this.config &&
                this.config.maxcols &&
                this.numberOfColumns >= this.config.maxcols
            )
                return;
            for (let n = 1; n <= this.numberOfRows; n++) {
                let i;
                const r = this.createCell();
                if (
                    (e > 0 && e <= o
                        ? ((i = this.getCell(n, e)), Hd(r, i))
                        : (i = this.getRow(n).appendChild(r)),
                    1 === n)
                ) {
                    const i = this.getCell(n, e > 0 ? e : o + 1);
                    i && t && zd(i);
                }
            }
            const i = this.wrapper.querySelector(`.${oh}`);
            (null != (n = this.config) &&
                n.maxcols &&
                this.numberOfColumns > this.config.maxcols - 1 &&
                i &&
                i.classList.add(ih),
                this.addHeadingAttrToFirstRow());
        }
        addRow(e = -1, t = !1) {
            let n,
                o = jd('div', Xd);
            this.tunes.withHeadings && this.removeHeadingAttrFromFirstRow();
            let i = this.numberOfColumns;
            if (
                this.config &&
                this.config.maxrows &&
                this.numberOfRows >= this.config.maxrows &&
                s
            )
                return;
            if (e > 0 && e <= this.numberOfRows) {
                n = Hd(o, this.getRow(e));
            } else n = this.table.appendChild(o);
            (this.fillRow(n, i),
                this.tunes.withHeadings && this.addHeadingAttrToFirstRow());
            const r = this.getRowFirstCell(n);
            r && t && zd(r);
            const s = this.wrapper.querySelector(`.${th}`);
            return (
                this.config &&
                    this.config.maxrows &&
                    this.numberOfRows >= this.config.maxrows &&
                    s &&
                    s.classList.add(nh),
                n
            );
        }
        deleteColumn(e) {
            for (let t = 1; t <= this.numberOfRows; t++) {
                const n = this.getCell(t, e);
                if (!n) return;
                n.remove();
            }
            const t = this.wrapper.querySelector(`.${oh}`);
            t && t.classList.remove(ih);
        }
        deleteRow(e) {
            this.getRow(e).remove();
            const t = this.wrapper.querySelector(`.${th}`);
            (t && t.classList.remove(nh), this.addHeadingAttrToFirstRow());
        }
        createTableWrapper() {
            if (
                ((this.wrapper = jd('div', Gd)),
                (this.table = jd('div', Yd)),
                this.readOnly && this.wrapper.classList.add(Kd),
                this.wrapper.appendChild(this.toolboxRow.element),
                this.wrapper.appendChild(this.toolboxColumn.element),
                this.wrapper.appendChild(this.table),
                !this.readOnly)
            ) {
                const e = jd('div', oh, { innerHTML: qd }),
                    t = jd('div', th, { innerHTML: qd });
                (this.wrapper.appendChild(e), this.wrapper.appendChild(t));
            }
        }
        computeInitialSize() {
            const e = this.data && this.data.content,
                t = Array.isArray(e),
                n = !!t && e.length,
                o = t ? e.length : void 0,
                i = n ? e[0].length : void 0,
                r = Number.parseInt(this.config && this.config.rows),
                s = Number.parseInt(this.config && this.config.cols),
                a = !isNaN(r) && r > 0 ? r : void 0,
                l = !isNaN(s) && s > 0 ? s : void 0;
            return { rows: o || a || 2, cols: i || l || 2 };
        }
        resize() {
            const { rows: e, cols: t } = this.computeInitialSize();
            for (let t = 0; t < e; t++) this.addRow();
            for (let e = 0; e < t; e++) this.addColumn();
        }
        fill() {
            const e = this.data;
            if (e && e.content)
                for (let t = 0; t < e.content.length; t++)
                    for (let n = 0; n < e.content[t].length; n++)
                        this.setCellContent(t + 1, n + 1, e.content[t][n]);
        }
        fillRow(e, t) {
            for (let n = 1; n <= t; n++) {
                const t = this.createCell();
                e.appendChild(t);
            }
        }
        createCell() {
            return jd('div', Qd, { contentEditable: !this.readOnly });
        }
        get numberOfRows() {
            return this.table.childElementCount;
        }
        get numberOfColumns() {
            return this.numberOfRows
                ? this.table.querySelectorAll(`.${Xd}:first-child .${Qd}`)
                      .length
                : 0;
        }
        get isColumnMenuShowing() {
            return 0 !== this.selectedColumn;
        }
        get isRowMenuShowing() {
            return 0 !== this.selectedRow;
        }
        onMouseMoveInTable(e) {
            const { row: t, column: n } = this.getHoveredCell(e);
            ((this.hoveredColumn = n),
                (this.hoveredRow = t),
                this.updateToolboxesPosition());
        }
        onKeyPressListener(e) {
            if ('Enter' === e.key) {
                if (e.shiftKey) return !0;
                this.moveCursorToNextRow();
            }
            return 'Enter' !== e.key;
        }
        onKeyDownListener(e) {
            'Tab' === e.key && e.stopPropagation();
        }
        focusInTableListener(e) {
            const t = e.target,
                n = this.getRowByCell(t);
            this.focusedCell = {
                row:
                    Array.from(this.table.querySelectorAll(`.${Xd}`)).indexOf(
                        n,
                    ) + 1,
                column: Array.from(n.querySelectorAll(`.${Qd}`)).indexOf(t) + 1,
            };
        }
        hideToolboxes() {
            (this.hideRowToolbox(),
                this.hideColumnToolbox(),
                this.updateToolboxesPosition());
        }
        hideRowToolbox() {
            (this.unselectRow(), this.toolboxRow.hide());
        }
        hideColumnToolbox() {
            (this.unselectColumn(), this.toolboxColumn.hide());
        }
        focusCell() {
            this.focusedCellElem.focus();
        }
        get focusedCellElem() {
            const { row: e, column: t } = this.focusedCell;
            return this.getCell(e, t);
        }
        updateToolboxesPosition(e = this.hoveredRow, t = this.hoveredColumn) {
            (this.isColumnMenuShowing ||
                (t > 0 &&
                    t <= this.numberOfColumns &&
                    this.toolboxColumn.show(() => ({
                        left: `calc((100% - var(--cell-size)) / (${this.numberOfColumns} * 2) * (1 + (${t} - 1) * 2))`,
                    }))),
                this.isRowMenuShowing ||
                    (e > 0 &&
                        e <= this.numberOfRows &&
                        this.toolboxRow.show(() => {
                            const t = this.getRow(e),
                                { fromTopBorder: n } = Fd(this.table, t),
                                { height: o } = t.getBoundingClientRect();
                            return { top: `${Math.ceil(n + o / 2)}px` };
                        })));
        }
        setHeadingsSetting(e) {
            ((this.tunes.withHeadings = e),
                e
                    ? (this.table.classList.add(Zd),
                      this.addHeadingAttrToFirstRow())
                    : (this.table.classList.remove(Zd),
                      this.removeHeadingAttrFromFirstRow()));
        }
        addHeadingAttrToFirstRow() {
            for (let e = 1; e <= this.numberOfColumns; e++) {
                let t = this.getCell(1, e);
                t && t.setAttribute('heading', this.api.i18n.t('Heading'));
            }
        }
        removeHeadingAttrFromFirstRow() {
            for (let e = 1; e <= this.numberOfColumns; e++) {
                let t = this.getCell(1, e);
                t && t.removeAttribute('heading');
            }
        }
        selectRow(e) {
            const t = this.getRow(e);
            t && ((this.selectedRow = e), t.classList.add(Jd));
        }
        unselectRow() {
            if (this.selectedRow <= 0) return;
            const e = this.table.querySelector(`.${Jd}`);
            (e && e.classList.remove(Jd), (this.selectedRow = 0));
        }
        selectColumn(e) {
            for (let t = 1; t <= this.numberOfRows; t++) {
                const n = this.getCell(t, e);
                n && n.classList.add(eh);
            }
            this.selectedColumn = e;
        }
        unselectColumn() {
            if (this.selectedColumn <= 0) return;
            let e = this.table.querySelectorAll(`.${eh}`);
            (Array.from(e).forEach((e) => {
                e.classList.remove(eh);
            }),
                (this.selectedColumn = 0));
        }
        getHoveredCell(e) {
            let t = this.hoveredRow,
                n = this.hoveredColumn;
            const {
                width: o,
                height: i,
                x: r,
                y: s,
            } = (function (e, t) {
                const n = e.getBoundingClientRect(),
                    { width: o, height: i, x: r, y: s } = n,
                    { clientX: a, clientY: l } = t;
                return { width: o, height: i, x: a - r, y: l - s };
            })(this.table, e);
            return (
                r >= 0 &&
                    (n = this.binSearch(
                        this.numberOfColumns,
                        (e) => this.getCell(1, e),
                        ({ fromLeftBorder: e }) => r < e,
                        ({ fromRightBorder: e }) => r > o - e,
                    )),
                s >= 0 &&
                    (t = this.binSearch(
                        this.numberOfRows,
                        (e) => this.getCell(e, 1),
                        ({ fromTopBorder: e }) => s < e,
                        ({ fromBottomBorder: e }) => s > i - e,
                    )),
                { row: t || this.hoveredRow, column: n || this.hoveredColumn }
            );
        }
        binSearch(e, t, n, o) {
            let i,
                r = 0,
                s = e + 1,
                a = 0;
            for (; r < s - 1 && a < 10; ) {
                i = Math.ceil((r + s) / 2);
                const e = t(i),
                    l = Fd(this.table, e);
                if (n(l)) s = i;
                else {
                    if (!o(l)) break;
                    r = i;
                }
                a++;
            }
            return i;
        }
        getData() {
            const e = [];
            for (let t = 1; t <= this.numberOfRows; t++) {
                const n = this.table.querySelector(`.${Xd}:nth-child(${t})`),
                    o = Array.from(n.querySelectorAll(`.${Qd}`));
                o.every((e) => !e.textContent.trim()) ||
                    e.push(o.map((e) => e.innerHTML));
            }
            return e;
        }
        destroy() {
            document.removeEventListener('click', this.documentClicked);
        }
    }
    class sh {
        static get isReadOnlySupported() {
            return !0;
        }
        static get enableLineBreaks() {
            return !0;
        }
        constructor({ data: e, config: t, api: n, readOnly: o, block: i }) {
            ((this.api = n),
                (this.readOnly = o),
                (this.config = t),
                (this.data = {
                    withHeadings: this.getConfig('withHeadings', !1, e),
                    stretched: this.getConfig('stretched', !1, e),
                    content: e && e.content ? e.content : [],
                }),
                (this.table = null),
                (this.block = i));
        }
        static get toolbox() {
            return {
                icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>',
                title: 'Table',
            };
        }
        render() {
            return (
                (this.table = new rh(
                    this.readOnly,
                    this.api,
                    this.data,
                    this.config,
                )),
                (this.container = jd('div', this.api.styles.block)),
                this.container.appendChild(this.table.getWrapper()),
                this.table.setHeadingsSetting(this.data.withHeadings),
                this.container
            );
        }
        renderSettings() {
            return [
                {
                    label: this.api.i18n.t('With headings'),
                    icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>',
                    isActive: this.data.withHeadings,
                    closeOnActivate: !0,
                    toggle: !0,
                    onActivate: () => {
                        ((this.data.withHeadings = !0),
                            this.table.setHeadingsSetting(
                                this.data.withHeadings,
                            ));
                    },
                },
                {
                    label: this.api.i18n.t('Without headings'),
                    icon: '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-width="2" d="M10 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M14 5V18.5"/><path stroke="currentColor" stroke-width="2" d="M5 10H19"/><path stroke="currentColor" stroke-width="2" d="M5 14H19"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>',
                    isActive: !this.data.withHeadings,
                    closeOnActivate: !0,
                    toggle: !0,
                    onActivate: () => {
                        ((this.data.withHeadings = !1),
                            this.table.setHeadingsSetting(
                                this.data.withHeadings,
                            ));
                    },
                },
                {
                    label: this.data.stretched
                        ? this.api.i18n.t('Collapse')
                        : this.api.i18n.t('Stretch'),
                    icon: this.data.stretched
                        ? '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 9L10 12M10 12L7 15M10 12H4"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9L14 12M14 12L17 15M14 12H20"/></svg>'
                        : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9L20 12L17 15"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 12H20"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 9L4 12L7 15"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 12H10"/></svg>',
                    closeOnActivate: !0,
                    toggle: !0,
                    onActivate: () => {
                        ((this.data.stretched = !this.data.stretched),
                            (this.block.stretched = this.data.stretched));
                    },
                },
            ];
        }
        save() {
            const e = this.table.getData();
            return {
                withHeadings: this.data.withHeadings,
                stretched: this.data.stretched,
                content: e,
            };
        }
        destroy() {
            this.table.destroy();
        }
        getConfig(e, t, n) {
            const o = this.data || n;
            return o
                ? o[e]
                    ? o[e]
                    : t
                : this.config && this.config[e]
                  ? this.config[e]
                  : t;
        }
        static get pasteConfig() {
            return { tags: ['TABLE', 'TR', 'TH', 'TD'] };
        }
        onPaste(e) {
            const t = e.detail.data,
                n = t.querySelector(':scope > thead, tr:first-of-type th'),
                o = Array.from(t.querySelectorAll('tr')).map((e) =>
                    Array.from(e.querySelectorAll('th, td')).map(
                        (e) => e.innerHTML,
                    ),
                );
            ((this.data = { withHeadings: null !== n, content: o }),
                this.table.wrapper &&
                    this.table.wrapper.replaceWith(this.render()));
        }
    }
    !(function () {
        try {
            if (typeof document < 'u') {
                var e = document.createElement('style');
                (e.appendChild(
                    document.createTextNode(
                        '.cdx-underline{text-decoration:underline}',
                    ),
                ),
                    document.head.appendChild(e));
            }
        } catch (e) {
            console.error('vite-plugin-css-injected-by-js', e);
        }
    })();
    const ah = class e {
        constructor(e) {
            ((this.tag = 'U'),
                (this.api = e.api),
                (this.iconClasses = {
                    base: this.api.styles.inlineToolButton,
                    active: this.api.styles.inlineToolButtonActive,
                }));
        }
        static get CSS() {
            return 'cdx-underline';
        }
        render() {
            return (
                (this.button = document.createElement('button')),
                (this.button.type = 'button'),
                this.button.classList.add(this.iconClasses.base),
                (this.button.innerHTML = this.toolboxIcon),
                this.button
            );
        }
        surround(t) {
            if (!t) return;
            const n = this.api.selection.findParentTag(this.tag, e.CSS);
            n ? this.unwrap(n) : this.wrap(t);
        }
        wrap(t) {
            const n = document.createElement(this.tag);
            (n.classList.add(e.CSS),
                n.appendChild(t.extractContents()),
                t.insertNode(n),
                this.api.selection.expandToTag(n));
        }
        unwrap(e) {
            var t;
            this.api.selection.expandToTag(e);
            const n = window.getSelection();
            if (!n) return;
            const o = n.getRangeAt(0);
            if (!o) return;
            const i = o.extractContents();
            i &&
                (null == (t = e.parentNode) || t.removeChild(e),
                o.insertNode(i),
                n.removeAllRanges(),
                n.addRange(o));
        }
        checkState() {
            var t;
            const n = this.api.selection.findParentTag(this.tag, e.CSS);
            return (
                null == (t = this.button) ||
                    t.classList.toggle(this.iconClasses.active, !!n),
                !!n
            );
        }
        get toolboxIcon() {
            return '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 7.5V11.5C9 12.2956 9.31607 13.0587 9.87868 13.6213C10.4413 14.1839 11.2044 14.5 12 14.5C12.7956 14.5 13.5587 14.1839 14.1213 13.6213C14.6839 13.0587 15 12.2956 15 11.5V7.5"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7.71429 18H16.2857"/></svg>';
        }
        static get sanitize() {
            return { u: { class: e.CSS } };
        }
    };
    ah.isInline = !0;
    let lh = ah;
    !(function () {
        try {
            if (typeof document < 'u') {
                var e = document.createElement('style');
                (e.appendChild(
                    document.createTextNode(
                        '.cdx-list{margin:0;padding:0;outline:none;display:grid;counter-reset:item;gap:var(--spacing-s);padding:var(--spacing-xs);--spacing-s: 8px;--spacing-xs: 6px;--list-counter-type: numeric;--radius-border: 5px;--checkbox-background: #fff;--color-border: #C9C9C9;--color-bg-checked: #369FFF;--line-height: 1.45em;--color-bg-checked-hover: #0059AB;--color-tick: #fff;--size-checkbox: 1.2em}.cdx-list__item{line-height:var(--line-height);display:grid;grid-template-columns:auto 1fr;grid-template-rows:auto auto;grid-template-areas:"checkbox content" ". child"}.cdx-list__item-children{display:grid;grid-area:child;gap:var(--spacing-s);padding-top:var(--spacing-s)}.cdx-list__item [contenteditable]{outline:none}.cdx-list__item-content{word-break:break-word;white-space:pre-wrap;grid-area:content;padding-left:var(--spacing-s)}.cdx-list__item:before{counter-increment:item;white-space:nowrap}.cdx-list-ordered .cdx-list__item:before{content:counters(item,".",var(--list-counter-type)) "."}.cdx-list-ordered{counter-reset:item}.cdx-list-unordered .cdx-list__item:before{content:"•"}.cdx-list-checklist .cdx-list__item:before{content:""}.cdx-list__settings .cdx-settings-button{width:50%}.cdx-list__checkbox{padding-top:calc((var(--line-height) - var(--size-checkbox)) / 2);grid-area:checkbox;width:var(--size-checkbox);height:var(--size-checkbox);display:flex;cursor:pointer}.cdx-list__checkbox svg{opacity:0;height:var(--size-checkbox);width:var(--size-checkbox);left:-1px;top:-1px;position:absolute}@media (hover: hover){.cdx-list__checkbox:not(.cdx-list__checkbox--no-hover):hover .cdx-list__checkbox-check svg{opacity:1}}.cdx-list__checkbox--checked{line-height:var(--line-height)}@media (hover: hover){.cdx-list__checkbox--checked:not(.cdx-list__checkbox--checked--no-hover):hover .cdx-checklist__checkbox-check{background:var(--color-bg-checked-hover);border-color:var(--color-bg-checked-hover)}}.cdx-list__checkbox--checked .cdx-list__checkbox-check{background:var(--color-bg-checked);border-color:var(--color-bg-checked)}.cdx-list__checkbox--checked .cdx-list__checkbox-check svg{opacity:1}.cdx-list__checkbox--checked .cdx-list__checkbox-check svg path{stroke:var(--color-tick)}.cdx-list__checkbox--checked .cdx-list__checkbox-check:before{opacity:0;visibility:visible;transform:scale(2.5)}.cdx-list__checkbox-check{cursor:pointer;display:inline-block;position:relative;margin:0 auto;width:var(--size-checkbox);height:var(--size-checkbox);box-sizing:border-box;border-radius:var(--radius-border);border:1px solid var(--color-border);background:var(--checkbox-background)}.cdx-list__checkbox-check:before{content:"";position:absolute;top:0;right:0;bottom:0;left:0;border-radius:100%;background-color:var(--color-bg-checked);visibility:hidden;pointer-events:none;transform:scale(1);transition:transform .4s ease-out,opacity .4s}.cdx-list-start-with-field{background:#F8F8F8;border:1px solid rgba(226,226,229,.2);border-radius:6px;padding:2px;display:grid;grid-template-columns:auto auto 1fr;grid-template-rows:auto}.cdx-list-start-with-field--invalid{background:#FFECED;border:1px solid #E13F3F}.cdx-list-start-with-field--invalid .cdx-list-start-with-field__input{color:#e13f3f}.cdx-list-start-with-field__input{font-size:14px;outline:none;font-weight:500;font-family:inherit;border:0;background:transparent;margin:0;padding:0;line-height:22px;min-width:calc(100% - var(--toolbox-buttons-size) - var(--icon-margin-right))}.cdx-list-start-with-field__input::placeholder{color:var(--grayText);font-weight:500}',
                    ),
                ),
                    document.head.appendChild(e));
            }
        } catch (e) {
            console.error('vite-plugin-css-injected-by-js', e);
        }
    })();
    const ch =
            '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M9.2 12L11.0586 13.8586C11.1367 13.9367 11.2633 13.9367 11.3414 13.8586L14.7 10.5"/><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/></svg>',
        dh =
            '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><line x1="9" x2="19" y1="7" y2="7" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="9" x2="19" y1="12" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="9" x2="19" y1="17" y2="17" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M5.00001 17H4.99002"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M5.00001 12H4.99002"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M5.00001 7H4.99002"/></svg>',
        hh =
            '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><line x1="12" x2="19" y1="7" y2="7" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="12" x2="19" y1="12" y2="12" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><line x1="12" x2="19" y1="17" y2="17" stroke="currentColor" stroke-linecap="round" stroke-width="2"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7.79999 14L7.79999 7.2135C7.79999 7.12872 7.7011 7.0824 7.63597 7.13668L4.79999 9.5"/></svg>';
    var uh =
        typeof globalThis < 'u'
            ? globalThis
            : typeof window < 'u'
              ? window
              : typeof global < 'u'
                ? global
                : typeof self < 'u'
                  ? self
                  : {};
    function ph(e) {
        if (e.__esModule) return e;
        var t = e.default;
        if ('function' == typeof t) {
            var n = function e() {
                return this instanceof e
                    ? Reflect.construct(t, arguments, this.constructor)
                    : t.apply(this, arguments);
            };
            n.prototype = t.prototype;
        } else n = {};
        return (
            Object.defineProperty(n, '__esModule', { value: !0 }),
            Object.keys(e).forEach(function (t) {
                var o = Object.getOwnPropertyDescriptor(e, t);
                Object.defineProperty(
                    n,
                    t,
                    o.get
                        ? o
                        : {
                              enumerable: !0,
                              get: function () {
                                  return e[t];
                              },
                          },
                );
            }),
            n
        );
    }
    var fh = {},
        gh = {},
        mh = {};
    (Object.defineProperty(mh, '__esModule', { value: !0 }),
        (mh.allInputsSelector = function () {
            return (
                '[contenteditable=true], textarea, input:not([type]), ' +
                ['text', 'password', 'email', 'number', 'search', 'tel', 'url']
                    .map(function (e) {
                        return 'input[type="'.concat(e, '"]');
                    })
                    .join(', ')
            );
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.allInputsSelector = void 0));
            var t = mh;
            Object.defineProperty(e, 'allInputsSelector', {
                enumerable: !0,
                get: function () {
                    return t.allInputsSelector;
                },
            });
        })(gh));
    var bh = {},
        vh = {};
    (Object.defineProperty(vh, '__esModule', { value: !0 }),
        (vh.isNativeInput = function (e) {
            return (
                !(!e || !e.tagName) && ['INPUT', 'TEXTAREA'].includes(e.tagName)
            );
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.isNativeInput = void 0));
            var t = vh;
            Object.defineProperty(e, 'isNativeInput', {
                enumerable: !0,
                get: function () {
                    return t.isNativeInput;
                },
            });
        })(bh));
    var yh = {},
        wh = {};
    (Object.defineProperty(wh, '__esModule', { value: !0 }),
        (wh.append = function (e, t) {
            Array.isArray(t)
                ? t.forEach(function (t) {
                      e.appendChild(t);
                  })
                : e.appendChild(t);
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.append = void 0));
            var t = wh;
            Object.defineProperty(e, 'append', {
                enumerable: !0,
                get: function () {
                    return t.append;
                },
            });
        })(yh));
    var kh = {},
        xh = {};
    (Object.defineProperty(xh, '__esModule', { value: !0 }),
        (xh.blockElements = function () {
            return [
                'address',
                'article',
                'aside',
                'blockquote',
                'canvas',
                'div',
                'dl',
                'dt',
                'fieldset',
                'figcaption',
                'figure',
                'footer',
                'form',
                'h1',
                'h2',
                'h3',
                'h4',
                'h5',
                'h6',
                'header',
                'hgroup',
                'hr',
                'li',
                'main',
                'nav',
                'noscript',
                'ol',
                'output',
                'p',
                'pre',
                'ruby',
                'section',
                'table',
                'tbody',
                'thead',
                'tr',
                'tfoot',
                'ul',
                'video',
            ];
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.blockElements = void 0));
            var t = xh;
            Object.defineProperty(e, 'blockElements', {
                enumerable: !0,
                get: function () {
                    return t.blockElements;
                },
            });
        })(kh));
    var Ch = {},
        Eh = {};
    (Object.defineProperty(Eh, '__esModule', { value: !0 }),
        (Eh.calculateBaseline = function (e) {
            var t = window.getComputedStyle(e),
                n = parseFloat(t.fontSize),
                o = parseFloat(t.lineHeight) || 1.2 * n,
                i = parseFloat(t.paddingTop),
                r = parseFloat(t.borderTopWidth),
                s = parseFloat(t.marginTop),
                a = 0.8 * n,
                l = (o - n) / 2,
                c = s + r + i + l + a;
            return c;
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.calculateBaseline = void 0));
            var t = Eh;
            Object.defineProperty(e, 'calculateBaseline', {
                enumerable: !0,
                get: function () {
                    return t.calculateBaseline;
                },
            });
        })(Ch));
    var Sh = {},
        Th = {},
        _h = {},
        Bh = {};
    (Object.defineProperty(Bh, '__esModule', { value: !0 }),
        (Bh.isContentEditable = function (e) {
            return 'true' === e.contentEditable;
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.isContentEditable = void 0));
            var t = Bh;
            Object.defineProperty(e, 'isContentEditable', {
                enumerable: !0,
                get: function () {
                    return t.isContentEditable;
                },
            });
        })(_h),
        Object.defineProperty(Th, '__esModule', { value: !0 }),
        (Th.canSetCaret = function (e) {
            var t = !0;
            if ((0, Oh.isNativeInput)(e))
                switch (e.type) {
                    case 'file':
                    case 'checkbox':
                    case 'radio':
                    case 'hidden':
                    case 'submit':
                    case 'button':
                    case 'image':
                    case 'reset':
                        t = !1;
                }
            else t = (0, Ih.isContentEditable)(e);
            return t;
        }));
    var Oh = bh,
        Ih = _h;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.canSetCaret = void 0));
        var t = Th;
        Object.defineProperty(e, 'canSetCaret', {
            enumerable: !0,
            get: function () {
                return t.canSetCaret;
            },
        });
    })(Sh);
    var Lh = {},
        Ah = {};
    function Ph() {
        const e = { win: !1, mac: !1, x11: !1, linux: !1 },
            t = Object.keys(e).find(
                (e) =>
                    -1 !== window.navigator.appVersion.toLowerCase().indexOf(e),
            );
        return (void 0 !== t && (e[t] = !0), e);
    }
    function Mh(e) {
        return (
            null != e &&
            '' !== e &&
            ('object' != typeof e || Object.keys(e).length > 0)
        );
    }
    function Nh(e) {
        return Object.prototype.toString
            .call(e)
            .match(/\s([a-zA-Z]+)/)[1]
            .toLowerCase();
    }
    function $h(e) {
        return 'function' === Nh(e) || 'asyncfunction' === Nh(e);
    }
    function Rh(e) {
        return 'object' === Nh(e);
    }
    const jh = Object.freeze(
            Object.defineProperty(
                {
                    __proto__: null,
                    PromiseQueue: class {
                        constructor() {
                            this.completed = Promise.resolve();
                        }
                        add(e) {
                            return new Promise((t, n) => {
                                this.completed = this.completed
                                    .then(e)
                                    .then(t)
                                    .catch(n);
                            });
                        }
                    },
                    beautifyShortcut: function (e) {
                        const t = Ph();
                        return (
                            (e = e
                                .replace(/shift/gi, '⇧')
                                .replace(/backspace/gi, '⌫')
                                .replace(/enter/gi, '⏎')
                                .replace(/up/gi, '↑')
                                .replace(/left/gi, '→')
                                .replace(/down/gi, '↓')
                                .replace(/right/gi, '←')
                                .replace(/escape/gi, '⎋')
                                .replace(/insert/gi, 'Ins')
                                .replace(/delete/gi, '␡')
                                .replace(/\+/gi, '+')),
                            (e = t.mac
                                ? e
                                      .replace(/ctrl|cmd/gi, '⌘')
                                      .replace(/alt/gi, '⌥')
                                : e
                                      .replace(/cmd/gi, 'Ctrl')
                                      .replace(/windows/gi, 'WIN'))
                        );
                    },
                    cacheable: function (e, t, n) {
                        const o = void 0 !== n.value ? 'value' : 'get',
                            i = n[o],
                            r = `#${t}Cache`;
                        if (
                            ((n[o] = function (...e) {
                                return (
                                    void 0 === this[r] &&
                                        (this[r] = i.apply(this, e)),
                                    this[r]
                                );
                            }),
                            'get' === o && n.set)
                        ) {
                            const t = n.set;
                            n.set = function (n) {
                                (delete e[r], t.apply(this, n));
                            };
                        }
                        return n;
                    },
                    capitalize: function (e) {
                        return e[0].toUpperCase() + e.slice(1);
                    },
                    copyTextToClipboard: function (e) {
                        const t = document.createElement('div');
                        ((t.style.position = 'absolute'),
                            (t.style.left = '-999px'),
                            (t.style.bottom = '-999px'),
                            (t.innerHTML = e),
                            document.body.appendChild(t));
                        const n = window.getSelection(),
                            o = document.createRange();
                        if ((o.selectNode(t), null === n))
                            throw new Error('Cannot copy text to clipboard');
                        (n.removeAllRanges(),
                            n.addRange(o),
                            document.execCommand('copy'),
                            document.body.removeChild(t));
                    },
                    debounce: function (e, t, n) {
                        let o;
                        return (...i) => {
                            const r = this,
                                s = !0 === n && void 0 !== o;
                            (window.clearTimeout(o),
                                (o = window.setTimeout(() => {
                                    ((o = void 0), !0 !== n && e.apply(r, i));
                                }, t)),
                                s && e.apply(r, i));
                        };
                    },
                    deepMerge: function e(t, ...n) {
                        if (!n.length) return t;
                        const o = n.shift();
                        if (Rh(t) && Rh(o))
                            for (const n in o)
                                Rh(o[n])
                                    ? (void 0 === t[n] &&
                                          Object.assign(t, { [n]: {} }),
                                      e(t[n], o[n]))
                                    : Object.assign(t, { [n]: o[n] });
                        return e(t, ...n);
                    },
                    deprecationAssert: function (e, t, n) {
                        const o = `«${t}» is deprecated and will be removed in the next major release. Please use the «${n}» instead.`;
                        e && console.warn(o);
                    },
                    getUserOS: Ph,
                    getValidUrl: function (e) {
                        try {
                            return new URL(e).href;
                        } catch {}
                        return '//' === e.substring(0, 2)
                            ? window.location.protocol + e
                            : window.location.origin + e;
                    },
                    isBoolean: function (e) {
                        return 'boolean' === Nh(e);
                    },
                    isClass: function (e) {
                        return $h(e) && /^\s*class\s+/.test(e.toString());
                    },
                    isEmpty: function (e) {
                        return !Mh(e);
                    },
                    isFunction: $h,
                    isIosDevice: () =>
                        typeof window < 'u' &&
                        null !== window.navigator &&
                        Mh(window.navigator.platform) &&
                        (/iP(ad|hone|od)/.test(window.navigator.platform) ||
                            ('MacIntel' === window.navigator.platform &&
                                window.navigator.maxTouchPoints > 1)),
                    isNumber: function (e) {
                        return 'number' === Nh(e);
                    },
                    isObject: Rh,
                    isPrintableKey: function (e) {
                        return (
                            (e > 47 && e < 58) ||
                            32 === e ||
                            13 === e ||
                            229 === e ||
                            (e > 64 && e < 91) ||
                            (e > 95 && e < 112) ||
                            (e > 185 && e < 193) ||
                            (e > 218 && e < 223)
                        );
                    },
                    isPromise: function (e) {
                        return Promise.resolve(e) === e;
                    },
                    isString: function (e) {
                        return 'string' === Nh(e);
                    },
                    isUndefined: function (e) {
                        return 'undefined' === Nh(e);
                    },
                    keyCodes: {
                        BACKSPACE: 8,
                        TAB: 9,
                        ENTER: 13,
                        SHIFT: 16,
                        CTRL: 17,
                        ALT: 18,
                        ESC: 27,
                        SPACE: 32,
                        LEFT: 37,
                        UP: 38,
                        DOWN: 40,
                        RIGHT: 39,
                        DELETE: 46,
                        META: 91,
                        SLASH: 191,
                    },
                    mouseButtons: {
                        LEFT: 0,
                        WHEEL: 1,
                        RIGHT: 2,
                        BACKWARD: 3,
                        FORWARD: 4,
                    },
                    notEmpty: Mh,
                    throttle: function (e, t, n) {
                        let o,
                            i,
                            r,
                            s = null,
                            a = 0;
                        n || (n = {});
                        const l = function () {
                            ((a = !1 === n.leading ? 0 : Date.now()),
                                (s = null),
                                (r = e.apply(o, i)),
                                null === s && (o = i = null));
                        };
                        return function () {
                            const c = Date.now();
                            !a && !1 === n.leading && (a = c);
                            const d = t - (c - a);
                            return (
                                (o = this),
                                (i = arguments),
                                d <= 0 || d > t
                                    ? (s && (clearTimeout(s), (s = null)),
                                      (a = c),
                                      (r = e.apply(o, i)),
                                      null === s && (o = i = null))
                                    : !s &&
                                      !1 !== n.trailing &&
                                      (s = setTimeout(l, d)),
                                r
                            );
                        };
                    },
                    typeOf: Nh,
                },
                Symbol.toStringTag,
                { value: 'Module' },
            ),
        ),
        Dh = ph(jh);
    (Object.defineProperty(Ah, '__esModule', { value: !0 }),
        (Ah.containsOnlyInlineElements = function (e) {
            var t;
            (0, Fh.isString)(e)
                ? ((t = document.createElement('div')).innerHTML = e)
                : (t = e);
            var n = function (e) {
                return (
                    !(0, Hh.blockElements)().includes(
                        e.tagName.toLowerCase(),
                    ) && Array.from(e.children).every(n)
                );
            };
            return Array.from(t.children).every(n);
        }));
    var Fh = Dh,
        Hh = kh;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.containsOnlyInlineElements = void 0));
        var t = Ah;
        Object.defineProperty(e, 'containsOnlyInlineElements', {
            enumerable: !0,
            get: function () {
                return t.containsOnlyInlineElements;
            },
        });
    })(Lh);
    var zh = {},
        Uh = {},
        Wh = {},
        qh = {};
    (Object.defineProperty(qh, '__esModule', { value: !0 }),
        (qh.make = function (e, t, n) {
            var o;
            (void 0 === t && (t = null), void 0 === n && (n = {}));
            var i = document.createElement(e);
            if (Array.isArray(t)) {
                var r = t.filter(function (e) {
                    return void 0 !== e;
                });
                (o = i.classList).add.apply(o, r);
            } else null !== t && i.classList.add(t);
            for (var s in n)
                Object.prototype.hasOwnProperty.call(n, s) && (i[s] = n[s]);
            return i;
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.make = void 0));
            var t = qh;
            Object.defineProperty(e, 'make', {
                enumerable: !0,
                get: function () {
                    return t.make;
                },
            });
        })(Wh),
        Object.defineProperty(Uh, '__esModule', { value: !0 }),
        (Uh.fragmentToString = function (e) {
            var t = (0, Vh.make)('div');
            return (t.appendChild(e), t.innerHTML);
        }));
    var Vh = Wh;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.fragmentToString = void 0));
        var t = Uh;
        Object.defineProperty(e, 'fragmentToString', {
            enumerable: !0,
            get: function () {
                return t.fragmentToString;
            },
        });
    })(zh);
    var Gh = {},
        Kh = {};
    (Object.defineProperty(Kh, '__esModule', { value: !0 }),
        (Kh.getContentLength = function (e) {
            var t, n;
            return (0, Yh.isNativeInput)(e)
                ? e.value.length
                : e.nodeType === Node.TEXT_NODE
                  ? e.length
                  : null !==
                          (n =
                              null === (t = e.textContent) || void 0 === t
                                  ? void 0
                                  : t.length) && void 0 !== n
                    ? n
                    : 0;
        }));
    var Yh = bh;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.getContentLength = void 0));
        var t = Kh;
        Object.defineProperty(e, 'getContentLength', {
            enumerable: !0,
            get: function () {
                return t.getContentLength;
            },
        });
    })(Gh);
    var Xh = {},
        Zh = {},
        Jh =
            (uh && uh.__spreadArray) ||
            function (e, t, n) {
                if (n || 2 === arguments.length)
                    for (var o, i = 0, r = t.length; i < r; i++)
                        (o || !(i in t)) &&
                            (o || (o = Array.prototype.slice.call(t, 0, i)),
                            (o[i] = t[i]));
                return e.concat(o || Array.prototype.slice.call(t));
            };
    (Object.defineProperty(Zh, '__esModule', { value: !0 }),
        (Zh.getDeepestBlockElements = function e(t) {
            return (0, Qh.containsOnlyInlineElements)(t)
                ? [t]
                : Array.from(t.children).reduce(function (t, n) {
                      return Jh(Jh([], t, !0), e(n), !0);
                  }, []);
        }));
    var Qh = Lh;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.getDeepestBlockElements = void 0));
        var t = Zh;
        Object.defineProperty(e, 'getDeepestBlockElements', {
            enumerable: !0,
            get: function () {
                return t.getDeepestBlockElements;
            },
        });
    })(Xh);
    var eu = {},
        tu = {},
        nu = {},
        ou = {};
    (Object.defineProperty(ou, '__esModule', { value: !0 }),
        (ou.isLineBreakTag = function (e) {
            return ['BR', 'WBR'].includes(e.tagName);
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.isLineBreakTag = void 0));
            var t = ou;
            Object.defineProperty(e, 'isLineBreakTag', {
                enumerable: !0,
                get: function () {
                    return t.isLineBreakTag;
                },
            });
        })(nu));
    var iu = {},
        ru = {};
    (Object.defineProperty(ru, '__esModule', { value: !0 }),
        (ru.isSingleTag = function (e) {
            return [
                'AREA',
                'BASE',
                'BR',
                'COL',
                'COMMAND',
                'EMBED',
                'HR',
                'IMG',
                'INPUT',
                'KEYGEN',
                'LINK',
                'META',
                'PARAM',
                'SOURCE',
                'TRACK',
                'WBR',
            ].includes(e.tagName);
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.isSingleTag = void 0));
            var t = ru;
            Object.defineProperty(e, 'isSingleTag', {
                enumerable: !0,
                get: function () {
                    return t.isSingleTag;
                },
            });
        })(iu),
        Object.defineProperty(tu, '__esModule', { value: !0 }),
        (tu.getDeepestNode = function e(t, n) {
            void 0 === n && (n = !1);
            var o = n ? 'lastChild' : 'firstChild',
                i = n ? 'previousSibling' : 'nextSibling';
            if (t.nodeType === Node.ELEMENT_NODE && t[o]) {
                var r = t[o];
                if (
                    (0, lu.isSingleTag)(r) &&
                    !(0, su.isNativeInput)(r) &&
                    !(0, au.isLineBreakTag)(r)
                )
                    if (r[i]) r = r[i];
                    else {
                        if (null === r.parentNode || !r.parentNode[i])
                            return r.parentNode;
                        r = r.parentNode[i];
                    }
                return e(r, n);
            }
            return t;
        }));
    var su = bh,
        au = nu,
        lu = iu;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.getDeepestNode = void 0));
        var t = tu;
        Object.defineProperty(e, 'getDeepestNode', {
            enumerable: !0,
            get: function () {
                return t.getDeepestNode;
            },
        });
    })(eu);
    var cu = {},
        du = {},
        hu =
            (uh && uh.__spreadArray) ||
            function (e, t, n) {
                if (n || 2 === arguments.length)
                    for (var o, i = 0, r = t.length; i < r; i++)
                        (o || !(i in t)) &&
                            (o || (o = Array.prototype.slice.call(t, 0, i)),
                            (o[i] = t[i]));
                return e.concat(o || Array.prototype.slice.call(t));
            };
    (Object.defineProperty(du, '__esModule', { value: !0 }),
        (du.findAllInputs = function (e) {
            return Array.from(
                e.querySelectorAll((0, fu.allInputsSelector)()),
            ).reduce(function (e, t) {
                return (0, gu.isNativeInput)(t) ||
                    (0, uu.containsOnlyInlineElements)(t)
                    ? hu(hu([], e, !0), [t], !1)
                    : hu(hu([], e, !0), (0, pu.getDeepestBlockElements)(t), !0);
            }, []);
        }));
    var uu = Lh,
        pu = Xh,
        fu = gh,
        gu = bh;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.findAllInputs = void 0));
        var t = du;
        Object.defineProperty(e, 'findAllInputs', {
            enumerable: !0,
            get: function () {
                return t.findAllInputs;
            },
        });
    })(cu);
    var mu = {},
        bu = {};
    (Object.defineProperty(bu, '__esModule', { value: !0 }),
        (bu.isCollapsedWhitespaces = function (e) {
            return !/[^\t\n\r ]/.test(e);
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.isCollapsedWhitespaces = void 0));
            var t = bu;
            Object.defineProperty(e, 'isCollapsedWhitespaces', {
                enumerable: !0,
                get: function () {
                    return t.isCollapsedWhitespaces;
                },
            });
        })(mu));
    var vu = {},
        yu = {};
    (Object.defineProperty(yu, '__esModule', { value: !0 }),
        (yu.isElement = function (e) {
            return (
                !(0, wu.isNumber)(e) &&
                !!e &&
                !!e.nodeType &&
                e.nodeType === Node.ELEMENT_NODE
            );
        }));
    var wu = Dh;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.isElement = void 0));
        var t = yu;
        Object.defineProperty(e, 'isElement', {
            enumerable: !0,
            get: function () {
                return t.isElement;
            },
        });
    })(vu);
    var ku = {},
        xu = {},
        Cu = {},
        Eu = {};
    (Object.defineProperty(Eu, '__esModule', { value: !0 }),
        (Eu.isLeaf = function (e) {
            return null !== e && 0 === e.childNodes.length;
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.isLeaf = void 0));
            var t = Eu;
            Object.defineProperty(e, 'isLeaf', {
                enumerable: !0,
                get: function () {
                    return t.isLeaf;
                },
            });
        })(Cu));
    var Su = {},
        Tu = {};
    (Object.defineProperty(Tu, '__esModule', { value: !0 }),
        (Tu.isNodeEmpty = function (e, t) {
            var n = '';
            return (
                !((0, Iu.isSingleTag)(e) && !(0, _u.isLineBreakTag)(e)) &&
                ((0, Bu.isElement)(e) && (0, Ou.isNativeInput)(e)
                    ? (n = e.value)
                    : null !== e.textContent &&
                      (n = e.textContent.replace('​', '')),
                void 0 !== t && (n = n.replace(new RegExp(t, 'g'), '')),
                0 === n.trim().length)
            );
        }));
    var _u = nu,
        Bu = vu,
        Ou = bh,
        Iu = iu;
    (!(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.isNodeEmpty = void 0));
        var t = Tu;
        Object.defineProperty(e, 'isNodeEmpty', {
            enumerable: !0,
            get: function () {
                return t.isNodeEmpty;
            },
        });
    })(Su),
        Object.defineProperty(xu, '__esModule', { value: !0 }),
        (xu.isEmpty = function (e, t) {
            e.normalize();
            for (var n = [e]; n.length > 0; ) {
                var o = n.shift();
                if (o) {
                    if ((0, Lu.isLeaf)((e = o)) && !(0, Au.isNodeEmpty)(e, t))
                        return !1;
                    n.push.apply(n, Array.from(e.childNodes));
                }
            }
            return !0;
        }));
    var Lu = Cu,
        Au = Su;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.isEmpty = void 0));
        var t = xu;
        Object.defineProperty(e, 'isEmpty', {
            enumerable: !0,
            get: function () {
                return t.isEmpty;
            },
        });
    })(ku);
    var Pu = {},
        Mu = {};
    (Object.defineProperty(Mu, '__esModule', { value: !0 }),
        (Mu.isFragment = function (e) {
            return (
                !(0, Nu.isNumber)(e) &&
                !!e &&
                !!e.nodeType &&
                e.nodeType === Node.DOCUMENT_FRAGMENT_NODE
            );
        }));
    var Nu = Dh;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.isFragment = void 0));
        var t = Mu;
        Object.defineProperty(e, 'isFragment', {
            enumerable: !0,
            get: function () {
                return t.isFragment;
            },
        });
    })(Pu);
    var $u = {},
        Ru = {};
    (Object.defineProperty(Ru, '__esModule', { value: !0 }),
        (Ru.isHTMLString = function (e) {
            var t = (0, ju.make)('div');
            return ((t.innerHTML = e), t.childElementCount > 0);
        }));
    var ju = Wh;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.isHTMLString = void 0));
        var t = Ru;
        Object.defineProperty(e, 'isHTMLString', {
            enumerable: !0,
            get: function () {
                return t.isHTMLString;
            },
        });
    })($u);
    var Du = {},
        Fu = {};
    (Object.defineProperty(Fu, '__esModule', { value: !0 }),
        (Fu.offset = function (e) {
            var t = e.getBoundingClientRect(),
                n = window.pageXOffset || document.documentElement.scrollLeft,
                o = window.pageYOffset || document.documentElement.scrollTop,
                i = t.top + o,
                r = t.left + n;
            return {
                top: i,
                left: r,
                bottom: i + t.height,
                right: r + t.width,
            };
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.offset = void 0));
            var t = Fu;
            Object.defineProperty(e, 'offset', {
                enumerable: !0,
                get: function () {
                    return t.offset;
                },
            });
        })(Du));
    var Hu = {},
        zu = {};
    (Object.defineProperty(zu, '__esModule', { value: !0 }),
        (zu.prepend = function (e, t) {
            Array.isArray(t)
                ? (t = t.reverse()).forEach(function (t) {
                      return e.prepend(t);
                  })
                : e.prepend(t);
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.prepend = void 0));
            var t = zu;
            Object.defineProperty(e, 'prepend', {
                enumerable: !0,
                get: function () {
                    return t.prepend;
                },
            });
        })(Hu),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.prepend =
                    e.offset =
                    e.make =
                    e.isLineBreakTag =
                    e.isSingleTag =
                    e.isNodeEmpty =
                    e.isLeaf =
                    e.isHTMLString =
                    e.isFragment =
                    e.isEmpty =
                    e.isElement =
                    e.isContentEditable =
                    e.isCollapsedWhitespaces =
                    e.findAllInputs =
                    e.isNativeInput =
                    e.allInputsSelector =
                    e.getDeepestNode =
                    e.getDeepestBlockElements =
                    e.getContentLength =
                    e.fragmentToString =
                    e.containsOnlyInlineElements =
                    e.canSetCaret =
                    e.calculateBaseline =
                    e.blockElements =
                    e.append =
                        void 0));
            var t = gh;
            Object.defineProperty(e, 'allInputsSelector', {
                enumerable: !0,
                get: function () {
                    return t.allInputsSelector;
                },
            });
            var n = bh;
            Object.defineProperty(e, 'isNativeInput', {
                enumerable: !0,
                get: function () {
                    return n.isNativeInput;
                },
            });
            var o = yh;
            Object.defineProperty(e, 'append', {
                enumerable: !0,
                get: function () {
                    return o.append;
                },
            });
            var i = kh;
            Object.defineProperty(e, 'blockElements', {
                enumerable: !0,
                get: function () {
                    return i.blockElements;
                },
            });
            var r = Ch;
            Object.defineProperty(e, 'calculateBaseline', {
                enumerable: !0,
                get: function () {
                    return r.calculateBaseline;
                },
            });
            var s = Sh;
            Object.defineProperty(e, 'canSetCaret', {
                enumerable: !0,
                get: function () {
                    return s.canSetCaret;
                },
            });
            var a = Lh;
            Object.defineProperty(e, 'containsOnlyInlineElements', {
                enumerable: !0,
                get: function () {
                    return a.containsOnlyInlineElements;
                },
            });
            var l = zh;
            Object.defineProperty(e, 'fragmentToString', {
                enumerable: !0,
                get: function () {
                    return l.fragmentToString;
                },
            });
            var c = Gh;
            Object.defineProperty(e, 'getContentLength', {
                enumerable: !0,
                get: function () {
                    return c.getContentLength;
                },
            });
            var d = Xh;
            Object.defineProperty(e, 'getDeepestBlockElements', {
                enumerable: !0,
                get: function () {
                    return d.getDeepestBlockElements;
                },
            });
            var h = eu;
            Object.defineProperty(e, 'getDeepestNode', {
                enumerable: !0,
                get: function () {
                    return h.getDeepestNode;
                },
            });
            var u = cu;
            Object.defineProperty(e, 'findAllInputs', {
                enumerable: !0,
                get: function () {
                    return u.findAllInputs;
                },
            });
            var p = mu;
            Object.defineProperty(e, 'isCollapsedWhitespaces', {
                enumerable: !0,
                get: function () {
                    return p.isCollapsedWhitespaces;
                },
            });
            var f = _h;
            Object.defineProperty(e, 'isContentEditable', {
                enumerable: !0,
                get: function () {
                    return f.isContentEditable;
                },
            });
            var g = vu;
            Object.defineProperty(e, 'isElement', {
                enumerable: !0,
                get: function () {
                    return g.isElement;
                },
            });
            var m = ku;
            Object.defineProperty(e, 'isEmpty', {
                enumerable: !0,
                get: function () {
                    return m.isEmpty;
                },
            });
            var b = Pu;
            Object.defineProperty(e, 'isFragment', {
                enumerable: !0,
                get: function () {
                    return b.isFragment;
                },
            });
            var v = $u;
            Object.defineProperty(e, 'isHTMLString', {
                enumerable: !0,
                get: function () {
                    return v.isHTMLString;
                },
            });
            var y = Cu;
            Object.defineProperty(e, 'isLeaf', {
                enumerable: !0,
                get: function () {
                    return y.isLeaf;
                },
            });
            var w = Su;
            Object.defineProperty(e, 'isNodeEmpty', {
                enumerable: !0,
                get: function () {
                    return w.isNodeEmpty;
                },
            });
            var k = nu;
            Object.defineProperty(e, 'isLineBreakTag', {
                enumerable: !0,
                get: function () {
                    return k.isLineBreakTag;
                },
            });
            var x = iu;
            Object.defineProperty(e, 'isSingleTag', {
                enumerable: !0,
                get: function () {
                    return x.isSingleTag;
                },
            });
            var C = Wh;
            Object.defineProperty(e, 'make', {
                enumerable: !0,
                get: function () {
                    return C.make;
                },
            });
            var E = Du;
            Object.defineProperty(e, 'offset', {
                enumerable: !0,
                get: function () {
                    return E.offset;
                },
            });
            var S = Hu;
            Object.defineProperty(e, 'prepend', {
                enumerable: !0,
                get: function () {
                    return S.prepend;
                },
            });
        })(fh));
    const Uu = 'cdx-list',
        Wu = {
            wrapper: Uu,
            item: `${Uu}__item`,
            itemContent: `${Uu}__item-content`,
            itemChildren: `${Uu}__item-children`,
        };
    class qu {
        static get CSS() {
            return { ...Wu, orderedList: `${Uu}-ordered` };
        }
        constructor(e, t) {
            ((this.config = t), (this.readOnly = e));
        }
        renderWrapper(e) {
            let t;
            return (
                (t =
                    !0 === e
                        ? fh.make('ol', [qu.CSS.wrapper, qu.CSS.orderedList])
                        : fh.make('ol', [
                              qu.CSS.orderedList,
                              qu.CSS.itemChildren,
                          ])),
                t
            );
        }
        renderItem(e, t) {
            const n = fh.make('li', qu.CSS.item),
                o = fh.make('div', qu.CSS.itemContent, {
                    innerHTML: e,
                    contentEditable: (!this.readOnly).toString(),
                });
            return (n.appendChild(o), n);
        }
        getItemContent(e) {
            const t = e.querySelector(`.${qu.CSS.itemContent}`);
            return !t || fh.isEmpty(t) ? '' : t.innerHTML;
        }
        getItemMeta() {
            return {};
        }
        composeDefaultMeta() {
            return {};
        }
    }
    class Vu {
        static get CSS() {
            return { ...Wu, unorderedList: `${Uu}-unordered` };
        }
        constructor(e, t) {
            ((this.config = t), (this.readOnly = e));
        }
        renderWrapper(e) {
            let t;
            return (
                (t =
                    !0 === e
                        ? fh.make('ul', [Vu.CSS.wrapper, Vu.CSS.unorderedList])
                        : fh.make('ul', [
                              Vu.CSS.unorderedList,
                              Vu.CSS.itemChildren,
                          ])),
                t
            );
        }
        renderItem(e, t) {
            const n = fh.make('li', Vu.CSS.item),
                o = fh.make('div', Vu.CSS.itemContent, {
                    innerHTML: e,
                    contentEditable: (!this.readOnly).toString(),
                });
            return (n.appendChild(o), n);
        }
        getItemContent(e) {
            const t = e.querySelector(`.${Vu.CSS.itemContent}`);
            return !t || fh.isEmpty(t) ? '' : t.innerHTML;
        }
        getItemMeta() {
            return {};
        }
        composeDefaultMeta() {
            return {};
        }
    }
    function Gu(e) {
        return e.nodeType === Node.ELEMENT_NODE;
    }
    var Ku = {},
        Yu = {},
        Xu = {},
        Zu = {};
    (Object.defineProperty(Zu, '__esModule', { value: !0 }),
        (Zu.getContenteditableSlice = function (e, t, n, o, i) {
            var r;
            void 0 === i && (i = !1);
            var s = document.createRange();
            if (
                ('left' === o
                    ? (s.setStart(e, 0), s.setEnd(t, n))
                    : (s.setStart(t, n), s.setEnd(e, e.childNodes.length)),
                !0 === i)
            ) {
                var a = s.extractContents();
                return (0, Ju.fragmentToString)(a);
            }
            var l = s.cloneContents(),
                c = document.createElement('div');
            c.appendChild(l);
            var d = null !== (r = c.textContent) && void 0 !== r ? r : '';
            return d;
        }));
    var Ju = fh;
    (Object.defineProperty(Xu, '__esModule', { value: !0 }),
        (Xu.checkContenteditableSliceForEmptiness = function (e, t, n, o) {
            var i = (0, ep.getContenteditableSlice)(e, t, n, o);
            return (0, Qu.isCollapsedWhitespaces)(i);
        }));
    var Qu = fh,
        ep = Zu;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.checkContenteditableSliceForEmptiness = void 0));
        var t = Xu;
        Object.defineProperty(e, 'checkContenteditableSliceForEmptiness', {
            enumerable: !0,
            get: function () {
                return t.checkContenteditableSliceForEmptiness;
            },
        });
    })(Yu);
    var tp = {};
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.getContenteditableSlice = void 0));
        var t = Zu;
        Object.defineProperty(e, 'getContenteditableSlice', {
            enumerable: !0,
            get: function () {
                return t.getContenteditableSlice;
            },
        });
    })(tp);
    var np = {},
        op = {};
    (Object.defineProperty(op, '__esModule', { value: !0 }),
        (op.focus = function (e, t) {
            var n, o;
            if ((void 0 === t && (t = !0), (0, ip.isNativeInput)(e))) {
                e.focus();
                var i = t ? 0 : e.value.length;
                e.setSelectionRange(i, i);
            } else {
                var r = document.createRange(),
                    s = window.getSelection();
                if (!s) return;
                var a = function (e, t) {
                        void 0 === t && (t = !1);
                        var n = document.createTextNode('');
                        (t ? e.insertBefore(n, e.firstChild) : e.appendChild(n),
                            r.setStart(n, 0),
                            r.setEnd(n, 0));
                    },
                    l = function (e) {
                        return null != e;
                    },
                    c = e.childNodes,
                    d = t ? c[0] : c[c.length - 1];
                if (l(d)) {
                    for (; l(d) && d.nodeType !== Node.TEXT_NODE; )
                        d = t ? d.firstChild : d.lastChild;
                    if (l(d) && d.nodeType === Node.TEXT_NODE) {
                        var h =
                            null !==
                                (o =
                                    null === (n = d.textContent) || void 0 === n
                                        ? void 0
                                        : n.length) && void 0 !== o
                                ? o
                                : 0;
                        i = t ? 0 : h;
                        (r.setStart(d, i), r.setEnd(d, i));
                    } else a(e, t);
                } else a(e);
                (s.removeAllRanges(), s.addRange(r));
            }
        }));
    var ip = fh;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.focus = void 0));
        var t = op;
        Object.defineProperty(e, 'focus', {
            enumerable: !0,
            get: function () {
                return t.focus;
            },
        });
    })(np);
    var rp = {},
        sp = {};
    (Object.defineProperty(sp, '__esModule', { value: !0 }),
        (sp.getCaretNodeAndOffset = function () {
            var e = window.getSelection();
            if (null === e) return [null, 0];
            var t = e.focusNode,
                n = e.focusOffset;
            return null === t
                ? [null, 0]
                : (t.nodeType !== Node.TEXT_NODE &&
                      t.childNodes.length > 0 &&
                      (void 0 !== t.childNodes[n]
                          ? ((t = t.childNodes[n]), (n = 0))
                          : ((t = t.childNodes[n - 1]),
                            null !== t.textContent &&
                                (n = t.textContent.length))),
                  [t, n]);
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.getCaretNodeAndOffset = void 0));
            var t = sp;
            Object.defineProperty(e, 'getCaretNodeAndOffset', {
                enumerable: !0,
                get: function () {
                    return t.getCaretNodeAndOffset;
                },
            });
        })(rp));
    var ap = {},
        lp = {};
    (Object.defineProperty(lp, '__esModule', { value: !0 }),
        (lp.getRange = function () {
            var e = window.getSelection();
            return e && e.rangeCount ? e.getRangeAt(0) : null;
        }),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.getRange = void 0));
            var t = lp;
            Object.defineProperty(e, 'getRange', {
                enumerable: !0,
                get: function () {
                    return t.getRange;
                },
            });
        })(ap));
    var cp = {},
        dp = {};
    (Object.defineProperty(dp, '__esModule', { value: !0 }),
        (dp.isCaretAtEndOfInput = function (e) {
            var t = (0, hp.getDeepestNode)(e, !0);
            if (null === t) return !0;
            if ((0, hp.isNativeInput)(t))
                return t.selectionEnd === t.value.length;
            var n = (0, up.getCaretNodeAndOffset)(),
                o = n[0],
                i = n[1];
            return (
                null !== o &&
                (0, pp.checkContenteditableSliceForEmptiness)(e, o, i, 'right')
            );
        }));
    var hp = fh,
        up = rp,
        pp = Yu;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.isCaretAtEndOfInput = void 0));
        var t = dp;
        Object.defineProperty(e, 'isCaretAtEndOfInput', {
            enumerable: !0,
            get: function () {
                return t.isCaretAtEndOfInput;
            },
        });
    })(cp);
    var fp = {},
        gp = {};
    (Object.defineProperty(gp, '__esModule', { value: !0 }),
        (gp.isCaretAtStartOfInput = function (e) {
            var t = (0, mp.getDeepestNode)(e);
            if (null === t || (0, mp.isEmpty)(e)) return !0;
            if ((0, mp.isNativeInput)(t)) return 0 === t.selectionEnd;
            if ((0, mp.isEmpty)(e)) return !0;
            var n = (0, bp.getCaretNodeAndOffset)(),
                o = n[0],
                i = n[1];
            return (
                null !== o &&
                (0, vp.checkContenteditableSliceForEmptiness)(e, o, i, 'left')
            );
        }));
    var mp = fh,
        bp = sp,
        vp = Xu;
    !(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.isCaretAtStartOfInput = void 0));
        var t = gp;
        Object.defineProperty(e, 'isCaretAtStartOfInput', {
            enumerable: !0,
            get: function () {
                return t.isCaretAtStartOfInput;
            },
        });
    })(fp);
    var yp = {},
        wp = {};
    (Object.defineProperty(wp, '__esModule', { value: !0 }),
        (wp.save = function () {
            var e = (0, xp.getRange)(),
                t = (0, kp.make)('span');
            if (((t.id = 'cursor'), (t.hidden = !0), e))
                return (
                    e.insertNode(t),
                    function () {
                        var n = window.getSelection();
                        n &&
                            (e.setStartAfter(t),
                            e.setEndAfter(t),
                            n.removeAllRanges(),
                            n.addRange(e),
                            setTimeout(function () {
                                t.remove();
                            }, 150));
                    }
                );
        }));
    var kp = fh,
        xp = lp;
    (!(function (e) {
        (Object.defineProperty(e, '__esModule', { value: !0 }),
            (e.save = void 0));
        var t = wp;
        Object.defineProperty(e, 'save', {
            enumerable: !0,
            get: function () {
                return t.save;
            },
        });
    })(yp),
        (function (e) {
            (Object.defineProperty(e, '__esModule', { value: !0 }),
                (e.save =
                    e.isCaretAtStartOfInput =
                    e.isCaretAtEndOfInput =
                    e.getRange =
                    e.getCaretNodeAndOffset =
                    e.focus =
                    e.getContenteditableSlice =
                    e.checkContenteditableSliceForEmptiness =
                        void 0));
            var t = Yu;
            Object.defineProperty(e, 'checkContenteditableSliceForEmptiness', {
                enumerable: !0,
                get: function () {
                    return t.checkContenteditableSliceForEmptiness;
                },
            });
            var n = tp;
            Object.defineProperty(e, 'getContenteditableSlice', {
                enumerable: !0,
                get: function () {
                    return n.getContenteditableSlice;
                },
            });
            var o = np;
            Object.defineProperty(e, 'focus', {
                enumerable: !0,
                get: function () {
                    return o.focus;
                },
            });
            var i = rp;
            Object.defineProperty(e, 'getCaretNodeAndOffset', {
                enumerable: !0,
                get: function () {
                    return i.getCaretNodeAndOffset;
                },
            });
            var r = ap;
            Object.defineProperty(e, 'getRange', {
                enumerable: !0,
                get: function () {
                    return r.getRange;
                },
            });
            var s = cp;
            Object.defineProperty(e, 'isCaretAtEndOfInput', {
                enumerable: !0,
                get: function () {
                    return s.isCaretAtEndOfInput;
                },
            });
            var a = fp;
            Object.defineProperty(e, 'isCaretAtStartOfInput', {
                enumerable: !0,
                get: function () {
                    return a.isCaretAtStartOfInput;
                },
            });
            var l = yp;
            Object.defineProperty(e, 'save', {
                enumerable: !0,
                get: function () {
                    return l.save;
                },
            });
        })(Ku));
    class Cp {
        static get CSS() {
            return {
                ...Wu,
                checklist: `${Uu}-checklist`,
                itemChecked: `${Uu}__checkbox--checked`,
                noHover: `${Uu}__checkbox--no-hover`,
                checkbox: `${Uu}__checkbox-check`,
                checkboxContainer: `${Uu}__checkbox`,
            };
        }
        constructor(e, t) {
            ((this.config = t), (this.readOnly = e));
        }
        renderWrapper(e) {
            let t;
            return (
                !0 === e
                    ? ((t = fh.make('ul', [Cp.CSS.wrapper, Cp.CSS.checklist])),
                      t.addEventListener('click', (e) => {
                          const t = e.target;
                          if (t) {
                              const e = t.closest(
                                  `.${Cp.CSS.checkboxContainer}`,
                              );
                              e && e.contains(t) && this.toggleCheckbox(e);
                          }
                      }))
                    : (t = fh.make('ul', [
                          Cp.CSS.checklist,
                          Cp.CSS.itemChildren,
                      ])),
                t
            );
        }
        renderItem(e, t) {
            const n = fh.make('li', [Cp.CSS.item, Cp.CSS.item]),
                o = fh.make('div', Cp.CSS.itemContent, {
                    innerHTML: e,
                    contentEditable: (!this.readOnly).toString(),
                }),
                i = fh.make('span', Cp.CSS.checkbox),
                r = fh.make('div', Cp.CSS.checkboxContainer);
            return (
                !0 === t.checked && r.classList.add(Cp.CSS.itemChecked),
                (i.innerHTML =
                    '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M7 12L10.4884 15.8372C10.5677 15.9245 10.705 15.9245 10.7844 15.8372L17 9"/></svg>'),
                r.appendChild(i),
                n.appendChild(r),
                n.appendChild(o),
                n
            );
        }
        getItemContent(e) {
            const t = e.querySelector(`.${Cp.CSS.itemContent}`);
            return !t || fh.isEmpty(t) ? '' : t.innerHTML;
        }
        getItemMeta(e) {
            const t = e.querySelector(`.${Cp.CSS.checkboxContainer}`);
            return { checked: !!t && t.classList.contains(Cp.CSS.itemChecked) };
        }
        composeDefaultMeta() {
            return { checked: !1 };
        }
        toggleCheckbox(e) {
            (e.classList.toggle(Cp.CSS.itemChecked),
                e.classList.add(Cp.CSS.noHover),
                e.addEventListener(
                    'mouseleave',
                    () => this.removeSpecialHoverBehavior(e),
                    { once: !0 },
                ));
        }
        removeSpecialHoverBehavior(e) {
            e.classList.remove(Cp.CSS.noHover);
        }
    }
    function Ep(e, t = 'after') {
        const n = [];
        let o;
        function i(e) {
            switch (t) {
                case 'after':
                    return e.nextElementSibling;
                case 'before':
                    return e.previousElementSibling;
            }
        }
        for (o = i(e); null !== o; ) (n.push(o), (o = i(o)));
        return 0 !== n.length ? n : null;
    }
    function Sp(e, t = !0) {
        let n = e;
        return (
            e.classList.contains(Wu.item) &&
                (n = e.querySelector(`.${Wu.itemChildren}`)),
            null === n
                ? []
                : t
                  ? Array.from(n.querySelectorAll(`:scope > .${Wu.item}`))
                  : Array.from(n.querySelectorAll(`.${Wu.item}`))
        );
    }
    function Tp(e) {
        return e.querySelector(`.${Wu.itemChildren}`);
    }
    function _p(e) {
        let t = e;
        (e.classList.contains(Wu.item) && (t = Tp(e)),
            null !== t && 0 === Sp(t).length && t.remove());
    }
    function Bp(e) {
        return e.querySelector(`.${Wu.itemContent}`);
    }
    function Op(e, t = !0) {
        const n = Bp(e);
        n && Ku.focus(n, t);
    }
    class Ip {
        get currentItem() {
            const e = window.getSelection();
            if (!e) return null;
            let t = e.anchorNode;
            return t && (Gu(t) || (t = t.parentNode), t) && Gu(t)
                ? t.closest(`.${Wu.item}`)
                : null;
        }
        get currentItemLevel() {
            const e = this.currentItem;
            if (null === e) return null;
            let t = e.parentNode,
                n = 0;
            for (; null !== t && t !== this.listWrapper; )
                (Gu(t) && t.classList.contains(Wu.item) && (n += 1),
                    (t = t.parentNode));
            return n + 1;
        }
        constructor({ data: e, config: t, api: n, readOnly: o, block: i }, r) {
            ((this.config = t),
                (this.data = e),
                (this.readOnly = o),
                (this.api = n),
                (this.block = i),
                (this.renderer = r));
        }
        render() {
            return (
                (this.listWrapper = this.renderer.renderWrapper(!0)),
                this.data.items.length
                    ? this.appendItems(this.data.items, this.listWrapper)
                    : this.appendItems(
                          [{ content: '', meta: {}, items: [] }],
                          this.listWrapper,
                      ),
                this.readOnly ||
                    this.listWrapper.addEventListener(
                        'keydown',
                        (e) => {
                            switch (e.key) {
                                case 'Enter':
                                    this.enterPressed(e);
                                    break;
                                case 'Backspace':
                                    this.backspace(e);
                                    break;
                                case 'Tab':
                                    e.shiftKey
                                        ? this.shiftTab(e)
                                        : this.addTab(e);
                            }
                        },
                        !1,
                    ),
                'start' in this.data.meta &&
                    void 0 !== this.data.meta.start &&
                    this.changeStartWith(this.data.meta.start),
                'counterType' in this.data.meta &&
                    void 0 !== this.data.meta.counterType &&
                    this.changeCounters(this.data.meta.counterType),
                this.listWrapper
            );
        }
        save(e) {
            const t = e ?? this.listWrapper,
                n = (e) =>
                    Sp(e).map((e) => {
                        const t = Tp(e);
                        return {
                            content: this.renderer.getItemContent(e),
                            meta: this.renderer.getItemMeta(e),
                            items: t ? n(t) : [],
                        };
                    }),
                o = t ? n(t) : [];
            let i = { style: this.data.style, meta: {}, items: o };
            return (
                'ordered' === this.data.style &&
                    (i.meta = {
                        start: this.data.meta.start,
                        counterType: this.data.meta.counterType,
                    }),
                i
            );
        }
        static get pasteConfig() {
            return { tags: ['OL', 'UL', 'LI'] };
        }
        merge(e) {
            const t = this.block.holder.querySelectorAll(`.${Wu.item}`),
                n = t[t.length - 1],
                o = Bp(n);
            if (
                null === n ||
                null === o ||
                (o.insertAdjacentHTML('beforeend', e.items[0].content),
                void 0 === this.listWrapper)
            )
                return;
            const i = Sp(this.listWrapper);
            if (0 === i.length) return;
            let r = Tp(i[i.length - 1]);
            const s = e.items.shift();
            void 0 !== s &&
                (0 !== s.items.length &&
                    (null === r && (r = this.renderer.renderWrapper(!1)),
                    this.appendItems(s.items, r)),
                e.items.length > 0 &&
                    this.appendItems(e.items, this.listWrapper));
        }
        onPaste(e) {
            const t = e.detail.data;
            this.data = this.pasteHandler(t);
            const n = this.listWrapper;
            n && n.parentNode && n.parentNode.replaceChild(this.render(), n);
        }
        pasteHandler(e) {
            const { tagName: t } = e;
            let n,
                o = 'unordered';
            switch (t) {
                case 'OL':
                    ((o = 'ordered'), (n = 'ol'));
                    break;
                case 'UL':
                case 'LI':
                    ((o = 'unordered'), (n = 'ul'));
            }
            const i = { style: o, meta: {}, items: [] };
            'ordered' === o &&
                ((this.data.meta.counterType = 'numeric'),
                (this.data.meta.start = 1));
            const r = (e) =>
                Array.from(e.querySelectorAll(':scope > li')).map((e) => {
                    const t = e.querySelector(`:scope > ${n}`),
                        o = t ? r(t) : [];
                    return { content: e.innerHTML ?? '', meta: {}, items: o };
                });
            return ((i.items = r(e)), i);
        }
        changeStartWith(e) {
            (this.listWrapper.style.setProperty(
                'counter-reset',
                'item ' + (e - 1),
            ),
                (this.data.meta.start = e));
        }
        changeCounters(e) {
            (this.listWrapper.style.setProperty('--list-counter-type', e),
                (this.data.meta.counterType = e));
        }
        enterPressed(e) {
            var t;
            const n = this.currentItem;
            if (
                (e.stopPropagation(),
                e.preventDefault(),
                e.isComposing || null === n)
            )
                return;
            const o =
                    0 ===
                    (null == (t = this.renderer)
                        ? void 0
                        : t.getItemContent(n).trim().length),
                i = n.parentNode === this.listWrapper,
                r = null === n.previousElementSibling,
                s = this.api.blocks.getCurrentBlockIndex();
            if (i && o)
                return null !== n.nextElementSibling ||
                    (function (e) {
                        return null !== e.querySelector(`.${Wu.itemChildren}`);
                    })(n)
                    ? void this.splitList(n)
                    : void (r
                          ? this.convertItemToDefaultBlock(s, !0)
                          : this.convertItemToDefaultBlock());
            o ? this.unshiftItem(n) : this.splitItem(n);
        }
        backspace(e) {
            var t;
            const n = this.currentItem;
            if (
                null !== n &&
                Ku.isCaretAtStartOfInput(n) &&
                !1 !==
                    (null == (t = window.getSelection())
                        ? void 0
                        : t.isCollapsed)
            ) {
                if (
                    (e.stopPropagation(),
                    n.parentNode === this.listWrapper &&
                        null === n.previousElementSibling)
                )
                    return void this.convertFirstItemToDefaultBlock();
                (e.preventDefault(), this.mergeItemWithPrevious(n));
            }
        }
        shiftTab(e) {
            (e.stopPropagation(),
                e.preventDefault(),
                null !== this.currentItem &&
                    this.unshiftItem(this.currentItem));
        }
        unshiftItem(e) {
            if (!e.parentNode || !Gu(e.parentNode)) return;
            const t = e.parentNode.closest(`.${Wu.item}`);
            if (!t) return;
            let n = Tp(e);
            if (null === e.parentElement) return;
            const o = Ep(e);
            (null !== o &&
                (null === n && (n = this.renderer.renderWrapper(!1)),
                o.forEach((e) => {
                    n.appendChild(e);
                }),
                e.appendChild(n)),
                t.after(e),
                Op(e, !1),
                _p(t));
        }
        splitList(e) {
            const t = Sp(e),
                n = this.block,
                o = this.api.blocks.getCurrentBlockIndex();
            if (0 !== t.length) {
                const n = t[0];
                (this.unshiftItem(n), Op(e, !1));
            }
            if (
                null === e.previousElementSibling &&
                e.parentNode === this.listWrapper
            )
                return void this.convertItemToDefaultBlock(o);
            const i = Ep(e);
            if (null === i) return;
            const r = this.renderer.renderWrapper(!0);
            i.forEach((e) => {
                r.appendChild(e);
            });
            const s = this.save(r);
            ((s.meta.start = 'ordered' == this.data.style ? 1 : void 0),
                this.api.blocks.insert(
                    null == n ? void 0 : n.name,
                    s,
                    this.config,
                    o + 1,
                ),
                this.convertItemToDefaultBlock(o + 1),
                r.remove());
        }
        splitItem(e) {
            const [t, n] = Ku.getCaretNodeAndOffset();
            if (null === t) return;
            const o = Bp(e);
            let i;
            i =
                null === o
                    ? ''
                    : Ku.getContenteditableSlice(o, t, n, 'right', !0);
            const r = Tp(e),
                s = this.renderItem(i);
            (null == e || e.after(s), r && s.appendChild(r), Op(s));
        }
        mergeItemWithPrevious(e) {
            const t = e.previousElementSibling,
                n = e.parentNode;
            if (null === n || !Gu(n)) return;
            const o = n.closest(`.${Wu.item}`);
            if ((!t && !o) || (t && !Gu(t))) return;
            let i;
            if (t) {
                const e = Sp(t, !1);
                i = 0 !== e.length && 0 !== e.length ? e[e.length - 1] : t;
            } else i = o;
            const r = this.renderer.getItemContent(e);
            if (!i) return;
            Op(i, !1);
            const s = Bp(i);
            if (null === s) return;
            s.insertAdjacentHTML('beforeend', r);
            const a = Sp(e);
            if (0 === a.length) return (e.remove(), void _p(i));
            const l = t || o,
                c = Tp(l) ?? this.renderer.renderWrapper(!1);
            (t
                ? a.forEach((e) => {
                      c.appendChild(e);
                  })
                : a.forEach((e) => {
                      c.prepend(e);
                  }),
                null === Tp(l) && i.appendChild(c),
                e.remove());
        }
        addTab(e) {
            var t;
            (e.stopPropagation(), e.preventDefault());
            const n = this.currentItem;
            if (!n) return;
            if (void 0 !== (null == (t = this.config) ? void 0 : t.maxLevel)) {
                const e = this.currentItemLevel;
                if (null !== e && e === this.config.maxLevel) return;
            }
            const o = n.previousSibling;
            if (null === o || !Gu(o)) return;
            const i = Tp(o);
            if (i)
                (i.appendChild(n),
                    Sp(n).forEach((e) => {
                        i.appendChild(e);
                    }));
            else {
                const e = this.renderer.renderWrapper(!1);
                (e.appendChild(n),
                    Sp(n).forEach((t) => {
                        e.appendChild(t);
                    }),
                    o.appendChild(e));
            }
            (_p(n), Op(n, !1));
        }
        convertItemToDefaultBlock(e, t) {
            let n;
            const o = this.currentItem,
                i = null !== o ? this.renderer.getItemContent(o) : '';
            (!0 === t && this.api.blocks.delete(),
                (n =
                    void 0 !== e
                        ? this.api.blocks.insert(void 0, { text: i }, void 0, e)
                        : this.api.blocks.insert()),
                null == o || o.remove(),
                this.api.caret.setToBlock(n, 'start'));
        }
        convertFirstItemToDefaultBlock() {
            const e = this.currentItem;
            if (null === e) return;
            const t = Sp(e);
            if (0 !== t.length) {
                const n = t[0];
                (this.unshiftItem(n), Op(e));
            }
            const n = Ep(e),
                o = this.api.blocks.getCurrentBlockIndex(),
                i = null === n;
            this.convertItemToDefaultBlock(o, i);
        }
        renderItem(e, t) {
            const n = t ?? this.renderer.composeDefaultMeta();
            switch (!0) {
                case this.renderer instanceof qu:
                case this.renderer instanceof Vu:
            }
            return this.renderer.renderItem(e, n);
        }
        appendItems(e, t) {
            e.forEach((e) => {
                var n;
                const o = this.renderItem(e.content, e.meta);
                if ((t.appendChild(o), e.items.length)) {
                    const t =
                        null == (n = this.renderer)
                            ? void 0
                            : n.renderWrapper(!1);
                    (this.appendItems(e.items, t), o.appendChild(t));
                }
            });
        }
    }
    const Lp = {
        wrapper: `${Uu}-start-with-field`,
        input: `${Uu}-start-with-field__input`,
        startWithElementWrapperInvalid: `${Uu}-start-with-field--invalid`,
    };
    const Ap = new Map([
            ['Numeric', 'numeric'],
            ['Lower Roman', 'lower-roman'],
            ['Upper Roman', 'upper-roman'],
            ['Lower Alpha', 'lower-alpha'],
            ['Upper Alpha', 'upper-alpha'],
        ]),
        Pp = new Map([
            [
                'numeric',
                '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M10 14.2L10 7.4135C10 7.32872 9.90111 7.28241 9.83598 7.33668L7 9.7" stroke="black" stroke-width="1.6" stroke-linecap="round"/><path d="M13.2087 14.2H13.2" stroke="black" stroke-width="1.6" stroke-linecap="round"/></svg>',
            ],
            [
                'lower-roman',
                '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13.2087 14.2H13.2" stroke="black" stroke-width="1.6" stroke-linecap="round"/><path d="M10 14.2L10 9.5" stroke="black" stroke-width="1.6" stroke-linecap="round"/><path d="M10 7.01L10 7" stroke="black" stroke-width="1.8" stroke-linecap="round"/></svg>',
            ],
            [
                'upper-roman',
                '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13.2087 14.2H13.2" stroke="black" stroke-width="1.6" stroke-linecap="round"/><path d="M10 14.2L10 7.2" stroke="black" stroke-width="1.6" stroke-linecap="round"/></svg>',
            ],
            [
                'lower-alpha',
                '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M14.2087 14.2H14.2" stroke="black" stroke-width="1.6" stroke-linecap="round"/><path d="M11.5 14.5C11.5 14.5 11 13.281 11 12.5M7 9.5C7 9.5 7.5 8.5 9 8.5C10.5 8.5 11 9.5 11 10.5L11 11.5M11 11.5L11 12.5M11 11.5C11 11.5 7 11 7 13C7 15.3031 11 15 11 12.5" stroke="black" stroke-width="1.6" stroke-linecap="round"/></svg>',
            ],
            [
                'upper-alpha',
                '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M16.0087 14.2H16" stroke="black" stroke-width="1.6" stroke-linecap="round"/><path d="M7 14.2L7.78865 12M13 14.2L12.1377 12M7.78865 12C7.78865 12 9.68362 7 10 7C10.3065 7 12.1377 12 12.1377 12M7.78865 12L12.1377 12" stroke="black" stroke-width="1.6" stroke-linecap="round"/></svg>',
            ],
        ]);
    class Mp {
        static get isReadOnlySupported() {
            return !0;
        }
        static get enableLineBreaks() {
            return !0;
        }
        static get toolbox() {
            return [
                {
                    icon: dh,
                    title: 'Unordered List',
                    data: { style: 'unordered' },
                },
                { icon: hh, title: 'Ordered List', data: { style: 'ordered' } },
                { icon: ch, title: 'Checklist', data: { style: 'checklist' } },
            ];
        }
        static get pasteConfig() {
            return { tags: ['OL', 'UL', 'LI'] };
        }
        static get conversionConfig() {
            return {
                export: (e) => Mp.joinRecursive(e),
                import: (e, t) => ({
                    meta: {},
                    items: [{ content: e, meta: {}, items: [] }],
                    style:
                        void 0 !== (null == t ? void 0 : t.defaultStyle)
                            ? t.defaultStyle
                            : 'unordered',
                }),
            };
        }
        get listStyle() {
            return this.data.style || this.defaultListStyle;
        }
        set listStyle(e) {
            var t;
            ((this.data.style = e), this.changeTabulatorByStyle());
            const n = this.list.render();
            (null == (t = this.listElement) || t.replaceWith(n),
                (this.listElement = n));
        }
        constructor({ data: e, config: t, api: n, readOnly: o, block: i }) {
            var r;
            ((this.api = n),
                (this.readOnly = o),
                (this.config = t),
                (this.block = i),
                (this.defaultListStyle =
                    (null == (r = this.config) ? void 0 : r.defaultStyle) ||
                    'unordered'));
            const s = { style: this.defaultListStyle, meta: {}, items: [] };
            ((this.data = Object.keys(e).length
                ? (function (e) {
                      const t = [];
                      return (function (e) {
                          return 'string' == typeof e.items[0];
                      })(e)
                          ? (e.items.forEach((e) => {
                                t.push({ content: e, meta: {}, items: [] });
                            }),
                            { style: e.style, meta: {}, items: t })
                          : (function (e) {
                                  return (
                                      'string' != typeof e.items[0] &&
                                      'text' in e.items[0] &&
                                      'checked' in e.items[0] &&
                                      'string' == typeof e.items[0].text &&
                                      'boolean' == typeof e.items[0].checked
                                  );
                              })(e)
                            ? (e.items.forEach((e) => {
                                  t.push({
                                      content: e.text,
                                      meta: { checked: e.checked },
                                      items: [],
                                  });
                              }),
                              { style: 'checklist', meta: {}, items: t })
                            : (function (e) {
                                    return !('meta' in e);
                                })(e)
                              ? { style: e.style, meta: {}, items: e.items }
                              : e;
                  })(e)
                : s),
                'ordered' === this.listStyle &&
                    void 0 === this.data.meta.counterType &&
                    (this.data.meta.counterType = 'numeric'),
                this.changeTabulatorByStyle());
        }
        static joinRecursive(e) {
            return e.items
                .map((e) => `${e.content} ${Mp.joinRecursive(e)}`)
                .join('');
        }
        render() {
            return ((this.listElement = this.list.render()), this.listElement);
        }
        save() {
            return ((this.data = this.list.save()), this.data);
        }
        merge(e) {
            this.list.merge(e);
        }
        renderSettings() {
            const e = [
                {
                    label: this.api.i18n.t('Unordered'),
                    icon: dh,
                    closeOnActivate: !0,
                    isActive: 'unordered' == this.listStyle,
                    onActivate: () => {
                        this.listStyle = 'unordered';
                    },
                },
                {
                    label: this.api.i18n.t('Ordered'),
                    icon: hh,
                    closeOnActivate: !0,
                    isActive: 'ordered' == this.listStyle,
                    onActivate: () => {
                        this.listStyle = 'ordered';
                    },
                },
                {
                    label: this.api.i18n.t('Checklist'),
                    icon: ch,
                    closeOnActivate: !0,
                    isActive: 'checklist' == this.listStyle,
                    onActivate: () => {
                        this.listStyle = 'checklist';
                    },
                },
            ];
            if ('ordered' === this.listStyle) {
                const t = (function (
                        e,
                        {
                            value: t,
                            placeholder: n,
                            attributes: o,
                            sanitize: i,
                        },
                    ) {
                        const r = fh.make('div', Lp.wrapper),
                            s = fh.make('input', Lp.input, {
                                placeholder: n,
                                tabIndex: -1,
                                value: t,
                            });
                        for (const e in o) s.setAttribute(e, o[e]);
                        return (
                            r.appendChild(s),
                            s.addEventListener('input', () => {
                                void 0 !== i && (s.value = i(s.value));
                                const t = s.checkValidity();
                                (!t &&
                                    !r.classList.contains(
                                        Lp.startWithElementWrapperInvalid,
                                    ) &&
                                    r.classList.add(
                                        Lp.startWithElementWrapperInvalid,
                                    ),
                                    t &&
                                        r.classList.contains(
                                            Lp.startWithElementWrapperInvalid,
                                        ) &&
                                        r.classList.remove(
                                            Lp.startWithElementWrapperInvalid,
                                        ),
                                    t && e(s.value));
                            }),
                            r
                        );
                    })((e) => this.changeStartWith(Number(e)), {
                        value: String(this.data.meta.start ?? 1),
                        placeholder: '',
                        attributes: { required: 'true' },
                        sanitize: (e) => e.replace(/\D+/g, ''),
                    }),
                    n = [
                        {
                            label: this.api.i18n.t('Start with'),
                            icon: '<svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8 14.2L8 7.4135C8 7.32872 7.90111 7.28241 7.83598 7.33668L5 9.7" stroke="black" stroke-width="1.6" stroke-linecap="round"/><path d="M14 13L16.4167 10.7778M16.4167 10.7778L14 8.5M16.4167 10.7778H11.6562" stroke="black" stroke-width="1.6" stroke-linecap="round" stroke-linejoin="round"/></svg>',
                            children: { items: [{ element: t, type: 'html' }] },
                        },
                    ],
                    o = {
                        label: this.api.i18n.t('Counter type'),
                        icon: Pp.get(this.data.meta.counterType),
                        children: { items: [] },
                    };
                (Ap.forEach((e, t) => {
                    o.children.items.push({
                        title: this.api.i18n.t(t),
                        icon: Pp.get(Ap.get(t)),
                        isActive: this.data.meta.counterType === Ap.get(t),
                        closeOnActivate: !0,
                        onActivate: () => {
                            this.changeCounters(Ap.get(t));
                        },
                    });
                }),
                    e.push({ type: 'separator' }, ...n, o));
            }
            return e;
        }
        onPaste(e) {
            const { tagName: t } = e.detail.data;
            switch (t) {
                case 'OL':
                    this.listStyle = 'ordered';
                    break;
                case 'UL':
                case 'LI':
                    this.listStyle = 'unordered';
            }
            this.list.onPaste(e);
        }
        pasteHandler(e) {
            return this.list.pasteHandler(e);
        }
        changeCounters(e) {
            var t;
            (null == (t = this.list) || t.changeCounters(e),
                (this.data.meta.counterType = e));
        }
        changeStartWith(e) {
            var t;
            (null == (t = this.list) || t.changeStartWith(e),
                (this.data.meta.start = e));
        }
        changeTabulatorByStyle() {
            switch (this.listStyle) {
                case 'ordered':
                    this.list = new Ip(
                        {
                            data: this.data,
                            readOnly: this.readOnly,
                            api: this.api,
                            config: this.config,
                            block: this.block,
                        },
                        new qu(this.readOnly, this.config),
                    );
                    break;
                case 'unordered':
                    this.list = new Ip(
                        {
                            data: this.data,
                            readOnly: this.readOnly,
                            api: this.api,
                            config: this.config,
                            block: this.block,
                        },
                        new Vu(this.readOnly, this.config),
                    );
                    break;
                case 'checklist':
                    this.list = new Ip(
                        {
                            data: this.data,
                            readOnly: this.readOnly,
                            api: this.api,
                            config: this.config,
                            block: this.block,
                        },
                        new Cp(this.readOnly, this.config),
                    );
            }
        }
    }
    function Np(e) {
        return e &&
            e.__esModule &&
            Object.prototype.hasOwnProperty.call(e, 'default')
            ? e.default
            : e;
    }
    var $p = {},
        Rp = {
            get exports() {
                return $p;
            },
            set exports(e) {
                $p = e;
            },
        };
    (self,
        (Rp.exports = (function () {
            var e = {
                    966: function (e, t, n) {
                        function o(e, t) {
                            for (var n = 0; n < t.length; n++) {
                                var o = t[n];
                                ((o.enumerable = o.enumerable || !1),
                                    (o.configurable = !0),
                                    'value' in o && (o.writable = !0),
                                    Object.defineProperty(e, o.key, o));
                            }
                        }
                        n(548).toString();
                        var i = n(630).make,
                            r = (function () {
                                function e(t) {
                                    var n = t.api,
                                        o = t.data,
                                        i = t.config,
                                        r = t.block;
                                    (!(function (e, t) {
                                        if (!(e instanceof t))
                                            throw new TypeError(
                                                'Cannot call a class as a function',
                                            );
                                    })(this, e),
                                        (this.api = n),
                                        (this.block = r),
                                        (this.settings = i),
                                        (this.data = o || {
                                            alignment: this.getAlignment(),
                                        }),
                                        (this.alignmentSettings = [
                                            {
                                                name: 'left',
                                                icon: '<svg xmlns="http://www.w3.org/2000/svg" id="Layer" enable-background="new 0 0 64 64" height="20" viewBox="0 0 64 64" width="20"><path d="m54 8h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m54 52h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m10 23h28c1.104 0 2-.896 2-2s-.896-2-2-2h-28c-1.104 0-2 .896-2 2s.896 2 2 2z"/><path d="m54 30h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m10 45h28c1.104 0 2-.896 2-2s-.896-2-2-2h-28c-1.104 0-2 .896-2 2s.896 2 2 2z"/></svg>',
                                            },
                                            {
                                                name: 'center',
                                                icon: '<svg xmlns="http://www.w3.org/2000/svg" id="Layer" enable-background="new 0 0 64 64" height="20" viewBox="0 0 64 64" width="20"><path d="m54 8h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m54 52h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m46 23c1.104 0 2-.896 2-2s-.896-2-2-2h-28c-1.104 0-2 .896-2 2s.896 2 2 2z"/><path d="m54 30h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m46 45c1.104 0 2-.896 2-2s-.896-2-2-2h-28c-1.104 0-2 .896-2 2s.896 2 2 2z"/></svg>',
                                            },
                                            {
                                                name: 'right',
                                                icon: '<svg xmlns="http://www.w3.org/2000/svg" id="Layer" enable-background="new 0 0 64 64" height="20" viewBox="0 0 64 64" width="20"><path d="m54 8h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m54 52h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m54 19h-28c-1.104 0-2 .896-2 2s.896 2 2 2h28c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m54 30h-44c-1.104 0-2 .896-2 2s.896 2 2 2h44c1.104 0 2-.896 2-2s-.896-2-2-2z"/><path d="m54 41h-28c-1.104 0-2 .896-2 2s.896 2 2 2h28c1.104 0 2-.896 2-2s-.896-2-2-2z"/></svg>',
                                            },
                                        ]),
                                        (this._CSS = {
                                            alignment: {
                                                left: 'ce-tune-alignment--left',
                                                center: 'ce-tune-alignment--center',
                                                right: 'ce-tune-alignment--right',
                                            },
                                        }));
                                }
                                var t, n, r;
                                return (
                                    (t = e),
                                    (r = [
                                        {
                                            key: 'DEFAULT_ALIGNMENT',
                                            get: function () {
                                                return 'left';
                                            },
                                        },
                                        {
                                            key: 'isTune',
                                            get: function () {
                                                return !0;
                                            },
                                        },
                                    ]),
                                    (n = [
                                        {
                                            key: 'getAlignment',
                                            value: function () {
                                                var t, n;
                                                return null !==
                                                    (t = this.settings) &&
                                                    void 0 !== t &&
                                                    t.blocks &&
                                                    this.settings.blocks.hasOwnProperty(
                                                        this.block.name,
                                                    )
                                                    ? this.settings.blocks[
                                                          this.block.name
                                                      ]
                                                    : null !==
                                                            (n =
                                                                this
                                                                    .settings) &&
                                                        void 0 !== n &&
                                                        n.default
                                                      ? this.settings.default
                                                      : e.DEFAULT_ALIGNMENT;
                                            },
                                        },
                                        {
                                            key: 'wrap',
                                            value: function (e) {
                                                return (
                                                    (this.wrapper = i('div')),
                                                    this.wrapper.classList.toggle(
                                                        this._CSS.alignment[
                                                            this.data.alignment
                                                        ],
                                                    ),
                                                    this.wrapper.append(e),
                                                    this.wrapper
                                                );
                                            },
                                        },
                                        {
                                            key: 'render',
                                            value: function () {
                                                var e = this,
                                                    t = i('div');
                                                return (
                                                    this.alignmentSettings
                                                        .map(function (n) {
                                                            var o =
                                                                document.createElement(
                                                                    'button',
                                                                );
                                                            return (
                                                                o.classList.add(
                                                                    e.api.styles
                                                                        .settingsButton,
                                                                ),
                                                                (o.innerHTML =
                                                                    n.icon),
                                                                (o.type =
                                                                    'button'),
                                                                o.classList.toggle(
                                                                    e.api.styles
                                                                        .settingsButtonActive,
                                                                    n.name ===
                                                                        e.data
                                                                            .alignment,
                                                                ),
                                                                t.appendChild(
                                                                    o,
                                                                ),
                                                                o
                                                            );
                                                        })
                                                        .forEach(
                                                            function (t, n, o) {
                                                                t.addEventListener(
                                                                    'click',
                                                                    function () {
                                                                        ((e.data =
                                                                            {
                                                                                alignment:
                                                                                    e
                                                                                        .alignmentSettings[
                                                                                        n
                                                                                    ]
                                                                                        .name,
                                                                            }),
                                                                            o.forEach(
                                                                                function (
                                                                                    t,
                                                                                    n,
                                                                                ) {
                                                                                    var o =
                                                                                        e
                                                                                            .alignmentSettings[
                                                                                            n
                                                                                        ]
                                                                                            .name;
                                                                                    (t.classList.toggle(
                                                                                        e
                                                                                            .api
                                                                                            .styles
                                                                                            .settingsButtonActive,
                                                                                        o ===
                                                                                            e
                                                                                                .data
                                                                                                .alignment,
                                                                                    ),
                                                                                        e.wrapper.classList.toggle(
                                                                                            e
                                                                                                ._CSS
                                                                                                .alignment[
                                                                                                o
                                                                                            ],
                                                                                            o ===
                                                                                                e
                                                                                                    .data
                                                                                                    .alignment,
                                                                                        ));
                                                                                },
                                                                            ));
                                                                    },
                                                                );
                                                            },
                                                        ),
                                                    t
                                                );
                                            },
                                        },
                                        {
                                            key: 'save',
                                            value: function () {
                                                return this.data;
                                            },
                                        },
                                    ]) && o(t.prototype, n),
                                    r && o(t, r),
                                    e
                                );
                            })();
                        e.exports = r;
                    },
                    630: function (e, t, n) {
                        function o(e) {
                            return (
                                (function (e) {
                                    if (Array.isArray(e)) return i(e);
                                })(e) ||
                                (function (e) {
                                    if (
                                        'undefined' != typeof Symbol &&
                                        Symbol.iterator in Object(e)
                                    )
                                        return Array.from(e);
                                })(e) ||
                                (function (e, t) {
                                    if (e) {
                                        if ('string' == typeof e)
                                            return i(e, t);
                                        var n = Object.prototype.toString
                                            .call(e)
                                            .slice(8, -1);
                                        return (
                                            'Object' === n &&
                                                e.constructor &&
                                                (n = e.constructor.name),
                                            'Map' === n || 'Set' === n
                                                ? Array.from(e)
                                                : 'Arguments' === n ||
                                                    /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(
                                                        n,
                                                    )
                                                  ? i(e, t)
                                                  : void 0
                                        );
                                    }
                                })(e) ||
                                (function () {
                                    throw new TypeError(
                                        'Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.',
                                    );
                                })()
                            );
                        }
                        function i(e, t) {
                            (null == t || t > e.length) && (t = e.length);
                            for (var n = 0, o = new Array(t); n < t; n++)
                                o[n] = e[n];
                            return o;
                        }
                        function r(e) {
                            var t,
                                n =
                                    arguments.length > 1 &&
                                    void 0 !== arguments[1]
                                        ? arguments[1]
                                        : null,
                                i =
                                    arguments.length > 2 &&
                                    void 0 !== arguments[2]
                                        ? arguments[2]
                                        : {},
                                r = document.createElement(e);
                            for (var s in (Array.isArray(n)
                                ? (t = r.classList).add.apply(t, o(n))
                                : n && r.classList.add(n),
                            i))
                                r[s] = i[s];
                            return r;
                        }
                        (n.r(t),
                            n.d(t, {
                                make: function () {
                                    return r;
                                },
                            }));
                    },
                    424: function (e, t, n) {
                        var o = n(645),
                            i = n.n(o)()(function (e) {
                                return e[1];
                            });
                        (i.push([
                            e.id,
                            '.ce-tune-alignment--right {\n    text-align: right;\n}\n.ce-tune-alignment--center {\n    text-align: center;\n}\n.ce-tune-alignment--left {\n    text-align: left;\n}',
                            '',
                        ]),
                            (t.Z = i));
                    },
                    645: function (e) {
                        e.exports = function (e) {
                            var t = [];
                            return (
                                (t.toString = function () {
                                    return this.map(function (t) {
                                        var n = e(t);
                                        return t[2]
                                            ? '@media '
                                                  .concat(t[2], ' {')
                                                  .concat(n, '}')
                                            : n;
                                    }).join('');
                                }),
                                (t.i = function (e, n, o) {
                                    'string' == typeof e &&
                                        (e = [[null, e, '']]);
                                    var i = {};
                                    if (o)
                                        for (var r = 0; r < this.length; r++) {
                                            var s = this[r][0];
                                            null != s && (i[s] = !0);
                                        }
                                    for (var a = 0; a < e.length; a++) {
                                        var l = [].concat(e[a]);
                                        (o && i[l[0]]) ||
                                            (n &&
                                                (l[2]
                                                    ? (l[2] = ''
                                                          .concat(n, ' and ')
                                                          .concat(l[2]))
                                                    : (l[2] = n)),
                                            t.push(l));
                                    }
                                }),
                                t
                            );
                        };
                    },
                    548: function (e, t, n) {
                        var o = n(379),
                            i = n.n(o),
                            r = n(424);
                        (i()(r.Z, { insert: 'head', singleton: !1 }),
                            r.Z.locals);
                    },
                    379: function (e, t, n) {
                        var o,
                            i = (function () {
                                var e = {};
                                return function (t) {
                                    if (void 0 === e[t]) {
                                        var n = document.querySelector(t);
                                        if (
                                            window.HTMLIFrameElement &&
                                            n instanceof
                                                window.HTMLIFrameElement
                                        )
                                            try {
                                                n = n.contentDocument.head;
                                            } catch (e) {
                                                n = null;
                                            }
                                        e[t] = n;
                                    }
                                    return e[t];
                                };
                            })(),
                            r = [];
                        function s(e) {
                            for (var t = -1, n = 0; n < r.length; n++)
                                if (r[n].identifier === e) {
                                    t = n;
                                    break;
                                }
                            return t;
                        }
                        function a(e, t) {
                            for (var n = {}, o = [], i = 0; i < e.length; i++) {
                                var a = e[i],
                                    l = t.base ? a[0] + t.base : a[0],
                                    c = n[l] || 0,
                                    d = ''.concat(l, ' ').concat(c);
                                n[l] = c + 1;
                                var h = s(d),
                                    u = {
                                        css: a[1],
                                        media: a[2],
                                        sourceMap: a[3],
                                    };
                                (-1 !== h
                                    ? (r[h].references++, r[h].updater(u))
                                    : r.push({
                                          identifier: d,
                                          updater: g(u, t),
                                          references: 1,
                                      }),
                                    o.push(d));
                            }
                            return o;
                        }
                        function l(e) {
                            var t = document.createElement('style'),
                                o = e.attributes || {};
                            if (void 0 === o.nonce) {
                                var r = n.nc;
                                r && (o.nonce = r);
                            }
                            if (
                                (Object.keys(o).forEach(function (e) {
                                    t.setAttribute(e, o[e]);
                                }),
                                'function' == typeof e.insert)
                            )
                                e.insert(t);
                            else {
                                var s = i(e.insert || 'head');
                                if (!s)
                                    throw new Error(
                                        "Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.",
                                    );
                                s.appendChild(t);
                            }
                            return t;
                        }
                        var c,
                            d =
                                ((c = []),
                                function (e, t) {
                                    return (
                                        (c[e] = t),
                                        c.filter(Boolean).join('\n')
                                    );
                                });
                        function h(e, t, n, o) {
                            var i = n
                                ? ''
                                : o.media
                                  ? '@media '
                                        .concat(o.media, ' {')
                                        .concat(o.css, '}')
                                  : o.css;
                            if (e.styleSheet) e.styleSheet.cssText = d(t, i);
                            else {
                                var r = document.createTextNode(i),
                                    s = e.childNodes;
                                (s[t] && e.removeChild(s[t]),
                                    s.length
                                        ? e.insertBefore(r, s[t])
                                        : e.appendChild(r));
                            }
                        }
                        function u(e, t, n) {
                            var o = n.css,
                                i = n.media,
                                r = n.sourceMap;
                            if (
                                (i
                                    ? e.setAttribute('media', i)
                                    : e.removeAttribute('media'),
                                r &&
                                    'undefined' != typeof btoa &&
                                    (o +=
                                        '\n/*# sourceMappingURL=data:application/json;base64,'.concat(
                                            btoa(
                                                unescape(
                                                    encodeURIComponent(
                                                        JSON.stringify(r),
                                                    ),
                                                ),
                                            ),
                                            ' */',
                                        )),
                                e.styleSheet)
                            )
                                e.styleSheet.cssText = o;
                            else {
                                for (; e.firstChild; )
                                    e.removeChild(e.firstChild);
                                e.appendChild(document.createTextNode(o));
                            }
                        }
                        var p = null,
                            f = 0;
                        function g(e, t) {
                            var n, o, i;
                            if (t.singleton) {
                                var r = f++;
                                ((n = p || (p = l(t))),
                                    (o = h.bind(null, n, r, !1)),
                                    (i = h.bind(null, n, r, !0)));
                            } else
                                ((n = l(t)),
                                    (o = u.bind(null, n, t)),
                                    (i = function () {
                                        !(function (e) {
                                            if (null === e.parentNode)
                                                return !1;
                                            e.parentNode.removeChild(e);
                                        })(n);
                                    }));
                            return (
                                o(e),
                                function (t) {
                                    if (t) {
                                        if (
                                            t.css === e.css &&
                                            t.media === e.media &&
                                            t.sourceMap === e.sourceMap
                                        )
                                            return;
                                        o((e = t));
                                    } else i();
                                }
                            );
                        }
                        e.exports = function (e, t) {
                            (t = t || {}).singleton ||
                                'boolean' == typeof t.singleton ||
                                (t.singleton =
                                    (void 0 === o &&
                                        (o = Boolean(
                                            window &&
                                                document &&
                                                document.all &&
                                                !window.atob,
                                        )),
                                    o));
                            var n = a((e = e || []), t);
                            return function (e) {
                                if (
                                    ((e = e || []),
                                    '[object Array]' ===
                                        Object.prototype.toString.call(e))
                                ) {
                                    for (var o = 0; o < n.length; o++) {
                                        var i = s(n[o]);
                                        r[i].references--;
                                    }
                                    for (
                                        var l = a(e, t), c = 0;
                                        c < n.length;
                                        c++
                                    ) {
                                        var d = s(n[c]);
                                        0 === r[d].references &&
                                            (r[d].updater(), r.splice(d, 1));
                                    }
                                    n = l;
                                }
                            };
                        };
                    },
                },
                t = {};
            function n(o) {
                var i = t[o];
                if (void 0 !== i) return i.exports;
                var r = (t[o] = { id: o, exports: {} });
                return (e[o](r, r.exports, n), r.exports);
            }
            return (
                (n.n = function (e) {
                    var t =
                        e && e.__esModule
                            ? function () {
                                  return e.default;
                              }
                            : function () {
                                  return e;
                              };
                    return (n.d(t, { a: t }), t);
                }),
                (n.d = function (e, t) {
                    for (var o in t)
                        n.o(t, o) &&
                            !n.o(e, o) &&
                            Object.defineProperty(e, o, {
                                enumerable: !0,
                                get: t[o],
                            });
                }),
                (n.o = function (e, t) {
                    return Object.prototype.hasOwnProperty.call(e, t);
                }),
                (n.r = function (e) {
                    ('undefined' != typeof Symbol &&
                        Symbol.toStringTag &&
                        Object.defineProperty(e, Symbol.toStringTag, {
                            value: 'Module',
                        }),
                        Object.defineProperty(e, '__esModule', { value: !0 }));
                }),
                n(966)
            );
        })()));
    var jp = Np($p),
        Dp = {},
        Fp = {
            get exports() {
                return Dp;
            },
            set exports(e) {
                Dp = e;
            },
        };
    !(function (e, t) {
        var n;
        (self,
            (n = () =>
                (() => {
                    var e = {
                            208: (e, t, n) => {
                                n.d(t, { A: () => a });
                                var o = n(601),
                                    i = n.n(o),
                                    r = n(314),
                                    s = n.n(r)()(i());
                                s.push([
                                    e.id,
                                    '.cdx-text-variant--call-out .ce-block__content {\n  border: 1px solid rgb(255, 135, 135);\n  padding: 8px 16px;\n  border-radius: 6px;\n  box-shadow: 0 0 0 5px rgba(255, 120, 84, 0.16);\n  margin-top: 0.6em;\n  margin-bottom: 0.6em;\n}\n\n.cdx-text-variant--citation {\n  font-style: italic;\n}\n\n.cdx-text-variant--details {\n  font-size: 0.84em;\n}\n\n.cdx-text-variant__toggler svg {\n  width: 20px;\n  height: 20px;\n}\n',
                                    '',
                                ]);
                                const a = s;
                            },
                            314: (e) => {
                                e.exports = function (e) {
                                    var t = [];
                                    return (
                                        (t.toString = function () {
                                            return this.map(function (t) {
                                                var n = '',
                                                    o = void 0 !== t[5];
                                                return (
                                                    t[4] &&
                                                        (n +=
                                                            '@supports ('.concat(
                                                                t[4],
                                                                ') {',
                                                            )),
                                                    t[2] &&
                                                        (n += '@media '.concat(
                                                            t[2],
                                                            ' {',
                                                        )),
                                                    o &&
                                                        (n += '@layer'.concat(
                                                            t[5].length > 0
                                                                ? ' '.concat(
                                                                      t[5],
                                                                  )
                                                                : '',
                                                            ' {',
                                                        )),
                                                    (n += e(t)),
                                                    o && (n += '}'),
                                                    t[2] && (n += '}'),
                                                    t[4] && (n += '}'),
                                                    n
                                                );
                                            }).join('');
                                        }),
                                        (t.i = function (e, n, o, i, r) {
                                            'string' == typeof e &&
                                                (e = [[null, e, void 0]]);
                                            var s = {};
                                            if (o)
                                                for (
                                                    var a = 0;
                                                    a < this.length;
                                                    a++
                                                ) {
                                                    var l = this[a][0];
                                                    null != l && (s[l] = !0);
                                                }
                                            for (var c = 0; c < e.length; c++) {
                                                var d = [].concat(e[c]);
                                                (o && s[d[0]]) ||
                                                    (void 0 !== r &&
                                                        (void 0 === d[5] ||
                                                            (d[1] = '@layer'
                                                                .concat(
                                                                    d[5]
                                                                        .length >
                                                                        0
                                                                        ? ' '.concat(
                                                                              d[5],
                                                                          )
                                                                        : '',
                                                                    ' {',
                                                                )
                                                                .concat(
                                                                    d[1],
                                                                    '}',
                                                                )),
                                                        (d[5] = r)),
                                                    n &&
                                                        (d[2]
                                                            ? ((d[1] = '@media '
                                                                  .concat(
                                                                      d[2],
                                                                      ' {',
                                                                  )
                                                                  .concat(
                                                                      d[1],
                                                                      '}',
                                                                  )),
                                                              (d[2] = n))
                                                            : (d[2] = n)),
                                                    i &&
                                                        (d[4]
                                                            ? ((d[1] =
                                                                  '@supports ('
                                                                      .concat(
                                                                          d[4],
                                                                          ') {',
                                                                      )
                                                                      .concat(
                                                                          d[1],
                                                                          '}',
                                                                      )),
                                                              (d[4] = i))
                                                            : (d[4] = ''.concat(
                                                                  i,
                                                              ))),
                                                    t.push(d));
                                            }
                                        }),
                                        t
                                    );
                                };
                            },
                            601: (e) => {
                                e.exports = function (e) {
                                    return e[1];
                                };
                            },
                            72: (e) => {
                                var t = [];
                                function n(e) {
                                    for (var n = -1, o = 0; o < t.length; o++)
                                        if (t[o].identifier === e) {
                                            n = o;
                                            break;
                                        }
                                    return n;
                                }
                                function o(e, o) {
                                    for (
                                        var r = {}, s = [], a = 0;
                                        a < e.length;
                                        a++
                                    ) {
                                        var l = e[a],
                                            c = o.base ? l[0] + o.base : l[0],
                                            d = r[c] || 0,
                                            h = ''.concat(c, ' ').concat(d);
                                        r[c] = d + 1;
                                        var u = n(h),
                                            p = {
                                                css: l[1],
                                                media: l[2],
                                                sourceMap: l[3],
                                                supports: l[4],
                                                layer: l[5],
                                            };
                                        if (-1 !== u)
                                            (t[u].references++,
                                                t[u].updater(p));
                                        else {
                                            var f = i(p, o);
                                            ((o.byIndex = a),
                                                t.splice(a, 0, {
                                                    identifier: h,
                                                    updater: f,
                                                    references: 1,
                                                }));
                                        }
                                        s.push(h);
                                    }
                                    return s;
                                }
                                function i(e, t) {
                                    var n = t.domAPI(t);
                                    return (
                                        n.update(e),
                                        function (t) {
                                            if (t) {
                                                if (
                                                    t.css === e.css &&
                                                    t.media === e.media &&
                                                    t.sourceMap ===
                                                        e.sourceMap &&
                                                    t.supports === e.supports &&
                                                    t.layer === e.layer
                                                )
                                                    return;
                                                n.update((e = t));
                                            } else n.remove();
                                        }
                                    );
                                }
                                e.exports = function (e, i) {
                                    var r = o((e = e || []), (i = i || {}));
                                    return function (e) {
                                        e = e || [];
                                        for (var s = 0; s < r.length; s++) {
                                            var a = n(r[s]);
                                            t[a].references--;
                                        }
                                        for (
                                            var l = o(e, i), c = 0;
                                            c < r.length;
                                            c++
                                        ) {
                                            var d = n(r[c]);
                                            0 === t[d].references &&
                                                (t[d].updater(),
                                                t.splice(d, 1));
                                        }
                                        r = l;
                                    };
                                };
                            },
                            659: (e) => {
                                var t = {};
                                e.exports = function (e, n) {
                                    var o = (function (e) {
                                        if (void 0 === t[e]) {
                                            var n = document.querySelector(e);
                                            if (
                                                window.HTMLIFrameElement &&
                                                n instanceof
                                                    window.HTMLIFrameElement
                                            )
                                                try {
                                                    n = n.contentDocument.head;
                                                } catch (e) {
                                                    n = null;
                                                }
                                            t[e] = n;
                                        }
                                        return t[e];
                                    })(e);
                                    if (!o)
                                        throw new Error(
                                            "Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.",
                                        );
                                    o.appendChild(n);
                                };
                            },
                            540: (e) => {
                                e.exports = function (e) {
                                    var t = document.createElement('style');
                                    return (
                                        e.setAttributes(t, e.attributes),
                                        e.insert(t, e.options),
                                        t
                                    );
                                };
                            },
                            56: (e, t, n) => {
                                e.exports = function (e) {
                                    var t = n.nc;
                                    t && e.setAttribute('nonce', t);
                                };
                            },
                            825: (e) => {
                                e.exports = function (e) {
                                    if ('undefined' == typeof document)
                                        return {
                                            update: function () {},
                                            remove: function () {},
                                        };
                                    var t = e.insertStyleElement(e);
                                    return {
                                        update: function (n) {
                                            !(function (e, t, n) {
                                                var o = '';
                                                (n.supports &&
                                                    (o += '@supports ('.concat(
                                                        n.supports,
                                                        ') {',
                                                    )),
                                                    n.media &&
                                                        (o += '@media '.concat(
                                                            n.media,
                                                            ' {',
                                                        )));
                                                var i = void 0 !== n.layer;
                                                (i &&
                                                    (o += '@layer'.concat(
                                                        n.layer.length > 0
                                                            ? ' '.concat(
                                                                  n.layer,
                                                              )
                                                            : '',
                                                        ' {',
                                                    )),
                                                    (o += n.css),
                                                    i && (o += '}'),
                                                    n.media && (o += '}'),
                                                    n.supports && (o += '}'));
                                                var r = n.sourceMap;
                                                (r &&
                                                    'undefined' !=
                                                        typeof btoa &&
                                                    (o +=
                                                        '\n/*# sourceMappingURL=data:application/json;base64,'.concat(
                                                            btoa(
                                                                unescape(
                                                                    encodeURIComponent(
                                                                        JSON.stringify(
                                                                            r,
                                                                        ),
                                                                    ),
                                                                ),
                                                            ),
                                                            ' */',
                                                        )),
                                                    t.styleTagTransform(
                                                        o,
                                                        e,
                                                        t.options,
                                                    ));
                                            })(t, e, n);
                                        },
                                        remove: function () {
                                            !(function (e) {
                                                if (null === e.parentNode)
                                                    return !1;
                                                e.parentNode.removeChild(e);
                                            })(t);
                                        },
                                    };
                                };
                            },
                            113: (e) => {
                                e.exports = function (e, t) {
                                    if (t.styleSheet) t.styleSheet.cssText = e;
                                    else {
                                        for (; t.firstChild; )
                                            t.removeChild(t.firstChild);
                                        t.appendChild(
                                            document.createTextNode(e),
                                        );
                                    }
                                };
                            },
                            152: (e) => {
                                e.exports =
                                    '<svg viewBox="0 0 400 400" xmlns="http://www.w3.org/2000/svg"><path d="M200.48 53c10.359 0 19.704 2.99 27.99 7.933 5.625 3.356 10.563 7.492 15.193 12.354 6.735 7.072 13.08 15.997 19.645 27.12l.142.24 76.986 134.194c6.553 10.46 11.425 19.799 14.654 28.577 2.216 6.027 3.735 11.967 4.393 18.103.963 8.977.067 18.035-3.552 26.98-7.933 19.612-24.283 33.336-45.054 37.586l-4.464.913h-204.65l-2.817-.357c-10.267-1.3-19.764-4.163-28.422-9.16-11.051-6.377-19.82-15.823-25.055-27.664-4.432-10.03-5.235-19.952-3.914-29.887.821-6.175 2.486-12.239 4.864-18.58 3.616-9.64 9.159-20.55 16.718-33.309l74.632-127.44c6.469-11.125 12.743-20.061 19.436-27.158 4.62-4.899 9.562-9.07 15.206-12.456 8.301-4.979 17.68-7.989 28.07-7.989zm0 45c-6.102 0-14.05 8.427-23.842 25.28l-74.73 127.605c-12.713 21.444-17.806 35.025-15.28 40.742 2.527 5.717 8.519 9.175 17.974 10.373h197.255c5.932-1.214 10.051-4.671 12.357-10.373 2.307-5.702-1.812-16.903-12.357-33.603l-77.302-134.743C214.608 106.427 206.583 98 200.48 98zm.02 135c14.636 0 26.5 11.864 26.5 26.5S215.136 286 200.5 286 174 274.136 174 259.5s11.864-26.5 26.5-26.5zm0-83c12.426 0 22.5 10.074 22.5 22.5v28c0 12.426-10.074 22.5-22.5 22.5S178 212.926 178 200.5v-28c0-12.426 10.074-22.5 22.5-22.5z"></path></svg>';
                            },
                            188: (e) => {
                                e.exports =
                                    '<svg viewBox="0 0 400 400" xmlns="http://www.w3.org/2000/svg"><path d="M281.488 301c6.388 0 12.311-1.14 17.768-3.42 5.457-2.28 10.315-5.433 14.574-9.456a43.696 43.696 0 009.983-14.084c2.395-5.365 3.593-11.133 3.593-17.303 0-10.999-2.994-20.388-8.984-28.167-5.99-7.78-14.707-11.67-26.153-11.67-5.324 0-10.249.805-14.774 2.415-4.526 1.61-7.587 3.085-9.184 4.426a165.146 165.146 0 01-1.997-9.054 46.483 46.483 0 01-.798-8.651c0-9.658 1.664-18.242 4.991-25.753 3.328-7.511 7.92-14.486 13.776-20.924 5.856-6.439 12.777-12.609 20.763-18.51 7.986-5.902 16.637-11.938 25.954-18.108L313.032 99c-12.778 6.975-24.89 14.352-36.336 22.131-11.446 7.78-21.562 16.9-30.346 27.363-8.785 10.462-15.706 22.534-20.763 36.215-5.058 13.681-7.587 29.777-7.587 48.287 0 7.511 1.264 15.29 3.793 23.339 2.53 8.047 6.389 15.358 11.58 21.93 5.19 6.572 11.779 12.005 19.765 16.297 7.986 4.292 17.436 6.438 28.35 6.438zm-148 0c6.388 0 12.311-1.14 17.768-3.42 5.457-2.28 10.315-5.433 14.574-9.456a43.696 43.696 0 009.983-14.084c2.395-5.365 3.593-11.133 3.593-17.303 0-10.999-2.994-20.388-8.984-28.167-5.99-7.78-14.707-11.67-26.153-11.67-5.324 0-10.249.805-14.774 2.415-4.526 1.61-7.587 3.085-9.184 4.426a165.146 165.146 0 01-1.997-9.054 46.483 46.483 0 01-.798-8.651c0-9.658 1.664-18.242 4.991-25.753 3.328-7.511 7.92-14.486 13.776-20.924 5.856-6.439 12.777-12.609 20.763-18.51 7.986-5.902 16.637-11.938 25.954-18.108L165.032 99c-12.778 6.975-24.89 14.352-36.336 22.131-11.446 7.78-21.562 16.9-30.346 27.363-8.785 10.462-15.706 22.534-20.763 36.215C72.529 198.39 70 214.486 70 232.996c0 7.511 1.264 15.29 3.793 23.339 2.53 8.047 6.389 15.358 11.58 21.93 5.19 6.572 11.779 12.005 19.765 16.297 7.986 4.292 17.436 6.438 28.35 6.438z"></path></svg>';
                            },
                            687: (e) => {
                                e.exports =
                                    '<svg viewBox="0 0 400 400" xmlns="http://www.w3.org/2000/svg"><path d="M204.615 84L288 320h-53.354l-15.175-48.513h-86.74L116.437 320H65l84.024-236h55.59zm-28.275 53.957l-30.35 92.863h59.743l-29.393-92.863zm211.05-36.018l.256.25c5.579 5.578 5.662 14.57.25 20.25l-.25.256-45.49 45.49c-5.577 5.578-14.57 5.66-20.25.25l-.255-.25-45.49-45.49c-5.663-5.663-5.663-14.844 0-20.506 5.578-5.578 14.57-5.662 20.25-.25l.256.25 35.236 35.236 35.237-35.236c5.578-5.578 14.57-5.662 20.25-.25z"></path></svg>';
                            },
                        },
                        t = {};
                    function n(o) {
                        var i = t[o];
                        if (void 0 !== i) return i.exports;
                        var r = (t[o] = { id: o, exports: {} });
                        return (e[o](r, r.exports, n), r.exports);
                    }
                    ((n.n = (e) => {
                        var t = e && e.__esModule ? () => e.default : () => e;
                        return (n.d(t, { a: t }), t);
                    }),
                        (n.d = (e, t) => {
                            for (var o in t)
                                n.o(t, o) &&
                                    !n.o(e, o) &&
                                    Object.defineProperty(e, o, {
                                        enumerable: !0,
                                        get: t[o],
                                    });
                        }),
                        (n.o = (e, t) =>
                            Object.prototype.hasOwnProperty.call(e, t)),
                        (n.nc = void 0));
                    var o = {};
                    return (
                        (() => {
                            n.d(o, { default: () => C });
                            var e = n(72),
                                t = n.n(e),
                                i = n(825),
                                r = n.n(i),
                                s = n(659),
                                a = n.n(s),
                                l = n(56),
                                c = n.n(l),
                                d = n(540),
                                h = n.n(d),
                                u = n(113),
                                p = n.n(u),
                                f = n(208),
                                g = {};
                            function m(e, t = null, n = {}) {
                                const o = document.createElement(e);
                                Array.isArray(t)
                                    ? o.classList.add(...t)
                                    : t && o.classList.add(t);
                                for (const e in n) o[e] = n[e];
                                return o;
                            }
                            ((g.styleTagTransform = p()),
                                (g.setAttributes = c()),
                                (g.insert = a().bind(null, 'head')),
                                (g.domAPI = r()),
                                (g.insertStyleElement = h()),
                                t()(f.A, g),
                                f.A && f.A.locals && f.A.locals);
                            var b = n(152),
                                v = n.n(b),
                                y = n(188),
                                w = n.n(y),
                                k = n(687),
                                x = n.n(k);
                            class C {
                                constructor({
                                    api: e,
                                    data: t,
                                    config: n,
                                    block: o,
                                }) {
                                    ((this.api = e),
                                        (this.data = t),
                                        (this.config = n),
                                        (this.block = o),
                                        (this.variants = [
                                            {
                                                name: 'call-out',
                                                icon: v(),
                                                title: this.api.i18n.t(
                                                    'Call-out',
                                                ),
                                            },
                                            {
                                                name: 'citation',
                                                icon: w(),
                                                title: this.api.i18n.t(
                                                    'Citation',
                                                ),
                                            },
                                            {
                                                name: 'details',
                                                icon: x(),
                                                title: this.api.i18n.t(
                                                    'Details',
                                                ),
                                            },
                                        ]),
                                        (this.wrapper = void 0));
                                }
                                static get isTune() {
                                    return !0;
                                }
                                static get CSS() {
                                    return {
                                        toggler: 'cdx-text-variant__toggler',
                                    };
                                }
                                render() {
                                    const e = m('div', '');
                                    return (
                                        this.variants.forEach(
                                            ({
                                                name: t,
                                                icon: n,
                                                title: o,
                                            }) => {
                                                const i = m(
                                                    'div',
                                                    [
                                                        this.api.styles
                                                            .settingsButton,
                                                        C.CSS.toggler,
                                                    ],
                                                    { innerHTML: n },
                                                );
                                                ((i.dataset.name = t),
                                                    this.api.tooltip.onHover(
                                                        i,
                                                        o,
                                                        {
                                                            placement: 'top',
                                                            hidingDelay: 500,
                                                        },
                                                    ),
                                                    e.appendChild(i));
                                            },
                                        ),
                                        this.api.listeners.on(
                                            e,
                                            'click',
                                            (e) => {
                                                this.tuneClicked(e);
                                            },
                                        ),
                                        e
                                    );
                                }
                                tuneClicked(e) {
                                    const t = e.target.closest(
                                            `.${this.api.styles.settingsButton}`,
                                        ),
                                        n = t.classList.contains(
                                            this.api.styles
                                                .settingsButtonActive,
                                        );
                                    (t.classList.toggle(
                                        this.api.styles.settingsButtonActive,
                                        !n,
                                    ),
                                        (this.variant = n
                                            ? ''
                                            : t.dataset.name),
                                        this.block.dispatchChange());
                                }
                                wrap(e) {
                                    return (
                                        (this.wrapper = m('div')),
                                        (this.variant = this.data),
                                        this.wrapper.appendChild(e),
                                        this.wrapper
                                    );
                                }
                                set variant(e) {
                                    ((this.data = e),
                                        this.variants.forEach((e) => {
                                            this.wrapper.classList.toggle(
                                                `cdx-text-variant--${e.name}`,
                                                e.name === this.data,
                                            );
                                        }));
                                }
                                save() {
                                    return this.data || '';
                                }
                            }
                        })(),
                        o.default
                    );
                })()),
            (e.exports = n()));
    })(Fp);
    var Hp = Np(Dp),
        zp = {},
        Up = {
            get exports() {
                return zp;
            },
            set exports(e) {
                zp = e;
            },
        };
    !(function (e, t) {
        var n;
        (self,
            (n = () =>
                (() => {
                    var e = {
                            424: (e, t, n) => {
                                n.d(t, { Z: () => a });
                                var o = n(81),
                                    i = n.n(o),
                                    r = n(645),
                                    s = n.n(r)()(i());
                                s.push([
                                    e.id,
                                    '.toggle-block__selector > div {\n  vertical-align: middle;\n  display: inline-block;\n  padding: 1% 0 1% 0;\n  outline: none;\n  border: none;\n  width: 90%;\n}\n\n.toggle-block__selector br {\n  display: none;\n}\n\n.toggle-block__icon > svg {\n  vertical-align: middle;\n  width: 15px;\n  height: auto;\n}\n\n.toggle-block__icon:hover {\n  color: #388ae5;\n  cursor: pointer;\n}\n\n.bi-play-fill {\n  width: 34px;\n  height: 34px;\n}\n\n.toggle-block__input {\n  margin-left: 5px;\n}\n\n.toggle-block__input:empty:before {\n  content: attr(placeholder);\n  color: gray;\n  background-color: transparent;\n}\n\n.toggle-block__content-default {\n  margin-left: 20px;\n}\n\n.toggle-block__item {\n  margin-left: 39px;\n}\n\n.toggle-block__content-default {\n  color: gray;\n  border-radius: 5px;\n}\n\n.toggle-block__content-default:hover {\n  cursor: pointer;\n  background: rgba(55, 53, 47, 0.08);\n}\n\ndiv.toggle-block__hidden {\n  display: none;\n}\n',
                                    '',
                                ]);
                                const a = s;
                            },
                            645: (e) => {
                                e.exports = function (e) {
                                    var t = [];
                                    return (
                                        (t.toString = function () {
                                            return this.map(function (t) {
                                                var n = '',
                                                    o = void 0 !== t[5];
                                                return (
                                                    t[4] &&
                                                        (n +=
                                                            '@supports ('.concat(
                                                                t[4],
                                                                ') {',
                                                            )),
                                                    t[2] &&
                                                        (n += '@media '.concat(
                                                            t[2],
                                                            ' {',
                                                        )),
                                                    o &&
                                                        (n += '@layer'.concat(
                                                            t[5].length > 0
                                                                ? ' '.concat(
                                                                      t[5],
                                                                  )
                                                                : '',
                                                            ' {',
                                                        )),
                                                    (n += e(t)),
                                                    o && (n += '}'),
                                                    t[2] && (n += '}'),
                                                    t[4] && (n += '}'),
                                                    n
                                                );
                                            }).join('');
                                        }),
                                        (t.i = function (e, n, o, i, r) {
                                            'string' == typeof e &&
                                                (e = [[null, e, void 0]]);
                                            var s = {};
                                            if (o)
                                                for (
                                                    var a = 0;
                                                    a < this.length;
                                                    a++
                                                ) {
                                                    var l = this[a][0];
                                                    null != l && (s[l] = !0);
                                                }
                                            for (var c = 0; c < e.length; c++) {
                                                var d = [].concat(e[c]);
                                                (o && s[d[0]]) ||
                                                    (void 0 !== r &&
                                                        (void 0 === d[5] ||
                                                            (d[1] = '@layer'
                                                                .concat(
                                                                    d[5]
                                                                        .length >
                                                                        0
                                                                        ? ' '.concat(
                                                                              d[5],
                                                                          )
                                                                        : '',
                                                                    ' {',
                                                                )
                                                                .concat(
                                                                    d[1],
                                                                    '}',
                                                                )),
                                                        (d[5] = r)),
                                                    n &&
                                                        (d[2]
                                                            ? ((d[1] = '@media '
                                                                  .concat(
                                                                      d[2],
                                                                      ' {',
                                                                  )
                                                                  .concat(
                                                                      d[1],
                                                                      '}',
                                                                  )),
                                                              (d[2] = n))
                                                            : (d[2] = n)),
                                                    i &&
                                                        (d[4]
                                                            ? ((d[1] =
                                                                  '@supports ('
                                                                      .concat(
                                                                          d[4],
                                                                          ') {',
                                                                      )
                                                                      .concat(
                                                                          d[1],
                                                                          '}',
                                                                      )),
                                                              (d[4] = i))
                                                            : (d[4] = ''.concat(
                                                                  i,
                                                              ))),
                                                    t.push(d));
                                            }
                                        }),
                                        t
                                    );
                                };
                            },
                            81: (e) => {
                                e.exports = function (e) {
                                    return e[1];
                                };
                            },
                            379: (e) => {
                                var t = [];
                                function n(e) {
                                    for (var n = -1, o = 0; o < t.length; o++)
                                        if (t[o].identifier === e) {
                                            n = o;
                                            break;
                                        }
                                    return n;
                                }
                                function o(e, o) {
                                    for (
                                        var r = {}, s = [], a = 0;
                                        a < e.length;
                                        a++
                                    ) {
                                        var l = e[a],
                                            c = o.base ? l[0] + o.base : l[0],
                                            d = r[c] || 0,
                                            h = ''.concat(c, ' ').concat(d);
                                        r[c] = d + 1;
                                        var u = n(h),
                                            p = {
                                                css: l[1],
                                                media: l[2],
                                                sourceMap: l[3],
                                                supports: l[4],
                                                layer: l[5],
                                            };
                                        if (-1 !== u)
                                            (t[u].references++,
                                                t[u].updater(p));
                                        else {
                                            var f = i(p, o);
                                            ((o.byIndex = a),
                                                t.splice(a, 0, {
                                                    identifier: h,
                                                    updater: f,
                                                    references: 1,
                                                }));
                                        }
                                        s.push(h);
                                    }
                                    return s;
                                }
                                function i(e, t) {
                                    var n = t.domAPI(t);
                                    return (
                                        n.update(e),
                                        function (t) {
                                            if (t) {
                                                if (
                                                    t.css === e.css &&
                                                    t.media === e.media &&
                                                    t.sourceMap ===
                                                        e.sourceMap &&
                                                    t.supports === e.supports &&
                                                    t.layer === e.layer
                                                )
                                                    return;
                                                n.update((e = t));
                                            } else n.remove();
                                        }
                                    );
                                }
                                e.exports = function (e, i) {
                                    var r = o((e = e || []), (i = i || {}));
                                    return function (e) {
                                        e = e || [];
                                        for (var s = 0; s < r.length; s++) {
                                            var a = n(r[s]);
                                            t[a].references--;
                                        }
                                        for (
                                            var l = o(e, i), c = 0;
                                            c < r.length;
                                            c++
                                        ) {
                                            var d = n(r[c]);
                                            0 === t[d].references &&
                                                (t[d].updater(),
                                                t.splice(d, 1));
                                        }
                                        r = l;
                                    };
                                };
                            },
                            569: (e) => {
                                var t = {};
                                e.exports = function (e, n) {
                                    var o = (function (e) {
                                        if (void 0 === t[e]) {
                                            var n = document.querySelector(e);
                                            if (
                                                window.HTMLIFrameElement &&
                                                n instanceof
                                                    window.HTMLIFrameElement
                                            )
                                                try {
                                                    n = n.contentDocument.head;
                                                } catch (e) {
                                                    n = null;
                                                }
                                            t[e] = n;
                                        }
                                        return t[e];
                                    })(e);
                                    if (!o)
                                        throw new Error(
                                            "Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.",
                                        );
                                    o.appendChild(n);
                                };
                            },
                            216: (e) => {
                                e.exports = function (e) {
                                    var t = document.createElement('style');
                                    return (
                                        e.setAttributes(t, e.attributes),
                                        e.insert(t, e.options),
                                        t
                                    );
                                };
                            },
                            565: (e, t, n) => {
                                e.exports = function (e) {
                                    var t = n.nc;
                                    t && e.setAttribute('nonce', t);
                                };
                            },
                            795: (e) => {
                                e.exports = function (e) {
                                    if ('undefined' == typeof document)
                                        return {
                                            update: function () {},
                                            remove: function () {},
                                        };
                                    var t = e.insertStyleElement(e);
                                    return {
                                        update: function (n) {
                                            !(function (e, t, n) {
                                                var o = '';
                                                (n.supports &&
                                                    (o += '@supports ('.concat(
                                                        n.supports,
                                                        ') {',
                                                    )),
                                                    n.media &&
                                                        (o += '@media '.concat(
                                                            n.media,
                                                            ' {',
                                                        )));
                                                var i = void 0 !== n.layer;
                                                (i &&
                                                    (o += '@layer'.concat(
                                                        n.layer.length > 0
                                                            ? ' '.concat(
                                                                  n.layer,
                                                              )
                                                            : '',
                                                        ' {',
                                                    )),
                                                    (o += n.css),
                                                    i && (o += '}'),
                                                    n.media && (o += '}'),
                                                    n.supports && (o += '}'));
                                                var r = n.sourceMap;
                                                (r &&
                                                    'undefined' !=
                                                        typeof btoa &&
                                                    (o +=
                                                        '\n/*# sourceMappingURL=data:application/json;base64,'.concat(
                                                            btoa(
                                                                unescape(
                                                                    encodeURIComponent(
                                                                        JSON.stringify(
                                                                            r,
                                                                        ),
                                                                    ),
                                                                ),
                                                            ),
                                                            ' */',
                                                        )),
                                                    t.styleTagTransform(
                                                        o,
                                                        e,
                                                        t.options,
                                                    ));
                                            })(t, e, n);
                                        },
                                        remove: function () {
                                            !(function (e) {
                                                if (null === e.parentNode)
                                                    return !1;
                                                e.parentNode.removeChild(e);
                                            })(t);
                                        },
                                    };
                                };
                            },
                            589: (e) => {
                                e.exports = function (e, t) {
                                    if (t.styleSheet) t.styleSheet.cssText = e;
                                    else {
                                        for (; t.firstChild; )
                                            t.removeChild(t.firstChild);
                                        t.appendChild(
                                            document.createTextNode(e),
                                        );
                                    }
                                };
                            },
                            370: (e) => {
                                e.exports =
                                    '<svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="bi bi-play-fill" viewBox="0 0 16 16"><path d="m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z"></path></svg>';
                            },
                        },
                        t = {};
                    function n(o) {
                        var i = t[o];
                        if (void 0 !== i) return i.exports;
                        var r = (t[o] = { id: o, exports: {} });
                        return (e[o](r, r.exports, n), r.exports);
                    }
                    ((n.n = (e) => {
                        var t = e && e.__esModule ? () => e.default : () => e;
                        return (n.d(t, { a: t }), t);
                    }),
                        (n.d = (e, t) => {
                            for (var o in t)
                                n.o(t, o) &&
                                    !n.o(e, o) &&
                                    Object.defineProperty(e, o, {
                                        enumerable: !0,
                                        get: t[o],
                                    });
                        }),
                        (n.o = (e, t) =>
                            Object.prototype.hasOwnProperty.call(e, t)),
                        (n.nc = void 0));
                    var o = {};
                    return (
                        (() => {
                            n.d(o, { default: () => E });
                            var e = n(379),
                                t = n.n(e),
                                i = n(795),
                                r = n.n(i),
                                s = n(569),
                                a = n.n(s),
                                l = n(565),
                                c = n.n(l),
                                d = n(216),
                                h = n.n(d),
                                u = n(589),
                                p = n.n(u),
                                f = n(424),
                                g = {};
                            ((g.styleTagTransform = p()),
                                (g.setAttributes = c()),
                                (g.insert = a().bind(null, 'head')),
                                (g.domAPI = r()),
                                (g.insertStyleElement = h()),
                                t()(f.Z, g),
                                f.Z && f.Z.locals && f.Z.locals);
                            const m = {
                                randomUUID:
                                    'undefined' != typeof crypto &&
                                    crypto.randomUUID &&
                                    crypto.randomUUID.bind(crypto),
                            };
                            let b;
                            const v = new Uint8Array(16);
                            function y() {
                                if (
                                    !b &&
                                    ((b =
                                        'undefined' != typeof crypto &&
                                        crypto.getRandomValues &&
                                        crypto.getRandomValues.bind(crypto)),
                                    !b)
                                )
                                    throw new Error(
                                        'crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported',
                                    );
                                return b(v);
                            }
                            const w = [];
                            for (let e = 0; e < 256; ++e)
                                w.push((e + 256).toString(16).slice(1));
                            const k = function (e, t, n) {
                                if (m.randomUUID && !t && !e)
                                    return m.randomUUID();
                                const o =
                                    (e = e || {}).random || (e.rng || y)();
                                if (
                                    ((o[6] = (15 & o[6]) | 64),
                                    (o[8] = (63 & o[8]) | 128),
                                    t)
                                ) {
                                    n = n || 0;
                                    for (let e = 0; e < 16; ++e)
                                        t[n + e] = o[e];
                                    return t;
                                }
                                return (function (e, t = 0) {
                                    return (
                                        w[e[t + 0]] +
                                        w[e[t + 1]] +
                                        w[e[t + 2]] +
                                        w[e[t + 3]] +
                                        '-' +
                                        w[e[t + 4]] +
                                        w[e[t + 5]] +
                                        '-' +
                                        w[e[t + 6]] +
                                        w[e[t + 7]] +
                                        '-' +
                                        w[e[t + 8]] +
                                        w[e[t + 9]] +
                                        '-' +
                                        w[e[t + 10]] +
                                        w[e[t + 11]] +
                                        w[e[t + 12]] +
                                        w[e[t + 13]] +
                                        w[e[t + 14]] +
                                        w[e[t + 15]]
                                    ).toLowerCase();
                                })(o);
                            };
                            var x = n(370),
                                C = n.n(x);
                            class E {
                                static get toolbox() {
                                    return { title: 'Toggle', icon: C() };
                                }
                                static get enableLineBreaks() {
                                    return !0;
                                }
                                static get isReadOnlySupported() {
                                    return !0;
                                }
                                constructor({
                                    data: e,
                                    api: t,
                                    readOnly: n,
                                    config: o,
                                }) {
                                    ((this.data = {
                                        text: e.text || '',
                                        status: e.status || 'open',
                                        fk: e.fk || `fk-${k()}`,
                                        items: e.items || 0,
                                    }),
                                        (this.itemsId = []),
                                        (this.api = t));
                                    const {
                                        toolbar: { close: i },
                                        blocks: {
                                            getCurrentBlockIndex: r,
                                            getBlockByIndex: s,
                                            getBlocksCount: a,
                                            move: l,
                                        },
                                    } = this.api;
                                    ((this.close = i),
                                        (this.getCurrentBlockIndex = r),
                                        (this.getBlocksCount = a),
                                        (this.getBlockByIndex = s),
                                        (this.move = l),
                                        (this.wrapper = void 0),
                                        (this.readOnly = n || !1),
                                        (this.placeholder =
                                            o?.placeholder ?? 'Toggle'),
                                        (this.defaultContent =
                                            o?.defaultContent ??
                                            'Empty toggle. Click or drop blocks inside.'),
                                        this.addListeners(),
                                        this.addSupportForUndoAndRedoActions(),
                                        this.addSupportForDragAndDropActions(),
                                        this.addSupportForCopyAndPasteAction());
                                }
                                isAToggleItem(e) {
                                    return e.classList.contains(
                                        'toggle-block__item',
                                    );
                                }
                                isAToggleRoot(e) {
                                    return (
                                        e.classList.contains(
                                            'toggle-block__selector',
                                        ) ||
                                        Boolean(
                                            e.querySelector(
                                                '.toggle-block__selector',
                                            ),
                                        )
                                    );
                                }
                                createParagraphFromToggleRoot(e) {
                                    if ('Enter' === e.code) {
                                        const e =
                                                document.getSelection()
                                                    .focusOffset,
                                            t =
                                                this.api.blocks.getCurrentBlockIndex(),
                                            n =
                                                this.api.blocks.getBlockByIndex(
                                                    t,
                                                ),
                                            { holder: o } = n,
                                            i = o.firstChild.firstChild,
                                            r = i.children[1].innerHTML,
                                            s = r.indexOf('<br>'),
                                            a = -1 === s ? r.length : s;
                                        'closed' === this.data.status &&
                                            (this.resolveToggleAction(),
                                            this.hideAndShowBlocks());
                                        const l = r.slice(a + 4, e.focusOffset);
                                        ((i.children[1].innerHTML = r.slice(
                                            e.focusOffset,
                                            a,
                                        )),
                                            this.api.blocks.insert(
                                                'paragraph',
                                                { text: l },
                                                {},
                                                t + 1,
                                                1,
                                            ),
                                            this.setAttributesToNewBlock());
                                    }
                                }
                                createParagraphFromIt() {
                                    this.setAttributesToNewBlock();
                                }
                                setAttributesToNewBlock(
                                    e = null,
                                    t = this.wrapper.id,
                                    n = null,
                                ) {
                                    const o =
                                            null === e
                                                ? this.api.blocks.getCurrentBlockIndex()
                                                : e,
                                        i =
                                            n ||
                                            this.api.blocks.getBlockByIndex(o),
                                        r = k();
                                    this.itemsId.includes(i.id) ||
                                        this.itemsId.splice(o - 1, 0, i.id);
                                    const { holder: s } = i,
                                        a = s.firstChild.firstChild;
                                    (s.setAttribute('foreignKey', t),
                                        s.setAttribute('id', r),
                                        setTimeout(() =>
                                            s.classList.add(
                                                'toggle-block__item',
                                            ),
                                        ),
                                        this.readOnly ||
                                            ((s.onkeydown =
                                                this.setEventsToNestedBlock.bind(
                                                    this,
                                                )),
                                            a.focus()));
                                }
                                setEventsToNestedBlock(e) {
                                    if ('Enter' === e.code)
                                        setTimeout(() =>
                                            this.createParagraphFromIt(),
                                        );
                                    else {
                                        const t = this.getCurrentBlockIndex(),
                                            n = this.getBlockByIndex(t),
                                            { holder: o } = n;
                                        if (
                                            ('Tab' === e.code &&
                                                e.shiftKey &&
                                                this.extractBlock(t),
                                            'Backspace' === e.code)
                                        ) {
                                            const e =
                                                document.getSelection()
                                                    .focusOffset;
                                            this.removeBlock(o, n.id, e);
                                        }
                                    }
                                }
                                removeBlock(e, t, n) {
                                    if (0 === n) {
                                        const e = this.itemsId.indexOf(t);
                                        this.itemsId.splice(e, 1);
                                    }
                                }
                                removeAttributesFromNewBlock(e) {
                                    const t =
                                            this.api.blocks.getBlockByIndex(e),
                                        { holder: n } = t;
                                    if (!this.itemsId.includes(t.id)) {
                                        const e = this.itemsId.indexOf(t.id);
                                        this.itemsId.splice(e, 1);
                                    }
                                    (n.removeAttribute('foreignKey'),
                                        n.removeAttribute('id'),
                                        (n.onkeydown = {}),
                                        (n.onkeyup = {}),
                                        n.classList.remove(
                                            'toggle-block__item',
                                        ));
                                }
                                createToggle() {
                                    ((this.wrapper =
                                        document.createElement('div')),
                                        this.wrapper.classList.add(
                                            'toggle-block__selector',
                                        ),
                                        (this.wrapper.id = this.data.fk));
                                    const e = document.createElement('span'),
                                        t = document.createElement('div'),
                                        n = document.createElement('div');
                                    (e.classList.add('toggle-block__icon'),
                                        (e.innerHTML = C()),
                                        t.classList.add('toggle-block__input'),
                                        t.setAttribute(
                                            'contentEditable',
                                            !this.readOnly,
                                        ),
                                        (t.innerHTML = this.data.text || ''),
                                        this.readOnly ||
                                            (t.addEventListener(
                                                'keyup',
                                                this.createParagraphFromToggleRoot.bind(
                                                    this,
                                                ),
                                            ),
                                            t.addEventListener(
                                                'keydown',
                                                this.removeToggle.bind(this),
                                            ),
                                            t.addEventListener('focusin', () =>
                                                this.setFocusToggleRootAtTheEnd(),
                                            ),
                                            t.addEventListener(
                                                'keyup',
                                                this.setPlaceHolder.bind(this),
                                            ),
                                            t.setAttribute(
                                                'placeholder',
                                                this.placeholder,
                                            ),
                                            t.addEventListener(
                                                'focus',
                                                this.setDefaultContent.bind(
                                                    this,
                                                ),
                                            ),
                                            t.addEventListener(
                                                'focusout',
                                                this.setDefaultContent.bind(
                                                    this,
                                                ),
                                            ),
                                            n.addEventListener(
                                                'click',
                                                this.clickInDefaultContent.bind(
                                                    this,
                                                ),
                                            ),
                                            t.addEventListener(
                                                'focus',
                                                this.setNestedBlockAttributes.bind(
                                                    this,
                                                ),
                                            )),
                                        n.classList.add(
                                            'toggle-block__content-default',
                                            'toggle-block__hidden',
                                        ),
                                        (n.innerHTML = this.defaultContent),
                                        this.wrapper.appendChild(e),
                                        this.wrapper.appendChild(t),
                                        this.wrapper.appendChild(n));
                                }
                                setFocusToggleRootAtTheEnd() {
                                    const e = document.activeElement,
                                        t = window.getSelection(),
                                        n = document.createRange();
                                    (t.removeAllRanges(),
                                        n.selectNodeContents(e),
                                        n.collapse(!1),
                                        t.addRange(n),
                                        e.focus());
                                }
                                clickInDefaultContent() {
                                    (this.api.blocks.insert(),
                                        this.setAttributesToNewBlock(),
                                        this.setDefaultContent());
                                }
                                setDefaultContent() {
                                    const e = document.querySelectorAll(
                                            `div[foreignKey="${this.wrapper.id}"]`,
                                        ),
                                        { firstChild: t, lastChild: n } =
                                            this.wrapper,
                                        { status: o } = this.data,
                                        i = e.length > 0 || 'closed' === o;
                                    (n.classList.toggle(
                                        'toggle-block__hidden',
                                        i,
                                    ),
                                        (t.style.color =
                                            0 === e.length ? 'gray' : 'black'));
                                }
                                removeToggle(e) {
                                    if ('Backspace' === e.code) {
                                        const { children: e } = this.wrapper,
                                            t = e[1].innerHTML;
                                        if (
                                            0 ===
                                            document.getSelection().focusOffset
                                        ) {
                                            const e =
                                                    this.api.blocks.getCurrentBlockIndex(),
                                                n = t.indexOf('<br>'),
                                                o = -1 === n ? t.length : n,
                                                i = document.querySelectorAll(
                                                    `div[foreignKey="${this.wrapper.id}"]`,
                                                );
                                            for (
                                                let t = 1;
                                                t < i.length + 1;
                                                t += 1
                                            )
                                                this.removeAttributesFromNewBlock(
                                                    e + t,
                                                );
                                            (this.api.blocks.delete(e),
                                                this.api.blocks.insert(
                                                    'paragraph',
                                                    { text: t.slice(0, o) },
                                                    {},
                                                    e,
                                                    1,
                                                ),
                                                this.api.caret.setToBlock(e));
                                        }
                                    }
                                }
                                findToggleRootIndex(e, t) {
                                    const n = this.getBlockByIndex(e),
                                        { holder: o } = n;
                                    return this.isAToggleRoot(o) &&
                                        t ===
                                            o
                                                .querySelector(
                                                    '.toggle-block__selector',
                                                )
                                                .getAttribute('id')
                                        ? e
                                        : e - 1 >= 0
                                          ? this.findToggleRootIndex(e - 1, t)
                                          : -1;
                                }
                                extractBlock(e) {
                                    const t = this.getBlockByIndex(e),
                                        { holder: n } = t;
                                    if (this.isAToggleItem(n)) {
                                        const t = n.getAttribute('foreignKey'),
                                            o = this.findToggleRootIndex(e, t);
                                        if (o >= 0) {
                                            const n =
                                                    this.getDescendantsNumber(
                                                        t,
                                                    ),
                                                i = o + n;
                                            (n > 1 &&
                                                this.api.blocks.move(i, e),
                                                setTimeout(
                                                    () =>
                                                        this.removeAttributesFromNewBlock(
                                                            i,
                                                        ),
                                                    200,
                                                ));
                                        }
                                    }
                                    (this.api.caret.setToBlock(e),
                                        this.api.toolbar.close());
                                }
                                setPlaceHolder(e) {
                                    if (
                                        'Backspace' === e.code ||
                                        'Enter' === e.code
                                    ) {
                                        const { children: e } = this.wrapper,
                                            { length: t } = e[1].textContent;
                                        0 === t && (e[1].textContent = '');
                                    }
                                }
                                render() {
                                    return (
                                        this.createToggle(),
                                        setTimeout(() => this.renderItems()),
                                        setTimeout(() =>
                                            this.setInitialTransition(),
                                        ),
                                        this.wrapper
                                    );
                                }
                                setInitialTransition() {
                                    const { status: e } = this.data,
                                        t = this.wrapper.firstChild.firstChild;
                                    ((t.style.transition = '0.1s'),
                                        (t.style.transform = `rotate(${'closed' === e ? 0 : 90}deg)`));
                                }
                                renderItems() {
                                    const e = this.api.blocks.getBlocksCount(),
                                        t = this.wrapper.firstChild;
                                    let n;
                                    if (this.readOnly) {
                                        const e =
                                                document.getElementsByClassName(
                                                    'codex-editor__redactor',
                                                )[0],
                                            { children: t } = e,
                                            { length: o } = t;
                                        for (let e = 0; e < o; e += 1) {
                                            const o =
                                                    t[e].firstChild.firstChild,
                                                { id: i } = o;
                                            if (i === this.wrapper.id) {
                                                n = e;
                                                break;
                                            }
                                        }
                                    } else {
                                        const t = this.wrapper.children[1];
                                        let o = {},
                                            i =
                                                this.api.blocks.getCurrentBlockIndex();
                                        const r = i === e - 1 ? -1 : 1;
                                        for (; o[1] !== t; ) {
                                            n = i;
                                            const e =
                                                this.api.blocks.getBlockByIndex(
                                                    n,
                                                );
                                            if (!e) break;
                                            const { holder: t } = e;
                                            ((o =
                                                t.firstChild.firstChild
                                                    .children),
                                                (i += r));
                                        }
                                    }
                                    if (n + this.data.items < e)
                                        for (
                                            let e = n + 1, t = 0;
                                            e <= n + this.data.items;
                                            e += 1
                                        ) {
                                            const n =
                                                    this.api.blocks.getBlockByIndex(
                                                        e,
                                                    ),
                                                { holder: o } = n,
                                                i = o.firstChild.firstChild;
                                            if (this.isPartOfAToggle(i)) {
                                                this.data.items = t;
                                                break;
                                            }
                                            (this.setAttributesToNewBlock(e),
                                                (t += 1));
                                        }
                                    else this.data.items = 0;
                                    (t.addEventListener('click', () => {
                                        (this.resolveToggleAction(),
                                            setTimeout(() => {
                                                this.hideAndShowBlocks();
                                            }));
                                    }),
                                        this.hideAndShowBlocks());
                                }
                                resolveToggleAction() {
                                    const e =
                                        this.wrapper.firstChild.firstChild;
                                    ('closed' === this.data.status
                                        ? ((this.data.status = 'open'),
                                          (e.style.transform = 'rotate(90deg)'))
                                        : ((this.data.status = 'closed'),
                                          (e.style.transform = 'rotate(0deg)')),
                                        this.api.blocks
                                            .getBlockByIndex(
                                                this.api.blocks.getCurrentBlockIndex(),
                                            )
                                            .holder.setAttribute(
                                                'status',
                                                this.data.status,
                                            ));
                                }
                                hideAndShowBlocks(
                                    e = this.wrapper.id,
                                    t = this.data.status,
                                ) {
                                    const n = document.querySelectorAll(
                                            `div[foreignKey="${e}"]`,
                                        ),
                                        { length: o } = n;
                                    if (o > 0)
                                        n.forEach((e) => {
                                            e.hidden = 'closed' === t;
                                            const n = e.querySelectorAll(
                                                '.toggle-block__selector',
                                            );
                                            if (n.length > 0) {
                                                const o =
                                                    'closed' === t
                                                        ? t
                                                        : e.getAttribute(
                                                              'status',
                                                          );
                                                this.hideAndShowBlocks(
                                                    n[0].getAttribute('id'),
                                                    o,
                                                );
                                            }
                                        });
                                    else if (e === this.wrapper.id) {
                                        const { lastChild: e } = this.wrapper;
                                        e.classList.toggle(
                                            'toggle-block__hidden',
                                            t,
                                        );
                                    }
                                }
                                save(e) {
                                    const t = e.getAttribute('id'),
                                        { children: n } = e,
                                        o = n[1].innerHTML,
                                        i = document.querySelectorAll(
                                            `div[foreignKey="${t}"]`,
                                        );
                                    return (
                                        (this.data.fk = t),
                                        Object.assign(this.data, {
                                            text: o,
                                            items: i.length,
                                        })
                                    );
                                }
                                getDescendantsNumber(e) {
                                    let t = 0;
                                    return (
                                        document
                                            .querySelectorAll(
                                                `div[foreignKey="${e}"]`,
                                            )
                                            .forEach((e) => {
                                                if (e.hasAttribute('status')) {
                                                    const n = e
                                                        .querySelector(
                                                            '.toggle-block__selector',
                                                        )
                                                        .getAttribute('id');
                                                    t +=
                                                        this.getDescendantsNumber(
                                                            n,
                                                        );
                                                }
                                                t += 1;
                                            }),
                                        t
                                    );
                                }
                                highlightToggleItems(e) {
                                    document
                                        .querySelectorAll(
                                            `div[foreignKey="${e}"]`,
                                        )
                                        .forEach((e) => {
                                            if (
                                                (e.classList.add(
                                                    'ce-block--selected',
                                                ),
                                                e.hasAttribute('status'))
                                            ) {
                                                const t = e
                                                    .querySelector(
                                                        '.toggle-block__selector',
                                                    )
                                                    .getAttribute('id');
                                                this.highlightToggleItems(t);
                                            }
                                        });
                                }
                                renderSettings() {
                                    const e =
                                        document.getElementsByClassName(
                                            'ce-settings',
                                        )[0];
                                    return (
                                        setTimeout(() => {
                                            const t = e.lastChild,
                                                n =
                                                    this.api.blocks.getCurrentBlockIndex();
                                            this.highlightToggleItems(
                                                this.wrapper.id,
                                            );
                                            const o =
                                                    t.querySelector(
                                                        '[data-item-name="move-up"]',
                                                    ) ||
                                                    t.getElementsByClassName(
                                                        'ce-tune-move-up',
                                                    )[0],
                                                i =
                                                    t.querySelector(
                                                        '[data-item-name="move-down"]',
                                                    ) ||
                                                    t.getElementsByClassName(
                                                        'ce-tune-move-down',
                                                    )[0],
                                                r =
                                                    t.querySelector(
                                                        '[data-item-name="delete"]',
                                                    ) ||
                                                    t.getElementsByClassName(
                                                        'ce-settings__button--delete',
                                                    )[0];
                                            (this.addEventsMoveButtons(i, 0, n),
                                                this.addEventsMoveButtons(
                                                    o,
                                                    1,
                                                    n,
                                                ),
                                                this.addEventDeleteButton(
                                                    r,
                                                    n,
                                                ));
                                        }),
                                        document.createElement('div')
                                    );
                                }
                                addEventsMoveButtons(e, t, n) {
                                    e &&
                                        e.addEventListener('click', () => {
                                            this.moveToggle(n, t);
                                        });
                                }
                                addEventDeleteButton(e, t) {
                                    e &&
                                        e.addEventListener('click', () => {
                                            const n = e.classList;
                                            -1 ===
                                            Object.values(n).indexOf(
                                                'clicked-to-destroy-toggle',
                                            )
                                                ? e.classList.add(
                                                      'clicked-to-destroy-toggle',
                                                  )
                                                : this.removeFullToggle(t);
                                        });
                                }
                                moveToggle(e, t) {
                                    if (!this.readOnly) {
                                        this.close();
                                        const n = this.getCurrentBlockIndex(),
                                            o = this.getDescendantsNumber(
                                                this.wrapper.id,
                                            ),
                                            i = this.getBlocksCount(),
                                            r = e + o;
                                        (this.move(e, n),
                                            e >= 0 &&
                                                r <= i - 1 &&
                                                (0 === t
                                                    ? this.moveDown(e, r)
                                                    : this.moveUp(e, r)));
                                    }
                                }
                                moveDown(e, t) {
                                    const n = t + 1,
                                        o = this.getBlockByIndex(n),
                                        { holder: i } = o;
                                    if (
                                        (this.move(e, n), 'toggle' === o.name)
                                    ) {
                                        const t = i
                                                .querySelector(
                                                    '.toggle-block__selector',
                                                )
                                                .getAttribute('id'),
                                            o = this.getDescendantsNumber(t);
                                        this.moveDescendants(
                                            o,
                                            e + 1,
                                            n + 1,
                                            0,
                                        );
                                    }
                                }
                                moveUp(e, t) {
                                    const n = e - 1,
                                        o = this.getBlockByIndex(n);
                                    if ('toggle' === o.name) return;
                                    const { holder: i } = o;
                                    if (i.hasAttribute('foreignKey')) {
                                        const n =
                                                this.getBlockByIndex(
                                                    e,
                                                ).holder.getAttribute(
                                                    'foreignKey',
                                                ),
                                            o = i.getAttribute('foreignKey');
                                        if (o !== n) {
                                            const i =
                                                    this.findIndexOfParentBlock(
                                                        n,
                                                        o,
                                                        e,
                                                    ),
                                                r = this.getBlockByIndex(i)
                                                    .holder.querySelector(
                                                        '.toggle-block__selector',
                                                    )
                                                    .getAttribute('id'),
                                                s =
                                                    this.getDescendantsNumber(
                                                        r,
                                                    );
                                            return (
                                                this.move(t, i),
                                                void this.moveDescendants(
                                                    s,
                                                    t,
                                                    i,
                                                    1,
                                                )
                                            );
                                        }
                                    }
                                    this.move(t, n);
                                }
                                findIndexOfParentBlock(e, t, n) {
                                    const o =
                                            n -
                                            (this.getDescendantsNumber(t) + 1),
                                        i = this.getBlockByIndex(o).holder;
                                    if (i.hasAttribute('foreignKey')) {
                                        const t = i.getAttribute('foreignKey');
                                        if (t !== e) {
                                            const n = this.getBlockByIndex(
                                                o - 1,
                                            ).holder;
                                            if (n.hasAttribute('foreignKey')) {
                                                const i =
                                                    n.getAttribute(
                                                        'foreignKey',
                                                    );
                                                if (i !== t)
                                                    return this.findIndexOfParentBlock(
                                                        e,
                                                        i,
                                                        o,
                                                    );
                                            }
                                        }
                                    }
                                    return o;
                                }
                                moveDescendants(e, t, n, o) {
                                    let i = n,
                                        r = t;
                                    for (; e; )
                                        (this.move(r, i),
                                            0 === o && ((i += 1), (r += 1)),
                                            (e -= 1));
                                }
                                removeFullToggle(e) {
                                    const t = document.querySelectorAll(
                                            `div[foreignKey="${this.wrapper.id}"]`,
                                        ),
                                        { length: n } = t;
                                    for (let t = e; t < e + n; t += 1)
                                        setTimeout(() =>
                                            this.api.blocks.delete(e),
                                        );
                                }
                                addListeners() {
                                    this.readOnly ||
                                        document.activeElement.addEventListener(
                                            'keyup',
                                            (e) => {
                                                const t =
                                                        document.activeElement,
                                                    n =
                                                        this.getCurrentBlockIndex(),
                                                    { holder: o } =
                                                        this.getBlockByIndex(n);
                                                'Space' === e.code
                                                    ? this.createToggleWithShortcut(
                                                          t,
                                                      )
                                                    : n > 0 &&
                                                      !this.isPartOfAToggle(
                                                          o,
                                                      ) &&
                                                      'Tab' === e.code &&
                                                      this.nestBlock(o);
                                            },
                                        );
                                }
                                addSupportForUndoAndRedoActions() {
                                    if (!this.readOnly) {
                                        const e = document.querySelector(
                                                'div.codex-editor__redactor',
                                            ),
                                            t = {
                                                attributes: !0,
                                                childList: !0,
                                                characterData: !0,
                                            };
                                        new MutationObserver((e) => {
                                            e.forEach((e) => {
                                                'childList' === e.type &&
                                                    setTimeout(
                                                        this.restoreItemAttributes.bind(
                                                            this,
                                                            e,
                                                        ),
                                                    );
                                            });
                                        }).observe(e, t);
                                    }
                                }
                                getIndex = (e) =>
                                    Array.from(e.parentNode.children).indexOf(
                                        e,
                                    );
                                isChild = (e, t) =>
                                    !(!e || !t) &&
                                    (e === t ||
                                        [
                                            ...document.querySelectorAll(
                                                `div[foreignKey="${e}"]`,
                                            ),
                                        ].some((e) => {
                                            const n = e.querySelector(
                                                '.toggle-block__selector',
                                            );
                                            return (
                                                !!n &&
                                                this.isChild(
                                                    n.getAttribute('id'),
                                                    t,
                                                )
                                            );
                                        }));
                                addSupportForDragAndDropActions() {
                                    if (!this.readOnly) {
                                        if (void 0 === this.wrapper)
                                            return void setTimeout(
                                                () =>
                                                    this.addSupportForDragAndDropActions(),
                                                250,
                                            );
                                        document
                                            .querySelector(
                                                `#${this.wrapper.id}`,
                                            )
                                            .parentNode.parentNode.setAttribute(
                                                'status',
                                                this.data.status,
                                            );
                                        const e = document.querySelector(
                                            '.ce-toolbar__settings-btn',
                                        );
                                        (e.setAttribute('draggable', 'true'),
                                            e.addEventListener(
                                                'dragstart',
                                                () => {
                                                    ((this.startBlock =
                                                        this.api.blocks.getCurrentBlockIndex()),
                                                        (this.nameDragged =
                                                            this.api.blocks.getBlockByIndex(
                                                                this.startBlock,
                                                            ).name),
                                                        (this.holderDragged =
                                                            this.api.blocks.getBlockByIndex(
                                                                this.startBlock,
                                                            ).holder));
                                                },
                                            ),
                                            document.addEventListener(
                                                'drop',
                                                (e) => {
                                                    const { target: t } = e;
                                                    if (document.contains(t)) {
                                                        const e =
                                                            t.classList.contains(
                                                                'ce-block',
                                                            )
                                                                ? t
                                                                : t.closest(
                                                                      '.ce-block',
                                                                  );
                                                        if (
                                                            e &&
                                                            e !==
                                                                this
                                                                    .holderDragged
                                                        ) {
                                                            let t =
                                                                this.getIndex(
                                                                    e,
                                                                );
                                                            t =
                                                                this
                                                                    .startBlock <
                                                                t
                                                                    ? t + 1
                                                                    : t;
                                                            const n =
                                                                e.querySelectorAll(
                                                                    '.toggle-block__selector',
                                                                ).length > 0 ||
                                                                null !==
                                                                    e.getAttribute(
                                                                        'foreignKey',
                                                                    );
                                                            setTimeout(() => {
                                                                if (
                                                                    'toggle' ===
                                                                    this
                                                                        .nameDragged
                                                                ) {
                                                                    const o =
                                                                        this.holderDragged.querySelector(
                                                                            `#${this.wrapper.id}`,
                                                                        );
                                                                    if (o)
                                                                        if (
                                                                            this.isChild(
                                                                                o.getAttribute(
                                                                                    'id',
                                                                                ),
                                                                                e.getAttribute(
                                                                                    'foreignKey',
                                                                                ),
                                                                            )
                                                                        ) {
                                                                            if (
                                                                                (this
                                                                                    .startBlock ===
                                                                                t
                                                                                    ? this.api.blocks.move(
                                                                                          this
                                                                                              .startBlock +
                                                                                              1,
                                                                                          t,
                                                                                      )
                                                                                    : this.api.blocks.move(
                                                                                          this
                                                                                              .startBlock,
                                                                                          t,
                                                                                      ),
                                                                                !n)
                                                                            ) {
                                                                                const e =
                                                                                    this.getIndex(
                                                                                        this
                                                                                            .holderDragged,
                                                                                    );
                                                                                this.removeAttributesFromNewBlock(
                                                                                    e,
                                                                                );
                                                                            }
                                                                        } else
                                                                            (this.assignToggleItemAttributes(
                                                                                n,
                                                                                e,
                                                                            ),
                                                                                this.moveChildren(
                                                                                    t,
                                                                                ));
                                                                } else
                                                                    this
                                                                        .nameDragged &&
                                                                        this.assignToggleItemAttributes(
                                                                            n,
                                                                            e,
                                                                        );
                                                                if (!n) {
                                                                    const e =
                                                                        this.getIndex(
                                                                            this
                                                                                .holderDragged,
                                                                        );
                                                                    this.removeAttributesFromNewBlock(
                                                                        e,
                                                                    );
                                                                }
                                                            });
                                                        }
                                                    }
                                                },
                                            ));
                                    }
                                }
                                assignToggleItemAttributes(e, t) {
                                    if (e) {
                                        const e =
                                                t.getAttribute('foreignKey') ??
                                                t
                                                    .querySelector(
                                                        '.toggle-block__selector',
                                                    )
                                                    .getAttribute('id'),
                                            n = this.getIndex(
                                                this.holderDragged,
                                            );
                                        this.setAttributesToNewBlock(n, e);
                                    }
                                }
                                moveChildren(e, t = this.wrapper.id) {
                                    let n = document.querySelectorAll(
                                        `div[foreignKey="${t}"]`,
                                    );
                                    ((n =
                                        this.startBlock >= e
                                            ? [...n].reverse()
                                            : n),
                                        n.forEach((t) => {
                                            const n = this.getIndex(t);
                                            this.api.blocks.move(e, n);
                                            const o = t.querySelectorAll(
                                                '.toggle-block__selector',
                                            );
                                            if (o.length > 0) {
                                                const n = this.getIndex(t),
                                                    i =
                                                        this.startBlock < e
                                                            ? 0
                                                            : 1;
                                                o.forEach((e) =>
                                                    this.moveChildren(
                                                        n + i,
                                                        e.getAttribute('id'),
                                                    ),
                                                );
                                                const r = Math.abs(e - n);
                                                e =
                                                    this.startBlock < e
                                                        ? e + r
                                                        : e - r;
                                            }
                                        }));
                                }
                                restoreItemAttributes(e) {
                                    if (void 0 !== this.wrapper) {
                                        const t =
                                                this.api.blocks.getCurrentBlockIndex(),
                                            n =
                                                this.api.blocks.getBlockByIndex(
                                                    t,
                                                ),
                                            { holder: o } = n,
                                            i = !this.isPartOfAToggle(o),
                                            { length: r } = this.itemsId,
                                            { length: s } =
                                                document.querySelectorAll(
                                                    `div[foreignKey="${this.data.fk}"]`,
                                                );
                                        if (this.itemsId.includes(n.id) && i)
                                            this.setAttributesToNewBlock(t);
                                        else if (
                                            e.addedNodes[0] &&
                                            e?.previousSibling &&
                                            this.isPartOfAToggle(
                                                e.previousSibling,
                                            ) &&
                                            !this.isPartOfAToggle(
                                                e.addedNodes[0],
                                            ) &&
                                            r > s
                                        ) {
                                            const { id: o } = e.addedNodes[0],
                                                i = this.api.blocks.getById(o);
                                            (this.setAttributesToNewBlock(
                                                null,
                                                this.wrapper.id,
                                                i,
                                            ),
                                                (this.itemsId[t] = n.id));
                                        }
                                    }
                                }
                                createToggleWithShortcut(e) {
                                    const t = e.textContent;
                                    if (
                                        '>' === t[0] &&
                                        !this.isPartOfAToggle(e)
                                    ) {
                                        const e =
                                            this.api.blocks.getCurrentBlockIndex();
                                        (this.api.blocks.insert(
                                            'toggle',
                                            { text: t.slice(2) },
                                            this.api,
                                            e,
                                            !0,
                                        ),
                                            this.api.blocks.delete(e + 1),
                                            this.api.caret.setToBlock(e));
                                    }
                                }
                                nestBlock(e) {
                                    const t = e.previousElementSibling,
                                        n = t.firstChild.firstChild;
                                    if (
                                        this.isPartOfAToggle(n) ||
                                        this.isPartOfAToggle(t)
                                    ) {
                                        const o = t.getAttribute('foreignKey'),
                                            i = n.getAttribute('id'),
                                            r = o || i;
                                        (e.setAttribute(
                                            'will-be-a-nested-block',
                                            !0,
                                        ),
                                            document
                                                .getElementById(r)
                                                .children[1].focus());
                                    }
                                }
                                setNestedBlockAttributes() {
                                    const e =
                                            this.api.blocks.getCurrentBlockIndex(),
                                        t = this.api.blocks.getBlockByIndex(e),
                                        { holder: n } = t;
                                    n.getAttribute('will-be-a-nested-block') &&
                                        (n.removeAttribute(
                                            'will-be-a-nested-block',
                                        ),
                                        this.setAttributesToNewBlock(e),
                                        this.api.toolbar.close());
                                }
                                isPartOfAToggle(e) {
                                    const t = Array.from(e.classList),
                                        n = [
                                            'toggle-block__item',
                                            'toggle-block__input',
                                            'toggle-block__selector',
                                        ],
                                        o = n.some(
                                            (t) =>
                                                0 !==
                                                e.getElementsByClassName(t)
                                                    .length,
                                        );
                                    return n.some((e) => t.includes(e)) || o;
                                }
                                addSupportForCopyAndPasteAction() {
                                    if (!this.readOnly) {
                                        const e = document.querySelector(
                                                'div.codex-editor__redactor',
                                            ),
                                            t = {
                                                attributes: !0,
                                                childList: !0,
                                                characterData: !0,
                                            };
                                        new MutationObserver((e) => {
                                            e.forEach((e) => {
                                                'childList' === e.type &&
                                                    setTimeout(
                                                        this.resetIdToCopiedBlock.bind(
                                                            this,
                                                            e,
                                                        ),
                                                    );
                                            });
                                        }).observe(e, t);
                                    }
                                }
                                resetIdToCopiedBlock() {
                                    if (void 0 !== this.wrapper) {
                                        const e =
                                                this.api.blocks.getCurrentBlockIndex(),
                                            { holder: t } =
                                                this.api.blocks.getBlockByIndex(
                                                    e,
                                                );
                                        if (this.isPartOfAToggle(t)) {
                                            const n =
                                                t.getAttribute('foreignKey');
                                            if (
                                                document.querySelectorAll(
                                                    `#${n}`,
                                                ).length > 1
                                            ) {
                                                const t =
                                                        this.findToggleRootIndex(
                                                            e,
                                                            n,
                                                        ),
                                                    o = k();
                                                for (
                                                    let n = t;
                                                    n <= e;
                                                    n += 1
                                                ) {
                                                    const e =
                                                            this.api.blocks.getBlockByIndex(
                                                                n,
                                                            ),
                                                        { holder: i } = e;
                                                    n === t
                                                        ? i.firstChild.firstChild.setAttribute(
                                                              'id',
                                                              `fk-${o}`,
                                                          )
                                                        : i.setAttribute(
                                                              'foreignKey',
                                                              `fk-${o}`,
                                                          );
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        })(),
                        o.default
                    );
                })()),
            (e.exports = n()));
    })(Up);
    var Wp,
        qp = Np(zp);
    function Vp(e, t = 'docs-tab') {
        const n = {
            holder: t,
            data: null,
            tools: {
                underline: lh,
                header: { class: $d, inlineToolbar: !0 },
                paragraph: {
                    class: Rd,
                    inlineToolbar: !0,
                    config: {
                        placeholder:
                            'This panel can be used to document and describe your languge’s features in greater detail.',
                    },
                },
                table: {
                    class: sh,
                    inlineToolbar: !0,
                    config: { rows: 3, cols: 3, withHeadings: !0 },
                },
                list: { class: Mp, inlineToolbar: !0 },
                toggle: { class: qp, inlineToolbar: !0 },
                alignment: { class: jp, config: { default: 'left' } },
                textVariant: Hp,
            },
            tunes: ['alignment', 'textVariant'],
            logLevel: Wp.ERROR,
            readOnly: 'ref-docs' === t,
        };
        e && (n.data = e);
        const o = new qr(n);
        'docs-tab' === t && ns.set(o);
    }
    function Gp(t) {
        let n;
        return {
            c() {
                ((n = E('div')),
                    (n.innerHTML =
                        '<div class="container row text-center" style="height: 92vh; overflow-y: auto;"><div class="column" style="font-family: Gentium" id="docs-tab"></div></div>'),
                    I(n, 'class', 'tab-pane'),
                    I(n, 'spellcheck', 'false'));
            },
            m(e, t) {
                k(e, n, t);
            },
            p: e,
            i: e,
            o: e,
            d(e) {
                e && x(n);
            },
        };
    }
    function Kp(e) {
        return (Vp(!1), []);
    }
    !(function (e) {
        ((e.VERBOSE = 'VERBOSE'),
            (e.INFO = 'INFO'),
            (e.WARN = 'WARN'),
            (e.ERROR = 'ERROR'));
    })(Wp || (Wp = {}));
    class Yp extends Ee {
        constructor(e) {
            (super(), Ce(this, e, Kp, Gp, s, {}));
        }
    }
    const Xp = async (e, t, n) => await t({ name: e, setAttributes: () => {} }),
        Zp = 'xata.trace.kind',
        Jp = 'xata.sdk.version',
        Qp = 'xata.table',
        ef = 'http.request_id',
        tf = 'http.status_code',
        nf = 'http.host',
        of = 'http.scheme',
        rf = 'http.method',
        sf = 'http.url',
        af = 'http.route',
        lf = 'http.target',
        cf = 'cf.ray';
    function df(e) {
        return null != e;
    }
    function hf(e) {
        return e.filter(df);
    }
    function uf(e) {
        return Object.fromEntries(Object.entries(e).filter(([, e]) => df(e)));
    }
    function pf(e) {
        try {
            return e instanceof Blob;
        } catch (e) {
            return !1;
        }
    }
    function ff(e) {
        return (
            Boolean(e) &&
            'object' == typeof e &&
            !Array.isArray(e) &&
            !(e instanceof Date) &&
            !pf(e)
        );
    }
    function gf(e) {
        return null != e;
    }
    function mf(e) {
        return gf(e) && 'string' == typeof e;
    }
    function bf(e) {
        return gf(e) && Array.isArray(e) && e.every(mf);
    }
    function vf(e) {
        return gf(e) && 'number' == typeof e;
    }
    function yf(e, t) {
        const n = [];
        for (let o = 0; o < e.length; o += t) n.push(e.slice(o, o + t));
        return n;
    }
    function wf(e, t) {
        return e.reduce(
            (e, n) => e.then((e) => t(n).then((t) => (e.push(t), e))),
            Promise.resolve([]),
        );
    }
    function kf() {
        try {
            if (gf(process) && gf(process.env))
                return {
                    apiKey: process.env.XATA_API_KEY ?? xf(),
                    databaseURL: process.env.XATA_DATABASE_URL ?? Cf(),
                    branch: process.env.XATA_BRANCH ?? Ef(),
                    deployPreview: process.env.XATA_PREVIEW,
                    deployPreviewBranch: process.env.XATA_PREVIEW_BRANCH,
                    vercelGitCommitRef: process.env.VERCEL_GIT_COMMIT_REF,
                    vercelGitRepoOwner: process.env.VERCEL_GIT_REPO_OWNER,
                };
        } catch (e) {}
        try {
            if (ff(Deno) && ff(Deno.env))
                return {
                    apiKey: Deno.env.get('XATA_API_KEY') ?? xf(),
                    databaseURL: Deno.env.get('XATA_DATABASE_URL') ?? Cf(),
                    branch: Deno.env.get('XATA_BRANCH') ?? Ef(),
                    deployPreview: Deno.env.get('XATA_PREVIEW'),
                    deployPreviewBranch: Deno.env.get('XATA_PREVIEW_BRANCH'),
                    vercelGitCommitRef: Deno.env.get('VERCEL_GIT_COMMIT_REF'),
                    vercelGitRepoOwner: Deno.env.get('VERCEL_GIT_REPO_OWNER'),
                };
        } catch (e) {}
        return {
            apiKey: xf(),
            databaseURL: Cf(),
            branch: Ef(),
            deployPreview: void 0,
            deployPreviewBranch: void 0,
            vercelGitCommitRef: void 0,
            vercelGitRepoOwner: void 0,
        };
    }
    function xf() {
        try {
            return XATA_API_KEY;
        } catch (e) {
            return;
        }
    }
    function Cf() {
        try {
            return XATA_DATABASE_URL;
        } catch (e) {
            return;
        }
    }
    function Ef() {
        try {
            return XATA_BRANCH;
        } catch (e) {
            return;
        }
    }
    var Sf,
        Tf,
        _f,
        Bf,
        Of,
        If = (e, t, n) => {
            if (!t.has(e)) throw TypeError('Cannot ' + n);
        },
        Lf = (e, t, n) => (
            If(e, t, 'read from private field'),
            n ? n.call(e) : t.get(e)
        ),
        Af = (e, t, n) => {
            if (t.has(e))
                throw TypeError(
                    'Cannot add the same private member more than once',
                );
            t instanceof WeakSet ? t.add(e) : t.set(e, n);
        },
        Pf = (e, t, n, o) => (
            If(e, t, 'write to private field'),
            o ? o.call(e, n) : t.set(e, n),
            n
        );
    function Mf(e) {
        const t = 'undefined' != typeof fetch ? fetch : void 0,
            n = 'undefined' != typeof globalThis ? globalThis.fetch : void 0,
            o = e ?? t ?? n;
        if (!o)
            throw new Error(
                "Couldn't find a global `fetch`. Pass a fetch implementation explicitly.",
            );
        return o;
    }
    function Nf() {
        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(
            /[xy]/g,
            function (e) {
                const t = (16 * Math.random()) | 0;
                return ('x' == e ? t : (3 & t) | 8).toString(16);
            },
        );
    }
    function $f(e) {
        let t,
            n,
            o,
            i = !1;
        return function (r) {
            void 0 === t
                ? ((t = r), (n = 0), (o = -1))
                : (t = (function (e, t) {
                      const n = new Uint8Array(e.length + t.length);
                      return (n.set(e), n.set(t, e.length), n);
                  })(t, r));
            const s = t.length;
            let a = 0;
            for (; n < s; ) {
                i && (10 === t[n] && (a = ++n), (i = !1));
                let r = -1;
                for (; n < s && -1 === r; ++n)
                    switch (t[n]) {
                        case 58:
                            -1 === o && (o = n - a);
                            break;
                        case 13:
                            i = !0;
                        case 10:
                            r = n;
                    }
                if (-1 === r) break;
                (e(t.subarray(a, r), o), (a = n), (o = -1));
            }
            a === s ? (t = void 0) : 0 !== a && ((t = t.subarray(a)), (n -= a));
        };
    }
    ((Sf = new WeakMap()),
        (Tf = new WeakMap()),
        (_f = new WeakMap()),
        (Bf = new WeakSet()),
        (Of = function (e) {
            const t = new Promise((e) => Lf(this, Tf).push(e))
                .finally(() => {
                    (this.started--, this.running++);
                })
                .then(() => e())
                .finally(() => {
                    this.running--;
                    const e = Lf(this, Tf).shift();
                    void 0 !== e && (this.started++, e());
                });
            if (this.running + this.started < Lf(this, _f)) {
                const e = Lf(this, Tf).shift();
                void 0 !== e && (this.started++, e());
            }
            return t;
        }));
    const Rf = 'text/event-stream',
        jf = 'last-event-id';
    function Df(
        e,
        {
            signal: t,
            headers: n,
            onopen: o,
            onmessage: i,
            onclose: r,
            onerror: s,
            fetch: a,
            ...l
        },
    ) {
        return new Promise((s, c) => {
            const d = { ...n };
            let h;
            function u() {
                h.abort();
            }
            (d.accept || (d.accept = Rf),
                t?.addEventListener('abort', () => {
                    (u(), s());
                }));
            const p = a ?? fetch,
                f = o ?? Ff;
            !(async function () {
                h = new AbortController();
                try {
                    const t = await p(e, {
                        ...l,
                        headers: d,
                        signal: h.signal,
                    });
                    (await f(t),
                        await (async function (e, t) {
                            const n = e.getReader();
                            let o;
                            for (; !(o = await n.read()).done; ) t(o.value);
                        })(
                            t.body,
                            $f(
                                (function (e, t, n) {
                                    let o = {
                                        data: '',
                                        event: '',
                                        id: '',
                                        retry: void 0,
                                    };
                                    const i = new TextDecoder();
                                    return function (r, s) {
                                        if (0 === r.length)
                                            (n?.(o),
                                                (o = {
                                                    data: '',
                                                    event: '',
                                                    id: '',
                                                    retry: void 0,
                                                }));
                                        else if (s > 0) {
                                            const n = i.decode(
                                                    r.subarray(0, s),
                                                ),
                                                a =
                                                    s +
                                                    (32 === r[s + 1] ? 2 : 1),
                                                l = i.decode(r.subarray(a));
                                            switch (n) {
                                                case 'data':
                                                    o.data = o.data
                                                        ? o.data + '\n' + l
                                                        : l;
                                                    break;
                                                case 'event':
                                                    o.event = l;
                                                    break;
                                                case 'id':
                                                    e((o.id = l));
                                                    break;
                                                case 'retry':
                                                    const n = parseInt(l, 10);
                                                    isNaN(n) ||
                                                        t((o.retry = n));
                                            }
                                        }
                                    };
                                })(
                                    (e) => {
                                        e ? (d[jf] = e) : delete d[jf];
                                    },
                                    (e) => {},
                                    i,
                                ),
                            ),
                        ),
                        r?.(),
                        u(),
                        s());
                } catch (e) {}
            })();
        });
    }
    function Ff(e) {
        const t = e.headers?.get('content-type');
        if (!t?.startsWith(Rf))
            throw new Error(`Expected content-type to be ${Rf}, Actual: ${t}`);
    }
    const Hf = '0.26.9';
    class zf extends Error {
        constructor(e, t) {
            super(e, t);
        }
    }
    class Uf extends zf {
        constructor(e, t, n) {
            (super(qf(t)),
                (this.status = e),
                (this.errors = Wf(t)
                    ? t.errors
                    : [{ message: qf(t), status: e }]),
                (this.requestId = n),
                t instanceof Error &&
                    ((this.stack = t.stack), (this.cause = t.cause)));
        }
        toString() {
            const e = super.toString();
            return `[${this.status}] (${this.requestId ?? 'Unknown'}): ${e}`;
        }
    }
    function Wf(e) {
        return ff(e) && Array.isArray(e.errors);
    }
    function qf(e) {
        return e instanceof Error
            ? e.message
            : mf(e)
              ? e
              : ff((t = e)) && mf(t.message)
                ? e.message
                : Wf(e)
                  ? 'Bulk operation failed'
                  : 'Unexpected error';
        var t;
    }
    const Vf = new (class {
            constructor(e = 10) {
                (Af(this, Bf),
                    Af(this, Sf, void 0),
                    Af(this, Tf, void 0),
                    Af(this, _f, void 0),
                    Pf(this, Tf, []),
                    Pf(this, _f, e),
                    (this.running = 0),
                    (this.started = 0));
            }
            setFetch(e) {
                Pf(this, Sf, e);
            }
            getFetch() {
                if (!Lf(this, Sf)) throw new Error('Fetch not set');
                return Lf(this, Sf);
            }
            request(e, t) {
                const n = new Date(),
                    o = this.getFetch(),
                    i = async (r = !1) => {
                        const { promise: s, cancel: a } = (function (e) {
                                let t;
                                return {
                                    cancel: () => clearTimeout(t),
                                    promise: new Promise((n) => {
                                        t = setTimeout(() => {
                                            n();
                                        }, e);
                                    }),
                                };
                            })(3e5),
                            l = await Promise.race([
                                o(e, t),
                                s.then(() => null),
                            ]).finally(a);
                        if (!l) throw new Error('Request timed out');
                        if (429 === l.status) {
                            const e =
                                (function (e) {
                                    if (vf(e)) return e;
                                    if (mf(e)) {
                                        const t = Number(e);
                                        if (!Number.isNaN(t)) return t;
                                    }
                                })(l.headers?.get('x-ratelimit-reset')) ?? 1;
                            return (
                                await (async function (e) {
                                    return new Promise((t) => setTimeout(t, e));
                                })(1e3 * e),
                                await i(!0)
                            );
                        }
                        if (r) {
                            const e = new Date().getTime() - n.getTime();
                            console.warn(
                                `A request to Xata hit branch rate limits, was retried and stalled for ${e}ms`,
                            );
                        }
                        return l;
                    };
                return ((r = this),
                (s = Bf),
                (a = Of),
                If(r, s, 'access private method'),
                a).call(this, async () => await i());
                var r, s, a;
            }
        })(),
        Gf = (e, t = {}, n = {}) => {
            const o = Object.entries(t).reduce(
                    (e, [t, n]) => (null == n ? e : { ...e, [t]: n }),
                    {},
                ),
                i = new URLSearchParams(o).toString(),
                r = i.length > 0 ? `?${i}` : '',
                s = Object.entries(n).reduce(
                    (e, [t, n]) => ({
                        ...e,
                        [t]: encodeURIComponent(String(n ?? '')).replace(
                            '%3A',
                            ':',
                        ),
                    }),
                    {},
                );
            return e.replace(/\{\w*\}/g, (e) => s[e.slice(1, -1)]) + r;
        };
    function Kf({
        endpoint: e,
        path: t,
        workspacesApiUrl: n,
        apiUrl: o,
        pathParams: i = {},
    }) {
        if ('dataPlane' === e) {
            const e = mf(n) ? `${n}${t}` : n(t, i),
                o = mf(i.workspace)
                    ? e.replace('{workspaceId}', String(i.workspace))
                    : e;
            return mf(i.region) ? o.replace('{region}', String(i.region)) : o;
        }
        return `${o}${t}`;
    }
    function Yf(e) {
        const { groups: t } = /.*:\/\/(?<host>[^/]+).*/.exec(e) ?? {};
        return t?.host ? { Host: t.host } : {};
    }
    async function Xf(e, t) {
        if (!gf(e)) return;
        if (pf(e) || 'function' == typeof e.text) return e;
        const { 'Content-Type': n } = t ?? {};
        return 'application/json' === String(n).toLowerCase() && ff(e)
            ? JSON.stringify(e)
            : e;
    }
    const Zf = Nf();
    async function Jf({
        url: e,
        method: t,
        body: n,
        headers: o,
        pathParams: i,
        queryParams: r,
        fetch: s,
        apiKey: a,
        endpoint: l,
        apiUrl: c,
        workspacesApiUrl: d,
        trace: h,
        signal: u,
        clientID: p,
        sessionID: f,
        clientName: g,
        xataAgentExtra: m,
        fetchOptions: b = {},
        rawResponse: v = !1,
    }) {
        return (
            Vf.setFetch(s),
            await h(
                `${t.toUpperCase()} ${e}`,
                async ({ setAttributes: s }) => {
                    const h = Kf({
                            endpoint: l,
                            path: e,
                            workspacesApiUrl: d,
                            pathParams: i,
                            apiUrl: c,
                        }),
                        y = Gf(h, r, i),
                        w = y.includes('localhost')
                            ? y.replace(/^[^.]+\./, 'http://')
                            : y;
                    s({ [sf]: w, [lf]: Gf(e, r, i) });
                    const k = hf([
                            ['client', 'TS_SDK'],
                            ['version', Hf],
                            gf(g) ? ['service', g] : void 0,
                            ...Object.entries(m ?? {}),
                        ])
                            .map(([e, t]) => `${e}=${t}`)
                            .join('; '),
                        x = uf({
                            'Accept-Encoding': 'identity',
                            'Content-Type': 'application/json',
                            'X-Xata-Client-ID': p ?? Zf,
                            'X-Xata-Session-ID': f ?? Nf(),
                            'X-Xata-Agent': k,
                            ...o,
                            ...Yf(y),
                            Authorization: `Bearer ${a}`,
                        }),
                        C = await Vf.request(w, {
                            ...b,
                            method: t.toUpperCase(),
                            body: await Xf(n, x),
                            headers: x,
                            signal: u,
                        }),
                        { host: E, protocol: S } = (function (e) {
                            try {
                                const { host: t, protocol: n } = new URL(e);
                                return { host: t, protocol: n };
                            } catch (e) {
                                return {};
                            }
                        })(C.url),
                        T = C.headers?.get('x-request-id') ?? void 0;
                    s({
                        [Zp]: 'http',
                        [ef]: T,
                        [tf]: C.status,
                        [nf]: E,
                        [of]: S?.replace(':', ''),
                        [cf]: C.headers?.get('cf-ray') ?? void 0,
                    });
                    const _ = C.headers?.get('x-xata-message');
                    if ((_ && console.warn(_), 204 === C.status)) return {};
                    if (429 === C.status)
                        throw new Uf(C.status, 'Rate limit exceeded', T);
                    try {
                        const e = v ? await C.blob() : await C.json();
                        if (C.ok) return e;
                        throw new Uf(C.status, e, T);
                    } catch (e) {
                        throw new Uf(C.status, e, T);
                    }
                },
                { [rf]: t.toUpperCase(), [af]: e },
            )
        );
    }
    const Qf = async (e) => Jf({ ...e, endpoint: 'dataPlane' }),
        eg = (e, t) =>
            Qf({ url: '/db/{dbBranchName}', method: 'get', ...e, signal: t }),
        tg = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/transaction',
                method: 'post',
                ...e,
                signal: t,
            }),
        ng = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/data',
                method: 'post',
                ...e,
                signal: t,
            }),
        og = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}/column/{columnName}/file/{fileId}',
                method: 'get',
                ...e,
                signal: t,
            }),
        ig = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}/column/{columnName}/file/{fileId}',
                method: 'put',
                ...e,
                signal: t,
            }),
        rg = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}/column/{columnName}/file/{fileId}',
                method: 'delete',
                ...e,
                signal: t,
            }),
        sg = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}',
                method: 'get',
                ...e,
                signal: t,
            }),
        ag = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}',
                method: 'put',
                ...e,
                signal: t,
            }),
        lg = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}',
                method: 'patch',
                ...e,
                signal: t,
            }),
        cg = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}',
                method: 'post',
                ...e,
                signal: t,
            }),
        dg = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}',
                method: 'delete',
                ...e,
                signal: t,
            }),
        hg = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/query',
                method: 'post',
                ...e,
                signal: t,
            }),
        ug = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/search',
                method: 'post',
                ...e,
                signal: t,
            }),
        pg = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/search',
                method: 'post',
                ...e,
                signal: t,
            }),
        fg = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/vectorSearch',
                method: 'post',
                ...e,
                signal: t,
            }),
        gg = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/ask/{sessionId}',
                method: 'post',
                ...e,
                signal: t,
            }),
        mg = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/summarize',
                method: 'post',
                ...e,
                signal: t,
            }),
        bg = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/tables/{tableName}/aggregate',
                method: 'post',
                ...e,
                signal: t,
            }),
        vg = (e, t) =>
            Qf({
                url: '/db/{dbBranchName}/sql',
                method: 'post',
                ...e,
                signal: t,
            }),
        yg = async (e) => Jf({ ...e, endpoint: 'controlPlane' });
    !(function e(t, n) {
        const o = { ...t };
        for (const [t, i] of Object.entries(n))
            ff(i) && ff(o[t]) ? (o[t] = e(o[t], i)) : (o[t] = i);
        return o;
    })(
        {
            branch: {
                getBranchList: (e, t) =>
                    Qf({
                        url: '/dbs/{dbName}',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                getBranchDetails: eg,
                createBranch: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}',
                        method: 'put',
                        ...e,
                        signal: t,
                    }),
                deleteBranch: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}',
                        method: 'delete',
                        ...e,
                        signal: t,
                    }),
                copyBranch: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/copy',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                updateBranchMetadata: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/metadata',
                        method: 'put',
                        ...e,
                        signal: t,
                    }),
                getBranchMetadata: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/metadata',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                getBranchStats: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/stats',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                getGitBranchesMapping: (e, t) =>
                    Qf({
                        url: '/dbs/{dbName}/gitBranches',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                addGitBranchesEntry: (e, t) =>
                    Qf({
                        url: '/dbs/{dbName}/gitBranches',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                removeGitBranchesEntry: (e, t) =>
                    Qf({
                        url: '/dbs/{dbName}/gitBranches',
                        method: 'delete',
                        ...e,
                        signal: t,
                    }),
                resolveBranch: (e, t) =>
                    Qf({
                        url: '/dbs/{dbName}/resolveBranch',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
            },
            migrations: {
                getSchema: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/schema',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                getBranchMigrationHistory: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/migrations',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                getBranchMigrationPlan: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/migrations/plan',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                executeBranchMigrationPlan: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/migrations/execute',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                getBranchSchemaHistory: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/schema/history',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                compareBranchWithUserSchema: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/schema/compare',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                compareBranchSchemas: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/schema/compare/{branchName}',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                updateBranchSchema: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/schema/update',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                previewBranchSchemaEdit: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/schema/preview',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                applyBranchSchemaEdit: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/schema/apply',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                pushBranchMigrations: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/schema/push',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
            },
            migrationRequests: {
                queryMigrationRequests: (e, t) =>
                    Qf({
                        url: '/dbs/{dbName}/migrations/query',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                createMigrationRequest: (e, t) =>
                    Qf({
                        url: '/dbs/{dbName}/migrations',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                getMigrationRequest: (e, t) =>
                    Qf({
                        url: '/dbs/{dbName}/migrations/{mrNumber}',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                updateMigrationRequest: (e, t) =>
                    Qf({
                        url: '/dbs/{dbName}/migrations/{mrNumber}',
                        method: 'patch',
                        ...e,
                        signal: t,
                    }),
                listMigrationRequestsCommits: (e, t) =>
                    Qf({
                        url: '/dbs/{dbName}/migrations/{mrNumber}/commits',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                compareMigrationRequest: (e, t) =>
                    Qf({
                        url: '/dbs/{dbName}/migrations/{mrNumber}/compare',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                getMigrationRequestIsMerged: (e, t) =>
                    Qf({
                        url: '/dbs/{dbName}/migrations/{mrNumber}/merge',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                mergeMigrationRequest: (e, t) =>
                    Qf({
                        url: '/dbs/{dbName}/migrations/{mrNumber}/merge',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
            },
            table: {
                createTable: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}',
                        method: 'put',
                        ...e,
                        signal: t,
                    }),
                deleteTable: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}',
                        method: 'delete',
                        ...e,
                        signal: t,
                    }),
                updateTable: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}',
                        method: 'patch',
                        ...e,
                        signal: t,
                    }),
                getTableSchema: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}/schema',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                setTableSchema: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}/schema',
                        method: 'put',
                        ...e,
                        signal: t,
                    }),
                getTableColumns: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}/columns',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                addTableColumn: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}/columns',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                getColumn: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}/columns/{columnName}',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                updateColumn: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}/columns/{columnName}',
                        method: 'patch',
                        ...e,
                        signal: t,
                    }),
                deleteColumn: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}/columns/{columnName}',
                        method: 'delete',
                        ...e,
                        signal: t,
                    }),
            },
            records: {
                branchTransaction: tg,
                insertRecord: ng,
                getRecord: sg,
                insertRecordWithID: ag,
                updateRecordWithID: lg,
                upsertRecordWithID: cg,
                deleteRecord: dg,
                bulkInsertTableRecords: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}/bulk',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
            },
            files: {
                getFileItem: og,
                putFileItem: ig,
                deleteFileItem: rg,
                getFile: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}/column/{columnName}/file',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                putFile: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}/column/{columnName}/file',
                        method: 'put',
                        ...e,
                        signal: t,
                    }),
                deleteFile: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}/data/{recordId}/column/{columnName}/file',
                        method: 'delete',
                        ...e,
                        signal: t,
                    }),
                fileAccess: (e, t) =>
                    Qf({
                        url: '/file/{fileId}',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
            },
            searchAndFilter: {
                queryTable: hg,
                searchBranch: ug,
                searchTable: pg,
                vectorSearchTable: fg,
                askTable: (e, t) =>
                    Qf({
                        url: '/db/{dbBranchName}/tables/{tableName}/ask',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                askTableSession: gg,
                summarizeTable: mg,
                aggregateTable: bg,
            },
            sql: { sqlQuery: vg },
        },
        {
            oAuth: {
                getAuthorizationCode: (e, t) =>
                    yg({
                        url: '/oauth/authorize',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                grantAuthorizationCode: (e, t) =>
                    yg({
                        url: '/oauth/authorize',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                getUserOAuthClients: (e, t) =>
                    yg({
                        url: '/user/oauth/clients',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                deleteUserOAuthClient: (e, t) =>
                    yg({
                        url: '/user/oauth/clients/{clientId}',
                        method: 'delete',
                        ...e,
                        signal: t,
                    }),
                getUserOAuthAccessTokens: (e, t) =>
                    yg({
                        url: '/user/oauth/tokens',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                deleteOAuthAccessToken: (e, t) =>
                    yg({
                        url: '/user/oauth/tokens/{token}',
                        method: 'delete',
                        ...e,
                        signal: t,
                    }),
                updateOAuthAccessToken: (e, t) =>
                    yg({
                        url: '/user/oauth/tokens/{token}',
                        method: 'patch',
                        ...e,
                        signal: t,
                    }),
            },
            users: {
                getUser: (e, t) =>
                    yg({ url: '/user', method: 'get', ...e, signal: t }),
                updateUser: (e, t) =>
                    yg({ url: '/user', method: 'put', ...e, signal: t }),
                deleteUser: (e, t) =>
                    yg({ url: '/user', method: 'delete', ...e, signal: t }),
            },
            authentication: {
                getUserAPIKeys: (e, t) =>
                    yg({ url: '/user/keys', method: 'get', ...e, signal: t }),
                createUserAPIKey: (e, t) =>
                    yg({
                        url: '/user/keys/{keyName}',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                deleteUserAPIKey: (e, t) =>
                    yg({
                        url: '/user/keys/{keyName}',
                        method: 'delete',
                        ...e,
                        signal: t,
                    }),
            },
            workspaces: {
                getWorkspacesList: (e, t) =>
                    yg({ url: '/workspaces', method: 'get', ...e, signal: t }),
                createWorkspace: (e, t) =>
                    yg({ url: '/workspaces', method: 'post', ...e, signal: t }),
                getWorkspace: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                updateWorkspace: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}',
                        method: 'put',
                        ...e,
                        signal: t,
                    }),
                deleteWorkspace: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}',
                        method: 'delete',
                        ...e,
                        signal: t,
                    }),
                getWorkspaceMembersList: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/members',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                updateWorkspaceMemberRole: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/members/{userId}',
                        method: 'put',
                        ...e,
                        signal: t,
                    }),
                removeWorkspaceMember: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/members/{userId}',
                        method: 'delete',
                        ...e,
                        signal: t,
                    }),
            },
            invites: {
                inviteWorkspaceMember: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/invites',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                updateWorkspaceMemberInvite: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/invites/{inviteId}',
                        method: 'patch',
                        ...e,
                        signal: t,
                    }),
                cancelWorkspaceMemberInvite: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/invites/{inviteId}',
                        method: 'delete',
                        ...e,
                        signal: t,
                    }),
                acceptWorkspaceMemberInvite: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/invites/{inviteKey}/accept',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                resendWorkspaceMemberInvite: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/invites/{inviteId}/resend',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
            },
            xbcontrolOther: {
                listClusters: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/clusters',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                createCluster: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/clusters',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                getCluster: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/clusters/{clusterId}',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                updateCluster: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/clusters/{clusterId}',
                        method: 'patch',
                        ...e,
                        signal: t,
                    }),
            },
            databases: {
                getDatabaseList: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/dbs',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                createDatabase: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/dbs/{dbName}',
                        method: 'put',
                        ...e,
                        signal: t,
                    }),
                deleteDatabase: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/dbs/{dbName}',
                        method: 'delete',
                        ...e,
                        signal: t,
                    }),
                getDatabaseMetadata: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/dbs/{dbName}',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                updateDatabaseMetadata: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/dbs/{dbName}',
                        method: 'patch',
                        ...e,
                        signal: t,
                    }),
                renameDatabase: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/dbs/{dbName}/rename',
                        method: 'post',
                        ...e,
                        signal: t,
                    }),
                getDatabaseGithubSettings: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/dbs/{dbName}/github',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
                updateDatabaseGithubSettings: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/dbs/{dbName}/github',
                        method: 'put',
                        ...e,
                        signal: t,
                    }),
                deleteDatabaseGithubSettings: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/dbs/{dbName}/github',
                        method: 'delete',
                        ...e,
                        signal: t,
                    }),
                listRegions: (e, t) =>
                    yg({
                        url: '/workspaces/{workspaceId}/regions',
                        method: 'get',
                        ...e,
                        signal: t,
                    }),
            },
        },
    );
    class wg {}
    function kg(e, ...t) {
        if (!gf(e)) return;
        const n = (function (e) {
                return e
                    .flatMap((e) =>
                        Object.entries(e).map(([e, t]) => {
                            if ('trim' === e) {
                                const {
                                    left: n = 0,
                                    top: o = 0,
                                    right: i = 0,
                                    bottom: r = 0,
                                } = t;
                                return `${e}=${[o, i, r, n].join(';')}`;
                            }
                            if ('gravity' === e && 'object' == typeof t) {
                                const { x: n = 0.5, y: o = 0.5 } = t;
                                return `${e}=${[n, o].join('x')}`;
                            }
                            return `${e}=${t}`;
                        }),
                    )
                    .join(',');
            })(t),
            { hostname: o, pathname: i, search: r } = new URL(e),
            s = i.split('/'),
            a = s.findIndex((e) => 'transform' === e);
        return `https://${o}${`/transform/${[(a >= 0 ? s.splice(a, 2) : [])[1], n].filter(gf).join(',')}`}${s.join('/')}${r}`;
    }
    class xg {
        constructor(e) {
            ((this.id = e.id),
                (this.name = e.name || ''),
                (this.mediaType = e.mediaType || 'application/octet-stream'),
                (this.base64Content = e.base64Content),
                (this.enablePublicUrl = e.enablePublicUrl ?? !1),
                (this.signedUrlTimeout = e.signedUrlTimeout ?? 300),
                (this.size = e.size ?? 0),
                (this.version = e.version ?? 1),
                (this.url = e.url || ''),
                (this.signedUrl = e.signedUrl),
                (this.attributes = e.attributes || {}));
        }
        static fromBuffer(e, t = {}) {
            const n = e.toString('base64');
            return new xg({ ...t, base64Content: n });
        }
        toBuffer() {
            if (!this.base64Content)
                throw new Error(
                    'File content is not available, please select property "base64Content" when querying the file',
                );
            return Buffer.from(this.base64Content, 'base64');
        }
        static fromArrayBuffer(e, t = {}) {
            const n = new Uint8Array(e);
            return this.fromUint8Array(n, t);
        }
        toArrayBuffer() {
            if (!this.base64Content)
                throw new Error(
                    'File content is not available, please select property "base64Content" when querying the file',
                );
            const e = atob(this.base64Content);
            return new ArrayBuffer(e.length);
        }
        static fromUint8Array(e, t = {}) {
            let n = '';
            for (let t = 0; t < e.byteLength; t++)
                n += String.fromCharCode(e[t]);
            const o = btoa(n);
            return new xg({ ...t, base64Content: o });
        }
        toUint8Array() {
            if (!this.base64Content)
                throw new Error(
                    'File content is not available, please select property "base64Content" when querying the file',
                );
            const e = atob(this.base64Content),
                t = new Uint8Array(e.length);
            for (let n = 0; n < e.length; n++) t[n] = e.charCodeAt(n);
            return t;
        }
        static async fromBlob(e, t = {}) {
            const n = t.name ?? e.name,
                o = e.type,
                i = await e.arrayBuffer();
            return this.fromArrayBuffer(i, { ...t, name: n, mediaType: o });
        }
        toBlob() {
            if (!this.base64Content)
                throw new Error(
                    'File content is not available, please select property "base64Content" when querying the file',
                );
            const e = atob(this.base64Content),
                t = new Uint8Array(e.length);
            for (let n = 0; n < e.length; n++) t[n] = e.charCodeAt(n);
            return new Blob([t], { type: this.mediaType });
        }
        static fromString(e, t = {}) {
            const n = btoa(e);
            return new xg({ ...t, base64Content: n });
        }
        toString() {
            if (!this.base64Content)
                throw new Error(
                    'File content is not available, please select property "base64Content" when querying the file',
                );
            return atob(this.base64Content);
        }
        static fromBase64(e, t = {}) {
            return new xg({ ...t, base64Content: e });
        }
        toBase64() {
            if (!this.base64Content)
                throw new Error(
                    'File content is not available, please select property "base64Content" when querying the file',
                );
            return this.base64Content;
        }
        transform(...e) {
            return {
                url: kg(this.url, ...e),
                signedUrl: kg(this.signedUrl, ...e),
                metadataUrl: kg(this.url, ...e, { format: 'json' }),
                metadataSignedUrl: kg(this.signedUrl, ...e, { format: 'json' }),
            };
        }
    }
    const Cg = async (e) => {
        if (!gf(e)) return null;
        const {
            id: t,
            name: n,
            mediaType: o,
            base64Content: i,
            enablePublicUrl: r,
            signedUrlTimeout: s,
        } = await e;
        return uf({
            id: t,
            name: n || void 0,
            mediaType: o,
            base64Content: i,
            enablePublicUrl: r,
            signedUrlTimeout: s,
        });
    };
    function Eg(e) {
        if (!gf(e)) return;
        if (!ff(e)) return e;
        const t = Object.fromEntries(
            Object.entries(e).reduce((e, [t, n]) => {
                if (!gf(n)) return e;
                if (Array.isArray(n)) {
                    const o = n.map((e) => Eg(e)).filter((e) => gf(e));
                    return 0 === o.length ? e : [...e, [t, o]];
                }
                if (ff(n)) {
                    const o = Eg(n);
                    return gf(o) ? [...e, [t, o]] : e;
                }
                return [...e, [t, n]];
            }, []),
        );
        return Object.keys(t).length > 0 ? t : void 0;
    }
    function Sg(e) {
        if (!gf(e)) return e;
        if (mf(e)) return e;
        try {
            return JSON.stringify(e);
        } catch (t) {
            return e;
        }
    }
    function Tg(e) {
        try {
            return JSON.parse(e);
        } catch (t) {
            return e;
        }
    }
    var _g,
        Bg,
        Og = (e, t, n) => {
            if (!t.has(e)) throw TypeError('Cannot ' + n);
        },
        Ig = (e, t, n) => (
            Og(e, t, 'read from private field'),
            n ? n.call(e) : t.get(e)
        ),
        Lg = (e, t, n) => {
            if (t.has(e))
                throw TypeError(
                    'Cannot add the same private member more than once',
                );
            t instanceof WeakSet ? t.add(e) : t.set(e, n);
        },
        Ag = (e, t, n, o) => (
            Og(e, t, 'write to private field'),
            o ? o.call(e, n) : t.set(e, n),
            n
        );
    class Pg {
        constructor(e, t, n = []) {
            (Lg(this, _g, void 0),
                Ag(this, _g, e),
                (this.meta = t),
                (this.records = new $g(this, n)));
        }
        async nextPage(e, t) {
            return Ig(this, _g).getPaginated({
                pagination: {
                    size: e,
                    offset: t,
                    after: this.meta.page.cursor,
                },
            });
        }
        async previousPage(e, t) {
            return Ig(this, _g).getPaginated({
                pagination: {
                    size: e,
                    offset: t,
                    before: this.meta.page.cursor,
                },
            });
        }
        async startPage(e, t) {
            return Ig(this, _g).getPaginated({
                pagination: {
                    size: e,
                    offset: t,
                    start: this.meta.page.cursor,
                },
            });
        }
        async endPage(e, t) {
            return Ig(this, _g).getPaginated({
                pagination: { size: e, offset: t, end: this.meta.page.cursor },
            });
        }
        hasNextPage() {
            return this.meta.page.more;
        }
    }
    _g = new WeakMap();
    const Mg = 1e3,
        Ng = 20;
    Bg = new WeakMap();
    let $g = class e extends Array {
        constructor(...t) {
            (super(...e.parseConstructorParams(...t)),
                Lg(this, Bg, void 0),
                Ag(
                    this,
                    Bg,
                    ff(t[0]?.meta)
                        ? t[0]
                        : {
                              meta: { page: { cursor: '', more: !1 } },
                              records: [],
                          },
                ));
        }
        static parseConstructorParams(...e) {
            if (1 === e.length && 'number' == typeof e[0])
                return new Array(e[0]);
            if (e.length <= 2 && ff(e[0]?.meta) && Array.isArray(e[1] ?? [])) {
                const t = e[1] ?? e[0].records ?? [];
                return new Array(...t);
            }
            return new Array(...e);
        }
        toArray() {
            return new Array(...this);
        }
        toSerializable() {
            return JSON.parse(this.toString());
        }
        toString() {
            return JSON.stringify(this.toArray());
        }
        map(e, t) {
            return this.toArray().map(e, t);
        }
        async nextPage(t, n) {
            const o = await Ig(this, Bg).nextPage(t, n);
            return new e(o);
        }
        async previousPage(t, n) {
            const o = await Ig(this, Bg).previousPage(t, n);
            return new e(o);
        }
        async startPage(t, n) {
            const o = await Ig(this, Bg).startPage(t, n);
            return new e(o);
        }
        async endPage(t, n) {
            const o = await Ig(this, Bg).endPage(t, n);
            return new e(o);
        }
        hasNextPage() {
            return Ig(this, Bg).meta.page.more;
        }
    };
    var Rg,
        jg,
        Dg,
        Fg,
        Hg,
        zg = (e, t, n) => {
            if (!t.has(e)) throw TypeError('Cannot ' + n);
        },
        Ug = (e, t, n) => (
            zg(e, t, 'read from private field'),
            n ? n.call(e) : t.get(e)
        ),
        Wg = (e, t, n) => {
            if (t.has(e))
                throw TypeError(
                    'Cannot add the same private member more than once',
                );
            t instanceof WeakSet ? t.add(e) : t.set(e, n);
        },
        qg = (e, t, n, o) => (
            zg(e, t, 'write to private field'),
            o ? o.call(e, n) : t.set(e, n),
            n
        ),
        Vg = (e, t, n) => (zg(e, t, 'access private method'), n);
    const Gg = class e {
        constructor(e, t, n, o) {
            (Wg(this, Fg),
                Wg(this, Rg, void 0),
                Wg(this, jg, void 0),
                Wg(this, Dg, { filter: {} }),
                (this.meta = { page: { cursor: 'start', more: !0, size: Ng } }),
                (this.records = new $g(this, [])),
                qg(this, Rg, t),
                qg(this, jg, e || this));
            const i = (function (e, t) {
                if (
                    ((n = e.pagination),
                    gf(n) &&
                        (gf(n.start) ||
                            gf(n.end) ||
                            gf(n.after) ||
                            gf(n.before)))
                )
                    return { ...t, sort: void 0, filter: void 0 };
                var n;
                return t;
            })(n, o);
            ((Ug(this, Dg).filter = n.filter ?? i?.filter ?? {}),
                (Ug(this, Dg).filter.$any = n.filter?.$any ?? i?.filter?.$any),
                (Ug(this, Dg).filter.$all = n.filter?.$all ?? i?.filter?.$all),
                (Ug(this, Dg).filter.$not = n.filter?.$not ?? i?.filter?.$not),
                (Ug(this, Dg).filter.$none =
                    n.filter?.$none ?? i?.filter?.$none),
                (Ug(this, Dg).sort = n.sort ?? i?.sort),
                (Ug(this, Dg).columns = n.columns ?? i?.columns),
                (Ug(this, Dg).consistency = n.consistency ?? i?.consistency),
                (Ug(this, Dg).pagination = n.pagination ?? i?.pagination),
                (Ug(this, Dg).cache = n.cache ?? i?.cache),
                (Ug(this, Dg).fetchOptions = n.fetchOptions ?? i?.fetchOptions),
                (this.any = this.any.bind(this)),
                (this.all = this.all.bind(this)),
                (this.not = this.not.bind(this)),
                (this.filter = this.filter.bind(this)),
                (this.sort = this.sort.bind(this)),
                (this.none = this.none.bind(this)),
                Object.defineProperty(this, 'table', { enumerable: !1 }),
                Object.defineProperty(this, 'repository', { enumerable: !1 }));
        }
        getQueryOptions() {
            return Ug(this, Dg);
        }
        key() {
            const {
                columns: e = [],
                filter: t = {},
                sort: n = [],
                pagination: o = {},
            } = Ug(this, Dg);
            return (function (e) {
                try {
                    return btoa(e);
                } catch (t) {
                    return Buffer.from(e).toString('base64');
                }
            })(
                JSON.stringify({
                    columns: e,
                    filter: t,
                    sort: n,
                    pagination: o,
                }),
            );
        }
        any(...t) {
            const n = t.map((e) => e.getQueryOptions().filter ?? {});
            return new e(
                Ug(this, jg),
                Ug(this, Rg),
                { filter: { $any: n } },
                Ug(this, Dg),
            );
        }
        all(...t) {
            const n = t.map((e) => e.getQueryOptions().filter ?? {});
            return new e(
                Ug(this, jg),
                Ug(this, Rg),
                { filter: { $all: n } },
                Ug(this, Dg),
            );
        }
        not(...t) {
            const n = t.map((e) => e.getQueryOptions().filter ?? {});
            return new e(
                Ug(this, jg),
                Ug(this, Rg),
                { filter: { $not: n } },
                Ug(this, Dg),
            );
        }
        none(...t) {
            const n = t.map((e) => e.getQueryOptions().filter ?? {});
            return new e(
                Ug(this, jg),
                Ug(this, Rg),
                { filter: { $none: n } },
                Ug(this, Dg),
            );
        }
        filter(t, n) {
            if (1 === arguments.length) {
                const n = Object.entries(t ?? {}).map(([e, t]) => ({
                        [e]: Vg(this, Fg, Hg).call(this, e, t),
                    })),
                    o = hf([Ug(this, Dg).filter?.$all].flat().concat(n));
                return new e(
                    Ug(this, jg),
                    Ug(this, Rg),
                    { filter: { $all: o } },
                    Ug(this, Dg),
                );
            }
            {
                const o =
                        gf(t) && gf(n)
                            ? [{ [t]: Vg(this, Fg, Hg).call(this, t, n) }]
                            : void 0,
                    i = hf([Ug(this, Dg).filter?.$all].flat().concat(o));
                return new e(
                    Ug(this, jg),
                    Ug(this, Rg),
                    { filter: { $all: i } },
                    Ug(this, Dg),
                );
            }
        }
        sort(t, n = 'asc') {
            const o = [
                ...[Ug(this, Dg).sort ?? []].flat(),
                { column: t, direction: n },
            ];
            return new e(Ug(this, jg), Ug(this, Rg), { sort: o }, Ug(this, Dg));
        }
        select(t) {
            return new e(
                Ug(this, jg),
                Ug(this, Rg),
                { columns: t },
                Ug(this, Dg),
            );
        }
        getPaginated(t = {}) {
            const n = new e(Ug(this, jg), Ug(this, Rg), t, Ug(this, Dg));
            return Ug(this, jg).query(n);
        }
        async *[Symbol.asyncIterator]() {
            for await (const [e] of this.getIterator({ batchSize: 1 })) yield e;
        }
        async *getIterator(e = {}) {
            const { batchSize: t = 1 } = e;
            let n = await this.getPaginated({
                    ...e,
                    pagination: { size: t, offset: 0 },
                }),
                o = n.hasNextPage();
            for (yield n.records; o; )
                ((n = await n.nextPage()),
                    (o = n.hasNextPage()),
                    yield n.records);
        }
        async getMany(e = {}) {
            const { pagination: t = {}, ...n } = e,
                { size: o = Ng, offset: i } = t,
                r = o <= Mg ? o : Mg;
            let s = await this.getPaginated({
                ...n,
                pagination: { size: r, offset: i },
            });
            const a = [...s.records];
            for (; s.hasNextPage() && a.length < o; )
                ((s = await s.nextPage()), a.push(...s.records));
            s.hasNextPage() &&
                void 0 === e.pagination?.size &&
                console.trace(
                    'Calling getMany does not return all results. Paginate to get all results or call getAll.',
                );
            return new $g(s, a.slice(0, o));
        }
        async getAll(e = {}) {
            const { batchSize: t = Mg, ...n } = e,
                o = [];
            for await (const e of this.getIterator({ ...n, batchSize: t }))
                o.push(...e);
            return o;
        }
        async getFirst(e = {}) {
            return (
                (await this.getMany({ ...e, pagination: { size: 1 } }))[0] ??
                null
            );
        }
        async getFirstOrThrow(e = {}) {
            const t = await this.getMany({ ...e, pagination: { size: 1 } });
            if (void 0 === t[0]) throw new Error('No results found.');
            return t[0];
        }
        async summarize(t = {}) {
            const { summaries: n, summariesFilter: o, ...i } = t,
                r = new e(Ug(this, jg), Ug(this, Rg), i, Ug(this, Dg));
            return Ug(this, jg).summarizeTable(r, n, o);
        }
        cache(t) {
            return new e(
                Ug(this, jg),
                Ug(this, Rg),
                { cache: t },
                Ug(this, Dg),
            );
        }
        nextPage(e, t) {
            return this.startPage(e, t);
        }
        previousPage(e, t) {
            return this.startPage(e, t);
        }
        startPage(e, t) {
            return this.getPaginated({ pagination: { size: e, offset: t } });
        }
        endPage(e, t) {
            return this.getPaginated({
                pagination: { size: e, offset: t, before: 'end' },
            });
        }
        hasNextPage() {
            return this.meta.page.more;
        }
    };
    ((Rg = new WeakMap()),
        (jg = new WeakMap()),
        (Dg = new WeakMap()),
        (Fg = new WeakSet()),
        (Hg = function (e, t) {
            const n = Ug(this, Rg).schema?.columns.find(
                ({ name: t }) => t === e,
            )?.type;
            return 'multiple' === n && (mf(t) || bf(t))
                ? { $includes: t }
                : 'link' === n && ff(t) && mf(t.id)
                  ? t.id
                  : t;
        }));
    let Kg = Gg;
    function Yg(e) {
        return ff(e) && mf(e?.id);
    }
    function Xg(e) {
        return (
            !!Array.isArray(e) &&
            e.every(
                (e) =>
                    'string' == typeof e ||
                    ('object' == typeof e &&
                        (function (e) {
                            return ff(e) && mf(e.name);
                        })(e)),
            )
        );
    }
    function Zg(e) {
        return (
            ff(e) &&
            Object.entries(e).every(([e, t]) =>
                '*' === e ? 'random' === t : 'asc' === t || 'desc' === t,
            )
        );
    }
    function Jg(e) {
        if (mf(e)) return { [e]: 'asc' };
        if (Array.isArray(e)) return e.map((e) => Jg(e));
        if (Zg(e)) return e;
        if (
            (function (e) {
                return ff(e) && !Zg(e) && void 0 !== e.column;
            })(e)
        )
            return { [e.column]: e.direction ?? 'asc' };
        throw new Error(`Invalid sort filter: ${e}`);
    }
    var Qg,
        em,
        tm,
        nm,
        om,
        im,
        rm,
        sm,
        am,
        lm,
        cm,
        dm,
        hm,
        um,
        pm,
        fm,
        gm,
        mm,
        bm,
        vm,
        ym,
        wm,
        km,
        xm,
        Cm,
        Em,
        Sm,
        Tm,
        _m,
        Bm,
        Om = (e, t, n) => {
            if (!t.has(e)) throw TypeError('Cannot ' + n);
        },
        Im = (e, t, n) => (
            Om(e, t, 'read from private field'),
            n ? n.call(e) : t.get(e)
        ),
        Lm = (e, t, n) => {
            if (t.has(e))
                throw TypeError(
                    'Cannot add the same private member more than once',
                );
            t instanceof WeakSet ? t.add(e) : t.set(e, n);
        },
        Am = (e, t, n, o) => (
            Om(e, t, 'write to private field'),
            o ? o.call(e, n) : t.set(e, n),
            n
        ),
        Pm = (e, t, n) => (Om(e, t, 'access private method'), n);
    const Mm = 1e3;
    class Nm extends Kg {
        constructor(e) {
            (super(
                null,
                {
                    name: e.table,
                    schema: e.schemaTables?.find((t) => t.name === e.table),
                },
                {},
            ),
                Lm(this, rm),
                Lm(this, am),
                Lm(this, cm),
                Lm(this, hm),
                Lm(this, pm),
                Lm(this, gm),
                Lm(this, bm),
                Lm(this, ym),
                Lm(this, km),
                Lm(this, Cm),
                Lm(this, Sm),
                Lm(this, _m),
                Lm(this, Qg, void 0),
                Lm(this, em, void 0),
                Lm(this, tm, void 0),
                Lm(this, nm, void 0),
                Lm(this, om, void 0),
                Lm(this, im, void 0),
                Am(this, Qg, e.table),
                Am(this, tm, e.db),
                Am(this, nm, e.pluginOptions.cache),
                Am(this, om, e.schemaTables),
                Am(this, em, () => ({ ...e.pluginOptions, sessionID: Nf() })));
            const t = e.pluginOptions.trace ?? Xp;
            Am(this, im, async (e, n, o = {}) =>
                t(e, n, {
                    ...o,
                    [Qp]: Im(this, Qg),
                    [Zp]: 'sdk-operation',
                    [Jp]: Hf,
                }),
            );
        }
        async create(e, t, n, o) {
            return Im(this, im).call(this, 'create', async () => {
                const i = Dm(t, n, o);
                if (Array.isArray(e)) {
                    if (0 === e.length) return [];
                    const n = await Pm(this, cm, dm).call(this, e, {
                            ifVersion: i,
                            createOnly: !0,
                        }),
                        o = Xg(t) ? t : ['*'];
                    return await this.read(n, o);
                }
                if (mf(e) && ff(t)) {
                    if ('' === e) throw new Error("The id can't be empty");
                    const o = Xg(n) ? n : void 0;
                    return await Pm(this, am, lm).call(this, e, t, o, {
                        createOnly: !0,
                        ifVersion: i,
                    });
                }
                if (ff(e) && mf(e.id)) {
                    if ('' === e.id) throw new Error("The id can't be empty");
                    const n = Xg(t) ? t : void 0;
                    return await Pm(this, am, lm).call(
                        this,
                        e.id,
                        { ...e, id: void 0 },
                        n,
                        { createOnly: !0, ifVersion: i },
                    );
                }
                if (ff(e)) {
                    const n = Xg(t) ? t : void 0;
                    return Pm(this, rm, sm).call(this, e, n);
                }
                throw new Error('Invalid arguments for create method');
            });
        }
        async read(e, t) {
            return Im(this, im).call(this, 'read', async () => {
                const n = Xg(t) ? t : ['*'];
                if (Array.isArray(e)) {
                    if (0 === e.length) return [];
                    const t = e.map((e) => Rm(e)),
                        o = (
                            await this.getAll({
                                filter: { id: { $any: hf(t) } },
                                columns: n,
                            })
                        ).reduce((e, t) => ((e[t.id] = t), e), {});
                    return t.map((e) => o[e ?? ''] ?? null);
                }
                const o = Rm(e);
                if (o)
                    try {
                        const e = await sg({
                                pathParams: {
                                    workspace: '{workspaceId}',
                                    dbBranchName: '{dbBranch}',
                                    region: '{region}',
                                    tableName: Im(this, Qg),
                                    recordId: o,
                                },
                                queryParams: { columns: n },
                                ...Im(this, em).call(this),
                            }),
                            t = await Pm(this, Sm, Tm).call(this);
                        return $m(Im(this, tm), t, Im(this, Qg), e, n);
                    } catch (e) {
                        if (ff(e) && 404 === e.status) return null;
                        throw e;
                    }
                return null;
            });
        }
        async readOrThrow(e, t) {
            return Im(this, im).call(this, 'readOrThrow', async () => {
                const n = await this.read(e, t);
                if (Array.isArray(n)) {
                    const t = hf(
                        e.filter((e, t) => null === n[t]).map((e) => Rm(e)),
                    );
                    if (t.length > 0)
                        throw new Error(
                            `Could not find records with ids: ${t.join(', ')}`,
                        );
                    return n;
                }
                if (null === n) {
                    const t = Rm(e) ?? 'unknown';
                    throw new Error(`Record with id ${t} not found`);
                }
                return n;
            });
        }
        async update(e, t, n, o) {
            return Im(this, im).call(this, 'update', async () => {
                const i = Dm(t, n, o);
                if (Array.isArray(e)) {
                    if (0 === e.length) return [];
                    const n = await this.read(e, ['id']),
                        o = e.filter((e, t) => null !== n[t]);
                    await Pm(this, pm, fm).call(this, o, {
                        ifVersion: i,
                        upsert: !1,
                    });
                    const r = Xg(t) ? t : ['*'];
                    return await this.read(e, r);
                }
                try {
                    if (mf(e) && ff(t)) {
                        const o = Xg(n) ? n : void 0;
                        return await Pm(this, hm, um).call(this, e, t, o, {
                            ifVersion: i,
                        });
                    }
                    if (ff(e) && mf(e.id)) {
                        const n = Xg(t) ? t : void 0;
                        return await Pm(this, hm, um).call(
                            this,
                            e.id,
                            { ...e, id: void 0 },
                            n,
                            { ifVersion: i },
                        );
                    }
                } catch (e) {
                    if (422 === e.status) return null;
                    throw e;
                }
                throw new Error('Invalid arguments for update method');
            });
        }
        async updateOrThrow(e, t, n, o) {
            return Im(this, im).call(this, 'updateOrThrow', async () => {
                const i = await this.update(e, t, n, o);
                if (Array.isArray(i)) {
                    const t = hf(
                        e.filter((e, t) => null === i[t]).map((e) => Rm(e)),
                    );
                    if (t.length > 0)
                        throw new Error(
                            `Could not find records with ids: ${t.join(', ')}`,
                        );
                    return i;
                }
                if (null === i) {
                    const t = Rm(e) ?? 'unknown';
                    throw new Error(`Record with id ${t} not found`);
                }
                return i;
            });
        }
        async createOrUpdate(e, t, n, o) {
            return Im(this, im).call(this, 'createOrUpdate', async () => {
                const i = Dm(t, n, o);
                if (Array.isArray(e)) {
                    if (0 === e.length) return [];
                    await Pm(this, pm, fm).call(this, e, {
                        ifVersion: i,
                        upsert: !0,
                    });
                    const n = Xg(t) ? t : ['*'];
                    return await this.read(e, n);
                }
                if (mf(e) && ff(t)) {
                    if ('' === e) throw new Error("The id can't be empty");
                    const o = Xg(n) ? n : void 0;
                    return await Pm(this, gm, mm).call(this, e, t, o, {
                        ifVersion: i,
                    });
                }
                if (ff(e) && mf(e.id)) {
                    if ('' === e.id) throw new Error("The id can't be empty");
                    const t = Xg(n) ? n : void 0;
                    return await Pm(this, gm, mm).call(
                        this,
                        e.id,
                        { ...e, id: void 0 },
                        t,
                        { ifVersion: i },
                    );
                }
                if (!gf(e) && ff(t)) return await this.create(t, n);
                if (ff(e) && !gf(e.id)) return await this.create(e, t);
                throw new Error('Invalid arguments for createOrUpdate method');
            });
        }
        async createOrReplace(e, t, n, o) {
            return Im(this, im).call(this, 'createOrReplace', async () => {
                const i = Dm(t, n, o);
                if (Array.isArray(e)) {
                    if (0 === e.length) return [];
                    const n = await Pm(this, cm, dm).call(this, e, {
                            ifVersion: i,
                            createOnly: !1,
                        }),
                        o = Xg(t) ? t : ['*'];
                    return await this.read(n, o);
                }
                if (mf(e) && ff(t)) {
                    if ('' === e) throw new Error("The id can't be empty");
                    const o = Xg(n) ? n : void 0;
                    return await Pm(this, am, lm).call(this, e, t, o, {
                        createOnly: !1,
                        ifVersion: i,
                    });
                }
                if (ff(e) && mf(e.id)) {
                    if ('' === e.id) throw new Error("The id can't be empty");
                    const t = Xg(n) ? n : void 0;
                    return await Pm(this, am, lm).call(
                        this,
                        e.id,
                        { ...e, id: void 0 },
                        t,
                        { createOnly: !1, ifVersion: i },
                    );
                }
                if (!gf(e) && ff(t)) return await this.create(t, n);
                if (ff(e) && !gf(e.id)) return await this.create(e, t);
                throw new Error('Invalid arguments for createOrReplace method');
            });
        }
        async delete(e, t) {
            return Im(this, im).call(this, 'delete', async () => {
                if (Array.isArray(e)) {
                    if (0 === e.length) return [];
                    const n = e.map((e) => {
                            if (mf(e)) return e;
                            if (mf(e.id)) return e.id;
                            throw new Error(
                                'Invalid arguments for delete method',
                            );
                        }),
                        o = Xg(t) ? t : ['*'],
                        i = await this.read(e, o);
                    return (await Pm(this, ym, wm).call(this, n), i);
                }
                if (mf(e)) return Pm(this, bm, vm).call(this, e, t);
                if (ff(e) && mf(e.id))
                    return Pm(this, bm, vm).call(this, e.id, t);
                throw new Error('Invalid arguments for delete method');
            });
        }
        async deleteOrThrow(e, t) {
            return Im(this, im).call(this, 'deleteOrThrow', async () => {
                const n = await this.delete(e, t);
                if (Array.isArray(n)) {
                    const t = hf(
                        e.filter((e, t) => null === n[t]).map((e) => Rm(e)),
                    );
                    if (t.length > 0)
                        throw new Error(
                            `Could not find records with ids: ${t.join(', ')}`,
                        );
                    return n;
                }
                if (null === n) {
                    const t = Rm(e) ?? 'unknown';
                    throw new Error(`Record with id ${t} not found`);
                }
                return n;
            });
        }
        async search(e, t = {}) {
            return Im(this, im).call(this, 'search', async () => {
                const { records: n } = await pg({
                        pathParams: {
                            workspace: '{workspaceId}',
                            dbBranchName: '{dbBranch}',
                            region: '{region}',
                            tableName: Im(this, Qg),
                        },
                        body: {
                            query: e,
                            fuzziness: t.fuzziness,
                            prefix: t.prefix,
                            highlight: t.highlight,
                            filter: t.filter,
                            boosters: t.boosters,
                            page: t.page,
                            target: t.target,
                        },
                        ...Im(this, em).call(this),
                    }),
                    o = await Pm(this, Sm, Tm).call(this);
                return n.map((e) =>
                    $m(Im(this, tm), o, Im(this, Qg), e, ['*']),
                );
            });
        }
        async vectorSearch(e, t, n) {
            return Im(this, im).call(this, 'vectorSearch', async () => {
                const { records: o } = await fg({
                        pathParams: {
                            workspace: '{workspaceId}',
                            dbBranchName: '{dbBranch}',
                            region: '{region}',
                            tableName: Im(this, Qg),
                        },
                        body: {
                            column: e,
                            queryVector: t,
                            similarityFunction: n?.similarityFunction,
                            size: n?.size,
                            filter: n?.filter,
                        },
                        ...Im(this, em).call(this),
                    }),
                    i = await Pm(this, Sm, Tm).call(this);
                return o.map((e) =>
                    $m(Im(this, tm), i, Im(this, Qg), e, ['*']),
                );
            });
        }
        async aggregate(e, t) {
            return Im(this, im).call(
                this,
                'aggregate',
                async () =>
                    await bg({
                        pathParams: {
                            workspace: '{workspaceId}',
                            dbBranchName: '{dbBranch}',
                            region: '{region}',
                            tableName: Im(this, Qg),
                        },
                        body: { aggs: e, filter: t },
                        ...Im(this, em).call(this),
                    }),
            );
        }
        async query(e) {
            return Im(this, im).call(this, 'query', async () => {
                const t = await Pm(this, Cm, Em).call(this, e);
                if (t) return new Pg(e, t.meta, t.records);
                const n = e.getQueryOptions(),
                    { meta: o, records: i } = await hg({
                        pathParams: {
                            workspace: '{workspaceId}',
                            dbBranchName: '{dbBranch}',
                            region: '{region}',
                            tableName: Im(this, Qg),
                        },
                        body: {
                            filter: Eg(n.filter),
                            sort: void 0 !== n.sort ? Jg(n.sort) : void 0,
                            page: n.pagination,
                            columns: n.columns ?? ['*'],
                            consistency: n.consistency,
                        },
                        fetchOptions: n.fetchOptions,
                        ...Im(this, em).call(this),
                    }),
                    r = await Pm(this, Sm, Tm).call(this),
                    s = i.map((e) =>
                        $m(
                            Im(this, tm),
                            r,
                            Im(this, Qg),
                            e,
                            n.columns ?? ['*'],
                        ),
                    );
                return (
                    await Pm(this, km, xm).call(this, e, o, s),
                    new Pg(e, o, s)
                );
            });
        }
        async summarizeTable(e, t, n) {
            return Im(this, im).call(this, 'summarize', async () => {
                const o = e.getQueryOptions(),
                    i = await mg({
                        pathParams: {
                            workspace: '{workspaceId}',
                            dbBranchName: '{dbBranch}',
                            region: '{region}',
                            tableName: Im(this, Qg),
                        },
                        body: {
                            filter: Eg(o.filter),
                            sort: void 0 !== o.sort ? Jg(o.sort) : void 0,
                            columns: o.columns,
                            consistency: o.consistency,
                            page:
                                void 0 !== o.pagination?.size
                                    ? { size: o.pagination?.size }
                                    : void 0,
                            summaries: t,
                            summariesFilter: n,
                        },
                        ...Im(this, em).call(this),
                    }),
                    r = await Pm(this, Sm, Tm).call(this);
                return {
                    ...i,
                    summaries: i.summaries.map((e) =>
                        $m(Im(this, tm), r, Im(this, Qg), e, o.columns ?? []),
                    ),
                };
            });
        }
        ask(e, t) {
            const n = t?.sessionId ? { message: e } : { question: e },
                o = {
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                        tableName: Im(this, Qg),
                        sessionId: t?.sessionId,
                    },
                    body: {
                        ...n,
                        rules: t?.rules,
                        searchType: t?.searchType,
                        search:
                            'keyword' === t?.searchType ? t?.search : void 0,
                        vectorSearch:
                            'vector' === t?.searchType
                                ? t?.vectorSearch
                                : void 0,
                    },
                    ...Im(this, em).call(this),
                };
            if (!t?.onMessage) return gg(o);
            !(function ({
                url: e,
                method: t,
                body: n,
                headers: o,
                pathParams: i,
                queryParams: r,
                fetch: s,
                apiKey: a,
                endpoint: l,
                apiUrl: c,
                workspacesApiUrl: d,
                onMessage: h,
                onError: u,
                onClose: p,
                signal: f,
                clientID: g,
                sessionID: m,
                clientName: b,
                xataAgentExtra: v,
            }) {
                const y = Kf({
                        endpoint: l,
                        path: e,
                        workspacesApiUrl: d,
                        pathParams: i,
                        apiUrl: c,
                    }),
                    w = Gf(y, r, i);
                Df(
                    w.includes('localhost')
                        ? w.replace(/^[^.]+\./, 'http://')
                        : w,
                    {
                        method: t,
                        body: JSON.stringify(n),
                        fetch: s,
                        signal: f,
                        headers: {
                            'X-Xata-Client-ID': g ?? Zf,
                            'X-Xata-Session-ID': m ?? Nf(),
                            'X-Xata-Agent': hf([
                                ['client', 'TS_SDK'],
                                ['version', Hf],
                                gf(b) ? ['service', b] : void 0,
                                ...Object.entries(v ?? {}),
                            ])
                                .map(([e, t]) => `${e}=${t}`)
                                .join('; '),
                            ...o,
                            Authorization: `Bearer ${a}`,
                            'Content-Type': 'application/json',
                        },
                        onmessage(e) {
                            h?.(JSON.parse(e.data));
                        },
                        onerror(e) {
                            u?.(JSON.parse(e.data));
                        },
                        onclose() {
                            p?.();
                        },
                    },
                );
            })({
                endpoint: 'dataPlane',
                url: '/db/{dbBranchName}/tables/{tableName}/ask/{sessionId}',
                method: 'POST',
                onMessage: (e) => {
                    t.onMessage?.({ answer: e.text, records: e.records });
                },
                ...o,
            });
        }
    }
    ((Qg = new WeakMap()),
        (em = new WeakMap()),
        (tm = new WeakMap()),
        (nm = new WeakMap()),
        (om = new WeakMap()),
        (im = new WeakMap()),
        (rm = new WeakSet()),
        (sm = async function (e, t = ['*']) {
            const n = await Pm(this, _m, Bm).call(this, e),
                o = await ng({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                        tableName: Im(this, Qg),
                    },
                    queryParams: { columns: t },
                    body: n,
                    ...Im(this, em).call(this),
                }),
                i = await Pm(this, Sm, Tm).call(this);
            return $m(Im(this, tm), i, Im(this, Qg), o, t);
        }),
        (am = new WeakSet()),
        (lm = async function (
            e,
            t,
            n = ['*'],
            { createOnly: o, ifVersion: i },
        ) {
            if (!e) return null;
            const r = await Pm(this, _m, Bm).call(this, t),
                s = await ag({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                        tableName: Im(this, Qg),
                        recordId: e,
                    },
                    body: r,
                    queryParams: { createOnly: o, columns: n, ifVersion: i },
                    ...Im(this, em).call(this),
                }),
                a = await Pm(this, Sm, Tm).call(this);
            return $m(Im(this, tm), a, Im(this, Qg), s, n);
        }),
        (cm = new WeakSet()),
        (dm = async function (e, { createOnly: t, ifVersion: n }) {
            const o = yf(
                    await wf(e, async (e) => {
                        const o = await Pm(this, _m, Bm).call(this, e);
                        return {
                            insert: {
                                table: Im(this, Qg),
                                record: o,
                                createOnly: t,
                                ifVersion: n,
                            },
                        };
                    }),
                    Mm,
                ),
                i = [];
            for (const e of o) {
                const { results: t } = await tg({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                    },
                    body: { operations: e },
                    ...Im(this, em).call(this),
                });
                for (const e of t)
                    'insert' === e.operation ? i.push(e.id) : i.push(null);
            }
            return i;
        }),
        (hm = new WeakSet()),
        (um = async function (e, t, n = ['*'], { ifVersion: o }) {
            if (!e) return null;
            const { id: i, ...r } = await Pm(this, _m, Bm).call(this, t);
            try {
                const t = await lg({
                        pathParams: {
                            workspace: '{workspaceId}',
                            dbBranchName: '{dbBranch}',
                            region: '{region}',
                            tableName: Im(this, Qg),
                            recordId: e,
                        },
                        queryParams: { columns: n, ifVersion: o },
                        body: r,
                        ...Im(this, em).call(this),
                    }),
                    i = await Pm(this, Sm, Tm).call(this);
                return $m(Im(this, tm), i, Im(this, Qg), t, n);
            } catch (e) {
                if (ff(e) && 404 === e.status) return null;
                throw e;
            }
        }),
        (pm = new WeakSet()),
        (fm = async function (e, { ifVersion: t, upsert: n }) {
            const o = yf(
                    await wf(e, async ({ id: e, ...o }) => {
                        const i = await Pm(this, _m, Bm).call(this, o);
                        return {
                            update: {
                                table: Im(this, Qg),
                                id: e,
                                ifVersion: t,
                                upsert: n,
                                fields: i,
                            },
                        };
                    }),
                    Mm,
                ),
                i = [];
            for (const e of o) {
                const { results: t } = await tg({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                    },
                    body: { operations: e },
                    ...Im(this, em).call(this),
                });
                for (const e of t)
                    'update' === e.operation ? i.push(e.id) : i.push(null);
            }
            return i;
        }),
        (gm = new WeakSet()),
        (mm = async function (e, t, n = ['*'], { ifVersion: o }) {
            if (!e) return null;
            const i = await cg({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                        tableName: Im(this, Qg),
                        recordId: e,
                    },
                    queryParams: { columns: n, ifVersion: o },
                    body: t,
                    ...Im(this, em).call(this),
                }),
                r = await Pm(this, Sm, Tm).call(this);
            return $m(Im(this, tm), r, Im(this, Qg), i, n);
        }),
        (bm = new WeakSet()),
        (vm = async function (e, t = ['*']) {
            if (!e) return null;
            try {
                const n = await dg({
                        pathParams: {
                            workspace: '{workspaceId}',
                            dbBranchName: '{dbBranch}',
                            region: '{region}',
                            tableName: Im(this, Qg),
                            recordId: e,
                        },
                        queryParams: { columns: t },
                        ...Im(this, em).call(this),
                    }),
                    o = await Pm(this, Sm, Tm).call(this);
                return $m(Im(this, tm), o, Im(this, Qg), n, t);
            } catch (e) {
                if (ff(e) && 404 === e.status) return null;
                throw e;
            }
        }),
        (ym = new WeakSet()),
        (wm = async function (e) {
            const t = yf(
                hf(e).map((e) => ({ delete: { table: Im(this, Qg), id: e } })),
                Mm,
            );
            for (const e of t)
                await tg({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                    },
                    body: { operations: e },
                    ...Im(this, em).call(this),
                });
        }),
        (km = new WeakSet()),
        (xm = async function (e, t, n) {
            await Im(this, nm)?.set(`query_${Im(this, Qg)}:${e.key()}`, {
                date: new Date(),
                meta: t,
                records: n,
            });
        }),
        (Cm = new WeakSet()),
        (Em = async function (e) {
            const t = `query_${Im(this, Qg)}:${e.key()}`,
                n = await Im(this, nm)?.get(t);
            if (!n) return null;
            const o = Im(this, nm)?.defaultQueryTTL ?? -1,
                { cache: i = o } = e.getQueryOptions();
            if (i < 0) return null;
            return n.date.getTime() + i < Date.now() ? null : n;
        }),
        (Sm = new WeakSet()),
        (Tm = async function () {
            if (Im(this, om)) return Im(this, om);
            const { schema: e } = await eg({
                pathParams: {
                    workspace: '{workspaceId}',
                    dbBranchName: '{dbBranch}',
                    region: '{region}',
                },
                ...Im(this, em).call(this),
            });
            return (Am(this, om, e.tables), e.tables);
        }),
        (_m = new WeakSet()),
        (Bm = async function (e) {
            const t = (await Pm(this, Sm, Tm).call(this)).find(
                (e) => e.name === Im(this, Qg),
            );
            if (!t)
                throw new Error(`Table ${Im(this, Qg)} not found in schema`);
            const n = {};
            for (const [o, i] of Object.entries(e)) {
                if ('xata' === o) continue;
                const e = t.columns.find((e) => e.name === o)?.type;
                switch (e) {
                    case 'link':
                        n[o] = Yg(i) ? i.id : i;
                        break;
                    case 'datetime':
                        n[o] = i instanceof Date ? i.toISOString() : i;
                        break;
                    case 'file':
                        n[o] = await Cg(i);
                        break;
                    case 'file[]':
                        n[o] = await wf(i, (e) => Cg(e));
                        break;
                    case 'json':
                        n[o] = Sg(i);
                        break;
                    default:
                        n[o] = i;
                }
            }
            return n;
        }));
    const $m = (e, t, n, o, i) => {
        const r = {},
            { xata: s, ...a } = o ?? {};
        Object.assign(r, a);
        const { columns: l } = t.find(({ name: e }) => e === n) ?? {};
        l || console.error(`Table ${n} not found in schema`);
        for (const n of l ?? []) {
            if (!jm(i, n)) continue;
            const o = r[n.name];
            switch (n.type) {
                case 'datetime': {
                    const e = void 0 !== o ? new Date(o) : null;
                    null !== e && isNaN(e.getTime())
                        ? console.error(
                              `Failed to parse date ${o} for field ${n.name}`,
                          )
                        : (r[n.name] = e);
                    break;
                }
                case 'link': {
                    const s = n.link?.table;
                    if (s)
                        if (ff(o)) {
                            const a = i.reduce((e, t) => {
                                if (t === n.name) return [...e, '*'];
                                if (mf(t) && t.startsWith(`${n.name}.`)) {
                                    const [, ...n] = t.split('.');
                                    return [...e, n.join('.')];
                                }
                                return e;
                            }, []);
                            r[n.name] = $m(e, t, s, o, a);
                        } else r[n.name] = null;
                    else
                        console.error(
                            `Failed to parse link for field ${n.name}`,
                        );
                    break;
                }
                case 'file':
                    r[n.name] = gf(o) ? new xg(o) : null;
                    break;
                case 'file[]':
                    r[n.name] = o?.map((e) => new xg(e)) ?? null;
                    break;
                case 'json':
                    r[n.name] = Tg(o);
                    break;
                default:
                    ((r[n.name] = o ?? null),
                        !0 === n.notNull &&
                            null === o &&
                            console.error(
                                `Parse error, column ${n.name} is non nullable and value resolves null`,
                            ));
            }
        }
        const c = { ...r },
            d =
                void 0 !== s
                    ? {
                          ...s,
                          createdAt: new Date(s.createdAt),
                          updatedAt: new Date(s.updatedAt),
                      }
                    : void 0;
        ((c.read = function (t) {
            return e[n].read(c.id, t);
        }),
            (c.update = function (t, o, i) {
                const r = Xg(o) ? o : ['*'],
                    s = Dm(o, i);
                return e[n].update(c.id, t, r, { ifVersion: s });
            }),
            (c.replace = function (t, o, i) {
                const r = Xg(o) ? o : ['*'],
                    s = Dm(o, i);
                return e[n].createOrReplace(c.id, t, r, { ifVersion: s });
            }),
            (c.delete = function () {
                return e[n].delete(c.id);
            }),
            void 0 !== d && (c.xata = Object.freeze(d)),
            (c.getMetadata = function () {
                return c.xata;
            }),
            (c.toSerializable = function () {
                return JSON.parse(JSON.stringify(c));
            }),
            (c.toString = function () {
                return JSON.stringify(c);
            }));
        for (const e of [
            'read',
            'update',
            'replace',
            'delete',
            'getMetadata',
            'toSerializable',
            'toString',
        ])
            Object.defineProperty(c, e, { enumerable: !1 });
        return (Object.freeze(c), c);
    };
    function Rm(e) {
        return mf(e) ? e : ff(e) && mf(e.id) ? e.id : void 0;
    }
    function jm(e, t) {
        return (
            !!e.includes('*') ||
            e.filter((e) => mf(e) && e.startsWith(t.name)).length > 0
        );
    }
    function Dm(...e) {
        for (const t of e) if (ff(t) && vf(t.ifVersion)) return t.ifVersion;
    }
    var Fm,
        Hm = (e, t, n) => {
            if (!t.has(e)) throw TypeError('Cannot ' + n);
        },
        zm = (e, t, n) => (
            Hm(e, t, 'read from private field'),
            n ? n.call(e) : t.get(e)
        );
    class Um {
        constructor(e = {}) {
            var t, n, o, i;
            (((e, t, n) => {
                if (t.has(e))
                    throw TypeError(
                        'Cannot add the same private member more than once',
                    );
                t instanceof WeakSet ? t.add(e) : t.set(e, n);
            })(this, Fm, void 0),
                (t = this),
                (n = Fm),
                (o = new Map()),
                Hm(t, n, 'write to private field'),
                i ? i.call(t, o) : n.set(t, o),
                (this.capacity = e.max ?? 500),
                (this.defaultQueryTTL = e.defaultQueryTTL ?? 6e4));
        }
        async getAll() {
            return Object.fromEntries(zm(this, Fm));
        }
        async get(e) {
            return zm(this, Fm).get(e) ?? null;
        }
        async set(e, t) {
            if (
                (await this.delete(e),
                zm(this, Fm).set(e, t),
                zm(this, Fm).size > this.capacity)
            ) {
                const e = zm(this, Fm).keys().next().value;
                await this.delete(e);
            }
        }
        async delete(e) {
            zm(this, Fm).delete(e);
        }
        async clear() {
            return zm(this, Fm).clear();
        }
    }
    Fm = new WeakMap();
    var Wm,
        qm,
        Vm = (e, t, n) => {
            if (!t.has(e)) throw TypeError('Cannot ' + n);
        },
        Gm = (e, t, n) => (
            Vm(e, t, 'read from private field'),
            n ? n.call(e) : t.get(e)
        ),
        Km = (e, t, n) => {
            if (t.has(e))
                throw TypeError(
                    'Cannot add the same private member more than once',
                );
            t instanceof WeakSet ? t.add(e) : t.set(e, n);
        };
    class Ym extends wg {
        constructor(e) {
            var t, n, o, i;
            (super(),
                Km(this, Wm, {}),
                Km(this, qm, void 0),
                (o = e),
                Vm((t = this), (n = qm), 'write to private field'),
                i ? i.call(t, o) : n.set(t, o));
        }
        build(e) {
            const t = new Proxy(
                    {},
                    {
                        get: (n, o) => {
                            if (!mf(o)) throw new Error('Invalid table name');
                            return (
                                void 0 === Gm(this, Wm)[o] &&
                                    (Gm(this, Wm)[o] = new Nm({
                                        db: t,
                                        pluginOptions: e,
                                        table: o,
                                        schemaTables: Gm(this, qm),
                                    })),
                                Gm(this, Wm)[o]
                            );
                        },
                    },
                ),
                n = Gm(this, qm)?.map(({ name: e }) => e) ?? [];
            for (const o of n)
                t[o] = new Nm({
                    db: t,
                    pluginOptions: e,
                    table: o,
                    schemaTables: Gm(this, qm),
                });
            return t;
        }
    }
    ((Wm = new WeakMap()), (qm = new WeakMap()));
    class Xm extends wg {
        build(e) {
            return {
                download: async (t) => {
                    const {
                        table: n,
                        record: o,
                        column: i,
                        fileId: r = '',
                    } = t ?? {};
                    return await og({
                        pathParams: {
                            workspace: '{workspaceId}',
                            dbBranchName: '{dbBranch}',
                            region: '{region}',
                            tableName: n ?? '',
                            recordId: o ?? '',
                            columnName: i ?? '',
                            fileId: r,
                        },
                        ...e,
                        rawResponse: !0,
                    });
                },
                upload: async (t, n, o) => {
                    const {
                            table: i,
                            record: r,
                            column: s,
                            fileId: a = '',
                        } = t ?? {},
                        l = await n,
                        c =
                            o?.mediaType ||
                            (function (e) {
                                if ('string' == typeof e) return 'text/plain';
                                if ('mediaType' in e) return e.mediaType;
                                if (pf(e)) return e.type;
                                try {
                                    return e.type;
                                } catch (e) {}
                                return 'application/octet-stream';
                            })(l),
                        d = l instanceof xg ? l.toBlob() : l;
                    return await ig({
                        ...e,
                        pathParams: {
                            workspace: '{workspaceId}',
                            dbBranchName: '{dbBranch}',
                            region: '{region}',
                            tableName: i ?? '',
                            recordId: r ?? '',
                            columnName: s ?? '',
                            fileId: a,
                        },
                        body: d,
                        headers: { 'Content-Type': c },
                    });
                },
                delete: async (t) => {
                    const {
                        table: n,
                        record: o,
                        column: i,
                        fileId: r = '',
                    } = t ?? {};
                    return await rg({
                        pathParams: {
                            workspace: '{workspaceId}',
                            dbBranchName: '{dbBranch}',
                            region: '{region}',
                            tableName: n ?? '',
                            recordId: o ?? '',
                            columnName: i ?? '',
                            fileId: r,
                        },
                        ...e,
                    });
                },
            };
        }
    }
    var Zm,
        Jm,
        Qm,
        eb,
        tb,
        nb = (e, t, n) => {
            if (!t.has(e)) throw TypeError('Cannot ' + n);
        },
        ob = (e, t, n) => (
            nb(e, t, 'read from private field'),
            n ? n.call(e) : t.get(e)
        ),
        ib = (e, t, n) => {
            if (t.has(e))
                throw TypeError(
                    'Cannot add the same private member more than once',
                );
            t instanceof WeakSet ? t.add(e) : t.set(e, n);
        },
        rb = (e, t, n, o) => (
            nb(e, t, 'write to private field'),
            o ? o.call(e, n) : t.set(e, n),
            n
        ),
        sb = (e, t, n) => (nb(e, t, 'access private method'), n);
    class ab extends wg {
        constructor(e, t) {
            (super(),
                (this.db = e),
                ib(this, Jm),
                ib(this, eb),
                ib(this, Zm, void 0),
                rb(this, Zm, t));
        }
        build(e) {
            return {
                all: async (t, n = {}) => {
                    const o = await sb(this, Jm, Qm).call(this, t, n, e),
                        i = await sb(this, eb, tb).call(this, e);
                    return o.map((e) => {
                        const { table: t = 'orphan' } = e.xata;
                        return {
                            table: t,
                            record: $m(this.db, i, t, e, ['*']),
                        };
                    });
                },
                byTable: async (t, n = {}) => {
                    const o = await sb(this, Jm, Qm).call(this, t, n, e),
                        i = await sb(this, eb, tb).call(this, e);
                    return o.reduce((e, t) => {
                        const { table: n = 'orphan' } = t.xata,
                            o = e[n] ?? [],
                            r = $m(this.db, i, n, t, ['*']);
                        return { ...e, [n]: [...o, r] };
                    }, {});
                },
            };
        }
    }
    function lb(e) {
        let t = '{';
        for (let n = 0; n < e.length; n++)
            (n > 0 && (t += ','),
                null === e[n] || void 0 === e[n]
                    ? (t += 'NULL')
                    : Array.isArray(e[n])
                      ? (t += lb(e[n]))
                      : e[n] instanceof Buffer
                        ? (t += '\\\\x' + e[n].toString('hex'))
                        : (t +=
                              '"' +
                              cb(e[n])
                                  .replace(/\\/g, '\\\\')
                                  .replace(/"/g, '\\"') +
                              '"'));
        return ((t += '}'), t);
    }
    function cb(e) {
        if (!gf(e)) return null;
        if (e instanceof Date) return e.toISOString();
        if (Array.isArray(e)) return lb(e);
        if (ff(e)) return JSON.stringify(e);
        try {
            return e.toString();
        } catch (t) {
            return e;
        }
    }
    ((Zm = new WeakMap()),
        (Jm = new WeakSet()),
        (Qm = async function (e, t, n) {
            const {
                    tables: o,
                    fuzziness: i,
                    highlight: r,
                    prefix: s,
                    page: a,
                } = t ?? {},
                { records: l } = await ug({
                    pathParams: {
                        workspace: '{workspaceId}',
                        dbBranchName: '{dbBranch}',
                        region: '{region}',
                    },
                    body: {
                        tables: o,
                        query: e,
                        fuzziness: i,
                        prefix: s,
                        highlight: r,
                        page: a,
                    },
                    ...n,
                });
            return l;
        }),
        (eb = new WeakSet()),
        (tb = async function (e) {
            if (ob(this, Zm)) return ob(this, Zm);
            const { schema: t } = await eg({
                pathParams: {
                    workspace: '{workspaceId}',
                    dbBranchName: '{dbBranch}',
                    region: '{region}',
                },
                ...e,
            });
            return (rb(this, Zm, t.tables), t.tables);
        }));
    class db extends wg {
        build(e) {
            return async (t, ...n) => {
                const {
                        statement: o,
                        params: i,
                        consistency: r,
                    } = (function (e, t) {
                        if (mf(e))
                            return {
                                statement: e,
                                params: t?.map((e) => cb(e)),
                            };
                        if (bf(e))
                            return {
                                statement: e.reduce(
                                    (e, n, o) =>
                                        e +
                                        n +
                                        (o < (t?.length ?? 0)
                                            ? '$' + (o + 1)
                                            : ''),
                                    '',
                                ),
                                params: t?.map((e) => cb(e)),
                            };
                        if (ff(e)) {
                            const {
                                statement: t,
                                params: n,
                                consistency: o,
                            } = e;
                            return {
                                statement: t,
                                params: n?.map((e) => cb(e)),
                                consistency: o,
                            };
                        }
                        throw new Error('Invalid query');
                    })(t, n),
                    { records: s, warning: a } = await vg({
                        pathParams: {
                            workspace: '{workspaceId}',
                            dbBranchName: '{dbBranch}',
                            region: '{region}',
                        },
                        body: { statement: o, params: i, consistency: r },
                        ...e,
                    });
                return { records: s, warning: a };
            };
        }
    }
    class hb extends wg {
        build(e) {
            return {
                run: async (t) =>
                    await tg({
                        pathParams: {
                            workspace: '{workspaceId}',
                            dbBranchName: '{dbBranch}',
                            region: '{region}',
                        },
                        body: { operations: t },
                        ...e,
                    }),
            };
        }
    }
    var ub = (e, t, n) => {
            if (!t.has(e)) throw TypeError('Cannot ' + n);
        },
        pb = (e, t, n) => (
            ub(e, t, 'read from private field'),
            n ? n.call(e) : t.get(e)
        ),
        fb = (e, t, n) => {
            if (t.has(e))
                throw TypeError(
                    'Cannot add the same private member more than once',
                );
            t instanceof WeakSet ? t.add(e) : t.set(e, n);
        },
        gb = (e, t, n) => (ub(e, t, 'access private method'), n);
    const mb = (e) => {
        var t, n, o, i, r, s;
        return (
            (s = class {
                constructor(s = {}, a) {
                    (fb(this, n), fb(this, i), fb(this, t, void 0));
                    const l = gb(this, n, o).call(this, s);
                    var c, d, h, u;
                    ((h = l),
                        ub((c = this), (d = t), 'write to private field'),
                        u ? u.call(c, h) : d.set(c, h));
                    const p = {
                            ...gb(this, i, r).call(this, l),
                            cache: l.cache,
                            host: l.host,
                        },
                        f = new Ym(a).build(p),
                        g = new ab(f, a).build(p),
                        m = new hb().build(p),
                        b = new db().build(p),
                        v = new Xm().build(p);
                    ((this.db = f),
                        (this.search = g),
                        (this.transactions = m),
                        (this.sql = b),
                        (this.files = v));
                    for (const [t, n] of Object.entries(e ?? {}))
                        void 0 !== n && (this[t] = n.build(p));
                }
                async getConfig() {
                    return {
                        databaseURL: pb(this, t).databaseURL,
                        branch: pb(this, t).branch,
                    };
                }
            }),
            (t = new WeakMap()),
            (n = new WeakSet()),
            (o = function (e) {
                const t =
                    e?.enableBrowser ??
                    (function () {
                        try {
                            if (
                                ff(process) &&
                                ff(process.env) &&
                                void 0 !== process.env.XATA_ENABLE_BROWSER
                            )
                                return (
                                    'true' === process.env.XATA_ENABLE_BROWSER
                                );
                        } catch (e) {}
                        try {
                            if (
                                ff(Deno) &&
                                ff(Deno.env) &&
                                void 0 !== Deno.env.get('XATA_ENABLE_BROWSER')
                            )
                                return (
                                    'true' ===
                                    Deno.env.get('XATA_ENABLE_BROWSER')
                                );
                        } catch (e) {}
                        try {
                            return (
                                !0 === XATA_ENABLE_BROWSER ||
                                'true' === XATA_ENABLE_BROWSER
                            );
                        } catch (e) {
                            return;
                        }
                    })() ??
                    !1;
                if (
                    'undefined' != typeof window &&
                    'undefined' == typeof Deno &&
                    !t
                )
                    throw new Error(
                        'You are trying to use Xata from the browser, which is potentially a non-secure environment. If you understand the security concerns, such as leaking your credentials, pass `enableBrowser: true` to the client options to remove this error.',
                    );
                const n = Mf(e?.fetch),
                    o =
                        e?.databaseURL ||
                        (function () {
                            try {
                                const { databaseURL: e } = kf();
                                return e;
                            } catch (e) {
                                return;
                            }
                        })(),
                    i =
                        e?.apiKey ||
                        (function () {
                            try {
                                const { apiKey: e } = kf();
                                return e;
                            } catch (e) {
                                return;
                            }
                        })(),
                    r = e?.cache ?? new Um({ defaultQueryTTL: 0 }),
                    s = e?.trace ?? Xp,
                    a = e?.clientName,
                    l = e?.host ?? 'production',
                    c = e?.xataAgentExtra;
                if (!i) throw new Error('Option apiKey is required');
                if (!o) throw new Error('Option databaseURL is required');
                const d = (function () {
                        try {
                            const { branch: e } = kf();
                            return e;
                        } catch (e) {
                            return;
                        }
                    })(),
                    h = (function () {
                        try {
                            const {
                                deployPreview: e,
                                deployPreviewBranch: t,
                                vercelGitCommitRef: n,
                                vercelGitRepoOwner: o,
                            } = kf();
                            return (
                                t ||
                                ('vercel' === e
                                    ? n && o
                                        ? (function ({ org: e, branch: t }) {
                                              return `preview-${e}-${t}`;
                                          })({ org: o, branch: n })
                                        : void console.warn(
                                              'XATA_PREVIEW=vercel but VERCEL_GIT_COMMIT_REF or VERCEL_GIT_REPO_OWNER is not valid',
                                          )
                                    : void 0)
                            );
                        } catch (e) {
                            return;
                        }
                    })(),
                    u = e?.branch || h || d || 'main';
                return (
                    h && u !== h
                        ? console.warn(
                              `Ignoring preview branch ${h} because branch option was passed to the client constructor with value ${u}`,
                          )
                        : d && u !== d
                          ? console.warn(
                                `Ignoring branch ${d} because branch option was passed to the client constructor with value ${u}`,
                            )
                          : h && d && h !== d
                            ? console.warn(
                                  `Ignoring preview branch ${h} and branch ${d} because branch option was passed to the client constructor with value ${u}`,
                              )
                            : h ||
                              d ||
                              void 0 !== e?.branch ||
                              console.warn(
                                  `No branch was passed to the client constructor. Using default branch ${u}. You can set the branch with the environment variable XATA_BRANCH or by passing the branch option to the client constructor.`,
                              ),
                    {
                        fetch: n,
                        databaseURL: o,
                        apiKey: i,
                        branch: u,
                        cache: r,
                        trace: s,
                        host: l,
                        clientID: Nf(),
                        enableBrowser: t,
                        clientName: a,
                        xataAgentExtra: c,
                    }
                );
            }),
            (i = new WeakSet()),
            (r = function ({
                fetch: e,
                apiKey: t,
                databaseURL: n,
                branch: o,
                trace: i,
                clientID: r,
                clientName: s,
                xataAgentExtra: a,
            }) {
                return {
                    fetch: e,
                    apiKey: t,
                    apiUrl: '',
                    workspacesApiUrl: (e, t) => {
                        const i = t.dbBranchName ?? t.branch,
                            r = e.replace(
                                /^\/db\/[^/]+/,
                                void 0 !== i ? `:${o}` : '',
                            );
                        return n + r;
                    },
                    trace: i,
                    clientID: r,
                    clientName: s,
                    xataAgentExtra: a,
                };
            }),
            s
        );
    };
    class bb extends mb() {}
    const vb = [
            {
                name: 'Languages',
                columns: [
                    { name: 'Name', type: 'string' },
                    { name: 'Owner', type: 'string' },
                    { name: 'File', type: 'json' },
                ],
            },
        ],
        yb = mb(),
        wb = {
            databaseURL:
                'https://Saturnine-s-workspace-cvl2j3.us-east-1.xata.sh/db/Lexicanter',
        };
    const kb = new (class extends yb {
            constructor(e) {
                super(Object.assign(Object.assign({}, wb), e), vb);
            }
        })({
            branch: 'main',
            apiKey: 'xau_IXRLBDCqEyeSvgHvN5FmWsOvu26aWd1D2',
            enableBrowser: !0,
        }),
        { ipcRenderer: xb } = require('electron'),
        Cb = require('fs'),
        Eb = require('path'),
        Sb = require('vex-js'),
        Tb = () => c(Kr),
        _b = c(Gr);
    async function Bb(e) {
        let t;
        (await xb.invoke('getUserDataPath').then((e) => {
            t = e;
        }),
            e(t));
    }
    async function Ob(e, t) {
        let n;
        (await xb.invoke('showOpenDialog', e).then((e) => {
            n = e;
        }),
            t(n));
    }
    async function Ib() {
        return (
            'function' == typeof c(ns).save
                ? (console.log('Save function found for docs editor.', c(ns)),
                  await c(ns)
                      .save()
                      .then((e) => {
                          Tb().Docs = e;
                      }))
                : console.log('No save function found for docs editor.', c(ns)),
            (Tb().Version = await xb.invoke('getVersion')),
            (Tb().FileVersion = (parseInt(Tb().FileVersion, 36) + 1).toString(
                36,
            )),
            JSON.stringify(Tb())
        );
    }
    function Lb(e, t) {
        for (const n of e.blocks)
            switch (n.type) {
                case 'header': {
                    const e = document.createElement(`h${n.data.level}`);
                    ((e.innerHTML = n.data.text), t.appendChild(e));
                    break;
                }
                case 'paragraph': {
                    const e = document.createElement('p');
                    ((e.innerHTML = n.data.text), t.appendChild(e));
                    break;
                }
                case 'table': {
                    const e = document.createElement('table'),
                        o = document.createElement('tbody');
                    (n.data.content.forEach((e) => {
                        const t = document.createElement('tr');
                        (e.forEach((e) => {
                            const n = document.createElement('td');
                            ((n.innerHTML = e), t.appendChild(n));
                        }),
                            o.appendChild(t));
                    }),
                        e.appendChild(o),
                        t.appendChild(e));
                    break;
                }
            }
        return t;
    }
    async function Ab() {
        const e = async () => {
            const e = await Ib();
            try {
                (Bb((t) => {
                    const n = `${t}${Eb.sep}Lexicons${Eb.sep}`,
                        o = `${t}${Eb.sep}Backups${Eb.sep}`,
                        i = new Date()
                            .toString()
                            .split(' GMT')[0]
                            .replaceAll(':', '꞉');
                    (Cb.existsSync(n) || Cb.mkdirSync(n),
                        Cb.existsSync(o) || Cb.mkdirSync(o),
                        Cb.writeFileSync(`${n}${Tb().Name}.lexc`, e, 'utf8'),
                        Cb.writeFileSync(
                            `${o}${Tb().Name} @ ${i}.lexc`,
                            e,
                            'utf8',
                        ),
                        '' !== Tb().SaveLocation &&
                            Cb.writeFileSync(
                                `${Tb().SaveLocation}${Eb.sep}${Tb().Name}.lexc`,
                                e,
                                'utf8',
                            ));
                }),
                    c(is)
                        ? new Notification(
                              `The ${Tb().Name} file has been saved.`,
                          )
                        : Sb.dialog.alert(
                              `The ${Tb().Name} file has been saved.`,
                          ));
            } catch (e) {
                (console.log(e),
                    Sb.dialog.alert(
                        'There was a problem saving your file. The error has been printed to the console. Please contact the developer.',
                    ));
            }
            if (Tb().UploadToDatabase && '' !== c(ls) && '' !== c(cs)) {
                const t = await kb.db.Languages.filter({
                    Name: Tb().Name,
                    Owner: c(ls),
                }).getAll();
                t.length > 0
                    ? await kb.db.Languages.update({
                          id: t[0].id,
                          File: JSON.parse(e),
                      })
                    : await kb.db.Languages.create({
                          Name: Tb().Name,
                          Owner: c(ls),
                          File: JSON.parse(e),
                      });
            }
        };
        Tb().Name.trim()
            ? e()
            : Sb.dialog.prompt({
                  message: 'Please enter a file name before saving.',
                  callback: (t) => {
                      t && ((Tb().Name = t.trim()), e());
                  },
              });
    }
    const Pb = async () => {
            let e;
            Ib().then((t) => {
                e = new Blob([t]);
            });
            const t = await window.showSaveFilePicker({
                suggestedName: `${Tb().Name}.lexc`,
            });
            await t.requestPermission({ mode: 'readwrite' });
            const n = await t.createWritable();
            try {
                await n.write(e);
            } catch (e) {
                return (
                    window.alert(
                        'The file failed to save. Please contact the developer for assistance.',
                    ),
                    console.log(e),
                    void (await n.close())
                );
            }
            (await n.close(), window.alert('The file saved successfully.'));
        },
        Mb = async () => {
            let e = '';
            const t = Tb().Lexicon;
            for (const n in t) e += `${n}\n${t[n][0]}\n${t[n][1]}\n\n`;
            const n = new Blob([e]),
                o = await window.showSaveFilePicker({
                    suggestedName: `${Tb().Name}.txt`,
                });
            await o.requestPermission({ mode: 'readwrite' });
            const i = await o.createWritable();
            try {
                await i.write(n);
            } catch (e) {
                window.alert('The file failed to export.');
            }
            (await i.close(), window.alert('The file exported successfully.'));
        },
        Nb = async () => {
            const e = Tb().Lexicon,
                t = [['Word', 'Pronunciations', 'Definitions']];
            for (const n in e)
                t.push([
                    n,
                    Object.entries(e[n].pronunciations)
                        .map(([e, { ipa: t }]) => e + ': ' + t)
                        .join(' — '),
                    e[n].Senses.map((e) => e.definition).join(' — '),
                ]);
            const n = t
                .map((e) =>
                    e
                        .map(String)
                        .map((e) => e.replaceAll('"', '""'))
                        .map((e) => `"${e}"`)
                        .join(','),
                )
                .join('\r\n');
            const o = new Blob([n]),
                i = await window.showSaveFilePicker({
                    suggestedName: `${Tb().Name}.csv`,
                });
            await i.requestPermission({ mode: 'readwrite' });
            const r = await i.createWritable();
            try {
                await r.write(o);
            } catch (e) {
                (window.alert(
                    'The file failed to export. Please contact the developer for assistance.',
                ),
                    console.log(e));
            }
            (await r.close(), window.alert('The file exported successfully.'));
        },
        $b = async () => {
            let e;
            Ib().then((t) => {
                e = new Blob([t]);
            });
            const t = await window.showSaveFilePicker({
                suggestedName: `${Tb().Name}.json`,
            });
            await t.requestPermission({ mode: 'readwrite' });
            const n = await t.createWritable();
            try {
                await n.write(e);
            } catch (e) {
                window.alert('The file failed to export.');
            }
            (await n.close(), window.alert('The file exported successfully.'));
        },
        Rb = {
            lexicon: async () => {
                const e = document.createElement('html'),
                    t = document.createElement('head');
                t.innerHTML = `\n                <meta charset="UTF-8" />\n                <title>${Tb().Name}</title>\n                <link rel="preconnect" href="https://fonts.googleapis.com">\n                <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>\n                <link href="https://fonts.googleapis.com/css2?family=Gentium+Book+Plus:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">\n            `;
                const n = document.createElement('style');
                n.innerHTML = Wb;
                const o = document.createElement('style');
                o.innerHTML = Ub;
                const i = document.createElement('body');
                i.innerHTML += `<h1>${Tb().Name}</h1>`;
                const r = vs(Tb().Lexicon);
                ((i.innerHTML += '<hr/><h2>Lexicon</h2>'),
                    i.append(jb(r)),
                    t.append(n, o),
                    e.append(t, i));
                const s = e.outerHTML,
                    a = new Blob(['\ufeff', s], {
                        type: 'tex/html; charset=utf-8;',
                    }),
                    l = await window.showSaveFilePicker({
                        suggestedName: `${Tb().Name}_Lexicon.html`,
                    });
                await l.requestPermission({ mode: 'readwrite' });
                const c = await l.createWritable();
                try {
                    await c.write(a);
                } catch (e) {
                    return (
                        Sb.dialog.alert(
                            'The file failed to export. Please contact the developer for assistance.',
                        ),
                        console.log(e),
                        void (await c.close())
                    );
                }
                (await c.close(),
                    Sb.dialog.alert('The file exported successfully.'));
            },
            all: async () => {
                const e = document.createElement('html'),
                    t = document.createElement('head');
                t.innerHTML = `\n                <meta charset="UTF-8" />\n                <title>${Tb().Name}</title>\n                <link rel="preconnect" href="https://fonts.googleapis.com">\n                <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>\n                <link href="https://fonts.googleapis.com/css2?family=Gentium+Book+Plus:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">\n            `;
                const n = document.createElement('style');
                n.innerHTML = Wb;
                const o = document.createElement('style');
                o.innerHTML = Ub;
                let i = document.createElement('div');
                await c(ns)
                    .save()
                    .then((e) => {
                        i = Lb(e, i);
                    });
                const r = document.createElement('body');
                ((r.innerHTML += `<h1>${Tb().Name}</h1>`),
                    (r.innerHTML += i.outerHTML));
                const s = vs(Tb().Lexicon);
                ((r.innerHTML += '<hr/><h2>Lexicon</h2>'),
                    r.append(jb(s)),
                    t.append(n, o),
                    e.append(t, r));
                const a = e.outerHTML,
                    l = new Blob(['\ufeff', a], {
                        type: 'tex/html; charset=utf-8;',
                    }),
                    d = await window.showSaveFilePicker({
                        suggestedName: `${Tb().Name}.html`,
                    });
                await d.requestPermission({ mode: 'readwrite' });
                const h = await d.createWritable();
                try {
                    await h.write(l);
                } catch (e) {
                    return (
                        Sb.dialog.alert(
                            'The file failed to export. Please contact the developer for assistance.',
                        ),
                        console.log(e),
                        void (await h.close())
                    );
                }
                (await h.close(),
                    Sb.dialog.alert('The file exported successfully.'));
            },
            docs: async () => {
                const e = document.createElement('html'),
                    t = document.createElement('head');
                t.innerHTML = `\n                <meta charset="UTF-8" />\n                <title>${Tb().Name} Docs</title>\n                <link rel="preconnect" href="https://fonts.googleapis.com">\n                <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>\n                <link href="https://fonts.googleapis.com/css2?family=Gentium+Book+Plus:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">\n            `;
                const n = document.createElement('style');
                n.innerHTML = Wb;
                const o = document.createElement('style');
                ((o.innerHTML = Ub), t.append(n, o), e.appendChild(t));
                let i = document.createElement('body');
                (await c(ns)
                    .save()
                    .then((e) => {
                        i = Lb(e, i);
                    }),
                    (i.style.padding = '12em'),
                    i.classList.add('container'),
                    e.appendChild(i));
                const r = e.outerHTML,
                    s = new Blob(['\ufeff', r], {
                        type: 'tex/html; charset=utf-8;',
                    }),
                    a = await window.showSaveFilePicker({
                        suggestedName: `${Tb().Name}_Docs.html`,
                    });
                await a.requestPermission({ mode: 'readwrite' });
                const l = await a.createWritable();
                try {
                    await l.write(s);
                } catch (e) {
                    return (
                        Sb.dialog.alert(
                            'The file failed to export. Please contact the developer.',
                        ),
                        console.log(e),
                        void (await l.close())
                    );
                }
                (await l.close(),
                    Sb.dialog.alert('The file exported successfully.'));
            },
        };
    function jb(e) {
        const t = document.createElement('div');
        t.classList.add('row');
        const n = document.createElement('div');
        n.classList.add('column');
        const o = document.createElement('div');
        o.classList.add('column');
        let i = !1;
        return (
            e.forEach((e) => {
                let t = '';
                const r = Tb().Lexicon[e].pronunciations;
                Object.entries(r).forEach(([e, n]) => {
                    t += `<p class="lect">${Tb().UseLects ? e + ': ' : ''}<span class='pronunciation'>${n.ipa}</span></p>`;
                });
                (Tb().Lexicon[e].Senses.forEach(
                    ({ lects: e, definition: n, tags: o }, i) => {
                        (Tb().UseLects &&
                            (t += `<p class="lect">${e.join(', ')}</p>`),
                            (t += `<div class='sense'>${i + 1}.</div>`),
                            o.forEach((e) => {
                                t += `<div class='tag-item'>${e}</div>`;
                            }),
                            (t += `<p>${Wa(n)}</p>`));
                    },
                ),
                    i
                        ? (o.innerHTML += `<div class="lex-entry"><p>${e}</p>${t}</div>`)
                        : (n.innerHTML += `<div class="lex-entry"><p>${e}</p>${t}</div>`),
                    (i = !i));
            }),
            t.append(n, o),
            t
        );
    }
    const Db = {
            1.9: (e) => {
                Kr.set(_b);
                try {
                    for (const t in e.Lexicon)
                        Tb().Lexicon[t] = {
                            pronunciations: {
                                General: {
                                    ipa: e.Lexicon[t][0],
                                    irregular: e.Lexicon[t][2],
                                },
                            },
                            Senses: [
                                {
                                    definition: e.Lexicon[t][1],
                                    lects: ['General'],
                                    tags: e.Lexicon[t][3],
                                },
                            ],
                        };
                } catch (e) {
                    (window.alert(
                        'There was a problem loading the contents of the lexicon. Please contact the developer.',
                    ),
                        ps('Attempted to load a version 1.9 lexicon.', e));
                }
                try {
                    Tb().Alphabet = e.Alphabet;
                } catch (e) {
                    (window.alert(
                        'There was a problem loading the alphabetical order. Please contact the developer for assistance.',
                    ),
                        ps('Attempted to load a version 1.9 alphabet.', e));
                }
                try {
                    ((Tb().Pronunciations.General = e.Romanization),
                        Ss('General'));
                } catch (e) {
                    (window.alert(
                        'There was a problem loading the romanizations. Please contact the developer for assistance.',
                    ),
                        ps('Attempted to load version 1.9 romanizations.', e));
                }
                try {
                    for (const t in e.Phrasebook)
                        Tb().Phrasebook[t] = (() => {
                            const n = {};
                            for (const o in e.Phrasebook[t])
                                n[o] = {
                                    description: e.Phrasebook[t][o].description,
                                    lects: ['General'],
                                    pronunciations: {
                                        General: {
                                            ipa: e.Phrasebook[t][o]
                                                .pronunciation,
                                            irregular: !1,
                                        },
                                    },
                                    variants: (() => {
                                        const n = {};
                                        for (const i in e.Phrasebook[t][o]
                                            .variants)
                                            n[i] = {
                                                description:
                                                    e.Phrasebook[t][o].variants[
                                                        i
                                                    ].description,
                                                pronunciations: {
                                                    General: {
                                                        ipa: e.Phrasebook[t][o]
                                                            .variants[i]
                                                            .pronunciation,
                                                        irregular: !1,
                                                    },
                                                },
                                            };
                                        return n;
                                    })(),
                                    tags: [],
                                };
                            return n;
                        })();
                } catch (e) {
                    (window.alert(
                        'There was a problem loading the phrasebook. Please contact the developer for assistance.',
                    ),
                        ps('Attempted to load a version 1.9 phrasebook.', e));
                }
                try {
                    ((Tb().Phonotactics.General.Onsets =
                        e.Phonotactics.Initial.join(' ')),
                        (Tb().Phonotactics.General.Medials =
                            e.Phonotactics.Middle.join(' ')),
                        (Tb().Phonotactics.General.Codas =
                            e.Phonotactics.Final.join(' ')),
                        (Tb().Phonotactics.General.Vowels =
                            e.Phonotactics.Vowel.join(' ')),
                        (Tb().Phonotactics.General.Illegals =
                            e.Phonotactics.Illegal.join(' ')));
                } catch (e) {
                    (window.alert(
                        'There was a problem loading the phonotactics data. Please contact the developer for assistance.',
                    ),
                        ps('Attempted to load version 1.9 phonotactics.', e));
                }
                try {
                    (c(ns).destroy(), Vp(e.Docs));
                } catch (e) {
                    (window.alert(
                        'There was a problem loading the documentation data. Please contact the developer for assistance.',
                    ),
                        ps('Attempted to load version 1.9 documentation.', e));
                }
                try {
                    Tb().HeaderTags = e.HeaderTags;
                } catch (e) {
                    (window.alert(
                        'There was a problem loading the header tags.',
                    ),
                        ps('Attempted to load version 1.9 header tags.', e));
                }
                ((Tb().IgnoreDiacritics = e.IgnoreDiacritics),
                    (Tb().CaseSensitive = e.CaseSensitive));
            },
        },
        Fb = require('csv-parser');
    async function Hb(e, t, n, o, i) {
        const r = [];
        let s;
        ((t -= 1),
            (n -= 1),
            o && (o -= 1),
            i && (i -= 1),
            Ob({ title: 'Open CSV File', properties: ['openFile'] }, (a) => {
                void 0 !== a &&
                    ('csv' === a[0].split('.').pop()
                        ? ((s = a),
                          Cb.createReadStream(a[0])
                              .pipe(Fb({ headers: !1, skipLines: e ? 1 : 0 }))
                              .on('data', (e) => {
                                  r.push(e);
                              })
                              .on('end', () => {
                                  console.log(r);
                                  const e = {};
                                  (r.forEach((r) => {
                                      e[r[t]] = {
                                          pronunciations: {
                                              General: {
                                                  ipa: o
                                                      ? r[o]
                                                      : Es(r[t], Tb().Lects[0]),
                                                  irregular: !1,
                                              },
                                          },
                                          Senses: [
                                              {
                                                  definition: r[n],
                                                  lects: [Tb().Lects[0]],
                                                  tags: i
                                                      ? r[i]
                                                            .split(/\s+/)
                                                            .map((e) =>
                                                                e.trim(),
                                                            )
                                                      : [],
                                              },
                                          ],
                                      };
                                  }),
                                      console.log(e),
                                      (c(Kr).Lexicon = e),
                                      (c(Kr).Name = s[0]
                                          .split('/')
                                          [
                                              s[0].split('/').length - 1
                                          ].split('.')[0]),
                                      xb.emit(
                                          'update-lexicon-for-gods-sake-please',
                                      ));
                              }))
                        : Sb.dialog.alert('A CSV file was not selected.'));
            }));
    }
    async function zb(e = Tb().Name) {
        const t = await kb.db.Languages.filter({
            Name: e,
            Owner: c(ls),
        }).getAll();
        return t.length > 0 && t[0].File;
    }
    const Ub =
            '\n    @import url("https://fonts.googleapis.com/css2?family=Gentium+Book+Plus:ital,wght@0,4000,7001,4001,700&display=swap");\n    body {\n        overflow-y: auto;\n        text-align: center;\n        margin-left: 15vw;\n        margin-right: 15vw;\n        background-color: #333;\n        color: #ccc;\n    }\n    \n    .container {\n        overflow-x: clip;\n        overflow-y: auto;\n    }\n    \n    .lex-body {\n        font-family: "Gentium Book Plus", serif;\n    }\n    \n    .tag-item {\n        font-family: serif;\n    }\n    \n    .search {\n        font-family: "Gentium Book Plus", serif;\n    }\n    \n    .phonology, .pronunciation {\n        font-family: "Gentium Book Plus", serif !important;\n    }\n    \n    [id=entry-counter] {\n        font-family: serif;\n    }\n    \n    td {\n        text-align: center;\n        border: 2px solid #ccc;\n    }\n    \n    tr {\n        background-color: transparent !important;\n    }\n    \n    table {\n        border-collapse: collapse;\n        margin: auto;\n    }\n    \n    .table-container, .table-title {\n        font-family: "Gentium Book Plus", serif;\n        align-items: center;\n    }\n    \n    button {\n        display: none;\n    }\n    \n    .info {\n        display: none;\n    }\n    \n    .search-row {\n        display: inline-flex;\n    }\n    \n    @media only screen and (min-device-width: 601px) {\n        .sidebar {\n            max-width: 18% !important;\n        }\n    }\n    @media only screen and (max-device-width: 600px) {\n        body {\n            width: 100vw !important;\n            font-size: 12pt;\n            padding: 2vw;\n        }\n        body > h1 {\n            font-size: 36pt;\n        }\n        div.container {\n            height: 60vh !important;\n        }\n        div.column {\n            display: block;\n        }\n        div.sidebar {\n            max-height: 18vh;\n        }\n        div.row {\n            display: block;\n            min-width: 96vw !important;\n            margin-bottom: 36vh;\n        }\n        div.variants {\n            margin-bottom: 4rem;\n        }\n        .lex-entry, .lex-body {\n            font-size: 16pt !important;\n        }\n        .capitalize {\n            font-size: 24pt !important;\n        }\n        .tag-item, [id=entry-counter] {\n            font-size: 16pt;\n        }\n        .search, .sidebar p {\n            font-size: 24pt;\n        }\n        td {\n            font-size: 18pt !important;\n        }\n    }\n    ',
        Wb =
            '\n    @charset "UTF-8";\n    html, body {\n        align-items: center;\n    }\n    \n    body {\n        font-family: serif;\n        font-size: 11pt;\n        min-width: 400px;\n        min-height: 400px;\n        margin: 0px;\n        overflow: hidden;\n        -webkit-app-region: drag;\n    }\n    \n    button {\n        font-family: serif;\n        font-size: 11pt;\n        transition-duration: 0.33s;\n        cursor: pointer;\n        -webkit-app-region: no-drag;\n        -webkit-user-select: none;\n    }\n    button[id=overwrite] {\n        font-weight: bold;\n    }\n    button.collapser {\n        max-width: 1em;\n        height: 100%;\n        border-color: transparent !important;\n        background-color: rgba(17, 17, 17, 0.0666666667);\n        display: flex;\n        float: right;\n        margin: 0px;\n        padding: 0px;\n    }\n    button.collapser:hover {\n        border-color: rgba(255, 255, 255, 0.2666666667) !important;\n        background-color: rgba(0, 0, 0, 0.2);\n    }\n    button.collapser::after {\n        content: "‖";\n        margin: auto;\n    }\n    button.collapser-h {\n        max-height: 1.33em;\n        width: 100% !important;\n        border-color: transparent !important;\n        background-color: rgba(17, 17, 17, 0.0666666667);\n        display: flex;\n        margin: 0px;\n        padding: 0px;\n    }\n    button.collapser-h:hover {\n        border-color: rgba(255, 255, 255, 0.2666666667) !important;\n        background-color: rgba(0, 0, 0, 0.2);\n    }\n    button.collapser-h::after {\n        content: "═";\n        margin: auto;\n    }\n    \n    .tab-container {\n        width: 100vw;\n        height: 100vh;\n        -webkit-user-select: none;\n    }\n    .tab-container .button-container {\n        width: 100%;\n        text-align: center;\n    }\n    .tab-container .button-container button {\n        border: none;\n        outline: none;\n        padding: 4px;\n        height: 100%;\n        width: fit-content;\n    }\n    .tab-container .window-control {\n        text-align: left;\n        height: 0px;\n        overflow: visible;\n    }\n    .tab-container .window-control button {\n        border: none;\n        outline: none;\n        background-color: transparent;\n    }\n    .tab-container .window-control button.close:hover {\n        background-color: #9e0f0f;\n    }\n    .tab-container .window-control button.minimize:hover {\n        background-color: #c9c911;\n    }\n    .tab-container .window-control button.maximize:hover {\n        background-color: #4eb94e;\n    }\n    .tab-container .tab-pane {\n        height: 80%;\n        box-sizing: border-box;\n        -webkit-app-region: no-drag;\n        -webkit-user-select: text;\n    }\n    \n    .row {\n        display: flex;\n        margin: auto;\n    }\n    .row:has(~ .collapsible-row .collapsed) {\n        height: 90vh !important;\n    }\n    \n    .column {\n        width: 100%;\n    }\n    \n    .collapsible-column {\n        min-width: 2%;\n        width: fit-content;\n    }\n    \n    .collapsible-row:has(.collapsed) {\n        height: 3vh !important;\n    }\n    \n    .collapsed {\n        display: none;\n    }\n    \n    .text-left {\n        text-align: left;\n    }\n    .text-right {\n        text-align: right;\n    }\n    .text-center {\n        text-align: center;\n    }\n    \n    .prelined {\n        white-space: pre-line;\n        /* This is solely to make the \n character work from the JS side */\n    }\n    \n    p {\n        margin: 0px;\n    }\n    \n    div[id=tables-pane] {\n        font-family: Gentium;\n        font-size: 11pt;\n    }\n    \n    h1, h2, h3, h4, h5, h6 {\n        font-style: italic;\n        padding-top: 1em !important;\n    }\n    \n    .info {\n        font-family: serif;\n        font-size: 11pt;\n        font-style: italic;\n        line-height: 1.5em;\n        -webkit-user-select: none;\n    }\n    \n    .phonology {\n        font-family: Gentium;\n        font-size: 11pt;\n        width: 95%;\n    }\n    \n    .version-info {\n        font-family: serif;\n        font-size: 7pt;\n        text-align: left;\n        display: inline;\n        float: right;\n        -webkit-user-select: none;\n    }\n    \n    .lex-body {\n        white-space: pre-line;\n    }\n    .lex-entry {\n        font-family: Gentium;\n        font-size: 11pt;\n        transition: 0.3s;\n        padding: 1em;\n    }\n    \n    .variants {\n        font-family: Gentium;\n        font-size: 11pt;\n    }\n    .variants div.column {\n        margin: 0.6em;\n    }\n    \n    .capitalize {\n        text-transform: capitalize;\n    }\n    \n    .tag-item {\n        font-family: serif;\n        font-size: 7pt;\n        border-radius: 7%;\n        width: fit-content;\n        padding: 0.2em;\n        margin: 0.2em;\n        text-transform: uppercase;\n        display: inline-block;\n    }\n    \n    .sense {\n        font-family: Gentium;\n        font-size: 9pt;\n        border-radius: 7%;\n        width: fit-content;\n        padding: 0.2em;\n        margin: 0.2em;\n        font-weight: bold;\n        font-style: italic;\n        display: inline-block;\n        background-color: transparent;\n        margin-top: 1em;\n    }\n    \n    .lect {\n        font-family: serif;\n        font-size: 9pt;\n        font-style: italic;\n        margin-top: 0.1em;\n    }\n    \n    [id=entry-counter] {\n        font-family: serif;\n        font-size: 7pt;\n        border-radius: 7%;\n        width: fit-content;\n        padding: 0.2em;\n        margin: 0.2em;\n        text-transform: uppercase;\n        font-weight: bold;\n        margin: auto;\n    }\n    \n    .scrolled {\n        overflow-y: auto;\n        overflow-x: wrap;\n    }\n    \n    .container {\n        border-radius: 6px;\n        text-align: center;\n        margin: 6px;\n        padding: 6px;\n    }\n    \n    .row button {\n        padding: 2px 10px 2px 10px;\n        margin: 4px auto 4px auto;\n        display: flex;\n        width: fit-content;\n        border: 1px solid black;\n        border-radius: 8px;\n    }\n    \n    label {\n        font-family: serif;\n        font-size: 11pt;\n        -webkit-user-select: none;\n    }\n    \n    .pronunciation {\n        font-family: Gentium;\n        font-size: 9pt;\n    }\n    \n    textarea, input {\n        font-family: Gentium;\n        font-size: 11pt;\n        display: flex;\n        text-align: center;\n        padding: 4px;\n        margin: 1px auto 1px auto;\n        border: none;\n        border-radius: 3px;\n        width: 80%;\n        resize: vertical;\n        transition: 0.2s;\n    }\n    textarea .pronunciation, input .pronunciation {\n        font-family: Gentium;\n        font-size: 9pt;\n    }\n    textarea[type=number], input[type=number] {\n        padding: 1px;\n        width: 4em;\n    }\n    textarea[type=checkbox], input[type=checkbox] {\n        appearance: none;\n        margin: auto;\n        font: inherit;\n        width: 1rem;\n        height: 1rem;\n        border-radius: 0.15em;\n        transform: translateY(-0.075em);\n        display: grid;\n        place-content: center;\n    }\n    textarea[type=checkbox]::before, input[type=checkbox]::before {\n        content: "";\n        width: 0.65em;\n        height: 0.65em;\n        transform: scale(0);\n        transition: 120ms transform ease-in-out;\n    }\n    textarea[type=checkbox]:checked::before, input[type=checkbox]:checked::before {\n        transform: scale(1);\n        clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);\n    }\n    \n    .header input {\n        width: 70%;\n    }\n    \n    .narrow {\n        width: 50%;\n        margin: auto;\n    }\n    .narrow-col {\n        width: 15%;\n    }\n    \n    .search {\n        text-align: left;\n        width: 100%;\n        margin: 2px auto 2px auto;\n    }\n    \n    .search-container {\n        padding: 0 0.5em 0 0.5em;\n        position: relative;\n    }\n    \n    table {\n        border-collapse: collapse;\n        width: 95%;\n    }\n    table-container {\n        font-family: Gentium;\n        font-size: 11pt;\n        margin: auto;\n        padding: 30px 5%;\n    }\n    table-title {\n        font-family: Gentium;\n        font-size: 14pt;\n        font-style: italic;\n    }\n    \n    td {\n        padding: 2px 6px 2px 6px;\n        text-align: center;\n        user-select: none;\n    }\n    \n    .inflection {\n        font-family: Gentium;\n        font-size: 7pt;\n    }\n    .inflection h1, .inflection h2, .inflection h3, .inflection h4, .inflection h5, .inflection h6 {\n        padding-top: 0.2em;\n    }\n    .inflection h1 {\n        font-size: 1.5em;\n    }\n    .inflection h2 {\n        font-size: 1.3em;\n    }\n    .inflection h3 {\n        font-size: 1.1em;\n    }\n    .inflection h4 {\n        font-size: 1em;\n    }\n    .inflection h5 {\n        font-size: 0.9em;\n    }\n    .inflection h6 {\n        font-size: 0.8em;\n    }\n    \n    ::-webkit-scrollbar {\n        width: 9px;\n    }\n    ::-webkit-scrollbar-thumb {\n        border-radius: 6px;\n        transition: 0.2s;\n    }\n    ::-webkit-scrollbar-button {\n        display: none;\n    }\n    ::-webkit-scrollbar-corner {\n        border-radius: 6px 0px 0px 0px;\n    }\n    ::-webkit-resizer {\n        border-radius: 6px 0px 0px 0px;\n    }\n    \n    hr {\n        margin-bottom: 0.2em;\n        margin-top: 0.2em;\n        max-width: 66.66%;\n        padding: 0px;\n    }\n    \n    .milkyWay {\n        width: 100px;\n        height: 100px;\n        background: transparent;\n        margin: auto;\n        position: relative;\n        border-radius: 50%;\n    }\n    .milkyWay .planet {\n        border: 1px solid white;\n        animation-name: orbit;\n        animation-iteration-count: infinite;\n        animation-timing-function: linear;\n        animation-play-state: paused;\n    }\n    .milkyWay .planet::before, .milkyWay .planet::after {\n        position: absolute;\n        content: "";\n        display: block;\n        border-radius: 50%;\n    }\n    .milkyWay > div {\n        position: absolute;\n        border-radius: 50%;\n    }\n    \n    .sun {\n        background: #faca09;\n        width: 10%;\n        height: 10%;\n        top: 45%;\n        left: 45%;\n    }\n    \n    .mercury {\n        width: 20%;\n        height: 20%;\n        top: calc(40% - 1px);\n        left: calc(40% - 1px);\n        animation-duration: 2s;\n    }\n    .mercury::before {\n        background: #9fb5b6;\n        width: 16%;\n        height: 16%;\n        top: -8%;\n        left: 42%;\n    }\n    \n    .venus {\n        width: 30%;\n        height: 30%;\n        top: calc(35% - 1px);\n        left: calc(35% - 1px);\n        animation-duration: 3s;\n    }\n    .venus::before {\n        background: #ECC98E;\n        width: 10%;\n        height: 10%;\n        top: -5%;\n        left: 45%;\n    }\n    \n    .earth {\n        width: 40%;\n        height: 40%;\n        top: calc(30% - 1px);\n        left: calc(30% - 1px);\n        animation-duration: 4s;\n    }\n    .earth::before {\n        background: #208fd8;\n        width: 10%;\n        height: 10%;\n        top: -5%;\n        left: 45%;\n    }\n    .earth::after {\n        background: #33c470;\n        width: 10%;\n        height: 6%;\n        top: -3%;\n        left: 45%;\n        transform: rotate(45deg);\n    }\n    \n    .mars {\n        width: 50%;\n        height: 50%;\n        top: calc(25% - 1px);\n        left: calc(25% - 1px);\n        animation-duration: 5s;\n    }\n    .mars::before {\n        background: #d35400;\n        width: 6%;\n        height: 6%;\n        top: -3%;\n        left: 47%;\n    }\n    \n    .jupiter {\n        width: 60%;\n        height: 60%;\n        top: calc(20% - 1px);\n        left: calc(20% - 1px);\n        animation-duration: 6s;\n    }\n    .jupiter::before {\n        background: #d4975a;\n        width: 10%;\n        height: 10%;\n        top: -5%;\n        left: 45%;\n    }\n    \n    .saturn {\n        width: 70%;\n        height: 70%;\n        top: calc(15% - 1px);\n        left: calc(15% - 1px);\n        animation-duration: 7s;\n    }\n    .saturn::before {\n        background: #E4D191;\n        width: 7%;\n        height: 7%;\n        top: -4%;\n        left: 48%;\n    }\n    .saturn::after {\n        background: #F0E4C1;\n        width: 12%;\n        height: 1%;\n        top: -1%;\n        left: 45.5%;\n        transform: rotate(-15deg);\n    }\n    \n    .uranus {\n        width: 80%;\n        height: 80%;\n        top: calc(10% - 1px);\n        left: calc(10% - 1px);\n        animation-duration: 8s;\n    }\n    .uranus::before {\n        background: #3498db;\n        width: 5%;\n        height: 5%;\n        top: -2%;\n        left: 48%;\n    }\n    .uranus::after {\n        background: #b0d0e5;\n        width: 8%;\n        height: 0.5%;\n        top: 0%;\n        left: 46.25%;\n        transform: rotate(-15deg);\n    }\n    \n    .neptune {\n        width: 90%;\n        height: 90%;\n        top: calc(5% - 1px);\n        left: calc(5% - 1px);\n        animation-duration: 9s;\n    }\n    .neptune::before {\n        background: #1269a3;\n        width: 4%;\n        height: 4%;\n        top: -1%;\n        left: 49%;\n    }\n    .neptune::after {\n        background: #91cbf2;\n        width: 6%;\n        height: 0.5%;\n        top: 0.5%;\n        left: 48%;\n        transform: rotate(-15deg);\n    }\n    \n    .pluto {\n        width: 100%;\n        height: 100%;\n        top: calc(0% - 1px);\n        left: calc(0% - 1px);\n        animation-duration: 10s;\n    }\n    .pluto::before {\n        background: #b78c7a;\n        width: 1%;\n        height: 1%;\n        top: -0.5%;\n        left: 49.5%;\n    }\n    \n    @keyframes orbit {\n        0% {\n            transform: rotate(-180deg);\n        }\n        100% {\n            transform: rotate(180deg);\n        }\n    }\n    /* EditorJS Overrides */\n    .ce-toolbar__plus {\n        transition: 0.33s;\n    }\n    .ce-toolbar__content {\n        max-width: 90% !important;\n    }\n    .ce-block__content {\n        max-width: 80% !important;\n    }\n    .ce-block--selected .ce-block__content {\n        background-color: rgba(255, 255, 255, 0.3333333333) !important;\n    }\n    \n    ::selection {\n        background-color: rgba(255, 255, 255, 0.3333333333) !important;\n    }\n    \n    /*# sourceMappingURL=index.css.map */\n    \n    ';
    function qb(e, t, n) {
        const o = e.slice();
        return ((o[17] = t[n]), o);
    }
    function Vb(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l = e[5].Lects,
            c = [];
        for (let t = 0; t < l.length; t += 1) c[t] = Gb(qb(e, l, t));
        return {
            c() {
                ((t = E('br')),
                    (n = _()),
                    (o = E('label')),
                    (i = T('Lect\n                        ')),
                    (r = E('select')));
                for (let e = 0; e < c.length; e += 1) c[e].c();
                void 0 === e[4] && ne(() => e[12].call(r));
            },
            m(l, d) {
                (k(l, t, d), k(l, n, d), k(l, o, d), v(o, i), v(o, r));
                for (let e = 0; e < c.length; e += 1) c[e] && c[e].m(r, null);
                (N(r, e[4], !0), s || ((a = O(r, 'change', e[12])), (s = !0)));
            },
            p(e, t) {
                if (32 & t) {
                    let n;
                    for (l = e[5].Lects, n = 0; n < l.length; n += 1) {
                        const o = qb(e, l, n);
                        c[n]
                            ? c[n].p(o, t)
                            : ((c[n] = Gb(o)), c[n].c(), c[n].m(r, null));
                    }
                    for (; n < c.length; n += 1) c[n].d(1);
                    c.length = l.length;
                }
                48 & t && N(r, e[4]);
            },
            d(e) {
                (e && x(t), e && x(n), e && x(o), C(c, e), (s = !1), a());
            },
        };
    }
    function Gb(e) {
        let t,
            n,
            o,
            i = e[17] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[17]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (32 & r && i !== (i = e[17] + '') && A(n, i),
                    32 & r &&
                        o !== (o = e[17]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Kb(t) {
        let n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            C,
            S,
            B,
            L,
            A,
            M,
            N,
            $,
            R,
            j,
            D,
            F = t[3] && t[5].UseLects && Vb(t);
        return {
            c() {
                ((n = E('div')),
                    (o = E('div')),
                    (r = E('label')),
                    (s = T('Sound Changes\n            ')),
                    (a = E('br')),
                    (l = _()),
                    (c = E('label')),
                    (d = T('Base From Pronunciations\n                    ')),
                    (h = E('input')),
                    (u = _()),
                    F && F.c(),
                    (p = _()),
                    (f = E('textarea')),
                    (g = _()),
                    (m = E('label')),
                    (b = T('Test Changes\n            ')),
                    (y = E('textarea')),
                    (w = _()),
                    (C = E('textarea')),
                    (B = _()),
                    (L = E('div')),
                    (A = E('label')),
                    (M = T('New Language Name\n            ')),
                    (N = E('input')),
                    ($ = _()),
                    (R = E('button')),
                    (R.textContent = 'Save File and Evolve Lexicon'),
                    I(h, 'type', 'checkbox'),
                    I(f, 'rows', '5'),
                    I(f, 'class', 'text-left'),
                    I(y, 'rows', '3'),
                    I(C, 'rows', '3'),
                    I(C, 'class', 'pronunciation'),
                    (C.value = S = t[10](t[1])),
                    (C.readOnly = !0),
                    I(o, 'class', 'column'),
                    I(N, 'type', 'text'),
                    I(R, 'class', 'hover-highlight hover-shadow'),
                    I(L, 'class', 'column'),
                    I(n, 'class', 'row narrow'));
            },
            m(e, i) {
                (k(e, n, i),
                    v(n, o),
                    v(o, r),
                    v(r, s),
                    v(r, a),
                    v(r, l),
                    v(r, c),
                    v(c, d),
                    v(c, h),
                    (h.checked = t[3]),
                    v(c, u),
                    F && F.m(c, null),
                    v(r, p),
                    v(r, f),
                    P(f, t[0]),
                    v(o, g),
                    v(o, m),
                    v(m, b),
                    v(m, y),
                    P(y, t[1]),
                    v(m, w),
                    v(m, C),
                    v(n, B),
                    v(n, L),
                    v(L, A),
                    v(A, M),
                    v(A, N),
                    P(N, t[2]),
                    v(L, $),
                    v(L, R),
                    j ||
                        ((D = [
                            O(h, 'change', t[11]),
                            O(f, 'input', t[13]),
                            O(y, 'input', t[14]),
                            O(N, 'input', t[15]),
                            O(R, 'click', t[16]),
                        ]),
                        (j = !0)));
            },
            p(e, [t]) {
                (8 & t && (h.checked = e[3]),
                    e[3] && e[5].UseLects
                        ? F
                            ? F.p(e, t)
                            : ((F = Vb(e)), F.c(), F.m(c, null))
                        : F && (F.d(1), (F = null)),
                    1 & t && P(f, e[0]),
                    2 & t && P(y, e[1]),
                    2 & t && S !== (S = e[10](e[1])) && (C.value = S),
                    4 & t && N.value !== e[2] && P(N, e[2]));
            },
            i: e,
            o: e,
            d(e) {
                (e && x(n), F && F.d(), (j = !1), i(D));
            },
        };
    }
    function Yb(e, t, n) {
        let o, i, r, s;
        (d(e, Kr, (e) => n(5, (o = e))),
            d(e, as, (e) => n(6, (i = e))),
            d(e, Gr, (e) => n(7, (r = e))),
            d(e, ns, (e) => n(8, (s = e))));
        const a = require('vex-js');
        let l = '',
            c = '',
            u = '',
            p = !1,
            f = o.Lects[0];
        function g(e) {
            const t = xs(l);
            return ks(t.rules, e, t.categories);
        }
        return [
            l,
            c,
            u,
            p,
            f,
            o,
            i,
            r,
            s,
            a,
            g,
            function () {
                ((p = this.checked), n(3, p));
            },
            function () {
                ((f = $(this)), n(4, f));
            },
            function () {
                ((l = this.value), n(0, l));
            },
            function () {
                ((c = this.value), n(1, c));
            },
            function () {
                ((u = this.value), n(2, u));
            },
            () => {
                u !== o.Name
                    ? (Ab(),
                      window.setTimeout(() => {
                          (i && h(as, (i = !1), i),
                              h(as, (i = structuredClone(o)), i));
                          const e = structuredClone(r);
                          ((e.Name = u),
                              (e.ShowEtymology = !0),
                              Object.keys(o.Lexicon).forEach((t) => {
                                  let n = `${t}`;
                                  if (p) {
                                      if (
                                          !o.Lexicon[
                                              t
                                          ].pronunciations.hasOwnProperty(f)
                                      )
                                          return;
                                      n = o.Lexicon[t].pronunciations[f].ipa;
                                  }
                                  const i = g(n);
                                  ((e.Lexicon[i] = structuredClone(
                                      o.Lexicon[t],
                                  )),
                                      (e.Lexicon[i].pronunciations = {
                                          General: { ipa: i, irregular: !1 },
                                      }),
                                      e.Lexicon[i].Senses.forEach((e) => {
                                          e.lects = ['General'];
                                      }),
                                      (e.Relatives[o.Name] = structuredClone(
                                          o.Lexicon,
                                      )),
                                      o.Etymologies[t]
                                          ? ((e.Etymologies[t] =
                                                o.Etymologies[t]),
                                            (e.Etymologies[t].source = o.Name),
                                            e.Etymologies[
                                                t
                                            ].descendants.forEach((e) => {
                                                '<< THIS LANGUAGE >>' ===
                                                    e.source &&
                                                    (e.source = o.Name);
                                            }))
                                          : (e.Etymologies[t] = {
                                                descendants: [],
                                                source: o.Name,
                                            }),
                                      (e.Etymologies[i] = {
                                          descendants: [],
                                          source: '<< THIS LANGUAGE >>',
                                      }),
                                      e.Etymologies[t].descendants.push({
                                          name: i,
                                          source: '<< THIS LANGUAGE >>',
                                      }));
                              }),
                              s.destroy(),
                              Vp(!1),
                              h(Kr, (o = e), o),
                              Ab());
                      }, 333))
                    : a.dialog.alert(
                          'The new language must have a different name.',
                      );
            },
        ];
    }
    class Xb extends Ee {
        constructor(e) {
            (super(), Ce(this, e, Yb, Kb, s, {}));
        }
    }
    const Zb = require('node:crypto');
    function Jb(e, t) {
        return (
            (function (e) {
                e =
                    e.trim() +
                    ' -> salt, pewter, copper, tin, iron, lead, wolfram, quicksilver, and gold.';
                const t = Zb.createHash('sha256');
                return (t.update(e), t.digest('hex'));
            })(e) === t
        );
    }
    function Qb(e, t, n) {
        const o = e.slice();
        return ((o[35] = t[n]), o);
    }
    function ev(t) {
        let n;
        return {
            c() {
                ((n = E('div')), I(n, 'class', 'planet ' + t[35]));
            },
            m(e, t) {
                k(e, n, t);
            },
            p: e,
            d(e) {
                e && x(n);
            },
        };
    }
    function tv(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d = e[3].Name + '',
            h = e[4].ShowEtymology && nv(e);
        return {
            c() {
                ((t = E('p')),
                    (n = T('Reference Language: ')),
                    (o = T(d)),
                    (i = _()),
                    (r = E('button')),
                    (r.textContent = 'Close Reference File'),
                    (s = _()),
                    h && h.c(),
                    (a = B()),
                    I(r, 'class', 'hover-highlight hover-shadow'));
            },
            m(d, u) {
                (k(d, t, u),
                    v(t, n),
                    v(t, o),
                    k(d, i, u),
                    k(d, r, u),
                    k(d, s, u),
                    h && h.m(d, u),
                    k(d, a, u),
                    l || ((c = O(r, 'click', e[13])), (l = !0)));
            },
            p(e, t) {
                (8 & t[0] && d !== (d = e[3].Name + '') && A(o, d),
                    e[4].ShowEtymology
                        ? h
                            ? h.p(e, t)
                            : ((h = nv(e)), h.c(), h.m(a.parentNode, a))
                        : h && (h.d(1), (h = null)));
            },
            d(e) {
                (e && x(t),
                    e && x(i),
                    e && x(r),
                    e && x(s),
                    h && h.d(e),
                    e && x(a),
                    (l = !1),
                    c());
            },
        };
    }
    function nv(t) {
        let n, o, r;
        return {
            c() {
                ((n = E('button')),
                    (n.textContent =
                        'Import Reference Lexicon as Related Lexicon'),
                    I(
                        n,
                        'title',
                        'If you are using Etymology features, this allows you to import a lexicon from another language file as a relative you can which link words to and from.',
                    ));
            },
            m(e, i) {
                (k(e, n, i),
                    o ||
                        ((r = [
                            u(Ls.call(null, n, { position: 'top' })),
                            O(n, 'click', t[14]),
                        ]),
                        (o = !0)));
            },
            p: e,
            d(e) {
                (e && x(n), (o = !1), i(r));
            },
        };
    }
    function ov(e) {
        let t, n, o;
        return {
            c() {
                ((t = E('input')), I(t, 'type', 'number'));
            },
            m(i, r) {
                (k(i, t, r),
                    P(t, e[0].pronunciations),
                    n || ((o = O(t, 'input', e[17])), (n = !0)));
            },
            p(e, n) {
                1 & n[0] &&
                    L(t.value) !== e[0].pronunciations &&
                    P(t, e[0].pronunciations);
            },
            d(e) {
                (e && x(t), (n = !1), o());
            },
        };
    }
    function iv(e) {
        let t, n, o;
        return {
            c() {
                ((t = E('input')), I(t, 'type', 'number'));
            },
            m(i, r) {
                (k(i, t, r),
                    P(t, e[0].tags),
                    n || ((o = O(t, 'input', e[20])), (n = !0)));
            },
            p(e, n) {
                1 & n[0] && L(t.value) !== e[0].tags && P(t, e[0].tags);
            },
            d(e) {
                (e && x(t), (n = !1), o());
            },
        };
    }
    function rv(e) {
        let t,
            n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            S,
            B,
            N,
            $,
            R,
            j,
            D,
            F,
            H,
            z,
            U,
            W,
            q,
            V,
            G,
            K,
            Y,
            X,
            Z,
            J,
            Q,
            ee,
            te,
            ne,
            oe,
            ie,
            re,
            se,
            ae,
            le,
            ce,
            de,
            he,
            ue,
            pe,
            me,
            be,
            ve,
            xe,
            Ce,
            Ee,
            Se,
            Te,
            _e,
            Be,
            Oe,
            Ie,
            Le,
            Ae,
            Pe,
            Me,
            Ne,
            $e,
            Re,
            je,
            De,
            Fe,
            He,
            ze,
            Ue,
            We,
            qe,
            Ve,
            Ge,
            Ke,
            Ye,
            Xe,
            Ze,
            Je,
            Qe,
            et,
            tt,
            nt,
            ot,
            it,
            rt,
            st,
            at,
            lt,
            ct,
            dt,
            ht,
            ut,
            pt,
            ft,
            gt,
            mt,
            bt,
            vt,
            yt,
            wt,
            kt,
            xt,
            Ct,
            Et,
            St,
            Tt,
            _t,
            Bt,
            Ot,
            It,
            Lt,
            At,
            Pt,
            Mt,
            Nt,
            $t,
            Rt,
            jt,
            Dt,
            Ft,
            Ht,
            zt,
            Ut,
            Wt,
            qt,
            Vt,
            Gt,
            Kt,
            Yt,
            Xt,
            Zt,
            Jt = e[4].SaveLocation + '',
            Qt = [
                'mercury',
                'venus',
                'earth',
                'mars',
                'jupiter',
                'saturn',
                'uranus',
                'neptune',
                'pluto',
            ],
            en = [];
        for (let t = 0; t < 9; t += 1) en[t] = ev(Qb(e, Qt, t));
        let tn = 'object' == typeof e[3] && tv(e);
        Ae = new Xb({});
        let nn = e[0].pronunciations_bool && ov(e),
            on = e[0].tags_bool && iv(e);
        return {
            c() {
                ((t = E('div')),
                    (n = E('div')),
                    (o = E('div')),
                    (r = E('p')),
                    (r.textContent = 'Document'),
                    (s = _()),
                    (a = E('label')),
                    (l = T('Name')),
                    (d = _()),
                    (h = E('input')),
                    (p = _()),
                    (f = E('br')),
                    (g = _()),
                    (m = E('div')),
                    (b = E('div')),
                    (y = E('button')),
                    (y.textContent = 'Save…'),
                    (w = _()),
                    (S = E('button')),
                    (S.textContent = 'Open…'),
                    (B = _()),
                    (N = E('p')),
                    (N.textContent =
                        'Save your lexicon or open a previously saved one.'),
                    ($ = _()),
                    (R = E('div')),
                    (j = E('div')),
                    (D = E('div')),
                    (F = _()));
                for (let e = 0; e < 9; e += 1) en[e].c();
                ((H = _()),
                    (z = E('p')),
                    (U = T(e[2])),
                    (W = _()),
                    (q = E('div')),
                    (V = E('button')),
                    (V.textContent = 'Export…'),
                    (G = _()),
                    (K = E('button')),
                    (K.textContent = 'Import…'),
                    (Y = _()),
                    (X = E('p')),
                    (X.textContent =
                        'Export and import your own copies of the lexicon file.'),
                    (Z = _()),
                    (J = E('div')),
                    (Q = E('label')),
                    (Q.textContent = 'Secondary Save Locations'),
                    (ee = _()),
                    (te = E('button')),
                    (te.textContent = 'Choose Location…'),
                    (ne = _()),
                    (oe = E('p')),
                    (ie = T('Selected location: ')),
                    (re = E('u')),
                    (se = T(Jt)),
                    (ae = E('u')),
                    (le = _()),
                    (ce = E('br')),
                    (de = _()),
                    (he = E('p')),
                    (he.textContent = 'Lexicon Header Tags'),
                    (ue = _()),
                    (pe = E('div')),
                    (me = E('textarea')),
                    (be = _()),
                    (ve = E('p')),
                    (ve.textContent =
                        'Entries with these tags will be sorted separately at the top of the lexicon.'),
                    (xe = _()),
                    (Ce = E('br')),
                    (Ee = _()),
                    (Se = E('button')),
                    (Se.textContent = 'Open Reference File'),
                    (Te = _()),
                    tn && tn.c(),
                    (_e = _()),
                    (Be = E('br')),
                    (Oe = _()),
                    (Ie = E('p')),
                    (Ie.textContent = 'Evolve Language'),
                    (Le = _()),
                    ye(Ae.$$.fragment),
                    (Pe = _()),
                    (Me = E('br')),
                    (Ne = _()),
                    ($e = E('p')),
                    ($e.textContent = 'Export Lexicon'),
                    (Re = _()),
                    (je = E('p')),
                    (je.textContent = 'HTML'),
                    (De = _()),
                    (Fe = E('div')),
                    (He = E('div')),
                    (ze = E('button')),
                    (ze.textContent = 'Lexicon Only'),
                    (Ue = _()),
                    (We = E('div')),
                    (qe = E('button')),
                    (qe.textContent = 'Lexicon & Docs'),
                    (Ve = _()),
                    (Ge = E('div')),
                    (Ke = E('button')),
                    (Ke.textContent = 'Documentation Only'),
                    (Ye = _()),
                    (Xe = E('button')),
                    (Xe.textContent = 'Text File'),
                    (Ze = _()),
                    (Je = E('button')),
                    (Je.textContent = 'CSV'),
                    (Qe = _()),
                    (et = E('button')),
                    (et.textContent = 'JSON'),
                    (tt = _()),
                    (nt = E('br')),
                    (ot = _()),
                    (it = E('p')),
                    (it.textContent = 'Import Lexicon from CSV'),
                    (rt = _()),
                    (st = E('div')),
                    (at = E('div')),
                    (lt = E('div')),
                    (ct = E('label')),
                    (dt = T('Words Column\n                            ')),
                    (ht = E('input')),
                    (ut = _()),
                    (pt = E('div')),
                    (ft = E('label')),
                    (gt = T(
                        'Pronunciations Column\n                            ',
                    )),
                    (mt = E('input')),
                    (bt = _()),
                    nn && nn.c(),
                    (vt = _()),
                    (yt = E('div')),
                    (wt = E('label')),
                    (kt = T(
                        'Definitions Column\n                            ',
                    )),
                    (xt = E('input')),
                    (Ct = _()),
                    (Et = E('div')),
                    (St = E('label')),
                    (Tt = T('Tags Column\n                            ')),
                    (_t = E('input')),
                    (Bt = _()),
                    on && on.c(),
                    (Ot = _()),
                    (It = E('label')),
                    (It.textContent = 'First Row Is Column Labels'),
                    (Lt = _()),
                    (At = E('input')),
                    (Pt = _()),
                    (Mt = E('button')),
                    (Mt.textContent = 'Import'),
                    (Nt = _()),
                    ($t = E('br')),
                    (Rt = _()),
                    (jt = E('p')),
                    (jt.textContent = 'Import Lexicon from Plain Text'),
                    (Dt = _()),
                    (Ft = E('p')),
                    (Ft.textContent =
                        'Check the Help tab to read about the plain text format Lexicanter can convert into lexicon entries.'),
                    (Ht = _()),
                    (zt = E('div')),
                    (Ut = E('textarea')),
                    (Wt = _()),
                    (qt = E('button')),
                    (qt.textContent = 'Import'),
                    (Vt = _()),
                    (Gt = E('br')),
                    (Kt = E('br')),
                    I(a, 'for', 'file-name'),
                    I(
                        a,
                        'title',
                        (c = `Your file will be saved as: ${e[4].Name}.lexc`),
                    ),
                    I(h, 'type', 'text'),
                    I(h, 'id', 'file-name'),
                    I(y, 'class', 'hover-highlight hover-shadow'),
                    I(S, 'class', 'hover-highlight hover-shadow'),
                    I(N, 'class', 'info'),
                    I(b, 'class', 'column'),
                    I(D, 'class', 'sun'),
                    I(j, 'class', 'milkyWay'),
                    I(R, 'class', 'column'),
                    I(V, 'class', 'hover-highlight hover-shadow'),
                    I(
                        V,
                        'title',
                        'Allows you to save your file to a custom location.',
                    ),
                    I(K, 'class', 'hover-highlight hover-shadow'),
                    I(
                        K,
                        'title',
                        'Makes it easier to import files from a custom location.',
                    ),
                    I(X, 'class', 'info'),
                    I(q, 'class', 'column'),
                    I(m, 'class', 'narrow row'),
                    I(Q, 'for', 'save-locations'),
                    I(te, 'id', 'save-locations'),
                    I(te, 'class', 'hover-highlight hover-shadow'),
                    I(J, 'class', 'narrow'),
                    I(
                        he,
                        'title',
                        'Here you can define Header Tags. Words in the lexicon with these tags will be sorted above the rest.',
                    ),
                    I(ve, 'class', 'info'),
                    I(pe, 'class', 'narrow'),
                    I(Se, 'class', 'hover-highlight hover-shadow'),
                    I(
                        Se,
                        'title',
                        'This allows you to open a second language file in read-only mode for referencing.',
                    ),
                    I(
                        Ie,
                        'title',
                        'This feature allows you to apply sound change rules across your lexicon, and then save the result as a new language file.',
                    ),
                    I(ze, 'class', 'hover-highlight hover-shadow'),
                    I(He, 'class', 'column'),
                    I(qe, 'class', 'hover-highlight hover-shadow'),
                    I(We, 'class', 'column'),
                    I(Ke, 'class', 'hover-highlight hover-shadow'),
                    I(Ge, 'class', 'column'),
                    I(Fe, 'class', 'row narrow'),
                    I(Xe, 'class', 'hover-highlight hover-shadow'),
                    I(Je, 'class', 'hover-highlight hover-shadow'),
                    I(et, 'class', 'hover-highlight hover-shadow'),
                    I(ht, 'type', 'number'),
                    I(lt, 'class', 'column'),
                    I(mt, 'type', 'checkbox'),
                    I(pt, 'class', 'column'),
                    I(xt, 'type', 'number'),
                    I(yt, 'class', 'column'),
                    I(_t, 'type', 'checkbox'),
                    I(Et, 'class', 'column'),
                    I(at, 'class', 'row'),
                    I(st, 'class', 'narrow'),
                    I(It, 'for', 'row-one-is-labels'),
                    I(At, 'type', 'checkbox'),
                    I(At, 'id', 'row-one-is-labels'),
                    I(Mt, 'class', 'hover-highlight hover-shadow'),
                    I(Ft, 'class', 'info'),
                    I(Ut, 'class', 'text-left'),
                    I(Ut, 'rows', '6'),
                    I(qt, 'class', 'hover-highlight hover-shadow'),
                    I(zt, 'class', 'narrow'),
                    I(o, 'class', 'column container'),
                    M(o, 'overflow-y', 'auto'),
                    I(n, 'class', 'row'),
                    M(n, 'height', '95vh'),
                    I(t, 'class', 'tab-pane'));
            },
            m(i, c) {
                (k(i, t, c),
                    v(t, n),
                    v(n, o),
                    v(o, r),
                    v(o, s),
                    v(o, a),
                    v(a, l),
                    v(o, d),
                    v(o, h),
                    P(h, e[4].Name),
                    v(o, p),
                    v(o, f),
                    v(o, g),
                    v(o, m),
                    v(m, b),
                    v(b, y),
                    v(b, w),
                    v(b, S),
                    v(b, B),
                    v(b, N),
                    v(m, $),
                    v(m, R),
                    v(R, j),
                    v(j, D),
                    v(j, F));
                for (let e = 0; e < 9; e += 1) en[e] && en[e].m(j, null);
                (v(R, H),
                    v(R, z),
                    v(z, U),
                    v(m, W),
                    v(m, q),
                    v(q, V),
                    v(q, G),
                    v(q, K),
                    v(q, Y),
                    v(q, X),
                    v(o, Z),
                    v(o, J),
                    v(J, Q),
                    v(J, ee),
                    v(J, te),
                    v(J, ne),
                    v(J, oe),
                    v(oe, ie),
                    v(oe, re),
                    v(re, se),
                    v(re, ae),
                    v(o, le),
                    v(o, ce),
                    v(o, de),
                    v(o, he),
                    v(o, ue),
                    v(o, pe),
                    v(pe, me),
                    P(me, e[4].HeaderTags),
                    v(pe, be),
                    v(pe, ve),
                    v(o, xe),
                    v(o, Ce),
                    v(o, Ee),
                    v(o, Se),
                    v(o, Te),
                    tn && tn.m(o, null),
                    v(o, _e),
                    v(o, Be),
                    v(o, Oe),
                    v(o, Ie),
                    v(o, Le),
                    we(Ae, o, null),
                    v(o, Pe),
                    v(o, Me),
                    v(o, Ne),
                    v(o, $e),
                    v(o, Re),
                    v(o, je),
                    v(o, De),
                    v(o, Fe),
                    v(Fe, He),
                    v(He, ze),
                    v(Fe, Ue),
                    v(Fe, We),
                    v(We, qe),
                    v(Fe, Ve),
                    v(Fe, Ge),
                    v(Ge, Ke),
                    v(o, Ye),
                    v(o, Xe),
                    v(o, Ze),
                    v(o, Je),
                    v(o, Qe),
                    v(o, et),
                    v(o, tt),
                    v(o, nt),
                    v(o, ot),
                    v(o, it),
                    v(o, rt),
                    v(o, st),
                    v(st, at),
                    v(at, lt),
                    v(lt, ct),
                    v(ct, dt),
                    v(ct, ht),
                    P(ht, e[0].words),
                    v(at, ut),
                    v(at, pt),
                    v(pt, ft),
                    v(ft, gt),
                    v(ft, mt),
                    P(mt, e[0].pronunciations_bool),
                    v(ft, bt),
                    nn && nn.m(ft, null),
                    v(at, vt),
                    v(at, yt),
                    v(yt, wt),
                    v(wt, kt),
                    v(wt, xt),
                    P(xt, e[0].definitions),
                    v(at, Ct),
                    v(at, Et),
                    v(Et, St),
                    v(St, Tt),
                    v(St, _t),
                    P(_t, e[0].tags_bool),
                    v(St, Bt),
                    on && on.m(St, null),
                    v(o, Ot),
                    v(o, It),
                    v(o, Lt),
                    v(o, At),
                    (At.checked = e[0].headers),
                    v(o, Pt),
                    v(o, Mt),
                    v(o, Nt),
                    v(o, $t),
                    v(o, Rt),
                    v(o, jt),
                    v(o, Dt),
                    v(o, Ft),
                    v(o, Ht),
                    v(o, zt),
                    v(zt, Ut),
                    P(Ut, e[1]),
                    v(zt, Wt),
                    v(zt, qt),
                    v(o, Vt),
                    v(o, Gt),
                    v(o, Kt),
                    (Yt = !0),
                    Xt ||
                        ((Zt = [
                            u(Ls.call(null, a, { position: 'right' })),
                            O(h, 'input', e[11]),
                            O(y, 'click', Ab),
                            O(S, 'click', e[7]),
                            O(V, 'click', Pb),
                            u(Ls.call(null, V, { position: 'left' })),
                            O(K, 'click', e[8]),
                            u(Ls.call(null, K, { position: 'left' })),
                            O(te, 'click', e[6]),
                            u(Ls.call(null, he, { position: 'top' })),
                            O(me, 'input', e[12]),
                            u(Ls.call(null, Se, { position: 'top' })),
                            O(Se, 'click', e[10]),
                            u(Ls.call(null, Ie, { position: 'top' })),
                            O(ze, 'click', Rb.lexicon),
                            O(qe, 'click', Rb.all),
                            O(Ke, 'click', Rb.docs),
                            O(Xe, 'click', Mb),
                            O(Je, 'click', Nb),
                            O(et, 'click', $b),
                            O(ht, 'input', e[15]),
                            O(mt, 'change', e[16]),
                            O(xt, 'input', e[18]),
                            O(_t, 'change', e[19]),
                            O(At, 'change', e[21]),
                            O(Mt, 'click', e[22]),
                            O(Ut, 'input', e[23]),
                            O(qt, 'click', e[24]),
                        ]),
                        (Xt = !0)));
            },
            p(e, t) {
                ((!Yt ||
                    (16 & t[0] &&
                        c !==
                            (c = `Your file will be saved as: ${e[4].Name}.lexc`))) &&
                    I(a, 'title', c),
                    16 & t[0] && h.value !== e[4].Name && P(h, e[4].Name),
                    (!Yt || 4 & t[0]) && A(U, e[2]),
                    (!Yt || 16 & t[0]) &&
                        Jt !== (Jt = e[4].SaveLocation + '') &&
                        A(se, Jt),
                    16 & t[0] && P(me, e[4].HeaderTags),
                    'object' == typeof e[3]
                        ? tn
                            ? tn.p(e, t)
                            : ((tn = tv(e)), tn.c(), tn.m(o, _e))
                        : tn && (tn.d(1), (tn = null)),
                    1 & t[0] && L(ht.value) !== e[0].words && P(ht, e[0].words),
                    1 & t[0] && P(mt, e[0].pronunciations_bool),
                    e[0].pronunciations_bool
                        ? nn
                            ? nn.p(e, t)
                            : ((nn = ov(e)), nn.c(), nn.m(ft, null))
                        : nn && (nn.d(1), (nn = null)),
                    1 & t[0] &&
                        L(xt.value) !== e[0].definitions &&
                        P(xt, e[0].definitions),
                    1 & t[0] && P(_t, e[0].tags_bool),
                    e[0].tags_bool
                        ? on
                            ? on.p(e, t)
                            : ((on = iv(e)), on.c(), on.m(St, null))
                        : on && (on.d(1), (on = null)),
                    1 & t[0] && (At.checked = e[0].headers),
                    2 & t[0] && P(Ut, e[1]));
            },
            i(e) {
                Yt || (fe(Ae.$$.fragment, e), (Yt = !0));
            },
            o(e) {
                (ge(Ae.$$.fragment, e), (Yt = !1));
            },
            d(e) {
                (e && x(t),
                    C(en, e),
                    tn && tn.d(),
                    ke(Ae),
                    nn && nn.d(),
                    on && on.d(),
                    (Xt = !1),
                    i(Zt));
            },
        };
    }
    function sv(e, t, n) {
        let o, i, r, s, a, l, c, u, p;
        (d(e, as, (e) => n(3, (i = e))),
            d(e, Kr, (e) => n(4, (r = e))),
            d(e, rs, (e) => n(26, (s = e))),
            d(e, cs, (e) => n(27, (a = e))),
            d(e, ls, (e) => n(28, (l = e))),
            d(e, ns, (e) => n(29, (c = e))),
            d(e, ts, (e) => n(30, (u = e))),
            d(e, Gr, (e) => n(31, (p = e))));
        const f = require('fs'),
            g = require('path'),
            m = require('vex-js');
        K(() => {
            undefined.webkitdirectory = !0;
        });
        let b = {
                headers: !0,
                words: 1,
                pronunciations_bool: !1,
                pronunciations: 2,
                definitions: 3,
                tags_bool: !1,
                tags: 4,
            },
            v = '';
        async function y(e) {
            if ('number' == typeof e.Version || '1.8.x' === e.Version) {
                try {
                    Db[e.Version](e);
                } catch (t) {
                    m.dialog.alert(
                        ` \n                    The file you attempted to open was saved by an old version of Lexicanter (Version ~${e.Version}), \n                    which is no longer supported. Please contact the developer for assistance; the file is likely recoverable.\n                `,
                    );
                }
                return;
            }
            let t;
            try {
                if (
                    (h(Kr, (r = structuredClone(p)), r),
                    (t =
                        'There was a problem loading the settings of the file.'),
                    h(Kr, (r.CaseSensitive = e.CaseSensitive), r),
                    h(Kr, (r.IgnoreDiacritics = e.IgnoreDiacritics), r),
                    h(Kr, (r.HeaderTags = e.HeaderTags), r),
                    h(Kr, (r.UseLects = e.UseLects), r),
                    h(Kr, (r.ShowEtymology = e.ShowEtymology), r),
                    h(Kr, (r.ShowInflection = e.ShowInflection), r),
                    e.hasOwnProperty('ShowPronunciation') &&
                        h(Kr, (r.ShowPronunciation = e.ShowPronunciation), r),
                    e.hasOwnProperty('OrderByDate'))
                )
                    h(Kr, (r.OrderByDate = e.OrderByDate), r);
                else
                    for (let t in e.Lexicon)
                        e.Lexicon[t].Timestamp = Date.now();
                (e.hasOwnProperty('SaveLocation') &&
                    h(Kr, (r.SaveLocation = e.SaveLocation), r),
                    e.hasOwnProperty('FileVersion') &&
                        h(Kr, (r.FileVersion = e.FileVersion), r),
                    (t =
                        'There was a problem loading the alphabet from the file.'),
                    h(Kr, (r.Alphabet = e.Alphabet), r),
                    (t =
                        'There was a problem loading the file’s lexicon data.'),
                    h(Kr, (r.Lexicon = e.Lexicon), r),
                    h(Kr, (r.Lects = e.Lects), r),
                    (t =
                        'There was a problem loading the file’s phrasebook data.'),
                    h(Kr, (r.Phrasebook = e.Phrasebook), r),
                    h(ts, (u = Object.keys(r.Phrasebook)[0]), u),
                    (t =
                        'There was a problem loading the file’s documentation data.'));
                let n = e.Docs;
                (h(Kr, (r.Docs = n), r),
                    c.destroy(),
                    Vp(n),
                    (t =
                        'There was a problem loading the pronunciations rules from the file.'),
                    h(Kr, (r.Pronunciations = e.Pronunciations), r),
                    r.Lects.forEach(Ss),
                    (t =
                        'There was a problem loading the orthography data from the file.'),
                    e.hasOwnProperty('Orthographies') &&
                        (h(Kr, (r.Orthographies = e.Orthographies), r),
                        h(Kr, (r.ShowOrthography = e.ShowOrthography), r)),
                    (t =
                        'There was a problem loading the phonotactics rules from the file.'),
                    h(Kr, (r.Phonotactics = e.Phonotactics), r),
                    (t =
                        'There was a problem loading the inflection rules from the file.'));
                let o = e.Inflections;
                if (
                    (e.Inflections.categories || (o.categories = ''),
                    h(Kr, (r.Inflections = e.Inflections), r),
                    (t =
                        'There was a problem loading the etymology data from the file.'),
                    h(Kr, (r.Etymologies = e.Etymologies), r),
                    (t =
                        'There was a problem loading the advanced phonotactics.'),
                    e.hasOwnProperty('AdvancedPhonotactics') &&
                        (h(
                            Kr,
                            (r.UseAdvancedPhonotactics =
                                e.UseAdvancedPhonotactics),
                            r,
                        ),
                        e.AdvancedPhonotactics.hasOwnProperty('Constructs') ||
                            ((e.AdvancedPhonotactics.Constructs = [
                                { enabled: !0, structures: '' },
                            ]),
                            (e.AdvancedPhonotactics.Illegals = [])),
                        h(
                            Kr,
                            (r.AdvancedPhonotactics = e.AdvancedPhonotactics),
                            r,
                        )),
                    (t = 'There was a problem loading the file’s theme.'),
                    e.hasOwnProperty('FileTheme') &&
                        h(Kr, (r.FileTheme = e.FileTheme), r),
                    (t = 'There was a problem syncing with the database.'),
                    e.hasOwnProperty('UploadToDatabase') &&
                        (h(Kr, (r.UploadToDatabase = e.UploadToDatabase), r),
                        r.UploadToDatabase))
                ) {
                    if ('' === l || '' === a)
                        return void m.dialog.alert(
                            'The file you opened has database syncing turned on, but your user ID or account key are blank.',
                        );
                    if (Jb(l, a)) {
                        const t = await zb(e.Name);
                        !1 !== t
                            ? void 0 === t.FileVersion
                                ? m.dialog.confirm({
                                      message:
                                          'The file in the database has no FileVersion number. Would you like to overwrite it with your local version?',
                                      yesText: 'Upload Local Version',
                                      callback: (e) => {
                                          e &&
                                              (Ab(),
                                              m.dialog.alert(
                                                  'Saved and uploaded local file.',
                                              ));
                                      },
                                  })
                                : parseInt(r.FileVersion, 36) <
                                      parseInt(t.FileVersion, 36) &&
                                  m.dialog.confirm({
                                      message: `Detected a newer version of the file in the database (local: ${r.FileVersion} | online: ${t.FileVersion}). Would you like to download the changes?`,
                                      yesText: 'Download Changes',
                                      callback: (e, n = t) => {
                                          e
                                              ? (h(Kr, (r = n), r),
                                                Vp(n.Docs),
                                                Ab(),
                                                m.dialog.alert(
                                                    'Downloaded changes and saved.',
                                                ))
                                              : m.dialog.alert(
                                                    'Did not download changes. If you change your mind, click the Sync From Database button in the Settings tab. This will overwrite local changes.',
                                                );
                                      },
                                  })
                            : m.dialog.alert(
                                  'No file of this name was found in your ownership in the database.',
                              );
                    } else
                        m.dialog.alert(
                            'One or both of your User ID and Key is invalid.',
                        );
                }
            } catch (n) {
                (m.dialog.alert(
                    t + ' Please contact the developer for assistance.',
                ),
                    ps(t, n),
                    ms.logObj(e, 'File Contents'));
            } finally {
                (h(rs, s++, s),
                    fs(`Opened and read the contents of '${r.Name}'.'`));
            }
        }
        function w(e) {
            let t = v.split('\n\n');
            for (let e of t) {
                let t = e.split('\n'),
                    n = [],
                    o = [],
                    i = t[0].trim();
                t.shift();
                let s = '';
                t[0].match(/^[0-9]+\./g) ||
                    ((s = t[0].trim()),
                    t.shift(),
                    s.match(/^[\/\[].+[\/\]]$/) &&
                        (s = s.slice(1, s.length - 1)));
                for (let e of t)
                    e.match(/^[0-9]+\./g) &&
                        (n.push(e),
                        t[t.indexOf(e) + 1].startsWith('Tags: ')
                            ? o.push(t[t.indexOf(e) + 1].slice(6).split(/\s+/g))
                            : o.push([]));
                let a = [];
                for (let e of n)
                    a.push({
                        definition: e.slice(e.indexOf('.') + 1).trim(),
                        tags: o[n.indexOf(e)],
                        lects: r.Lects,
                    });
                let l = {};
                l[r.Lects[0]] = s
                    ? { ipa: s, irregular: !0 }
                    : { ipa: Es(i, r.Lects[0]), irregular: !1 };
                let c = { pronunciations: l, Senses: a, Timestamp: Date.now() };
                i in r.Lexicon
                    ? m.dialog.alert(`The word ${i} is already in the lexicon.`)
                    : h(Kr, (r.Lexicon[i] = c), r);
            }
            n(1, (v = ''));
        }
        return (
            (e.$$.update = () => {
                (e.$$.dirty[0], e.$$.dirty[0]);
            }),
            n(2, (o = '')),
            [
                b,
                v,
                o,
                i,
                r,
                m,
                function () {
                    Ob({ properties: ['openDirectory'] }, (e) => {
                        void 0 !== e && h(Kr, (r.SaveLocation = e[0]), r);
                    });
                },
                async function () {
                    let e,
                        t = (t) => {
                            Ob(
                                {
                                    title: 'Open Lexicon',
                                    defaultPath: `${t}${g.sep}Lexicons${g.sep}`,
                                    properties: ['openFile'],
                                },
                                (t) => {
                                    if (void 0 === t)
                                        return (
                                            document
                                                .querySelectorAll('.planet')
                                                .forEach((e) => {
                                                    e.style.animationPlayState =
                                                        'paused';
                                                }),
                                            n(2, (o = 'No file selected.')),
                                            void window.setTimeout(() => {
                                                n(2, (o = ''));
                                            }, 5e3)
                                        );
                                    f.readFile(t[0], 'utf8', (i, s) => {
                                        if (i)
                                            return (
                                                console.log(i),
                                                window.alert(
                                                    'There was an issue loading your file. Please contact the developer.',
                                                ),
                                                ps(
                                                    'Attempted to open a file.',
                                                    i,
                                                ),
                                                document
                                                    .querySelectorAll('.planet')
                                                    .forEach((e) => {
                                                        e.style.animationPlayState =
                                                            'paused';
                                                    }),
                                                n(
                                                    2,
                                                    (o = 'Couldn’t open file.'),
                                                ),
                                                void window.setTimeout(() => {
                                                    n(2, (o = ''));
                                                }, 5e3)
                                            );
                                        ((e = JSON.parse(s)),
                                            y(e),
                                            h(
                                                Kr,
                                                (r.Name = g.basename(
                                                    t[0],
                                                    '.lexc',
                                                )),
                                                r,
                                            ),
                                            document
                                                .querySelectorAll('.planet')
                                                .forEach((e) => {
                                                    e.style.animationPlayState =
                                                        'paused';
                                                }),
                                            n(2, (o = 'Done!')),
                                            window.setTimeout(() => {
                                                n(2, (o = ''));
                                            }, 5e3));
                                    });
                                },
                            );
                        };
                    (document.querySelectorAll('.planet').forEach((e) => {
                        e.style.animationPlayState = 'running';
                    }),
                        n(2, (o = 'Loading...')),
                        await Bb((e) => {
                            f.existsSync(`${e}${g.sep}Lexicons${g.sep}`)
                                ? t(e)
                                : f.mkdir(
                                      `${e}${g.sep}Lexicons${g.sep}`,
                                      () => {
                                          (fs(
                                              `Created the 'Lexicons' folder in the user data folder at '${e}'.`,
                                          ),
                                              t(e));
                                      },
                                  );
                        }));
                },
                async function () {
                    (document.querySelectorAll('.planet').forEach((e) => {
                        e.style.animationPlayState = 'running';
                    }),
                        n(2, (o = 'Loading...')));
                    let [e] = await window.showOpenFilePicker();
                    await e.requestPermission({ mode: 'read' });
                    let t = await e.getFile();
                    if (!t.name.includes('.lexc'))
                        return (
                            window.alert(
                                'The selected file was not a .lexc file.',
                            ),
                            document
                                .querySelectorAll('.planet')
                                .forEach((e) => {
                                    e.style.animationPlayState = 'paused';
                                }),
                            n(2, (o = 'Incorrect file type.')),
                            void window.setTimeout(() => {
                                n(2, (o = ''));
                            }, 5e3)
                        );
                    let i = await t.text();
                    (y(JSON.parse(i)),
                        h(Kr, (r.Name = t.name.split('.')[0]), r),
                        document.querySelectorAll('.planet').forEach((e) => {
                            e.style.animationPlayState = 'paused';
                        }),
                        n(2, (o = 'Done!')),
                        window.setTimeout(() => {
                            n(2, (o = ''));
                        }, 5e3));
                },
                w,
                async function () {
                    let e;
                    await Bb((t) => {
                        ((t) => {
                            Ob(
                                {
                                    title: 'Open Lexicon',
                                    defaultPath: `${t}${g.sep}Lexicons${g.sep}`,
                                    properties: ['openFile'],
                                },
                                (t) => {
                                    if (void 0 === t)
                                        return (
                                            document
                                                .querySelectorAll('.planet')
                                                .forEach((e) => {
                                                    e.style.animationPlayState =
                                                        'paused';
                                                }),
                                            n(2, (o = 'No file selected.')),
                                            void window.setTimeout(() => {
                                                n(2, (o = ''));
                                            }, 5e3)
                                        );
                                    f.readFile(t[0], 'utf8', (t, s) =>
                                        t
                                            ? (console.log(t),
                                              m.dialog.alert(
                                                  'There was an issue loading your file. Please contact the developer.',
                                              ),
                                              ps(
                                                  'Attempted to open a file.',
                                                  t,
                                              ),
                                              document
                                                  .querySelectorAll('.planet')
                                                  .forEach((e) => {
                                                      e.style.animationPlayState =
                                                          'paused';
                                                  }),
                                              n(2, (o = 'Couldn’t open file.')),
                                              void window.setTimeout(() => {
                                                  n(2, (o = ''));
                                              }, 5e3))
                                            : ((e = JSON.parse(s)),
                                              '2' !==
                                              String(e.Version).split('.')[0]
                                                  ? (m.dialog.alert(
                                                        `The file you are attempting to open as a reference was last saved in v${e.Version}                                 and is not compatible with the current version. Contact the developer for assistance.`,
                                                    ),
                                                    document
                                                        .querySelectorAll(
                                                            '.planet',
                                                        )
                                                        .forEach((e) => {
                                                            e.style.animationPlayState =
                                                                'paused';
                                                        }),
                                                    n(
                                                        2,
                                                        (o =
                                                            'Incompatible file.'),
                                                    ),
                                                    void window.setTimeout(
                                                        () => {
                                                            n(2, (o = ''));
                                                        },
                                                        5e3,
                                                    ))
                                                  : e.Name === r.Name
                                                    ? (m.dialog.alert(
                                                          'You cannot open a reference to the same language.',
                                                      ),
                                                      document
                                                          .querySelectorAll(
                                                              '.planet',
                                                          )
                                                          .forEach((e) => {
                                                              e.style.animationPlayState =
                                                                  'paused';
                                                          }),
                                                      n(
                                                          2,
                                                          (o =
                                                              'Same language.'),
                                                      ),
                                                      void window.setTimeout(
                                                          () => {
                                                              n(2, (o = ''));
                                                          },
                                                          5e3,
                                                      ))
                                                    : (h(as, (i = !1), i),
                                                      void window.setTimeout(
                                                          () => {
                                                              h(as, (i = e), i);
                                                          },
                                                          100,
                                                      ))),
                                    );
                                },
                            );
                        })(t);
                    });
                },
                function () {
                    ((r.Name = this.value), Kr.set(r));
                },
                function () {
                    ((r.HeaderTags = this.value), Kr.set(r));
                },
                () => h(as, (i = !1), i),
                () => {
                    if ('object' == typeof i) {
                        if (i.Name in r.Relatives)
                            return void m.dialog.alert(
                                `There is already a relative lexicon with the name ${i.Name}.`,
                            );
                        (h(Kr, (r.Relatives[i.Name] = i.Lexicon), r),
                            m.dialog.alert(
                                `Successfully imported ${i.Name} as a relative lexicon.`,
                            ));
                    }
                },
                function () {
                    ((b.words = L(this.value)), n(0, b));
                },
                function () {
                    ((b.pronunciations_bool = this.value), n(0, b));
                },
                function () {
                    ((b.pronunciations = L(this.value)), n(0, b));
                },
                function () {
                    ((b.definitions = L(this.value)), n(0, b));
                },
                function () {
                    ((b.tags_bool = this.value), n(0, b));
                },
                function () {
                    ((b.tags = L(this.value)), n(0, b));
                },
                function () {
                    ((b.headers = this.checked), n(0, b));
                },
                () =>
                    Hb(
                        b.headers,
                        b.words,
                        b.definitions,
                        !!b.pronunciations_bool && b.pronunciations,
                        !!b.tags_bool && b.tags,
                    ),
                function () {
                    ((v = this.value), n(1, v));
                },
                () => {
                    (w(), n(1, (v = '')));
                },
            ]
        );
    }
    class av extends Ee {
        constructor(e) {
            (super(), Ce(this, e, sv, rv, s, {}, null, [-1, -1]));
        }
    }
    function lv(e, t, n) {
        const o = e.slice();
        return ((o[54] = t[n]), (o[55] = t), (o[56] = n), o);
    }
    function cv(e, t, n) {
        const o = e.slice();
        return ((o[57] = t[n]), o);
    }
    function dv(e, t, n) {
        const o = e.slice();
        return ((o[60] = t[n]), (o[62] = n), o);
    }
    function hv(e) {
        let t, n, o, i, r, s, a, l, c, d, h, u;
        return {
            c() {
                ((t = T('Local File Version: ')),
                    (n = T(e[3])),
                    (o = _()),
                    (i = E('br')),
                    (r = T('\n                        Online File Version: ')),
                    (s = T(e[2])),
                    (a = _()),
                    (l = E('br')),
                    (c = _()),
                    (d = E('button')),
                    (d.textContent = 'Refresh'),
                    I(d, 'class', 'hover-highlight hover-shadow'));
            },
            m(p, f) {
                (k(p, t, f),
                    k(p, n, f),
                    k(p, o, f),
                    k(p, i, f),
                    k(p, r, f),
                    k(p, s, f),
                    k(p, a, f),
                    k(p, l, f),
                    k(p, c, f),
                    k(p, d, f),
                    h || ((u = O(d, 'click', e[14])), (h = !0)));
            },
            p(e, t) {
                (8 & t[0] && A(n, e[3]), 4 & t[0] && A(s, e[2]));
            },
            d(e) {
                (e && x(t),
                    e && x(n),
                    e && x(o),
                    e && x(i),
                    e && x(r),
                    e && x(s),
                    e && x(a),
                    e && x(l),
                    e && x(c),
                    e && x(d),
                    (h = !1),
                    u());
            },
        };
    }
    function uv(t) {
        let n, o, r, s, a;
        return {
            c() {
                ((n = E('button')),
                    (n.textContent = 'Delete Tag'),
                    (o = _()),
                    (r = E('button')),
                    (r.textContent = 'Edit Tag'),
                    I(n, 'class', 'hover-highlight hover-shadow'),
                    I(r, 'class', 'hover-highlight hover-shadow'));
            },
            m(e, i) {
                (k(e, n, i),
                    k(e, o, i),
                    k(e, r, i),
                    s ||
                        ((a = [O(n, 'click', t[34]), O(r, 'click', t[35])]),
                        (s = !0)));
            },
            p: e,
            d(e) {
                (e && x(n), e && x(o), e && x(r), (s = !1), i(a));
            },
        };
    }
    function pv(e) {
        let t,
            n,
            o,
            i,
            r = e[0].Lects,
            s = [];
        for (let t = 0; t < r.length; t += 1) s[t] = fv(dv(e, r, t));
        return {
            c() {
                for (let e = 0; e < s.length; e += 1) s[e].c();
                ((t = _()),
                    (n = E('button')),
                    (n.textContent = '+ Lect'),
                    I(n, 'class', 'hover-highlight hover-shadow'));
            },
            m(r, a) {
                for (let e = 0; e < s.length; e += 1) s[e] && s[e].m(r, a);
                (k(r, t, a),
                    k(r, n, a),
                    o || ((i = O(n, 'click', e[40])), (o = !0)));
            },
            p(e, n) {
                if (3153921 & n[0]) {
                    let o;
                    for (r = e[0].Lects, o = 0; o < r.length; o += 1) {
                        const i = dv(e, r, o);
                        s[o]
                            ? s[o].p(i, n)
                            : ((s[o] = fv(i)),
                              s[o].c(),
                              s[o].m(t.parentNode, t));
                    }
                    for (; o < s.length; o += 1) s[o].d(1);
                    s.length = r.length;
                }
            },
            d(e) {
                (C(s, e), e && x(t), e && x(n), (o = !1), i());
            },
        };
    }
    function fv(e) {
        let t,
            n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p = e[60] + '';
        function f() {
            return e[37](e[60], e[62]);
        }
        function g() {
            return e[38](e[60], e[62]);
        }
        function m() {
            return e[39](e[60]);
        }
        return {
            c() {
                ((t = E('div')),
                    (n = E('p')),
                    (o = T(p)),
                    (r = _()),
                    (s = E('button')),
                    (s.textContent = '⌫'),
                    (a = _()),
                    (l = E('button')),
                    (l.textContent = '✎'),
                    (c = _()),
                    (d = E('button')),
                    (d.textContent = '◎'),
                    M(n, 'display', 'inline-block'),
                    I(n, 'id', `${e[62]}`),
                    I(s, 'class', 'hover-highlight hover-shadow'),
                    M(s, 'display', 'inline-block'),
                    I(l, 'class', 'hover-highlight hover-shadow'),
                    M(l, 'display', 'inline-block'),
                    I(d, 'class', 'hover-highlight hover-shadow'),
                    M(d, 'display', 'inline-block'),
                    I(t, 'class', 'narrow'));
            },
            m(e, i) {
                (k(e, t, i),
                    v(t, n),
                    v(n, o),
                    v(t, r),
                    v(t, s),
                    v(t, a),
                    v(t, l),
                    v(t, c),
                    v(t, d),
                    h ||
                        ((u = [
                            O(s, 'click', f),
                            O(l, 'click', g),
                            O(d, 'click', m),
                        ]),
                        (h = !0)));
            },
            p(t, n) {
                ((e = t), 1 & n[0] && p !== (p = e[60] + '') && A(o, p));
            },
            d(e) {
                (e && x(t), (h = !1), i(u));
            },
        };
    }
    function gv(e) {
        let t,
            n,
            o,
            i,
            r,
            s = Object.keys(e[0].Relatives),
            a = [];
        for (let t = 0; t < s.length; t += 1) a[t] = mv(cv(e, s, t));
        return {
            c() {
                ((t = E('button')),
                    (t.textContent = 'Import Related Lexicon'),
                    (n = _()));
                for (let e = 0; e < a.length; e += 1) a[e].c();
                ((o = B()), I(t, 'class', 'hover-highlight hover-shadow'));
            },
            m(s, l) {
                (k(s, t, l), k(s, n, l));
                for (let e = 0; e < a.length; e += 1) a[e] && a[e].m(s, l);
                (k(s, o, l), i || ((r = O(t, 'click', e[43])), (i = !0)));
            },
            p(e, t) {
                if (8193 & t[0]) {
                    let n;
                    for (
                        s = Object.keys(e[0].Relatives), n = 0;
                        n < s.length;
                        n += 1
                    ) {
                        const i = cv(e, s, n);
                        a[n]
                            ? a[n].p(i, t)
                            : ((a[n] = mv(i)),
                              a[n].c(),
                              a[n].m(o.parentNode, o));
                    }
                    for (; n < a.length; n += 1) a[n].d(1);
                    a.length = s.length;
                }
            },
            d(e) {
                (e && x(t), e && x(n), C(a, e), e && x(o), (i = !1), r());
            },
        };
    }
    function mv(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c = e[57] + '';
        function d() {
            return e[44](e[57]);
        }
        return {
            c() {
                ((t = E('div')),
                    (n = E('p')),
                    (o = T(c)),
                    (i = _()),
                    (r = E('button')),
                    (r.textContent = '⌫'),
                    (s = _()),
                    M(n, 'display', 'inline-block'),
                    I(r, 'class', 'hover-highlight hover-shadow'),
                    M(r, 'display', 'inline-block'),
                    I(t, 'class', 'narrow'));
            },
            m(e, c) {
                (k(e, t, c),
                    v(t, n),
                    v(n, o),
                    v(t, i),
                    v(t, r),
                    v(t, s),
                    a || ((l = O(r, 'click', d)), (a = !0)));
            },
            p(t, n) {
                ((e = t), 1 & n[0] && c !== (c = e[57] + '') && A(o, c));
            },
            d(e) {
                (e && x(t), (a = !1), l());
            },
        };
    }
    function bv(e) {
        let t,
            n,
            o = e[0].Orthographies,
            i = [];
        for (let t = 0; t < o.length; t += 1) i[t] = vv(lv(e, o, t));
        return {
            c() {
                ((t = E('label')),
                    (n = T('Display Orthographies\n                        ')));
                for (let e = 0; e < i.length; e += 1) i[e].c();
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
                for (let e = 0; e < i.length; e += 1) i[e] && i[e].m(t, null);
            },
            p(e, n) {
                if (1 & n[0]) {
                    let r;
                    for (o = e[0].Orthographies, r = 0; r < o.length; r += 1) {
                        const s = lv(e, o, r);
                        i[r]
                            ? i[r].p(s, n)
                            : ((i[r] = vv(s)), i[r].c(), i[r].m(t, null));
                    }
                    for (; r < i.length; r += 1) i[r].d(1);
                    i.length = o.length;
                }
            },
            d(e) {
                (e && x(t), C(i, e));
            },
        };
    }
    function vv(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d,
            h = e[54].name + '';
        function u() {
            e[47].call(o, e[55], e[56]);
        }
        return {
            c() {
                ((t = E('div')),
                    (n = E('div')),
                    (o = E('input')),
                    (i = _()),
                    (r = E('div')),
                    (s = E('p')),
                    (a = T(h)),
                    (l = _()),
                    I(o, 'type', 'checkbox'),
                    I(n, 'class', 'column'),
                    M(n, 'align', 'right'),
                    I(r, 'class', 'column text-left'),
                    I(t, 'class', 'row narrow'));
            },
            m(h, p) {
                (k(h, t, p),
                    v(t, n),
                    v(n, o),
                    (o.checked = e[54].display),
                    v(t, i),
                    v(t, r),
                    v(r, s),
                    v(s, a),
                    v(t, l),
                    c || ((d = O(o, 'change', u)), (c = !0)));
            },
            p(t, n) {
                ((e = t),
                    1 & n[0] && (o.checked = e[54].display),
                    1 & n[0] && h !== (h = e[54].name + '') && A(a, h));
            },
            d(e) {
                (e && x(t), (c = !1), d());
            },
        };
    }
    function yv(e) {
        let t,
            n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            C,
            S,
            B,
            L,
            $,
            j,
            D,
            F,
            H,
            z,
            U,
            W,
            q,
            V,
            G,
            K,
            Y,
            X,
            Z,
            J,
            Q,
            ee,
            te,
            oe,
            ie,
            re,
            se,
            ae,
            le,
            ce,
            de,
            he,
            ue,
            pe,
            me,
            be,
            ve,
            xe,
            Ce,
            Ee,
            Se,
            Te,
            _e,
            Be,
            Oe,
            Ie,
            Le,
            Ae,
            Pe,
            Me,
            Ne,
            $e,
            Re,
            je,
            De,
            Fe,
            He,
            ze,
            Ue,
            We,
            qe,
            Ve,
            Ge,
            Ke,
            Ye,
            Xe,
            Ze,
            Je,
            Qe,
            et,
            tt,
            nt,
            ot,
            it,
            rt,
            st,
            at,
            lt,
            ct,
            dt,
            ht,
            ut,
            pt,
            ft,
            gt,
            mt,
            bt,
            vt,
            yt,
            wt,
            kt,
            xt,
            Ct,
            Et,
            St,
            Tt,
            _t,
            Bt,
            Ot,
            It,
            Lt,
            At,
            Pt,
            Mt,
            Nt,
            $t,
            Rt,
            jt,
            Dt,
            Ft,
            Ht,
            zt,
            Ut,
            Wt,
            qt,
            Vt,
            Gt,
            Kt,
            Yt,
            Xt,
            Zt,
            Jt,
            Qt,
            en,
            tn,
            nn,
            on,
            rn,
            sn,
            an,
            ln,
            cn,
            dn,
            hn,
            un,
            pn = e[0].UploadToDatabase ? 'On' : 'Off',
            fn = e[0].UploadToDatabase && Jb(e[8], e[7]),
            gn = fn && hv(e);
        ((bt = new gl({})), bt.$on('select', e[33]));
        let mn = !!e[1] && uv(e),
            bn = e[0].UseLects && pv(e),
            vn = e[0].ShowEtymology && gv(e),
            yn = e[0].ShowOrthography && bv(e);
        return {
            c() {
                ((t = E('div')),
                    (n = E('div')),
                    (o = E('div')),
                    (r = E('br')),
                    (s = E('br')),
                    (a = _()),
                    (l = E('p')),
                    (l.textContent = 'Appearance Settings'),
                    (c = _()),
                    (d = E('br')),
                    (h = _()),
                    (u = E('label')),
                    (p = T('Color Theme\n                ')),
                    (f = E('select')),
                    (g = E('optgroup')),
                    (m = E('option')),
                    (m.textContent = '☾ Dark'),
                    (b = E('option')),
                    (b.textContent = '☀ Light'),
                    (y = E('optgroup')),
                    (w = E('option')),
                    (w.textContent = '☾ Marine'),
                    (C = E('option')),
                    (C.textContent = '☾ Glade'),
                    (S = E('option')),
                    (S.textContent = '☾ Pomegranate'),
                    (B = E('option')),
                    (B.textContent = '☾ Magnolia'),
                    (L = E('option')),
                    (L.textContent = '☀ Juniper'),
                    ($ = E('option')),
                    ($.textContent = '☀ Leatherbound'),
                    (j = E('option')),
                    (j.textContent = '☀ Wisteria'),
                    (D = E('optgroup')),
                    (F = E('option')),
                    (F.textContent = '☾ Purple Maar'),
                    (H = E('option')),
                    (H.textContent = '☾ Terminal'),
                    (z = E('option')),
                    (z.textContent = '☾ Midnight'),
                    (U = E('option')),
                    (U.textContent = '☾ Crabapple'),
                    (W = E('option')),
                    (W.textContent = '☀ Bone'),
                    (q = E('optgroup')),
                    (V = E('option')),
                    (V.textContent = '☀ Ēostre 2023'),
                    (G = E('option')),
                    (G.textContent = "☾ All Hallow's Eve 2023"),
                    (K = _()),
                    (Y = E('br')),
                    (X = _()),
                    (Z = E('button')),
                    (Z.textContent =
                        'Set Current Theme as Default for This File'),
                    (J = _()),
                    (Q = E('button')),
                    (Q.textContent = 'Clear File Theme'),
                    (ee = _()),
                    (te = E('br')),
                    (oe = _()),
                    (ie = E('button')),
                    (ie.textContent = 'Load Custom Theme…'),
                    (re = _()),
                    (se = E('br')),
                    (ae = E('hr')),
                    (le = E('br')),
                    (ce = _()),
                    (de = E('p')),
                    (de.textContent = 'Save Settings'),
                    (he = _()),
                    (ue = E('br')),
                    (pe = _()),
                    (me = E('label')),
                    (be = T('Auto-Save\n                ')),
                    (ve = E('input')),
                    (xe = _()),
                    (Ce = E('div')),
                    (Ee = E('label')),
                    (Se = T('Cloud Storage\n                    ')),
                    (Te = E('p')),
                    (Te.innerHTML =
                        'If you wish, your files can be saved to an online database so that you can sync your files across multiple \n                        devices and the discord bot and online file viewer. To get your User ID and Key, please go to the Saturn&#39;s Sojourn discord \n                        server and use the command <code>/account</code>.'),
                    (_e = _()),
                    (Be = E('span')),
                    (Oe = T('Uploading is ')),
                    (Ie = T(pn)),
                    (Le = T(' for this file.\n                        ')),
                    (Ae = E('input')),
                    (Pe = _()),
                    gn && gn.c(),
                    (Me = _()),
                    (Ne = E('span')),
                    ($e = T('User ID: ')),
                    (Re = E('input')),
                    (je = _()),
                    (De = E('br')),
                    (Fe = _()),
                    (He = E('span')),
                    (ze = T('Key: ')),
                    (Ue = E('input')),
                    (We = _()),
                    (qe = E('button')),
                    (qe.textContent = 'Authenticate'),
                    (Ve = _()),
                    (Ge = E('p')),
                    (Ge.textContent =
                        "Your ID and Key are saved to the app's internal settings, not to your file, but turning on uploading is saved per-file."),
                    (Ke = _()),
                    (Ye = E('br')),
                    (Xe = _()),
                    (Ze = E('button')),
                    (Ze.textContent = 'Sync From Cloud'),
                    (Je = _()),
                    (Qe = E('p')),
                    (Qe.textContent =
                        'This will overwrite the current file with the latest version of the file available in the cloud.'),
                    (et = _()),
                    (tt = E('button')),
                    (tt.textContent = 'Delete From Cloud'),
                    (nt = _()),
                    (ot = E('p')),
                    (ot.textContent =
                        'This will delete the current file from the cloud, and it will no longer be accessible to the discord bot or online file viewer.'),
                    (it = _()),
                    (rt = E('br')),
                    (st = E('hr')),
                    (at = E('br')),
                    (lt = _()),
                    (ct = E('p')),
                    (ct.textContent = 'Lexicon Settings'),
                    (dt = _()),
                    (ht = E('br')),
                    (ut = _()),
                    (pt = E('label')),
                    (ft = T('Manage Tags')),
                    (gt = E('br')),
                    (mt = _()),
                    ye(bt.$$.fragment),
                    (vt = _()),
                    (yt = E('p')),
                    (wt = T('Selected: ')),
                    (kt = T(e[1])),
                    (xt = _()),
                    mn && mn.c(),
                    (Ct = _()),
                    (Et = E('br')),
                    (St = E('hr')),
                    (Tt = E('br')),
                    (_t = _()),
                    (Bt = E('p')),
                    (Bt.textContent = 'Advanced Settings'),
                    (Ot = _()),
                    (It = E('br')),
                    (Lt = _()),
                    (At = E('label')),
                    (Pt = T('Show Multi-Lect Features\n                ')),
                    (Mt = E('input')),
                    (Nt = _()),
                    bn && bn.c(),
                    ($t = _()),
                    (Rt = E('label')),
                    (jt = T('Show Pronunciations\n                ')),
                    (Dt = E('input')),
                    (Ft = _()),
                    (Ht = E('br')),
                    (zt = E('br')),
                    (Ut = _()),
                    (Wt = E('label')),
                    (qt = T('Show Etymology Features\n                ')),
                    (Vt = E('input')),
                    (Gt = _()),
                    vn && vn.c(),
                    (Kt = _()),
                    (Yt = E('br')),
                    (Xt = E('br')),
                    (Zt = _()),
                    (Jt = E('label')),
                    (Qt = T(
                        'Show Automatic Inflection Features\n                ',
                    )),
                    (en = E('input')),
                    (tn = _()),
                    (nn = E('br')),
                    (on = E('br')),
                    (rn = _()),
                    (sn = E('label')),
                    (an = T(
                        'Show Alternate Orthography Features\n                ',
                    )),
                    (ln = E('input')),
                    (cn = _()),
                    yn && yn.c(),
                    (m.__value = 'styles/dark.css'),
                    (m.value = m.__value),
                    (b.__value = 'styles/light.css'),
                    (b.value = b.__value),
                    I(g, 'label', 'Simple Themes'),
                    (w.__value = 'styles/marine.css'),
                    (w.value = w.__value),
                    (C.__value = 'styles/glade.css'),
                    (C.value = C.__value),
                    (S.__value = 'styles/pomegranate.css'),
                    (S.value = S.__value),
                    (B.__value = 'styles/magnolia.css'),
                    (B.value = B.__value),
                    (L.__value = 'styles/juniper.css'),
                    (L.value = L.__value),
                    ($.__value = 'styles/leatherbound.css'),
                    ($.value = $.__value),
                    (j.__value = 'styles/wisteria.css'),
                    (j.value = j.__value),
                    I(y, 'label', 'The Saturnine Collection'),
                    (F.__value = 'styles/purple_maar.css'),
                    (F.value = F.__value),
                    (H.__value = 'styles/terminal_green.css'),
                    (H.value = H.__value),
                    (z.__value = 'styles/midnight.css'),
                    (z.value = z.__value),
                    (U.__value = 'styles/crabapple.css'),
                    (U.value = U.__value),
                    (W.__value = 'styles/bone.css'),
                    (W.value = W.__value),
                    I(D, 'label', 'The Maarz Collection'),
                    (V.__value = 'styles/eostre2023.css'),
                    (V.value = V.__value),
                    (G.__value = 'styles/hallowseve2023.css'),
                    (G.value = G.__value),
                    I(q, 'label', 'The Holiday Collection'),
                    I(f, 'name', 'theme-select'),
                    I(f, 'id', 'theme-select'),
                    void 0 === e[11] && ne(() => e[26].call(f)),
                    I(Z, 'class', 'hover-highlight hover-shadow'),
                    I(Q, 'class', 'hover-highlight hover-shadow'),
                    I(ie, 'class', 'hover-highlight hover-shadow'),
                    I(ve, 'type', 'checkbox'),
                    I(Te, 'class', 'info'),
                    I(Ae, 'type', 'checkbox'),
                    I(Re, 'type', 'text'),
                    (Re.disabled = e[6]),
                    R(Re, 'pronunciation', e[6]),
                    I(Ue, 'type', 'text'),
                    (Ue.disabled = e[6]),
                    R(Ue, 'pronunciation', e[6]),
                    I(Ge, 'class', 'info'),
                    I(Ze, 'class', 'hover-highlight hover-shadow'),
                    I(Qe, 'class', 'info'),
                    I(tt, 'class', 'hover-highlight hover-shadow'),
                    I(ot, 'class', 'info'),
                    I(Ce, 'class', 'narrow'),
                    I(Mt, 'type', 'checkbox'),
                    I(Dt, 'type', 'checkbox'),
                    I(Vt, 'type', 'checkbox'),
                    I(en, 'type', 'checkbox'),
                    I(ln, 'type', 'checkbox'),
                    I(o, 'class', 'container column scrolled'),
                    M(o, 'height', '90vh'),
                    I(n, 'class', 'row'),
                    M(n, 'height', '95vh'),
                    I(t, 'class', 'tab-pane'));
            },
            m(i, x) {
                (k(i, t, x),
                    v(t, n),
                    v(n, o),
                    v(o, r),
                    v(o, s),
                    v(o, a),
                    v(o, l),
                    v(o, c),
                    v(o, d),
                    v(o, h),
                    v(o, u),
                    v(u, p),
                    v(u, f),
                    v(f, g),
                    v(g, m),
                    v(g, b),
                    v(f, y),
                    v(y, w),
                    v(y, C),
                    v(y, S),
                    v(y, B),
                    v(y, L),
                    v(y, $),
                    v(y, j),
                    v(f, D),
                    v(D, F),
                    v(D, H),
                    v(D, z),
                    v(D, U),
                    v(D, W),
                    v(f, q),
                    v(q, V),
                    v(q, G),
                    N(f, e[11], !0),
                    v(o, K),
                    v(o, Y),
                    v(o, X),
                    v(o, Z),
                    v(o, J),
                    v(o, Q),
                    v(o, ee),
                    v(o, te),
                    v(o, oe),
                    v(o, ie),
                    v(o, re),
                    v(o, se),
                    v(o, ae),
                    v(o, le),
                    v(o, ce),
                    v(o, de),
                    v(o, he),
                    v(o, ue),
                    v(o, pe),
                    v(o, me),
                    v(me, be),
                    v(me, ve),
                    (ve.checked = e[10]),
                    v(o, xe),
                    v(o, Ce),
                    v(Ce, Ee),
                    v(Ee, Se),
                    v(Ee, Te),
                    v(Ee, _e),
                    v(Ee, Be),
                    v(Be, Oe),
                    v(Be, Ie),
                    v(Be, Le),
                    v(Be, Ae),
                    (Ae.checked = e[0].UploadToDatabase),
                    v(Ee, Pe),
                    gn && gn.m(Ee, null),
                    v(Ee, Me),
                    v(Ee, Ne),
                    v(Ne, $e),
                    v(Ne, Re),
                    P(Re, e[4]),
                    v(Ee, je),
                    v(Ee, De),
                    v(Ee, Fe),
                    v(Ee, He),
                    v(He, ze),
                    v(He, Ue),
                    P(Ue, e[5]),
                    v(Ee, We),
                    v(Ee, qe),
                    v(Ee, Ve),
                    v(Ee, Ge),
                    v(Ee, Ke),
                    v(Ee, Ye),
                    v(Ee, Xe),
                    v(Ee, Ze),
                    v(Ee, Je),
                    v(Ee, Qe),
                    v(Ee, et),
                    v(Ee, tt),
                    v(Ee, nt),
                    v(Ee, ot),
                    v(o, it),
                    v(o, rt),
                    v(o, st),
                    v(o, at),
                    v(o, lt),
                    v(o, ct),
                    v(o, dt),
                    v(o, ht),
                    v(o, ut),
                    v(o, pt),
                    v(pt, ft),
                    v(pt, gt),
                    v(pt, mt),
                    we(bt, pt, null),
                    v(pt, vt),
                    v(pt, yt),
                    v(yt, wt),
                    v(yt, kt),
                    v(pt, xt),
                    mn && mn.m(pt, null),
                    v(o, Ct),
                    v(o, Et),
                    v(o, St),
                    v(o, Tt),
                    v(o, _t),
                    v(o, Bt),
                    v(o, Ot),
                    v(o, It),
                    v(o, Lt),
                    v(o, At),
                    v(At, Pt),
                    v(At, Mt),
                    (Mt.checked = e[0].UseLects),
                    v(At, Nt),
                    bn && bn.m(At, null),
                    v(o, $t),
                    v(o, Rt),
                    v(Rt, jt),
                    v(Rt, Dt),
                    (Dt.checked = e[0].ShowPronunciation),
                    v(o, Ft),
                    v(o, Ht),
                    v(o, zt),
                    v(o, Ut),
                    v(o, Wt),
                    v(Wt, qt),
                    v(Wt, Vt),
                    (Vt.checked = e[0].ShowEtymology),
                    v(Wt, Gt),
                    vn && vn.m(Wt, null),
                    v(o, Kt),
                    v(o, Yt),
                    v(o, Xt),
                    v(o, Zt),
                    v(o, Jt),
                    v(Jt, Qt),
                    v(Jt, en),
                    (en.checked = e[0].ShowInflection),
                    v(o, tn),
                    v(o, nn),
                    v(o, on),
                    v(o, rn),
                    v(o, sn),
                    v(sn, an),
                    v(sn, ln),
                    (ln.checked = e[0].ShowOrthography),
                    v(sn, cn),
                    yn && yn.m(sn, null),
                    (dn = !0),
                    hn ||
                        ((un = [
                            O(f, 'change', e[26]),
                            O(f, 'change', e[17]),
                            O(Z, 'click', e[27]),
                            O(Q, 'click', e[28]),
                            O(ie, 'click', e[18]),
                            O(ve, 'change', e[29]),
                            O(ve, 'change', e[19]),
                            O(Ae, 'change', e[30]),
                            O(Re, 'input', e[31]),
                            O(Ue, 'input', e[32]),
                            O(qe, 'click', e[15]),
                            O(Ze, 'click', e[16]),
                            O(tt, 'click', e[24]),
                            O(Mt, 'change', e[36]),
                            O(Mt, 'change', e[22]),
                            O(Dt, 'change', e[41]),
                            O(Vt, 'change', e[42]),
                            O(en, 'change', e[45]),
                            O(ln, 'change', e[46]),
                        ]),
                        (hn = !0)));
            },
            p(e, t) {
                (2048 & t[0] && N(f, e[11]),
                    1024 & t[0] && (ve.checked = e[10]),
                    (!dn || 1 & t[0]) &&
                        pn !== (pn = e[0].UploadToDatabase ? 'On' : 'Off') &&
                        A(Ie, pn),
                    1 & t[0] && (Ae.checked = e[0].UploadToDatabase),
                    385 & t[0] &&
                        (fn = e[0].UploadToDatabase && Jb(e[8], e[7])),
                    fn
                        ? gn
                            ? gn.p(e, t)
                            : ((gn = hv(e)), gn.c(), gn.m(Ee, Me))
                        : gn && (gn.d(1), (gn = null)),
                    (!dn || 64 & t[0]) && (Re.disabled = e[6]),
                    16 & t[0] && Re.value !== e[4] && P(Re, e[4]),
                    (!dn || 64 & t[0]) && R(Re, 'pronunciation', e[6]),
                    (!dn || 64 & t[0]) && (Ue.disabled = e[6]),
                    32 & t[0] && Ue.value !== e[5] && P(Ue, e[5]),
                    (!dn || 64 & t[0]) && R(Ue, 'pronunciation', e[6]),
                    (!dn || 2 & t[0]) && A(kt, e[1]),
                    e[1]
                        ? mn
                            ? mn.p(e, t)
                            : ((mn = uv(e)), mn.c(), mn.m(pt, null))
                        : mn && (mn.d(1), (mn = null)),
                    1 & t[0] && (Mt.checked = e[0].UseLects),
                    e[0].UseLects
                        ? bn
                            ? bn.p(e, t)
                            : ((bn = pv(e)), bn.c(), bn.m(At, null))
                        : bn && (bn.d(1), (bn = null)),
                    1 & t[0] && (Dt.checked = e[0].ShowPronunciation),
                    1 & t[0] && (Vt.checked = e[0].ShowEtymology),
                    e[0].ShowEtymology
                        ? vn
                            ? vn.p(e, t)
                            : ((vn = gv(e)), vn.c(), vn.m(Wt, null))
                        : vn && (vn.d(1), (vn = null)),
                    1 & t[0] && (en.checked = e[0].ShowInflection),
                    1 & t[0] && (ln.checked = e[0].ShowOrthography),
                    e[0].ShowOrthography
                        ? yn
                            ? yn.p(e, t)
                            : ((yn = bv(e)), yn.c(), yn.m(sn, null))
                        : yn && (yn.d(1), (yn = null)));
            },
            i(e) {
                dn || (fe(bt.$$.fragment, e), (dn = !0));
            },
            o(e) {
                (ge(bt.$$.fragment, e), (dn = !1));
            },
            d(e) {
                (e && x(t),
                    gn && gn.d(),
                    ke(bt),
                    mn && mn.d(),
                    bn && bn.d(),
                    vn && vn.d(),
                    yn && yn.d(),
                    (hn = !1),
                    i(un));
            },
        };
    }
    function wv(e, t, n) {
        let o, i, r, s, a, l, u, p, f, g;
        (d(e, cs, (e) => n(7, (i = e))),
            d(e, ls, (e) => n(8, (r = e))),
            d(e, Kr, (e) => n(0, (s = e))),
            d(e, Zr, (e) => n(9, (a = e))),
            d(e, is, (e) => n(10, (l = e))),
            d(e, os, (e) => n(11, (u = e))),
            d(e, ns, (e) => n(48, (p = e))),
            d(e, rs, (e) => n(25, (f = e))),
            d(e, Xr, (e) => n(12, (g = e))));
        var m =
            (this && this.__rest) ||
            function (e, t) {
                var n = {};
                for (var o in e)
                    Object.prototype.hasOwnProperty.call(e, o) &&
                        t.indexOf(o) < 0 &&
                        (n[o] = e[o]);
                if (
                    null != e &&
                    'function' == typeof Object.getOwnPropertySymbols
                ) {
                    var i = 0;
                    for (o = Object.getOwnPropertySymbols(e); i < o.length; i++)
                        t.indexOf(o[i]) < 0 &&
                            Object.prototype.propertyIsEnumerable.call(
                                e,
                                o[i],
                            ) &&
                            (n[o[i]] = e[o[i]]);
                }
                return n;
            };
        const b = require('fs'),
            v = require('path'),
            y = require('vex-js');
        let w = '',
            k = '',
            x = s.FileVersion;
        async function C() {
            (n(
                2,
                (k = await (async function () {
                    if (Jb(r, i)) {
                        let e = await zb();
                        return e ? e.FileVersion : null;
                    }
                })()),
            ),
                n(3, (x = s.FileVersion)));
        }
        Bb((e) => {
            let t = {
                autosave: !0,
                theme: 'styles/dark.css',
                dbid: '',
                dbkey: '',
            };
            b.existsSync(e + v.sep + 'settings.json')
                ? ((t = JSON.parse(
                      b.readFileSync(e + v.sep + 'settings.json', 'utf8'),
                  )),
                  h(is, (l = t.autosave), l),
                  h(os, (u = t.theme), u),
                  h(ls, (r = t.dbid), r),
                  n(4, (E = t.dbid)),
                  h(cs, (i = t.dbkey), i),
                  n(5, (S = t.dbkey)))
                : (b.existsSync(e + v.sep + 'autosave_pref.txt')
                      ? ((t.autosave =
                            'true' ===
                            b.readFileSync(
                                e + v.sep + 'autosave_pref.txt',
                                'utf8',
                            )),
                        h(
                            is,
                            (l =
                                'true' ===
                                b.readFileSync(
                                    e + v.sep + 'autosave_pref.txt',
                                    'utf8',
                                )),
                            l,
                        ),
                        b.unlinkSync(e + v.sep + 'autosave_pref.txt'))
                      : (t.autosave = !0),
                  b.writeFileSync(
                      e + v.sep + 'settings.json',
                      'styles/dark.css',
                  ),
                  b.existsSync(e + v.sep + 'theme.txt')
                      ? ((t.theme = b
                            .readFileSync(e + v.sep + 'theme.txt', 'utf8')
                            .readFileSync(e + v.sep + 'theme.txt', 'utf8')
                            .toString()),
                        h(os, (u = t.theme), u),
                        b.unlinkSync(e + v.sep + 'theme.txt'))
                      : (t.theme = 'styles/dark.css'),
                  h(ls, (r = ''), r),
                  h(cs, (i = ''), i),
                  b.writeFileSync(
                      e + v.sep + 'settings.json',
                      JSON.stringify(t, null, 4),
                  ));
        });
        let E = '',
            S = '';
        function T(e, t, n) {
            '' !== t
                ? t !== e
                    ? s.Lects.includes(t)
                        ? y.dialog.alert(
                              'A lect with that name already exists.',
                          )
                        : (h(Kr, (s.Lects[n] = t), s),
                          h(Kr, (s.Lects = [...s.Lects]), s),
                          Object.keys(s.Lexicon).forEach((n) => {
                              (s.Lexicon[n].pronunciations.hasOwnProperty(e) &&
                                  (h(
                                      Kr,
                                      (s.Lexicon[n].pronunciations[t] =
                                          s.Lexicon[n].pronunciations[e]),
                                      s,
                                  ),
                                  delete s.Lexicon[n].pronunciations[e]),
                                  s.Lexicon[n].Senses.forEach((n) => {
                                      n.lects.includes(e) &&
                                          (n.lects.splice(
                                              n.lects.indexOf(e),
                                              1,
                                          ),
                                          n.lects.push(t));
                                  }));
                          }),
                          Object.keys(s.Phrasebook).forEach((n) => {
                              Object.keys(s.Phrasebook[n]).forEach((o, i) => {
                                  const r = s.Phrasebook[n][o];
                                  (r.pronunciations.hasOwnProperty(e) &&
                                      ((r.pronunciations[t] =
                                          r.pronunciations[e]),
                                      delete r.pronunciations[e]),
                                      r.lects.includes(e) &&
                                          (s.Phrasebook[n][o].lects.splice(
                                              r.lects.indexOf(e),
                                              1,
                                          ),
                                          s.Phrasebook[n][o].lects.push(t)));
                              });
                          }),
                          s.Orthographies.forEach((n) => {
                              n.lect === e && (n.lect = t);
                          }),
                          h(Kr, (s.Pronunciations[t] = s.Pronunciations[e]), s),
                          a.hasOwnProperty(e) &&
                              (h(Zr, (a[t] = a[e]), a), delete a[e]),
                          delete s.Pronunciations[e])
                    : y.dialog.alert('The lect name is unchanged.')
                : y.dialog.alert('The lect name cannot be blank.');
        }
        function _(e, t) {
            (s.Lects.splice(t, 1),
                h(Kr, (s.Lects = [...s.Lects]), s),
                delete s.Pronunciations[e],
                delete a[e],
                Object.keys(s.Lexicon).forEach((t) => {
                    (s.Lexicon[t].pronunciations[e] &&
                        delete s.Lexicon[t].pronunciations[e],
                        s.Lexicon[t].Senses.forEach((n, o) => {
                            (n.lects.includes(e) &&
                                n.lects.splice(n.lects.indexOf(e), 1),
                                n.lects || s.Lexicon[t].Senses.splice(o, 1));
                        }));
                }),
                Object.keys(s.Phrasebook).forEach((t) => {
                    Object.keys(s.Phrasebook[t]).forEach((n, o) => {
                        const i = s.Phrasebook[t][n];
                        if (
                            (i.pronunciations[e] && delete i.pronunciations[e],
                            i.lects.includes(e) &&
                                s.Phrasebook[t][n].lects.splice(
                                    i.lects.indexOf(e),
                                    1,
                                ),
                            !i.lects)
                        ) {
                            const e = s.Phrasebook[t],
                                o = n;
                            e[o];
                            const i = m(e, ['symbol' == typeof o ? o : o + '']);
                            h(Kr, (s.Phrasebook[t] = i), s);
                        }
                    });
                }),
                s.Orthographies.forEach((t) => {
                    t.lect === e && (t.lect = s.Lects[0]);
                }),
                h(Kr, (s.Lexicon = Object.assign({}, s.Lexicon)), s));
        }
        function B() {
            let e;
            const t = (t) => {
                Ob(
                    {
                        title: 'Import Related Lexicon',
                        defaultPath: `${t}${v.sep}Lexicons${v.sep}`,
                        properties: ['openFile'],
                    },
                    (t) => {
                        t &&
                            b.readFile(t[0], 'utf8', (t, n) => {
                                t &&
                                    (console.log(t),
                                    y.dialog.alert(
                                        'There was an issue loading your file. Please contact the developer.',
                                    ));
                                try {
                                    if (
                                        ((e = JSON.parse(n)),
                                        !String(e.Version).match(
                                            /^2\.[0-9]*\.[0-9]*$/,
                                        ))
                                    )
                                        return void y.dialog.alert(
                                            `\n                                    This file was saved with an old version of the app (~${e.Version})\n                                    and is not compatible with the current version of Lexicanter. Please contact\n                                    the developer; the file may be recoverable.\n                                `,
                                        );
                                    const t = (t) => {
                                        for (const n in e.Lexicon)
                                            s.Lexicon[n] ||
                                                (s.Etymologies[n] && !t) ||
                                                h(
                                                    Kr,
                                                    (s.Etymologies[n] = {
                                                        descendants: [],
                                                        source: e.Name,
                                                    }),
                                                    s,
                                                );
                                    };
                                    e.Name in s.Relatives
                                        ? y.dialog.confirm({
                                              message: `A relative lexicon with the name "${e.Name}" already exists. Would you like to overwrite it?`,
                                              callback: (n) => {
                                                  n &&
                                                      (h(
                                                          Kr,
                                                          (s.Relatives[e.Name] =
                                                              e.Lexicon),
                                                          s,
                                                      ),
                                                      t(!0));
                                              },
                                          })
                                        : (h(
                                              Kr,
                                              (s.Relatives = Object.assign(
                                                  Object.assign(
                                                      {},
                                                      s.Relatives,
                                                  ),
                                                  { [e.Name]: e.Lexicon },
                                              )),
                                              s,
                                          ),
                                          t(!1));
                                } catch (t) {
                                    return void y.dialog.alert(
                                        'There was an issue loading the file. Please contact the developer.',
                                    );
                                }
                            });
                    },
                );
            };
            Bb((e) => {
                b.existsSync(`${e}${v.sep}Lexicons${v.sep}`)
                    ? t(e)
                    : b.mkdir(`${e}${v.sep}Lexicons${v.sep}`, () => {
                          (fs(
                              `Created the 'Lexicons' folder in the user data folder at '${e}'.`,
                          ),
                              t(e));
                      });
            });
        }
        async function O() {
            if ('' !== r && '' !== i) {
                if (Jb(r, i)) {
                    null ===
                    (await (async function (e = Tb().Name) {
                        const t = await kb.db.Languages.filter({
                            Name: e,
                            Owner: c(ls),
                        }).getAll();
                        return t.length > 0
                            ? await kb.db.Languages.delete(t[0].id)
                            : null;
                    })())
                        ? y.dialog.alert(
                              'The file does not exist in the database or is not registered to you.',
                          )
                        : y.dialog.alert(
                              'The file has been deleted from the database.',
                          );
                }
            } else y.dialog.alert('Please enter both your User ID and Key.');
        }
        return (
            (e.$$.update = () => {
                (33554432 & e.$$.dirty[0] && C(),
                    1 & e.$$.dirty[0] && n(6, (o = !s.UploadToDatabase)));
            }),
            [
                s,
                w,
                k,
                x,
                E,
                S,
                o,
                i,
                r,
                a,
                l,
                u,
                g,
                y,
                C,
                function () {
                    '' !== E && '' !== S
                        ? Jb(E, S)
                            ? (h(ls, (r = E), r),
                              h(cs, (i = S), i),
                              Bb((e) => {
                                  let t = {
                                      autosave: l,
                                      theme: u,
                                      dbid: r,
                                      dbkey: i,
                                  };
                                  b.writeFileSync(
                                      e + v.sep + 'settings.json',
                                      JSON.stringify(t, null, 4),
                                  );
                              }),
                              y.dialog.alert(
                                  'Successfully verified your User ID and Key.',
                              ))
                            : y.dialog.alert(
                                  'One or both of the User ID and Key you entered is invalid.',
                              )
                        : y.dialog.alert(
                              'Please enter both your User ID and Key.',
                          );
                },
                async function () {
                    if ('' !== r && '' !== i)
                        if (Jb(r, i)) {
                            const e = await zb();
                            !1 !== e
                                ? (h(Kr, (s = e), s),
                                  p.destroy(),
                                  Vp(e.Docs),
                                  y.dialog.alert(
                                      'Successfully synced from database.',
                                  ))
                                : y.dialog.alert(
                                      'No file of this name was found in your ownership in the database.',
                                  );
                        } else
                            y.dialog.alert(
                                'One or both of your User ID and Key is invalid.',
                            );
                    else
                        y.dialog.alert(
                            'Please enter both your User ID and Key.',
                        );
                },
                function () {
                    Bb((e) => {
                        let t = { autosave: l, theme: u, dbid: r, dbkey: i };
                        b.writeFileSync(
                            e + v.sep + 'settings.json',
                            JSON.stringify(t, null, 4),
                        );
                    });
                },
                async function () {
                    let [e] = await window.showOpenFilePicker();
                    await e.requestPermission({ mode: 'read' });
                    let t = await e.getFile();
                    if (!t.name.includes('.css'))
                        return void y.dialog.alert(
                            'The selected file was not a .css file.',
                        );
                    let n,
                        o = await t.text();
                    await Bb((e) => {
                        let i = e + v.sep + 'user_themes' + v.sep;
                        (b.existsSync(i) || b.mkdirSync(i),
                            (n = e + v.sep + 'user_themes' + v.sep + t.name),
                            b.writeFile(n, o, 'utf8', (e) => {
                                if (e) throw e;
                                h(os, (u = n), u);
                            }),
                            b.writeFile(e + v.sep + 'theme.txt', n, (e) => {
                                if (e) throw e;
                            }));
                    });
                },
                function () {
                    let e = { autosave: l, theme: u, dbid: r, dbkey: i };
                    if (
                        (Bb((t) => {
                            b.writeFileSync(
                                t + v.sep + 'settings.json',
                                JSON.stringify(e, null, 4),
                            );
                        }),
                        l)
                    )
                        var t = window.setInterval(Ab, 6e5, !1);
                    else window.clearInterval(t);
                },
                T,
                _,
                function () {
                    s.UseLects ||
                        y.dialog.confirm({
                            message: `Are you sure you want to disable lect features? Only the data for the lect "${s.Lects[0]}" will be kept.`,
                            callback: (e) => {
                                if (e) {
                                    let e = s.Lects[0];
                                    (h(Kr, (s.Lects = ['General']), s),
                                        Object.keys(s.Lexicon).forEach((t) => {
                                            (h(
                                                Kr,
                                                (s.Lexicon[t].Senses =
                                                    s.Lexicon[t].Senses.filter(
                                                        (t) =>
                                                            t.lects.includes(e),
                                                    )),
                                                s,
                                            ),
                                                s.Lexicon[t].Senses.forEach(
                                                    (e) => {
                                                        e.lects = ['General'];
                                                    },
                                                ),
                                                s.Lexicon[t].Senses ||
                                                    delete s.Lexicon[t],
                                                h(
                                                    Kr,
                                                    (s.Lexicon[
                                                        t
                                                    ].pronunciations = {
                                                        General:
                                                            s.Lexicon[t]
                                                                .pronunciations[
                                                                e
                                                            ],
                                                    }),
                                                    s,
                                                ));
                                        }),
                                        h(
                                            Kr,
                                            (s.Pronunciations = {
                                                General: s.Pronunciations[e],
                                            }),
                                            s,
                                        ),
                                        h(Zr, (a = { General: a[e] }), a));
                                } else h(Kr, (s.UseLects = !0), s);
                            },
                        });
                },
                B,
                function () {
                    y.dialog.confirm({
                        message:
                            'Are you sure you want to delete this file from the database? This action cannot be undone. (This will NOT delete the file locally.)',
                        callback: (e) => {
                            e && O();
                        },
                    });
                },
                f,
                function () {
                    ((u = $(this)), os.set(u));
                },
                () => {
                    h(Kr, (s.FileTheme = u), s);
                },
                () => {
                    h(Kr, (s.FileTheme = 'default'), s);
                },
                function () {
                    ((l = this.checked), is.set(l));
                },
                function () {
                    ((s.UploadToDatabase = this.checked), Kr.set(s));
                },
                function () {
                    ((E = this.value), n(4, E));
                },
                function () {
                    ((S = this.value), n(5, S));
                },
                (e) => n(1, (w = e.detail ? e.detail.trim() : '')),
                () => {
                    (Object.keys(s.Lexicon).forEach((e) => {
                        s.Lexicon[e].Senses.forEach((t, n) => {
                            t.tags.includes(w) &&
                                s.Lexicon[e].Senses[n].tags.splice(
                                    t.tags.indexOf(w),
                                    1,
                                );
                        });
                    }),
                        n(1, (w = '')));
                },
                () => {
                    y.dialog.prompt({
                        message: 'New tag name:',
                        callback: (e) => {
                            e &&
                                (Object.keys(s.Lexicon).forEach((t) => {
                                    s.Lexicon[t].Senses.forEach((n, o) => {
                                        n.tags.includes(w) &&
                                            (s.Lexicon[t].Senses[o].tags.splice(
                                                n.tags.indexOf(w),
                                                1,
                                            ),
                                            s.Lexicon[t].Senses[o].tags.push(
                                                e,
                                            ));
                                    });
                                }),
                                n(1, (w = e)));
                        },
                    });
                },
                function () {
                    ((s.UseLects = this.checked), Kr.set(s));
                },
                (e, t) => {
                    1 !== s.Lects.length
                        ? y.dialog.confirm({
                              message: `Are you sure you want to delete the lect "${e}"? This action cannot be undone.`,
                              callback(n) {
                                  n && (_(e, t), ms.log(`Deleted lect: ${e}`));
                              },
                          })
                        : y.dialog.alert('You cannot delete the last lect.');
                },
                (e, t) => {
                    y.dialog.prompt({
                        message: 'Edit Lect Name',
                        placeholder: `${e}`,
                        callback(n) {
                            if (!1 === n)
                                return ms.log(
                                    'User cancelled the Edit Lect Name dialog.',
                                );
                            (T(e, n, t),
                                ms.log(`Edited lect name: ${e} to ${n}`));
                        },
                    });
                },
                (e) => {
                    y.dialog.confirm({
                        message: `Add all words in the lexicon to the lect ‘${e}’?`,
                        callback(t) {
                            if (t) {
                                for (let t in s.Lexicon)
                                    s.Lexicon[t].Senses.forEach((t) => {
                                        t.lects.includes(e) || t.lects.push(e);
                                    });
                                (ms.log(`Added all words to lect: ${e}`),
                                    y.dialog.alert(
                                        `Added all senses of all words to the lect ‘${e}’.`,
                                    ));
                            }
                        },
                    });
                },
                () => {
                    y.dialog.prompt({
                        message: 'Add a New Lect',
                        placeholder: `New ${s.Name} Lect`,
                        callback(e) {
                            if (!1 === e)
                                return ms.log(
                                    'User cancelled the Add Lect dialog.',
                                );
                            (h(Kr, (s.Lects = [...s.Lects, e]), s),
                                h(
                                    Kr,
                                    (s.Pronunciations[e] = 'place > holder'),
                                    s,
                                ),
                                h(Zr, (a[e] = Es(g, e)), a),
                                fs(`Added a new lect: ${e}`));
                        },
                    });
                },
                function () {
                    ((s.ShowPronunciation = this.checked), Kr.set(s));
                },
                function () {
                    ((s.ShowEtymology = this.checked), Kr.set(s));
                },
                () => {
                    B();
                },
                (e) => {
                    y.dialog.confirm({
                        message: `Are you sure you want to delete "${e}"? This will remove any etymology connections its entries may have.`,
                        callback(t) {
                            t &&
                                (h(
                                    Kr,
                                    (s.Etymologies = Object.fromEntries(
                                        Object.entries(s.Etymologies).filter(
                                            ([t, n]) => n.source !== e,
                                        ),
                                    )),
                                    s,
                                ),
                                delete s.Relatives[e],
                                fs(`Deleted relative: ${e}`));
                        },
                    });
                },
                function () {
                    ((s.ShowInflection = this.checked), Kr.set(s));
                },
                function () {
                    ((s.ShowOrthography = this.checked), Kr.set(s));
                },
                function (e, t) {
                    ((e[t].display = this.checked), Kr.set(s));
                },
            ]
        );
    }
    class kv extends Ee {
        constructor(e) {
            (super(), Ce(this, e, wv, yv, s, {}, null, [-1, -1, -1]));
        }
    }
    function xv(e, t, n) {
        const o = e.slice();
        return ((o[4] = t[n]), o);
    }
    function Cv(e, t, n) {
        const o = e.slice();
        return ((o[7] = t[n]), o);
    }
    function Ev(t) {
        let n,
            o,
            i,
            r,
            s = t[7] + '';
        return {
            c() {
                ((n = T('• ')),
                    (o = new D(!1)),
                    (i = _()),
                    (r = E('br')),
                    (o.a = i));
            },
            m(e, t) {
                (k(e, n, t), o.m(s, e, t), k(e, i, t), k(e, r, t));
            },
            p: e,
            d(e) {
                (e && x(n), e && o.d(), e && x(i), e && x(r));
            },
        };
    }
    function Sv(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d = ['Overhaul', 'Update', 'Patch'][e[0][e[4]].type] + '',
            h = e[4] + '',
            u = e[0][e[4]].notes,
            p = [];
        for (let t = 0; t < u.length; t += 1) p[t] = Ev(Cv(e, u, t));
        return {
            c() {
                ((t = E('p')),
                    (n = E('u')),
                    (o = T(d)),
                    (i = _()),
                    (r = T(h)),
                    (s = _()),
                    (a = E('p')));
                for (let e = 0; e < p.length; e += 1) p[e].c();
                ((l = _()),
                    (c = E('br')),
                    M(a, 'width', '70%'),
                    M(a, 'margin', 'auto'),
                    M(a, 'text-align', 'left'),
                    M(a, 'line-height', '1.6'));
            },
            m(e, d) {
                (k(e, t, d),
                    v(t, n),
                    v(n, o),
                    v(n, i),
                    v(n, r),
                    k(e, s, d),
                    k(e, a, d));
                for (let e = 0; e < p.length; e += 1) p[e] && p[e].m(a, null);
                (k(e, l, d), k(e, c, d));
            },
            p(e, t) {
                if (1 & t) {
                    let n;
                    for (u = e[0][e[4]].notes, n = 0; n < u.length; n += 1) {
                        const o = Cv(e, u, n);
                        p[n]
                            ? p[n].p(o, t)
                            : ((p[n] = Ev(o)), p[n].c(), p[n].m(a, null));
                    }
                    for (; n < p.length; n += 1) p[n].d(1);
                    p.length = u.length;
                }
            },
            d(e) {
                (e && x(t),
                    e && x(s),
                    e && x(a),
                    C(p, e),
                    e && x(l),
                    e && x(c));
            },
        };
    }
    function Tv(t) {
        let n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            S,
            B,
            O,
            L,
            A,
            P,
            N,
            $,
            R,
            j,
            D,
            F,
            H = Object.keys(t[0]),
            z = [];
        for (let e = 0; e < H.length; e += 1) z[e] = Sv(xv(t, H, e));
        return {
            c() {
                ((n = E('div')),
                    (o = E('div')),
                    (i = E('div')),
                    (r = E('p')),
                    (r.innerHTML =
                        'Interested in testing the beta versions, talking about languages, or worldbuilding? <br/>\n                Join <a rel="noreferrer" target="_blank" href="https://discord.gg/uDk2XDhh8K">Saturn&#39;s Sojourn</a>, \n                the home of Lexicanter on <a rel="noreferrer" target="_blank" href="https://discord.gg/uDk2XDhh8K">Discord</a>!'),
                    (s = _()),
                    (a = E('br')),
                    (l = _()),
                    (c = E('p')),
                    (c.innerHTML =
                        'Support the continued developement of the app as a <a rel="noreferrer" target="_blank" href="https://patreon.com/saturnine_softworks">patron</a>,'),
                    (d = _()),
                    (h = E('p')),
                    (h.innerHTML =
                        'or by buying me a <a rel="noreferrer" target="_blank" href="https://ko-fi.com/saturnine_softworks">coffee</a>!'),
                    (u = _()),
                    (p = E('br')),
                    (f = E('br')),
                    (g = T(
                        '\n\n            Below is a list of all changes made to the app since version 1.8, which is when the changelog was first added.',
                    )),
                    (m = E('br')),
                    (b = T(
                        "\n            If you're looking for more information about how to use the app, check the Help tab or visit the \n            ",
                    )),
                    (y = E('a')),
                    (y.textContent = 'Wiki'),
                    (w = T('.')),
                    (S = E('br')),
                    (B = T(' There is also\n            an overview ')),
                    (O = E('a')),
                    (O.textContent = 'tutorial video'),
                    (L = T(' for release 2.0.\n            ')),
                    (A = E('br')),
                    (P = T(
                        " If you're still having trouble, or need to contact the developer, visit us in the \n            ",
                    )),
                    (N = E('a')),
                    (N.textContent = 'Discord server'),
                    ($ = T('. \n            \n            ')),
                    (R = E('br')),
                    (j = E('hr')),
                    (D = E('br')),
                    (F = _()));
                for (let e = 0; e < z.length; e += 1) z[e].c();
                (I(r, 'class', 'info'),
                    I(c, 'class', 'info'),
                    I(h, 'class', 'info'),
                    I(y, 'rel', 'noreferrer'),
                    I(y, 'target', '_blank'),
                    I(
                        y,
                        'href',
                        'https://github.com/Saturnine-Softworks/Lexicanter/wiki',
                    ),
                    I(O, 'rel', 'noreferrer'),
                    I(O, 'target', '_blank'),
                    I(
                        O,
                        'href',
                        'https://www.youtube.com/watch?v=6_AwCC4XlvU&t=151s',
                    ),
                    I(N, 'rel', 'noreferrer'),
                    I(N, 'target', '_blank'),
                    I(N, 'href', 'https://discord.gg/uDk2XDhh8K'),
                    I(i, 'class', 'container column scrolled'),
                    M(i, 'height', '90vh'),
                    I(o, 'class', 'row'),
                    M(o, 'height', '95vh'),
                    I(n, 'class', 'tab-pane'));
            },
            m(e, t) {
                (k(e, n, t),
                    v(n, o),
                    v(o, i),
                    v(i, r),
                    v(i, s),
                    v(i, a),
                    v(i, l),
                    v(i, c),
                    v(i, d),
                    v(i, h),
                    v(i, u),
                    v(i, p),
                    v(i, f),
                    v(i, g),
                    v(i, m),
                    v(i, b),
                    v(i, y),
                    v(i, w),
                    v(i, S),
                    v(i, B),
                    v(i, O),
                    v(i, L),
                    v(i, A),
                    v(i, P),
                    v(i, N),
                    v(i, $),
                    v(i, R),
                    v(i, j),
                    v(i, D),
                    v(i, F));
                for (let e = 0; e < z.length; e += 1) z[e] && z[e].m(i, null);
            },
            p(e, [t]) {
                if (1 & t) {
                    let n;
                    for (H = Object.keys(e[0]), n = 0; n < H.length; n += 1) {
                        const o = xv(e, H, n);
                        z[n]
                            ? z[n].p(o, t)
                            : ((z[n] = Sv(o)), z[n].c(), z[n].m(i, null));
                    }
                    for (; n < z.length; n += 1) z[n].d(1);
                    z.length = H.length;
                }
            },
            i: e,
            o: e,
            d(e) {
                (e && x(n), C(z, e));
            },
        };
    }
    function _v(e) {
        const [t, n, o] = [0, 1, 2];
        return [
            {
                '2.1.20': {
                    type: o,
                    notes: [
                        'Improved formatting options on the documentation tab, including the long-requested feature of paragraph alignment.                 Also, ordered and unordered lists, collapsible sections, callouts, citations, and annotations.',
                        'You can now delete files from the cloud. The app will prompt you to confirm this action, and it will not delete the file locally.',
                    ],
                },
                '2.1.19': {
                    type: o,
                    notes: [
                        'Fixed a bug with the lexicon description search which caused the exact match <code>!</code> and begins-word <code>^</code> functions not to work.',
                        'Fixed a bug causing the alphabetizer to soft crash the app if you used parentheses in your alphabet. Other RegEx-reserved characters will work now as well.',
                    ],
                },
                '2.1.18': {
                    type: o,
                    notes: [
                        'Fixed problems with the search bars in the Phrasebook tab which made them virtually useless.',
                        'Fixed another case where documentations would not be initialized when loading a database synced file on multiple devices.',
                        'Changes to how the changelog in managed under the hood (yes, really).',
                    ],
                },
                '2.1.17': {
                    type: o,
                    notes: [
                        'Fixed a bug with downloading lexicons on multiple devices and the documentation being left out.',
                    ],
                },
                '2.1.16': {
                    type: o,
                    notes: [
                        'Fixed a bug that occurred with lexicon searching in some files, related to case-sensitivity.',
                    ],
                },
                '2.1.15': {
                    type: o,
                    notes: [
                        'Fixed a reported bug which caused the search fields in the lexicon and phrasebook to find no matches in certain cases.',
                        'Changed the way that the app recognizes when changes have been made to the version of your file in the database.',
                        'A few quality of life features related to the previous change, including the ability to see the local and online file version numbers in Settings.',
                    ],
                },
                '2.1.14': {
                    type: o,
                    notes: [
                        'Fixed a bug with the orthography pattern replacement features which caused it to only replace the first instance of a pattern in each word.',
                        'Added the ability to use ^ or # as word-end characters in the orthography pattern replacement fields.',
                        'Fixed a reported bug with the Illegals field of the Advanced Phonotactics word generator which caused that field not to save its contents.',
                        'Fixed a bug with database syncing which caused the setting to not save for files.',
                        'Files should now automatically detect when you have changes in the database on loading, and will prompt you to download the changes.',
                    ],
                },
                '2.1.13': {
                    type: o,
                    notes: [
                        'Added an Illegals field to the Advanced Phonotactics word generator options.',
                        'Added the Structures inputs to the Advanced Phonotactics word generator options and the corresponding syllable category syntax for this feature.',
                        '(Finally) wrote the documentation on the word generator, which can be found in the Help tab.',
                    ],
                },
                '2.1.12': {
                    type: o,
                    notes: [
                        'Added a new default text to the Pronunciations field in the Phonology tab to better guide beginners.',
                        'Added an indicator on entries in the lexicon tab to show if their pronunciation was manually edited and thus not automatically updated by pronunciation rules.',
                    ],
                },
                '2.1.11': {
                    type: o,
                    notes: [
                        'Added secondary location file saving, for those of you who want your lexicon files to save to another location on your computer every time you save.',
                        'Added database syncing! Get your account credentials from the Lexicanter Discord bot, and then you can sync your files to the bot and between devices.',
                        'A minor change to how app settings are saved. The old app settings files are now deprecated and will eventually no longer be supported.',
                    ],
                },
                '2.1.10': {
                    type: o,
                    notes: [
                        'New tooltips have been added throughout the app.',
                        "New All Hallow's Eve 2023 theme in the Holiday collection!",
                    ],
                },
                '2.1.9': {
                    type: o,
                    notes: [
                        'Hot fix for a bug which caused data saved by the advanced word generator not to be loaded open re-opening a file.',
                        'A new feature will be coming in 2.2 which requires a change to the way lexicon entries are formatted internally, which this update prepares for.',
                    ],
                },
                2.1: {
                    type: n,
                    notes: [
                        'Introduced a plain text import feature for convenient clonging on the move.',
                        'Added a reference window for loading secondary files in read-only mode.',
                        'Support for custom fonts via new Orthographies feature.',
                        'Under-the-hood file structure adjustments and read logic improvements.',
                        'New phonological evolution tools!',
                        'An alternative type of word generator for more advanced syllable structures.',
                        'The option to save theme preferences on a file-by-file basis.',
                        'New themes: Magnolia by Saturnine, Crabapple by Maarz, and Eostre 2023 (a holiday theme released for beta users earlier this year).',
                        'A number of bugs removed; probably some bugs added. Please report them if you find them!',
                    ],
                },
                '2.0.18': {
                    type: o,
                    notes: [
                        'By request, added a new dropdown to Tag inputs which allows you to select from pre-existing tags in your lexicon.',
                        'By request, added a new Help tab. It hosts the same information as the wiki, but is accessible offline.',
                        'The Settings, Changelog, and Help tabs, as well as the window control buttons, now use Material Icons.',
                    ],
                },
                '2.0.17': {
                    type: o,
                    notes: [
                        'Fixed a reported bug with the inflections generation.',
                        'Fixed an issue with tag searching.',
                        'The font weight has been changed to an appropriate Book weight to improve readability on some systems and to many eyes.',
                    ],
                },
                '2.0.16': {
                    type: o,
                    notes: [
                        'Fixed a small bug with the new sound change engine.',
                    ],
                },
                '2.0.15': {
                    type: o,
                    notes: [
                        'Fixed a reported bug with HTML export.',
                        'Related to the above fix, technical limitations now prevent your theme from being exported with your HTML. Solutions are being investigated.',
                    ],
                },
                '2.0.14': {
                    type: o,
                    notes: [
                        'Fixed CSV export.',
                        'Fixed a reported bug with HTML export.',
                        'Fixed some reported and unreported issues with the sound change engine.',
                        "There is now a text input designated for specifying categories for sound changes in an inflection group, to make everyone's life easier.",
                        'Minor optimizations and performance improvements.',
                    ],
                },
                '2.0.13': { type: o, notes: ['Linux support!'] },
                '2.0.12': {
                    type: o,
                    notes: [
                        'Fixed a reported bug which caused HTML export to fail. Expect expanded HTML export options in the future.',
                        'Minor optimizations.',
                    ],
                },
                '2.0.11': {
                    type: o,
                    notes: [
                        'Fixed a reported bug which caused a semi-rare soft-crash in certain cases when dealing with multiple lects. Again.',
                    ],
                },
                '2.0.10': {
                    type: o,
                    notes: [
                        'Fixed a reported bug which caused a semi-rare soft-crash in certain cases when dealing with multiple lects.',
                        'Fixed a reported bug which caused CSV import to fail, and improved CSV import options.',
                    ],
                },
                '2.0.9': {
                    type: o,
                    notes: [
                        'You can now write multiple rules separated by a semicolon, which allows for multiple rules per table cell in the inflection tables.',
                        'Fixed a reported bug which caused a soft crash when attempting to edit the last word in the lexicon if it had an inflections dropdown open.',
                    ],
                },
                '2.0': {
                    type: t,
                    notes: [
                        'There is now a new sound change engine under the hood. Your old rules may no longer work; for assistance, you can contact the developer.',
                        'Lexicon entries can now be separated into multiple Senses, each of which can have their own tags.',
                        'There are new features accessible via new Advanced Settings. These include:',
                        'New Lect features allow you to denote the ways your language may vary, particularly in semantics and pronunciation.',
                        'New Inflection features, which include a new tab, which allows you to create inflectional paradigms for your language.',
                        'New Etymology features, which include a new tab, allows you to create etymologies trees and view them in the lexicon.',
                        'Check out the new wiki page or tutorial video for more in-depth information!',
                        'New app icons by Lyiusa!',
                        'New themes: Juniper by Saturnine, and Midnight and Bone by Maarz!',
                    ],
                },
                '1.11.4': {
                    type: o,
                    notes: [
                        'Fixed a reported bug causing markdown not to work in variant descriptions of phrases.',
                    ],
                },
                '1.11.3': {
                    type: o,
                    notes: [
                        'Fixed a reported bug causing the alphabetizer pre-check to send false alerts when certain combining diacritics on certain characters were in the alphabet in certain orders.',
                    ],
                },
                '1.11.2': {
                    type: o,
                    notes: [
                        'The app now saves backup versions of your files in case things go wrong.',
                        'Fixed a reported bug that caused the app to sometimes exit too quickly and not save when autosave was enabled.',
                    ],
                },
                '1.11.1': {
                    type: o,
                    notes: [
                        'Fixed a reported bug causing the Ignore Diacritics setting to be ignored during alphabet checks when adding words to the lexicon.',
                    ],
                },
                1.11: {
                    type: n,
                    notes: [
                        'When you attempt to add a word to the lexicon, there is now an alert if the word contains characters (or polygraphs) not present in your alphabet.',
                        'Fixed a reported bug causing external links to not display correctly in the Lexicon tab specifically.',
                        'Fixed a reported bug preventing the app from warning you that it will not save if there is no file name given.',
                        'Fixed a minor bug with the Terminal theme when exported for HTML.',
                    ],
                },
                '1.10': {
                    type: n,
                    notes: [
                        'Added three new themes: Pomegranate, Wisteria, and Terminal.',
                        'The word entry panel in the Lexicon tab is now collapsible.',
                        'The Phrasebook now has active overwrite protection to prevent you from deleting your work by mistake.',
                        'You can now search for an exact whole-word match in definitions and tags fields by using ! as a prefix.',
                        'For HTML exports, the appearance on mobile devices has been improved.',
                        'Minor bug fixes for opening new windows from the File tab.',
                        "Lots of under-the-hood changes for the app's appearance in preparation for future features.",
                    ],
                },
                '1.9.5': {
                    type: o,
                    notes: [
                        'Fixed a bug causing app-quit to be impossible sometimes.',
                        'Fixed some minor bugs with the styles.',
                        'Fixed a bug causing monospace toggle in the docs tab to be undoable.',
                        'Fixed a bug causing external hyperlinks not to use the preferred browser, and in some cases not open at all.',
                    ],
                },
                '1.9.4': {
                    type: o,
                    notes: [
                        'You can now hyperlink to entries in the lexicon. The link format is lex::word.',
                        'The documentation tab would previously not adjust to the width of the window. That has been fixed.',
                    ],
                },
                1.9: {
                    type: n,
                    notes: [
                        'Overhauled the Documentation tab, which now uses integrated EditorJS technology. Markdown is no longer supported in this tab, in favor of the new WYSIWYG style with a toolbar visible when you highlight text.',
                        'Note: The first time you load a file from an older version, there may be some formatting quirks. Most of these should sort themselves out after saving in the new version and re-loading. Please contact the developer if you run into persistent issues.',
                        'Fixed a bug with the Open New Window button which caused it to fail to open new windows.',
                        'The button to edit phrasebook entries has been changed to right-click instead of left-click to make it more difficult to accidentally overwrite work in progress, and to allow for highlighting text.',
                        'An HTML Docs-Only export option has been added.',
                    ],
                },
                '1.8.14': {
                    type: o,
                    notes: [
                        'Fixed a few minor bugs with markdown parsing.',
                        'Added monospace markdown with ``this`` syntax.',
                        'Fixed a reported bug which affected the orthography testing area.',
                    ],
                },
                1.8: {
                    type: n,
                    notes: [
                        'File storage has been migrated to make auto-save possible.',
                        'Categories can now be defined and used in your Pronunciations rules. See the docs page for more info.',
                        'Five new color themes: Light, Marine, Glade, Leatherbound, and Purple Maar (contributed by Maarz).',
                        'You can now load in your own custom CSS color themes.',
                        'Definitions, descriptions, and documentation sections now support simple markdown.',
                        "There's a new space in the Phonology tab to test your pronunciation rules.",
                        'Tag searches no longer require an exact match.',
                        'Several minor bug fixes, including one reported about tables being editable in the HTML export.',
                    ],
                },
            },
        ];
    }
    class Bv extends Ee {
        constructor(e) {
            (super(), Ce(this, e, _v, Tv, s, {}));
        }
    }
    function Ov(e, t, n) {
        const o = e.slice();
        return ((o[14] = t[n]), (o[15] = t), (o[16] = n), o);
    }
    function Iv(e) {
        let t,
            n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            C,
            S,
            B,
            L,
            A,
            N,
            $,
            R,
            j,
            D,
            F,
            H,
            z,
            U;
        function W(...t) {
            return e[7](e[16], ...t);
        }
        function q() {
            e[8].call(g, e[15], e[16]);
        }
        function V() {
            e[9].call(L, e[15], e[16]);
        }
        function G() {
            return e[10](e[16]);
        }
        return {
            c() {
                ((t = E('div')),
                    (n = E('div')),
                    (o = E('label')),
                    (r = T('Tags\n                            ')),
                    (s = E('div')),
                    (a = E('textarea')),
                    (c = _()),
                    (d = E('label')),
                    (h = T('RegEx Filter\n                            ')),
                    (u = E('div')),
                    (p = E('p')),
                    (p.textContent = '/'),
                    (f = _()),
                    (g = E('input')),
                    (m = _()),
                    (b = E('p')),
                    (b.textContent = '/'),
                    (y = _()),
                    (w = E('div')),
                    (C = E('label')),
                    (S = T('Rule Categories\n                            ')),
                    (B = E('div')),
                    (L = E('textarea')),
                    (A = _()),
                    (N = E('div')),
                    ($ = _()),
                    (R = E('div')),
                    (j = E('button')),
                    (j.textContent = 'Delete'),
                    (D = _()),
                    (F = E('br')),
                    (H = E('br')),
                    I(a, 'rows', '1'),
                    (a.value = l = e[14].tags.join(' ')),
                    M(p, 'display', 'inline'),
                    M(g, 'display', 'inline'),
                    I(g, 'type', 'text'),
                    M(b, 'display', 'inline'),
                    I(n, 'class', 'column'),
                    I(L, 'class', 'text-left'),
                    I(L, 'rows', '3'),
                    I(w, 'class', 'column'),
                    I(t, 'class', 'row'),
                    M(t, 'width', '66%'),
                    I(N, 'class', 'codex-editor'),
                    I(N, 'id', `inflection ${e[16]}`),
                    M(N, 'font-family', 'Gentium'),
                    I(j, 'class', 'hover-highlight hover-shadow'),
                    M(j, 'display', 'inline'),
                    I(R, 'class', 'narrow'));
            },
            m(i, l) {
                (k(i, t, l),
                    v(t, n),
                    v(n, o),
                    v(o, r),
                    v(o, s),
                    v(s, a),
                    v(n, c),
                    v(n, d),
                    v(d, h),
                    v(d, u),
                    v(u, p),
                    v(u, f),
                    v(u, g),
                    P(g, e[14].filter),
                    v(u, m),
                    v(u, b),
                    v(t, y),
                    v(t, w),
                    v(w, C),
                    v(C, S),
                    v(C, B),
                    v(B, L),
                    P(L, e[14].categories),
                    k(i, A, l),
                    k(i, N, l),
                    k(i, $, l),
                    k(i, R, l),
                    v(R, j),
                    k(i, D, l),
                    k(i, F, l),
                    k(i, H, l),
                    z ||
                        ((U = [
                            O(a, 'change', W),
                            O(g, 'input', q),
                            O(L, 'input', V),
                            O(j, 'click', G),
                        ]),
                        (z = !0)));
            },
            p(t, n) {
                ((e = t),
                    1 & n && l !== (l = e[14].tags.join(' ')) && (a.value = l),
                    1 & n && g.value !== e[14].filter && P(g, e[14].filter),
                    1 & n && P(L, e[14].categories));
            },
            d(e) {
                (e && x(t),
                    e && x(A),
                    e && x(N),
                    e && x($),
                    e && x(R),
                    e && x(D),
                    e && x(F),
                    e && x(H),
                    (z = !1),
                    i(U));
            },
        };
    }
    function Lv(t) {
        let n,
            o,
            r,
            s,
            a,
            l,
            c,
            d = t[0].Inflections,
            h = [];
        for (let e = 0; e < d.length; e += 1) h[e] = Iv(Ov(t, d, e));
        return {
            c() {
                ((n = E('div')), (o = E('div')), (r = E('div')));
                for (let e = 0; e < h.length; e += 1) h[e].c();
                ((s = _()),
                    (a = E('button')),
                    (a.textContent = 'Add Inflections Group'),
                    I(a, 'style', 'hover-highlight hover-shadow'),
                    I(r, 'class', 'container column scrolled'),
                    I(o, 'class', 'row'),
                    M(o, 'height', '92vh'),
                    I(n, 'class', 'tab-pane'),
                    I(n, 'spellcheck', 'false'));
            },
            m(e, i) {
                (k(e, n, i), v(n, o), v(o, r));
                for (let e = 0; e < h.length; e += 1) h[e] && h[e].m(r, null);
                (v(r, s),
                    v(r, a),
                    l ||
                        ((c = [O(a, 'click', t[11]), O(r, 'mouseleave', t[5])]),
                        (l = !0)));
            },
            p(e, [t]) {
                if (47 & t) {
                    let n;
                    for (d = e[0].Inflections, n = 0; n < d.length; n += 1) {
                        const o = Ov(e, d, n);
                        h[n]
                            ? h[n].p(o, t)
                            : ((h[n] = Iv(o)), h[n].c(), h[n].m(r, s));
                    }
                    for (; n < h.length; n += 1) h[n].d(1);
                    h.length = d.length;
                }
            },
            i: e,
            o: e,
            d(e) {
                (e && x(n), C(h, e), (l = !1), i(c));
            },
        };
    }
    function Av(e, t, n) {
        let o, i;
        (d(e, Kr, (e) => n(0, (o = e))), d(e, rs, (e) => n(6, (i = e))));
        const r = require('vex-js');
        var s;
        function a(e, t) {
            const n = e.currentTarget;
            h(Kr, (o.Inflections[t].tags = n.value.split(/\s+/g)), o);
        }
        function l(e) {
            for (let e = p.length; e > 0; e--) (p[e - 1].destroy(), p.pop());
            o.Inflections.filter((t, n) => n !== e).forEach((e, t) => {
                const n = {
                        holder: `inflection ${t}`,
                        data: e.tables,
                        tools: {
                            underline: lh,
                            table: {
                                class: sh,
                                inlineToolbar: !0,
                                config: { rows: 3, cols: 3, withHeadings: !0 },
                            },
                            header: { class: $d, inlineToolbar: !0 },
                        },
                        minHeight: 30,
                        logLevel: s.ERROR,
                    },
                    o = new qr(n);
                p.push(o);
            });
        }
        function c() {
            const e = {
                    holder: 'inflection ' + (o.Inflections.length - 1),
                    data: {
                        blocks: [
                            {
                                type: 'header',
                                data: {
                                    text: 'New Inflections Group',
                                    level: 1,
                                },
                            },
                            {
                                type: 'table',
                                data: {
                                    withHeadings: !1,
                                    content: [
                                        ['', '', ''],
                                        ['', '', ''],
                                        ['', '', ''],
                                    ],
                                },
                            },
                            {
                                type: 'paragraph',
                                data: {
                                    text: 'Table cells containing sound change rules will be used to generate inflected forms.                             Apply them to your words in your lexicon by providing the lexicon tags they apply to and an                             optional Regular Expression filter.',
                                },
                            },
                        ],
                    },
                    tools: {
                        underline: lh,
                        table: {
                            class: sh,
                            inlineToolbar: !0,
                            config: { rows: 3, cols: 3, withHeadings: !0 },
                        },
                        header: { class: $d, inlineToolbar: !0 },
                    },
                    minHeight: 30,
                    logLevel: s.ERROR,
                },
                t = new qr(e);
            p.push(t);
        }
        async function u() {
            for (let e = 0; e < p.length; e++)
                (p[e]
                    .save()
                    .then((t) => {
                        h(Kr, (o.Inflections[e].tables = t), o);
                    })
                    .catch((t) => {
                        ms.error(
                            `Error while saving editor.\nindex: ${e}\nobject at i: ${p[e]}\neditors.length: ${p.length}\nmessage:\n ${String(t)}`,
                        );
                    }),
                    await p[e].isReady);
            return (Kr.set(o), 'done');
        }
        !(function (e) {
            ((e.VERBOSE = 'VERBOSE'),
                (e.INFO = 'INFO'),
                (e.WARN = 'WARN'),
                (e.ERROR = 'ERROR'));
        })(s || (s = {}));
        let p = [];
        return (
            (e.$$.update = () => {
                64 & e.$$.dirty && l(1 / 0);
            }),
            [
                o,
                r,
                a,
                l,
                c,
                u,
                i,
                (e, t) => a(t, e),
                function (e, t) {
                    ((e[t].filter = this.value), Kr.set(o));
                },
                function (e, t) {
                    ((e[t].categories = this.value), Kr.set(o));
                },
                (e) => {
                    r.dialog.confirm({
                        message:
                            'Are you sure you want to delete this inflection group? This action is irreversible.',
                        callback: (t) => {
                            t &&
                                (u(),
                                window.setTimeout(() => {
                                    (l(e),
                                        h(
                                            Kr,
                                            (o.Inflections =
                                                o.Inflections.filter(
                                                    (t, n) => n !== e,
                                                )),
                                            o,
                                        ));
                                }, 666));
                        },
                    });
                },
                () => {
                    u().then(() => {
                        (h(
                            Kr,
                            (o.Inflections = [
                                ...o.Inflections,
                                {
                                    tags: [],
                                    filter: '.+',
                                    categories: '',
                                    tables: {
                                        blocks: [
                                            {
                                                type: 'header',
                                                data: {
                                                    text: 'New Inflections Group',
                                                    level: 1,
                                                },
                                            },
                                            {
                                                type: 'table',
                                                data: {
                                                    withHeadings: !1,
                                                    content: [
                                                        ['', '', ''],
                                                        ['', '', ''],
                                                        ['', '', ''],
                                                    ],
                                                },
                                            },
                                            {
                                                type: 'paragraph',
                                                data: {
                                                    text: 'Table cells containing sound change rules will be used to generate inflected forms.                                             Apply them to your words in your lexicon by providing the lexicon tags they apply to and an                                             optional Regular Expression filter.',
                                                },
                                            },
                                        ],
                                    },
                                },
                            ]),
                            o,
                        ),
                            c());
                    });
                },
            ]
        );
    }
    class Pv extends Ee {
        constructor(e) {
            (super(), Ce(this, e, Av, Lv, s, {}));
        }
    }
    function Mv(e, t, n) {
        const o = e.slice();
        return ((o[21] = t[n]), o);
    }
    function Nv(e, t, n) {
        const o = e.slice();
        return ((o[21] = t[n]), (o[24] = t), (o[25] = n), o);
    }
    function $v(e, t, n) {
        const o = e.slice();
        return ((o[26] = t[n]), o);
    }
    function Rv(e) {
        let t, n, o, i, r;
        function s() {
            e[8].call(t, e[24], e[25]);
        }
        return {
            c() {
                ((t = E('select')),
                    (n = E('option')),
                    (n.textContent = 'Base from pronunciation'),
                    (o = E('option')),
                    (o.textContent = 'Base from romanization'),
                    (n.__value = 'ipa'),
                    (n.value = n.__value),
                    (o.__value = 'rom'),
                    (o.value = o.__value),
                    void 0 === e[21].root && ne(s));
            },
            m(a, l) {
                (k(a, t, l),
                    v(t, n),
                    v(t, o),
                    N(t, e[21].root, !0),
                    i || ((r = O(t, 'change', s)), (i = !0)));
            },
            p(n, o) {
                ((e = n), 16 & o && N(t, e[21].root));
            },
            d(e) {
                (e && x(t), (i = !1), r());
            },
        };
    }
    function jv(t) {
        let n;
        return {
            c() {
                ((n = E('span')), (n.textContent = ': Base input'));
            },
            m(e, t) {
                k(e, n, t);
            },
            p: e,
            d(e) {
                e && x(n);
            },
        };
    }
    function Dv(e) {
        let t,
            n,
            o,
            i,
            r,
            s = e[4].Lects,
            a = [];
        for (let t = 0; t < s.length; t += 1) a[t] = Fv($v(e, s, t));
        function l() {
            e[9].call(o, e[24], e[25]);
        }
        return {
            c() {
                ((t = E('label')),
                    (n = T('Lect\n                        ')),
                    (o = E('select')));
                for (let e = 0; e < a.length; e += 1) a[e].c();
                void 0 === e[21].lect && ne(l);
            },
            m(s, c) {
                (k(s, t, c), v(t, n), v(t, o));
                for (let e = 0; e < a.length; e += 1) a[e] && a[e].m(o, null);
                (N(o, e[21].lect, !0),
                    i || ((r = O(o, 'change', l)), (i = !0)));
            },
            p(t, n) {
                if (((e = t), 16 & n)) {
                    let t;
                    for (s = e[4].Lects, t = 0; t < s.length; t += 1) {
                        const i = $v(e, s, t);
                        a[t]
                            ? a[t].p(i, n)
                            : ((a[t] = Fv(i)), a[t].c(), a[t].m(o, null));
                    }
                    for (; t < a.length; t += 1) a[t].d(1);
                    a.length = s.length;
                }
                16 & n && N(o, e[21].lect);
            },
            d(e) {
                (e && x(t), C(a, e), (i = !1), r());
            },
        };
    }
    function Fv(e) {
        let t,
            n,
            o,
            i = e[26] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[26]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (16 & r && i !== (i = e[26] + '') && A(n, i),
                    16 & r &&
                        o !== (o = e[26]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Hv(e) {
        let t, n, o;
        function i() {
            return e[11](e[25]);
        }
        return {
            c() {
                ((t = E('button')),
                    (t.textContent = 'Delete'),
                    I(t, 'class', 'hover-highlight hover-shadow'));
            },
            m(e, r) {
                (k(e, t, r), n || ((o = O(t, 'click', i)), (n = !0)));
            },
            p(t, n) {
                e = t;
            },
            d(e) {
                (e && x(t), (n = !1), o());
            },
        };
    }
    function zv(e) {
        let t,
            n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            C,
            S,
            L,
            A,
            P,
            N,
            $,
            R,
            j,
            D;
        function F(...t) {
            return e[6](e[25], ...t);
        }
        function H(...t) {
            return e[7](e[25], ...t);
        }
        function z(e, t) {
            return 'Romanization' === e[21].name ? jv : Rv;
        }
        let U = z(e),
            W = U(e),
            q = e[4].UseLects && 'ipa' === e[21].root && Dv(e);
        function V(...t) {
            return e[10](e[25], ...t);
        }
        let G = 'Romanization' !== e[21].name && Hv(e);
        return {
            c() {
                ((t = E('label')),
                    (n = T('Name\n                    ')),
                    (o = E('input')),
                    (a = _()),
                    (l = E('label')),
                    (c = T('Font\n                    ')),
                    (d = E('input')),
                    (p = _()),
                    (f = E('label')),
                    (g = T('Root\n                    ')),
                    W.c(),
                    (m = _()),
                    q && q.c(),
                    (b = _()),
                    (y = E('br')),
                    (w = _()),
                    (C = E('label')),
                    (S = T('Conversion Rules\n                    ')),
                    (L = E('textarea')),
                    ($ = _()),
                    G && G.c(),
                    (R = B()),
                    I(o, 'type', 'text'),
                    (o.value = r = e[21].name),
                    (o.readOnly = s = 'Romanization' === e[21].name),
                    M(
                        o,
                        'background-color',
                        'Romanization' === e[21].name ? 'transparent' : '',
                    ),
                    I(d, 'type', 'text'),
                    (d.value = h = e[21].font),
                    (d.readOnly = u = 'Romanization' === e[21].name),
                    M(
                        d,
                        'background-color',
                        'Romanization' === e[21].name ? 'transparent' : '',
                    ),
                    I(L, 'rows', '3'),
                    I(
                        L,
                        'class',
                        (A =
                            'Romanization' === e[21].name
                                ? 'text-center'
                                : 'text-left'),
                    ),
                    (L.value = P = e[21].rules),
                    (L.readOnly = N = 'Romanization' === e[21].name),
                    M(
                        L,
                        'background-color',
                        'Romanization' === e[21].name ? 'transparent' : '',
                    ));
            },
            m(e, i) {
                (k(e, t, i),
                    v(t, n),
                    v(t, o),
                    k(e, a, i),
                    k(e, l, i),
                    v(l, c),
                    v(l, d),
                    k(e, p, i),
                    k(e, f, i),
                    v(f, g),
                    W.m(f, null),
                    k(e, m, i),
                    q && q.m(e, i),
                    k(e, b, i),
                    k(e, y, i),
                    k(e, w, i),
                    k(e, C, i),
                    v(C, S),
                    v(C, L),
                    k(e, $, i),
                    G && G.m(e, i),
                    k(e, R, i),
                    j ||
                        ((D = [
                            O(o, 'blur', F),
                            O(d, 'blur', H),
                            O(L, 'blur', V),
                        ]),
                        (j = !0)));
            },
            p(t, n) {
                ((e = t),
                    16 & n &&
                        r !== (r = e[21].name) &&
                        o.value !== r &&
                        (o.value = r),
                    16 & n &&
                        s !== (s = 'Romanization' === e[21].name) &&
                        (o.readOnly = s),
                    16 & n &&
                        M(
                            o,
                            'background-color',
                            'Romanization' === e[21].name ? 'transparent' : '',
                        ),
                    16 & n &&
                        h !== (h = e[21].font) &&
                        d.value !== h &&
                        (d.value = h),
                    16 & n &&
                        u !== (u = 'Romanization' === e[21].name) &&
                        (d.readOnly = u),
                    16 & n &&
                        M(
                            d,
                            'background-color',
                            'Romanization' === e[21].name ? 'transparent' : '',
                        ),
                    U === (U = z(e)) && W
                        ? W.p(e, n)
                        : (W.d(1), (W = U(e)), W && (W.c(), W.m(f, null))),
                    e[4].UseLects && 'ipa' === e[21].root
                        ? q
                            ? q.p(e, n)
                            : ((q = Dv(e)), q.c(), q.m(b.parentNode, b))
                        : q && (q.d(1), (q = null)),
                    16 & n &&
                        A !==
                            (A =
                                'Romanization' === e[21].name
                                    ? 'text-center'
                                    : 'text-left') &&
                        I(L, 'class', A),
                    16 & n && P !== (P = e[21].rules) && (L.value = P),
                    16 & n &&
                        N !== (N = 'Romanization' === e[21].name) &&
                        (L.readOnly = N),
                    16 & n &&
                        M(
                            L,
                            'background-color',
                            'Romanization' === e[21].name ? 'transparent' : '',
                        ),
                    'Romanization' !== e[21].name
                        ? G
                            ? G.p(e, n)
                            : ((G = Hv(e)), G.c(), G.m(R.parentNode, R))
                        : G && (G.d(1), (G = null)));
            },
            d(e) {
                (e && x(t),
                    e && x(a),
                    e && x(l),
                    e && x(p),
                    e && x(f),
                    W.d(),
                    e && x(m),
                    q && q.d(e),
                    e && x(b),
                    e && x(y),
                    e && x(w),
                    e && x(C),
                    e && x($),
                    G && G.d(e),
                    e && x(R),
                    (j = !1),
                    i(D));
            },
        };
    }
    function Uv(e) {
        let t,
            n,
            o,
            i = e[21].name + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[21].name),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (16 & r && i !== (i = e[21].name + '') && A(n, i),
                    16 & r &&
                        o !== (o = e[21].name) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Wv(t) {
        let n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            S,
            B,
            L,
            $,
            R,
            j,
            D,
            F,
            H,
            z,
            U,
            W,
            q,
            V,
            G,
            K = t[4].Orthographies,
            Y = [];
        for (let e = 0; e < K.length; e += 1) Y[e] = zv(Nv(t, K, e));
        let X = t[4].Orthographies,
            Z = [];
        for (let e = 0; e < X.length; e += 1) Z[e] = Uv(Mv(t, X, e));
        return {
            c() {
                ((n = E('div')), (o = E('div')), (r = E('div')));
                for (let e = 0; e < Y.length; e += 1) Y[e].c();
                ((s = _()),
                    (a = E('button')),
                    (a.textContent = 'New Orthography'),
                    (l = _()),
                    (c = E('div')),
                    (d = E('select')));
                for (let e = 0; e < Z.length; e += 1) Z[e].c();
                ((h = _()),
                    (u = E('label')),
                    (p = T('Test Input\n                ')),
                    (f = E('textarea')),
                    (g = _()),
                    (m = E('textarea')),
                    (y = _()),
                    (w = E('br')),
                    (S = _()),
                    (B = E('label')),
                    (L = T('Change Orthography\n                ')),
                    ($ = E('div')),
                    (R = T('Pattern: ')),
                    (j = E('input')),
                    (D = T('\n                    Replacement: ')),
                    (F = E('input')),
                    (H = _()),
                    (z = E('button')),
                    (z.textContent = 'Apply'),
                    (U = _()),
                    (W = E('span')),
                    (q = T(t[3])),
                    I(a, 'class', 'hover-highlight hover-shadow'),
                    I(r, 'class', 'column container scrolled'),
                    M(r, 'height', '92vh'),
                    void 0 === t[0] && ne(() => t[13].call(d)),
                    I(f, 'rows', '6'),
                    I(m, 'rows', '6'),
                    (m.value = b = t[15]()),
                    (m.readOnly = !0),
                    M(m, 'background-color', 'transparent'),
                    M(
                        m,
                        'font-family',
                        t[4].Orthographies.find(t[16])?.font || 'Gentium',
                    ),
                    I(j, 'type', 'text'),
                    I(F, 'type', 'text'),
                    M(W, 'color', 'red'),
                    I($, 'class', 'narrow'),
                    I(c, 'class', 'column container scrolled'),
                    M(c, 'height', '92vh'),
                    I(o, 'class', 'row'),
                    M(o, 'height', '100%'),
                    I(n, 'class', 'tab-pane'));
            },
            m(e, i) {
                (k(e, n, i), v(n, o), v(o, r));
                for (let e = 0; e < Y.length; e += 1) Y[e] && Y[e].m(r, null);
                (v(r, s), v(r, a), v(o, l), v(o, c), v(c, d));
                for (let e = 0; e < Z.length; e += 1) Z[e] && Z[e].m(d, null);
                (N(d, t[0], !0),
                    v(c, h),
                    v(c, u),
                    v(u, p),
                    v(u, f),
                    P(f, t[1]),
                    v(u, g),
                    v(u, m),
                    v(c, y),
                    v(c, w),
                    v(c, S),
                    v(c, B),
                    v(B, L),
                    v(B, $),
                    v($, R),
                    v($, j),
                    P(j, t[2].pattern),
                    v($, D),
                    v($, F),
                    P(F, t[2].replacement),
                    v($, H),
                    v($, z),
                    v($, U),
                    v($, W),
                    v(W, q),
                    V ||
                        ((G = [
                            O(a, 'click', t[12]),
                            O(d, 'change', t[13]),
                            O(f, 'input', t[14]),
                            O(j, 'input', t[17]),
                            O(F, 'input', t[18]),
                            O(z, 'click', t[19]),
                        ]),
                        (V = !0)));
            },
            p(e, [t]) {
                if (48 & t) {
                    let n;
                    for (K = e[4].Orthographies, n = 0; n < K.length; n += 1) {
                        const o = Nv(e, K, n);
                        Y[n]
                            ? Y[n].p(o, t)
                            : ((Y[n] = zv(o)), Y[n].c(), Y[n].m(r, s));
                    }
                    for (; n < Y.length; n += 1) Y[n].d(1);
                    Y.length = K.length;
                }
                if (16 & t) {
                    let n;
                    for (X = e[4].Orthographies, n = 0; n < X.length; n += 1) {
                        const o = Mv(e, X, n);
                        Z[n]
                            ? Z[n].p(o, t)
                            : ((Z[n] = Uv(o)), Z[n].c(), Z[n].m(d, null));
                    }
                    for (; n < Z.length; n += 1) Z[n].d(1);
                    Z.length = X.length;
                }
                (17 & t && N(d, e[0]),
                    2 & t && P(f, e[1]),
                    19 & t && b !== (b = e[15]()) && (m.value = b),
                    17 & t &&
                        M(
                            m,
                            'font-family',
                            e[4].Orthographies.find(e[16])?.font || 'Gentium',
                        ),
                    4 & t && j.value !== e[2].pattern && P(j, e[2].pattern),
                    4 & t &&
                        F.value !== e[2].replacement &&
                        P(F, e[2].replacement),
                    8 & t && A(q, e[3]));
            },
            i: e,
            o: e,
            d(e) {
                (e && x(n), C(Y, e), C(Z, e), (V = !1), i(G));
            },
        };
    }
    function qv(e, t, n) {
        let o;
        d(e, Kr, (e) => n(4, (o = e)));
        let i = '',
            r = '';
        const s = require('vex-js');
        let a = { pattern: '', replacement: '' },
            l = '';
        function c(e, t, n) {
            const i = e.target,
                r = i.value.trim();
            if ('name' === t) {
                if (
                    [r, ...o.Orthographies.filter((e) => e.name === r)].length -
                        1 >
                    1
                )
                    return (
                        s.dialog.alert('The name must be unique.'),
                        void (i.value = `New Orthography ${n}`)
                    );
                if ('' === r)
                    return (
                        s.dialog.alert('The name cannot be blank.'),
                        void (i.value = `New Orthography ${n}`)
                    );
            }
            h(Kr, (o.Orthographies[n][t] = r), o);
        }
        return [
            i,
            r,
            a,
            l,
            o,
            c,
            (e, t) => {
                c(t, 'name', e);
            },
            (e, t) => {
                c(t, 'font', e);
            },
            function (e, t) {
                ((e[t].root = $(this)), Kr.set(o));
            },
            function (e, t) {
                ((e[t].lect = $(this)), Kr.set(o));
            },
            (e, t) => {
                c(t, 'rules', e);
            },
            (e) => {
                h(
                    Kr,
                    (o.Orthographies = [
                        ...o.Orthographies.slice(0, e),
                        ...o.Orthographies.slice(e + 1),
                    ]),
                    o,
                );
            },
            () => {
                h(
                    Kr,
                    (o.Orthographies = [
                        ...o.Orthographies,
                        {
                            name: `New Orthography ${o.Orthographies.length}`,
                            font: 'Gentium',
                            root: 'ipa',
                            lect: o.Lects[0],
                            rules: '',
                            display: !0,
                        },
                    ]),
                    o,
                );
            },
            function () {
                ((i = $(this)), n(0, i));
            },
            function () {
                ((r = this.value), n(1, r));
            },
            () => {
                const e = xs(
                    o.Orthographies.find((e) => e.name === i)?.rules || '',
                );
                return ks(e.rules, r, e.categories);
            },
            (e) => e.name === i,
            function () {
                ((a.pattern = this.value), n(2, a));
            },
            function () {
                ((a.replacement = this.value), n(2, a));
            },
            () => {
                for (let e in o.Lexicon)
                    if (e.includes(a.pattern))
                        try {
                            let t = '#' + e + '#',
                                i = a.pattern.replaceAll('^', '#');
                            ((t = t.replaceAll(i, a.replacement)),
                                h(Kr, (o.Lexicon[t] = o.Lexicon[e]), o),
                                delete o.Lexicon[e],
                                n(3, (l = 'Change applied successfully.')));
                        } catch (e) {
                            (console.log(e),
                                n(
                                    3,
                                    (l =
                                        'An error occurred while applying the change. Please contact the developer for assistance and check the console.'),
                                ));
                        }
            },
        ];
    }
    class Vv extends Ee {
        constructor(e) {
            (super(), Ce(this, e, qv, Wv, s, {}));
        }
    }
    function Gv(e, t, n) {
        const o = e.slice();
        return ((o[4] = t[n]), o);
    }
    function Kv(e) {
        let t,
            n,
            o,
            i,
            r,
            s = e[4] + '';
        function a() {
            return e[3](e[4]);
        }
        return {
            c() {
                ((t = E('div')),
                    (n = T(s)),
                    (o = _()),
                    I(t, 'class', 'lex-entry'),
                    R(t, 'selected', e[4] === e[0]));
            },
            m(e, s) {
                (k(e, t, s),
                    v(t, n),
                    v(t, o),
                    i || ((r = O(t, 'mousedown', a)), (i = !0)));
            },
            p(n, o) {
                ((e = n), 5 & o && R(t, 'selected', e[4] === e[0]));
            },
            d(e) {
                (e && x(t), (i = !1), r());
            },
        };
    }
    function Yv(t) {
        let n,
            o,
            i,
            r,
            s,
            a = Wa(t[1][t[0]]) + '',
            l = t[2],
            c = [];
        for (let e = 0; e < l.length; e += 1) c[e] = Kv(Gv(t, l, e));
        return {
            c() {
                ((n = E('div')), (o = E('div')), (i = E('div')));
                for (let e = 0; e < c.length; e += 1) c[e].c();
                ((r = _()),
                    (s = E('div')),
                    I(i, 'class', 'column'),
                    M(i, 'max-width', '9vw'),
                    I(s, 'class', 'column scrolled'),
                    M(s, 'height', '100%'),
                    M(s, 'text-align', 'left'),
                    M(s, 'margin', '3em'),
                    M(s, 'margin-top', '0em'),
                    I(o, 'class', 'row'),
                    M(o, 'height', '100%'),
                    I(n, 'class', 'tab-pane container'),
                    M(n, 'height', '92vh'));
            },
            m(e, t) {
                (k(e, n, t), v(n, o), v(o, i));
                for (let e = 0; e < c.length; e += 1) c[e] && c[e].m(i, null);
                (v(o, r), v(o, s), (s.innerHTML = a));
            },
            p(e, [t]) {
                if (5 & t) {
                    let n;
                    for (l = e[2], n = 0; n < l.length; n += 1) {
                        const o = Gv(e, l, n);
                        c[n]
                            ? c[n].p(o, t)
                            : ((c[n] = Kv(o)), c[n].c(), c[n].m(i, null));
                    }
                    for (; n < c.length; n += 1) c[n].d(1);
                    c.length = l.length;
                }
                1 & t && a !== (a = Wa(e[1][e[0]]) + '') && (s.innerHTML = a);
            },
            i: e,
            o: e,
            d(e) {
                (e && x(n), C(c, e));
            },
        };
    }
    function Xv(e, t, n) {
        const o = {
                Lexicon:
                    "# The Lexicon Tab\nWhen you first open Lexicanter, you’ll find yourself on the Lexicon tab. This is the place where you will be adding words to your lexicon. This tab is composed of three panels: the alphabet panel, the editor panel, and the lexicon panel itself.\n\n## The Alphabet Panel\nUnder the tab navigation at the top of the app, you’ll see two checkboxes and the alphabet text input.\n### Alphabet Settings\n- Case Sensitivity will make letters case sensitive making the app alphabetize ‘A’ differently for ‘a’, for example.\n- Ignore Diacritics is on by default and turning it off will make the app alphabetize ‘a’ separately from ‘â’.\n### The Alphabet\nThe alphabet field is where you organize the alphabet of your conlang. This will determine the order of your words in the lexicon. Any letters or symbols you use in your words can be added here and will alphabetize the lexicon according to the order you write here. Each alphabetization token should be separated by a space: this way, it is possible to alphabetize multi-character tokens (ie 'sh') separately from single-character tokens and other multi-character tokens (ie 's', 'sz'). \n\n## Editor Panel\nBelow the Alphabet panel we have the Editor panel on the left, where you can add new words and edit existing words.\nIn the Editor panel, you’ll see three text boxes when using the default settings. There are some advanced settings which alter the appearance of this tab, which you can read about on other pages in this wiki. \n### New Word & Pronunciation\nThe text box under ‘New Word’ is where you type your new words. The intention is that you use your romanized orthography here, although technically this is not necessary. Under this text box is where the pronunciation will automatically fill in. Lexicanter automatically updates pronunciations in your lexicon based on rules you can specify in the Phonology tab. See [Pronunciation Rules](https://github.com/Saturnine-Softworks/Lexicanter/wiki/Pronunciation-Rules) to read up on how to write these. \n### Irregular Pronunciations\nIf the pronunciation is manually altered, it will not automatically update unless the word itself is edited, so keep this in mind when making manual changes.\n\n### Definitions and Senses\nThe next text field is for the definition of the word. If the word has multiple definitions, you may write all of them in this first text box if you wish; however, Lexicanter offers a way you can format multiple definitions separately. By clicking the ‘Add Sense’ button, you can create another set of text boxes for another definition and its tags. \n\n### Tags\nTags are a useful way to organize and filter through the words in your lexicon, and they can also be utilized by advanced users for setting up automatic inflection tables. Each sense of a word is allowed to have its own set of tags. Tags are arbitrary space-separated terms which will appear above the sense definition in the lexicon, and can be searched by. One advantage to using multiple senses for separate definitions is that they can each have their own tags. \n\n## Lexicon Panel\n### Adding and Editing Words\nClicking the ‘Add Word’ button will add your new word to the lexicon on the right.\nIf you attempt to add a word that already exists, you will be given the option to ‘overwrite’ or ‘append the definition’ to the existing word. To edit the word, right-click on it in the lexicon panel. \n\n### Searching\nIn the lexicon panel, there are three text boxes along the top. These are the lexicon’s search functions. You can search the lexicon for specific words, definitions, and tags. \n\nThere are some special functions which can be applied to help find specific entries. The character `^` means *word boundary*. \nSearching for `^an` will only show results which *start* with 'an', and searching `an^` will only show results that *end* with 'an'. Just searching 'an' will show results which have 'an' anywhere in the word. \nIn both the tags and definition searches, you can prefix your search with `!` to only show results which have your search term as a whole word. For example, searching for the tag `culture` will also show words tagged 'agriculture' and 'horticulture', but searching for `!culture` will only show words tagged 'culture'. \n",
                Phrasebook:
                    '# Phrasebook Tab\nLexicanter’s Phrasebook feature allows you to add phrases with all the features of the main Lexicon. When opening the Phrasebook tab, you’ll see three panels. At the left are the Categories where you can organize your phrases; to the right is where your phrases will be displayed depending on what category is selected; and at the bottom is where you can add and edit phrases.\n\nWhen adding new phrases, it functions the same as the Lexicon tab. On the bottom left, when the phrase is added it will have pronunciation rules applied automatically. You can add the definition and tags to organize it even further. Under that is a fourth textbox to enter the category of the phrase. This can be a single or multi-word phrase. If you are already viewing the phrases in a category, this text box will be filled in for you.\n\nOn the right side of the phrase editor panel, you can add variants - or other versions - of the new phrase. You can add as many variants as needed.\nThe ‘Add Phrase’ button will add the new phrase, as well as the category if it is not already present.\nOn the top right panel, there are search functions just like in the Lexicon tab and can be used to search the Phrasebook.\n',
                Documenting:
                    "# The Documentation Tab\nWhen you first open the Documentation tab, you’ll notice that it is empty save for a single line of text and a `+` on the far right. This tab can be used to add details about your conlang using text and tables. When you click on the `+`, you’ll see three options: Text, Heading, and Table. Clicking any of these will create the corresponding block section.\n\n## Tools for Documenting Your Language\n### Headings\nA heading will place your cursor and all you need to do is type. A large, bold font will be used by default. To the left of that new text, you’ll see a `+` and a new button with 6 dots. Clicking this will give you the option to fine tune that section of text. You can change the heading type, move it up or down and delete it entirely.\n\n### Paragraphs and Formatting\nClicking the `+` again will give you the options for other sections to add, such as a paragraph section. Additionally, in any type of block, you can highlight text to apply a range of styles to it, such as italics, bolding, underlining, and hyperlinking. If you wish to have linebreaks within the same paragraph block, you can press Shift+Enter. Pressing Enter alone will make a create a new paragraph block.\n\n### Tables\nThe last type of section to add is the table. When you first add it, there will be three rows and three columns. You can click the `+`’s just right and to the bottom of the table to add new rows or columns. Hovering over a specific table cell will bring up a button with 4 dots, which can be used to add rows above/below, columns to the left/right or to delete an entire row or column. For fine tuning the table, you have two different options along with the standard move up/down and delete: 'With headings' and 'Without headings'. By default, the table is set to 'Without headings'. Selecting 'With headings' will make the text in the top row of cells bold, and add a slightly thicker border to the bottom of that row.\nTo navigate rows and columns within the table, you can use the arrow keys to go left and right, the Enter key to go directly down, or simply click in the cell you want to edit.\n",
                'Pronunciation Rules':
                    "# The Sound Change Engine\nLexicanter uses a custom-built sound change engine to allow you to configure automatic orthography to phonetic notation conversion.\n\nIf you're not familiar with sound change appliers, you might be lost here, and if you *are* familiar with sound change appliers, you might be wondering how such a thing is supposed to be used to convert your romanization to IPA. In any case, let's start from the beginning. \n\n## The Basics\n### Defining Rules\nLet's say you write the phoneme /θ/ as ⟨th⟩. To convert your *orthograph* ⟨th⟩ to *phonetic notation* /θ/, we can use a rule. \n```\nth > θ\n```\n### Using Contexts\nThis is straightforward enough. ⟨th⟩ becomes /θ/. But what if /θ/ only occurs before front-vowels, and everywhere else it's /tʰ/. How would we write a rule to accomodate for this? One way is to use a *context*. \n```\nth > θ / _e\nth > θ / _i\nth > tʰ\n```\n### Anonymous Categories\nNow we're telling it only to turn ⟨th⟩ into /θ/ if it comes before /e/ or /i/. But this is a little bulky; we can condense these rules. \n```\nth > θ / _{e, i}\nth > tʰ\n```\nThese two rules do the exact same thing as the last set, but now we're using an *anonymous category* `{e, i}` to mean 'either e or i'. \n### Named Categories\nBut let's say we have several rules which make use of the same anonymous category:\n```\nth > θ / _{e, i}\nth > tʰ\nc > s / _{e, i}\nc > k\ng > ʤ / _{e, i}\n```\nWe can avoid writing `{e, i}` a bunch of times by defining a *named category*. \n```\nE :: e, i\nth > θ / _E\nth > tʰ\nc > s / _E\nc > k\ng > ʤ / _E\n```\nThat's a little better. \n### Category Conversion\nBut several of these rules are very similar. There's something we can do about that:\n```\nE :: e, i\n{th, c, g} > {θ, s, ʤ} / _E\n{th, c} > {tʰ, k}\n```\nWe can create anonymous categories of equal length on both sides of the conversion in order to convert between them. We can also do this with named categories, if we prefer:\n```\nP :: th, c, g\nF :: θ, s, ʤ\nK :: tʰ, k, g\nE :: e, i\nP > F / _E\nP > K\n```\nThis takes up a few more lines, but now we can re-use these named categories in further rules should we need to. \n\n## Advanced Usage\nNow that we understand the basics, let's look at how Lexicanter's sound change engine can deal with common and important edge cases.\n\n### Alternate Rule Formats\nBefore we get into those, though, let's briefly talk about the rule format. On this page, I've been using the formats\n```\npattern > substitution\npattern > substitution / context\n```\nIn the first case, the implicit context is just `_`, or 'always'. \nBut many of you may be familiar with another standard sound change notation format:\n```\npattern/substitution/context\n```\nLexicanter accepts rules written this way as well. In fact, all of the following are valid and will be accepted:\n```\npattern>substitution\npattern / substitution\npattern/substitution / context\npattern  > substitution/context\n```\nThe rule parser ignores all spaces, and the implicit 'always' context shorthand can be done with either `>` or `/` rules.\n\n### Word Boundaries\nOften times, the pronunciation of a grapheme changes depending on whether or not it's at the beginning or end of a word. Lexicanter reserves two symbols for this purpose: `^` and `#`. Both of them have the exact same purpose, and which one you use is a matter of personal preference. I'll be using `^`. \n\nTurn ⟨e⟩ into /ə/ at the end of words:\n```\ne > ə / _^\n```\nTurn ⟨y⟩ to /ɪ/ at the beginning of words:\n```\ny > ɪ / ^_\n```\n\n### Exceptions\nSometimes a grapheme has a pronunciation in all except a specific case. \nFor example, this rule turns all ⟨x⟩ into /ks/ as long as they are preceded by anything except /e/ or /i/:\n```\nx > ks / {!e, i}_\n```\nNote that this does assume `{!e}` must be *some* character, just not the ones in the group. If you would like to make this rule also apply at word boundaries, you can write it as so:\n```\nx > ks / {^, {!e, i}}_\n```\nor write it as two rules:\n```\nx > ks / {e, i}_\nx > ks / ^_\n```\nThere are usually multiple ways to get things to happen. \n\n### Wildcards\nSometimes, you just need to specify *any character at all* must be in a certain position. For that, another character is reserved: `.`.\nThe following rules turns ⟨h⟩ to /ç/ when it comes before /u/ and two other character:\n```\nh > ç / _u..\n```\nOther times, you may need to specify that any number of certain characters can appear. Two more symbols are reserved: `*` for 0 or more and `+` for 1 or more. \nThe following rule turns ⟨y⟩ to /i/ when it comes before any number of optional /d/ and at least one /o/ before the end of a word:\n```\ny > i / _ d* o+ ^\n```\nThese two symbols can also be used with categories. Note that the spaces here will be ignored and are just for readability; the parser ignores all spaces.\n\n### Optional Members\nThere is also a way to specify that something is optional without necessarily being allowed to repeat indefinitely. The character `?` is reserved for this.\nThe following rule changes ⟨n⟩ to /ŋ/ before a single optional /g/ or /k/ followed by the end of the word. \n```\nn > ŋ / _ {g, k}? ^\n```\nAs you can see, this works with categories as well. \n\n### Reduplication\nIn rare cases, a grapheme or sequence of graphemes may always be pronounced multiple times. For these cases, we can use `_` in the substitution to represent the entire captured pattern.\nThis is also useful in some cases for auto-inflection rules. \nThe following rule turns /er/ into /erer/ wherever it comes in the middle of a word:\n```\ner > __ / ._.\n```\n\n### Prefixes & Suffixes\nWhen writing rules for auto-inflections, you may need to add prefixes and suffixes to a word. You can write such rules using an insertion format. (For these, `#` typically looks better than `^`). \nAdds a suffix:\n```\n/ate/._#\n```\nAdds a prefix:\n```\n/eta/#_.\n```\nAlternatively, you can replace the word boundary itself. Equivalent to the rules above:\n```\n# > ate / ._\n# > eta / _.\n```",
                'Word Generator':
                    "# Generator Modes\nThe word generator in this app has two modes. The first is designed to be as straightforward as possible, while the second mode is more complex, but also much more powerful.\n\n## Basic Phonotactics\nThere are fields for what consonants and clusters can go word-initially, medially, finally, as well as vowels and polyphthongs are available, and what sounds should never appear next to one another. The Trial Words field will try to autocomplete a word as you type based on those simple rules, and the Generate Words button will make around 24 fresh words. \n\n## Advanced Phonotactics\nAt the top of the word generator, there is a checkbox labelled Use Advanced Phonotactics. Checking it will switch the UI below it to an entirely different set-up (this does *not* delete any information you have in the default fields).\n\n### Categories\nThe first of these new fields is the Categories field. Here, you can define groups of sounds as you wish. The format is as follows in this example:\n```\nC:: m n p b t d k g f v l r th sh\nV:: a e i o u ai au ei eu oi ou\n```\nNote that each token is space-separated, unlike categories in the pronunciation rules (which are comma-separated). You can have multiple-character length tokens here. It's up to you whether to use IPA or your romanization/other orthography here.\n\n### Syllables\nThe next field is for defining, as you might guess, syllables. There are two ways you can do this. The first way is to simply write out all the allowed syllables line by line, such as\n```\nV\nCV\nClV\nCVC\nClVC\n```\nNote that non-category symbols used here are interpreted literally (the `l`'s in the above example will actually just be `l`'s).\n\nThe second way is to define categories of syllables: this will be useful for the next step, so we'll try that out. \n```\nS:: V CV ClV\n1:: o Co a Ca\n2:: ete Cete Clete\n```\n\n### Structures\nWords in your language usually aren't actually allowed to freely follow generic phonotactic rules. You usually have some sort of morphological rules as well, such as all verbs having specific endings, nouns genders being marked, et cetera. Structures allow you to fully control how syllables are put together to form words. Let's start with a set for nouns that all end in `o` or `a`. \n```\nS1 SS1 SSS1\n```\nThat's it, for this simple example. All of the generated words will be 2 to 4 syllables and end in `o` or `a`. Let's now add a new set of structures by clicking the Add Set button and create a set for our verbs. \n```\n1S2 1SS2 1SSS2\n```\nIn this hypothetical language, all verbs start with a gendered prefix and end with `-ete`. Now we can generate that.\n\nLet's say we only want to have one of these sets active at a time. You can click on the checkboxes next to each set to toggle them, and when you click the Generate Words button, only the structures in enabled sets will be selected from. If you create too many sets, the `-` button next to each one will delete it. You can't delete your last set, but if all of your structure sets are empty or disabled, the word generator will just construct 1-4 syllable words composed of random syllable types from your syllables field. \n\n### Illegals\nIf there are specific sounds that should never appear next to each other, this is the place to specify those.\n```\nji wu mn ou ao\n```\nAgain, space-separated tokens. \n\nBecause it's possible to accidentally (or perhaps intentionally) ban *all* of your syllables this way, the app will only try to come up with a word that doesn't have any illegals in it 20 times. If it fails, it will show `[ ∅ ]`. If you see this show up when you try to generate words, it means that it tried and failed to generate a legal word 20 times.",
                Lects: "# What is a 'Lect'? \nThe term 'lect' refers agnostically to any kind of variation of a language that may be classified as a dialect, ethnolect, regiolect, cryptolect, idiolect, et cetera. Lexicanter offers a suite of features which make it easier to document your language's various lects, should you have any. \n\n## Adding, Removing, and Renaming\n### Adding\nAdding new lects can always be done safely, as adding a new lect does not change the contents of the lexicon. When you add a lect, you will be prompted to name it. Then its name will appear in a list under the other lect-related settings, with three buttons. One of these is for deleting the lect, one of these is for renaming the lect, and one of these has a special purpose: adding all words in your lexicon to this lect. This is a useful features if you create a new lect midway through developing your language which should have all or most of the existing words. \n\n### Renaming\nRenaming lects can also always be done safely, as this does not actually change the contents of the lexicon aside from the name which appears next to options and information related to the changed lect.\n\n### Removing\nRemoving lects *does not* delete the words which were assigned to that lect, but it *does* delete any pronunciations and the pronunciation rule set associated with that lect. You cannot delete the last remaining lect; there must always be at least one. Even when lect features are disabled, the app uses a lect named 'General' under the hood. \n\n## Phonetics & Semantics\n### Lect-Specific Pronunciation Rules\nThis is likely the main reason you would want to use the lect features. Each lect can have it own set of pronunciation rules, which you can write by selecting the lect from the dropdown which appears over the Pronunciations text field in the Phonology tab. To learn more about writing pronunciation rules, see the [Pronunciation Rules](https://github.com/Saturnine-Softworks/Lexicanter/wiki/Pronunciation-Rules) page. \n\n### Lexicon and Phrasebook\nIn both of these tabs, a new set of checkboxes will appear in the entry editor panel. In the Lexicon, this set of checkboxes appears for every *sense* of a word; in the phrasebook, you have this option for each *phrase*.\nChecking these boxes assigns that sense/phrase to that lect. A new pronunciation field will appear for each lect which is selected, and will be auto-filled using the pronunciation rules assigned to that lect. All of a word or phrase's pronunciations will appear beneath it in the lexicon/book. This way, you can include words and phrases which only appear in specific lects. \n",
                Etymology:
                    "# Creating Etymology Trees\nWhen you enable Etymology Features under Advanced Settings, Lexicanter will reveal to you a new tab called *Etymology* and slightly change the appearance of entries in the lexicon. These features are a powerful and convenient way to document the lineages of your language's words. \n\n## The Etymology Tab\nYou'll be greeted by a small panel on the left with a search bar and two lists, labelled *Internal* and *External*. If this is your first time opening this tab, *External* is probably empty. We'll get back to that. \n\n*Internal* will be populated by a list of all of the words in your lexicon. If you click on one of these, you'll see the large panel on the left is updated. The word you clicked on will appear floating in the upper-middle of the panel, and its lexicon entry will appear slightly below. Further below, there are two columns, labelled *Ancestors* and *Descendants*, each with a checkbox labelled *Manual Entry*, unticked by default, and below that, a blank dropdown.\n\n### Editing Ancestor and Descendant Tethers\nWhen you click on either of those dropdowns, you'll be greeted with, once again, your entire lexicon. You should be able to use the keyboard to navigate this list, but since some lexicons can be massive and overwhelming, the search field at the top of the left-hand panel narrows down not only the list in that column, but also the lists you see in the dropdowns on this tab. \nAfter selecting a word from your lexicon, pressing the *Link* button will link the currently selected word to the ancestor/descendant word. As you add more ancestors and descendants, you'll see how the tree graph is drawn in this panel. \nTo remove a word from another words ancestors/descendants, find it in the list which appears in the respective column and click the *Sever* button to sever the tie. \n\n### Manual Entry\nIn many cases, you'll need to link to a word which is not in your lexicon. It may be from an ancestor language, or even from an unrelated language. For these cases, you can enable *Manual Entry*. \nWhen Manual Entry is enabled, you will see two text fields instead of a dropdown. The first of these text fields is for the related word itself, and the other text field is for specifying the *source* – that is, what language the word comes from. \nWhen you create entries this way, they will appear in the *External* list in the left-hand panel. External words also appear in the drop-downs after they are created. \n\n### Removing Etymology Entries\nWhen a word is selected, but it has no ancestor or descendant tethers, a button will appear that allows you to delete the entry altogether. \nFor words in your lexicon, this will *not delete the word from your lexicon* - it will simply clear the space for its etymology data out of the file data. This has no permanent effect, as you can select the word from the list to create its etymology entry again, but it may help to put at ease those of you who are particularly conscious about your file sizes. \nFor external entries, this *will delete* the entry altogether. This is how you can remove words from the *External* list in the left-hand panel. \n\n## Importing Related Lexicons\nWhen Etymology features are enabled, another option will appear in the Advanced Settings section: a button which allows you to import related lexicons. Using this button, you can select another Lexicanter file to import a lexicon from. The entirety of the lexicon will be saved to your *External* etymology entries. You can manage the external lexicons in your file under Advanced Settings.\n\n## Lexicon Appearance Changes\nOn every lexical entry which is part of an etymology tree, a short, simplified version of that word's ancestry will appear beneath its senses. This makes it easy to see a word's history at a glance when viewing your lexicon. \n",
                Inflections:
                    "# Inflection Features\nLexicanter offers a way to expand your lexical entries with inflection information automatically generated from sound change rules.\nIt's a useful feature for generating verb conjugation tables, noun declension tables, and the like. This feature must be enabled under\nAdvanced Settings.\n\n## The Inflection Tab\nWhen you first open this tab, there will be a single button which reads 'Add Inflection Group'.\nWhen you click on this, an inflection group editor will be created. It has two text fields: the first is labelled 'Tags',\nand the second is labelled 'RegEx Filter' and should be pre-populated with `.+`. Below that, there will be a block-based\neditor similar to what is used in the Documentation tab.\n\n### Tags\nThe tags you assign to an inflection group should correspond to tags that you use in the lexicon. For example, if this inflection\ngroup is for verbs and you've marked verbs in the lexicon with the tag `verb`, you should put that tag here. The inflection group \nwill only be applied to lexical entries with tags that match the inflection group's own tags. You can use multiple tags if you wish, \nand the inflection group will be applied to any entry that has at least one of those tags. \n\n### RegEx Filter\nYou can write a regular expression to filter which words the inflection group is applied to even further. If you're unfamiliar with regular \nexpressions, you can read up on them [here](https://www.regular-expressions.info). Some basic patterns will be described here. \nAs an example, let's say that, like in Spanish, your verbs end in -ar, -er, and -ir, and there is a different set of conjugations depending \non which ending the verb has, but in the lexicon, each kind of verb has the same 'verb' tag. You can target your inflection group toward only \n-ar verbs by writing the following RegEx filter:\n```regex\n^.+ar$\n```\nNow this inflection group will only apply to words which have the 'verb' tag *and* end in -ar.\n\n### Editor\nYou can write whatever you want in the editor. You have headings, paragraphs, tables, and document markup at your disposal. However, \nthere is a key difference between this and the Documentation tab editor: the app will check through the table cells of all tables in your \ninflection group when it applies the inflection group to a word, and if the table cell has a sound change rule in it, it will replace the\ncontents of that cell with the word and apply the rule to it. So for example, if a table has a cell in it with the rule\n```\nar > o / _^\n```\nThen in the lexicon tab, on the word *hablar*, that cell will be replaced with 'hablo'. Cells which do not have `/` or `>` in them are ignored. \nTo learn more about writing sound change rules in Lexicanter, read the \n[Pronunciation Rules](https://github.com/Saturnine-Softworks/Lexicanter/wiki/Pronunciation-Rules) page. \n\n## In the Lexicon\nAfter creating inflection groups, a dropdown labelled 'Inflections' will appear in the lexical entries underneath the senses to \nwhich that inflection group applies. \n\n## Agenda\nSeveral improvements are planned for the Inflections features, including a way to specify irregulars and a UI-based way to filter \nwords instead of requiring the user to manually write RegEx filters (although that will remain an option for advanced users). \n        ",
            },
            i = Object.keys(o);
        let r = i[0];
        return [r, o, i, (e) => n(0, (r = e))];
    }
    class Zv extends Ee {
        constructor(e) {
            (super(), Ce(this, e, Xv, Yv, s, {}));
        }
    }
    function Jv(e, t, n) {
        const o = e.slice();
        return ((o[13] = t[n]), o);
    }
    function Qv(e, t, n) {
        const o = e.slice();
        return ((o[16] = t[n]), o);
    }
    function ey(e) {
        let t;
        return {
            c() {
                ((t = E('label')),
                    (t.textContent = 'Search by word…'),
                    I(t, 'for', 'ref-search-wrd'),
                    M(t, 'position', 'absolute'),
                    M(t, 'top', '0.5em'),
                    M(t, 'left', '1em'));
            },
            m(e, n) {
                k(e, t, n);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function ty(e) {
        let t;
        return {
            c() {
                ((t = E('label')),
                    (t.textContent = 'Search by tags…'),
                    I(t, 'for', 'ref-search-tag'),
                    M(t, 'position', 'absolute'),
                    M(t, 'top', '0.5em'),
                    M(t, 'left', '1em'));
            },
            m(e, n) {
                k(e, t, n);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function ny(e) {
        let t;
        return {
            c() {
                ((t = E('label')),
                    (t.textContent = 'Search definitions…'),
                    I(t, 'for', 'ref-search-def'),
                    M(t, 'position', 'absolute'),
                    M(t, 'top', '0.33em'),
                    M(t, 'left', '1em'));
            },
            m(e, n) {
                k(e, t, n);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function oy(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l = e[0].Lects,
            c = [];
        for (let t = 0; t < l.length; t += 1) c[t] = iy(Qv(e, l, t));
        return {
            c() {
                ((t = E('div')),
                    (n = E('label')),
                    (o = T('Filter by lect: \n                ')),
                    (i = E('select')),
                    (r = E('option')),
                    (r.textContent = 'All'));
                for (let e = 0; e < c.length; e += 1) c[e].c();
                ((r.__value = ''),
                    (r.value = r.__value),
                    void 0 === e[5] && ne(() => e[11].call(i)),
                    I(t, 'class', 'column'));
            },
            m(l, d) {
                (k(l, t, d), v(t, n), v(n, o), v(n, i), v(i, r));
                for (let e = 0; e < c.length; e += 1) c[e] && c[e].m(i, null);
                (N(i, e[5], !0), s || ((a = O(i, 'change', e[11])), (s = !0)));
            },
            p(e, t) {
                if (1 & t) {
                    let n;
                    for (l = e[0].Lects, n = 0; n < l.length; n += 1) {
                        const o = Qv(e, l, n);
                        c[n]
                            ? c[n].p(o, t)
                            : ((c[n] = iy(o)), c[n].c(), c[n].m(i, null));
                    }
                    for (; n < c.length; n += 1) c[n].d(1);
                    c.length = l.length;
                }
                33 & t && N(i, e[5]);
            },
            d(e) {
                (e && x(t), C(c, e), (s = !1), a());
            },
        };
    }
    function iy(e) {
        let t,
            n,
            o,
            i = e[16] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[16]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (1 & r && i !== (i = e[16] + '') && A(n, i),
                    1 & r &&
                        o !== (o = e[16]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function ry(e) {
        let t,
            n,
            o,
            i,
            r = e[0].Name + '';
        return {
            c() {
                ((t = E('p')),
                    (n = T('The lexicon of ')),
                    (o = T(r)),
                    (i = T(' is empty.')),
                    I(t, 'class', 'info'),
                    I(t, 'id', 'ref-lex-body'));
            },
            m(e, r) {
                (k(e, t, r), v(t, n), v(t, o), v(t, i));
            },
            p(e, t) {
                1 & t && r !== (r = e[0].Name + '') && A(o, r);
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function sy(e) {
        let t, n;
        return (
            (t = new dl({
                props: {
                    word: e[13],
                    source: e[0].Lexicon[e[13]],
                    showInflections: e[0].ShowInflection,
                    showEtymology: !0,
                },
            })),
            {
                c() {
                    ye(t.$$.fragment);
                },
                m(e, o) {
                    (we(t, e, o), (n = !0));
                },
                p(e, n) {
                    const o = {};
                    (2 & n && (o.word = e[13]),
                        3 & n && (o.source = e[0].Lexicon[e[13]]),
                        1 & n && (o.showInflections = e[0].ShowInflection),
                        t.$set(o));
                },
                i(e) {
                    n || (fe(t.$$.fragment, e), (n = !0));
                },
                o(e) {
                    (ge(t.$$.fragment, e), (n = !1));
                },
                d(e) {
                    ke(t, e);
                },
            }
        );
    }
    function ay(e) {
        let t,
            n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            S,
            T = !e[2] && ey(),
            B = !e[3] && ty(),
            L = !e[4] && ny(),
            A = e[0].UseLects && oy(e),
            N = e[1],
            $ = [];
        for (let t = 0; t < N.length; t += 1) $[t] = sy(Jv(e, N, t));
        const R = (e) =>
            ge($[e], 1, 1, () => {
                $[e] = null;
            });
        let j = null;
        return (
            N.length || (j = ry(e)),
            {
                c() {
                    ((t = E('div')),
                        (n = E('div')),
                        T && T.c(),
                        (o = _()),
                        (r = E('input')),
                        (s = _()),
                        (a = E('div')),
                        B && B.c(),
                        (l = _()),
                        (c = E('input')),
                        (d = _()),
                        (h = E('div')),
                        (u = E('div')),
                        L && L.c(),
                        (p = _()),
                        (f = E('input')),
                        (g = _()),
                        A && A.c(),
                        (m = _()),
                        (b = E('div')));
                    for (let e = 0; e < $.length; e += 1) $[e].c();
                    (j && j.c(),
                        I(r, 'id', 'ref-search-wrd'),
                        I(r, 'type', 'text'),
                        I(r, 'class', 'search'),
                        I(n, 'class', 'column search-container'),
                        I(c, 'id', 'ref-search-tag'),
                        I(c, 'type', 'text'),
                        I(c, 'class', 'search'),
                        I(a, 'class', 'column search-container'),
                        I(t, 'class', 'row'),
                        I(f, 'id', 'ref-search-def'),
                        I(f, 'type', 'text'),
                        I(f, 'class', 'search'),
                        I(u, 'class', 'search-container column'),
                        I(h, 'class', 'row'),
                        I(b, 'class', 'scrolled'),
                        M(b, 'height', '88%'));
                },
                m(i, x) {
                    (k(i, t, x),
                        v(t, n),
                        T && T.m(n, null),
                        v(n, o),
                        v(n, r),
                        P(r, e[2]),
                        v(t, s),
                        v(t, a),
                        B && B.m(a, null),
                        v(a, l),
                        v(a, c),
                        P(c, e[3]),
                        k(i, d, x),
                        k(i, h, x),
                        v(h, u),
                        L && L.m(u, null),
                        v(u, p),
                        v(u, f),
                        P(f, e[4]),
                        v(h, g),
                        A && A.m(h, null),
                        k(i, m, x),
                        k(i, b, x));
                    for (let e = 0; e < $.length; e += 1)
                        $[e] && $[e].m(b, null);
                    (j && j.m(b, null),
                        (y = !0),
                        w ||
                            ((S = [
                                O(r, 'input', e[8]),
                                O(r, 'input', e[6]),
                                O(c, 'input', e[9]),
                                O(c, 'input', e[6]),
                                O(f, 'input', e[10]),
                                O(f, 'input', e[6]),
                            ]),
                            (w = !0)));
                },
                p(e, [t]) {
                    if (
                        (e[2]
                            ? T && (T.d(1), (T = null))
                            : T || ((T = ey()), T.c(), T.m(n, o)),
                        4 & t && r.value !== e[2] && P(r, e[2]),
                        e[3]
                            ? B && (B.d(1), (B = null))
                            : B || ((B = ty()), B.c(), B.m(a, l)),
                        8 & t && c.value !== e[3] && P(c, e[3]),
                        e[4]
                            ? L && (L.d(1), (L = null))
                            : L || ((L = ny()), L.c(), L.m(u, p)),
                        16 & t && f.value !== e[4] && P(f, e[4]),
                        e[0].UseLects
                            ? A
                                ? A.p(e, t)
                                : ((A = oy(e)), A.c(), A.m(h, null))
                            : A && (A.d(1), (A = null)),
                        3 & t)
                    ) {
                        let n;
                        for (N = e[1], n = 0; n < N.length; n += 1) {
                            const o = Jv(e, N, n);
                            $[n]
                                ? ($[n].p(o, t), fe($[n], 1))
                                : (($[n] = sy(o)),
                                  $[n].c(),
                                  fe($[n], 1),
                                  $[n].m(b, null));
                        }
                        for (ue(), n = N.length; n < $.length; n += 1) R(n);
                        (pe(),
                            !N.length && j
                                ? j.p(e, t)
                                : N.length
                                  ? j && (j.d(1), (j = null))
                                  : ((j = ry(e)), j.c(), j.m(b, null)));
                    }
                },
                i(e) {
                    if (!y) {
                        for (let e = 0; e < N.length; e += 1) fe($[e]);
                        y = !0;
                    }
                },
                o(e) {
                    $ = $.filter(Boolean);
                    for (let e = 0; e < $.length; e += 1) ge($[e]);
                    y = !1;
                },
                d(e) {
                    (e && x(t),
                        T && T.d(),
                        B && B.d(),
                        e && x(d),
                        e && x(h),
                        L && L.d(),
                        A && A.d(),
                        e && x(m),
                        e && x(b),
                        C($, e),
                        j && j.d(),
                        (w = !1),
                        i(S));
                },
            }
        );
    }
    function ly(e, t, n) {
        let o, i, r;
        d(e, as, (e) => n(7, (o = e)));
        let s = '',
            a = '',
            l = '',
            c = '',
            h = {};
        return (
            (e.$$.update = () => {
                129 & e.$$.dirty && (n(0, (i = o)), n(1, (r = vs(i.Lexicon))));
            }),
            [
                i,
                r,
                s,
                a,
                l,
                c,
                function () {
                    h = {};
                    for (let e in i.Lexicon)
                        `^${e}^`.toLowerCase().includes(s.toLowerCase()) &&
                            i.Lexicon[e].Senses.some((e) =>
                                e.tags
                                    .join('^')
                                    .toLowerCase()
                                    .includes(a.toLowerCase()),
                            ) &&
                            i.Lexicon[e].Senses.some((e) =>
                                e.definition
                                    .toLowerCase()
                                    .match(
                                        new RegExp(
                                            l.replaceAll('^', '\\b'),
                                            'gi',
                                        ),
                                    ),
                            ) &&
                            ('' === c ||
                                i.Lexicon[e].Senses.some((e) =>
                                    e.lects.includes(c),
                                )) &&
                            (h[e] = i.Lexicon[e]);
                    n(1, (r = vs(h)));
                },
                o,
                function () {
                    ((s = this.value), n(2, s));
                },
                function () {
                    ((a = this.value), n(3, a));
                },
                function () {
                    ((l = this.value), n(4, l));
                },
                function () {
                    ((c = $(this)), n(5, c), n(0, i), n(7, o));
                },
            ]
        );
    }
    class cy extends Ee {
        constructor(e) {
            (super(), Ce(this, e, ly, ay, s, {}));
        }
    }
    function dy(e, t, n) {
        const o = e.slice();
        return ((o[11] = t[n]), o);
    }
    function hy(e, t, n) {
        const o = e.slice();
        return ((o[11] = t[n]), o);
    }
    function uy(e) {
        let t,
            n,
            o,
            i = e[11] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[11]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (64 & r && i !== (i = e[11] + '') && A(n, i),
                    64 & r &&
                        o !== (o = e[11]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function py(e) {
        let t,
            n,
            o,
            i = e[11] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[11]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (32 & r && i !== (i = e[11] + '') && A(n, i),
                    32 & r &&
                        o !== (o = e[11]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function fy(e) {
        let t, n;
        return (
            (t = new dl({
                props: {
                    word: e[1],
                    source: e[0].Lexicon[e[1]],
                    showInflections: e[0].ShowInflection,
                    showEtymology: !0,
                },
            })),
            {
                c() {
                    ye(t.$$.fragment);
                },
                m(e, o) {
                    (we(t, e, o), (n = !0));
                },
                p(e, n) {
                    const o = {};
                    (2 & n && (o.word = e[1]),
                        3 & n && (o.source = e[0].Lexicon[e[1]]),
                        1 & n && (o.showInflections = e[0].ShowInflection),
                        t.$set(o));
                },
                i(e) {
                    n || (fe(t.$$.fragment, e), (n = !0));
                },
                o(e) {
                    (ge(t.$$.fragment, e), (n = !1));
                },
                d(e) {
                    ke(t, e);
                },
            }
        );
    }
    function gy(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d,
            h = e[6],
            u = [];
        for (let t = 0; t < h.length; t += 1) u[t] = uy(hy(e, h, t));
        let p = e[5],
            f = [];
        for (let t = 0; t < p.length; t += 1) f[t] = py(dy(e, p, t));
        ((r = new Ql({ props: { tree: e[2], width: e[3], height: e[4] } })),
            r.$on('select', e[9]));
        let g = e[1] in e[0].Lexicon && fy(e);
        return {
            c() {
                ((t = E('select')), (n = E('optgroup')));
                for (let e = 0; e < u.length; e += 1) u[e].c();
                o = E('optgroup');
                for (let e = 0; e < f.length; e += 1) f[e].c();
                ((i = _()),
                    ye(r.$$.fragment),
                    (s = _()),
                    g && g.c(),
                    (a = B()),
                    I(n, 'label', 'Internal'),
                    I(o, 'label', 'External'),
                    void 0 === e[1] && ne(() => e[8].call(t)));
            },
            m(h, p) {
                (k(h, t, p), v(t, n));
                for (let e = 0; e < u.length; e += 1) u[e] && u[e].m(n, null);
                v(t, o);
                for (let e = 0; e < f.length; e += 1) f[e] && f[e].m(o, null);
                (N(t, e[1], !0),
                    k(h, i, p),
                    we(r, h, p),
                    k(h, s, p),
                    g && g.m(h, p),
                    k(h, a, p),
                    (l = !0),
                    c || ((d = O(t, 'change', e[8])), (c = !0)));
            },
            p(e, [i]) {
                if (64 & i) {
                    let t;
                    for (h = e[6], t = 0; t < h.length; t += 1) {
                        const o = hy(e, h, t);
                        u[t]
                            ? u[t].p(o, i)
                            : ((u[t] = uy(o)), u[t].c(), u[t].m(n, null));
                    }
                    for (; t < u.length; t += 1) u[t].d(1);
                    u.length = h.length;
                }
                if (32 & i) {
                    let t;
                    for (p = e[5], t = 0; t < p.length; t += 1) {
                        const n = dy(e, p, t);
                        f[t]
                            ? f[t].p(n, i)
                            : ((f[t] = py(n)), f[t].c(), f[t].m(o, null));
                    }
                    for (; t < f.length; t += 1) f[t].d(1);
                    f.length = p.length;
                }
                98 & i && N(t, e[1]);
                const s = {};
                (4 & i && (s.tree = e[2]),
                    8 & i && (s.width = e[3]),
                    16 & i && (s.height = e[4]),
                    r.$set(s),
                    e[1] in e[0].Lexicon
                        ? g
                            ? (g.p(e, i), 3 & i && fe(g, 1))
                            : ((g = fy(e)),
                              g.c(),
                              fe(g, 1),
                              g.m(a.parentNode, a))
                        : g &&
                          (ue(),
                          ge(g, 1, 1, () => {
                              g = null;
                          }),
                          pe()));
            },
            i(e) {
                l || (fe(r.$$.fragment, e), fe(g), (l = !0));
            },
            o(e) {
                (ge(r.$$.fragment, e), ge(g), (l = !1));
            },
            d(e) {
                (e && x(t),
                    C(u, e),
                    C(f, e),
                    e && x(i),
                    ke(r, e),
                    e && x(s),
                    g && g.d(e),
                    e && x(a),
                    (c = !1),
                    d());
            },
        };
    }
    function my(e, t, n) {
        let o;
        d(e, as, (e) => n(7, (o = e)));
        let i,
            r,
            s,
            a,
            l,
            c = o,
            h = '';
        return (
            (e.$$.update = () => {
                (128 & e.$$.dirty && n(0, (c = o)),
                    3 & e.$$.dirty &&
                        (n(
                            2,
                            (i = (function () {
                                const e = [];
                                Object.keys(c.Etymologies).forEach((t) => {
                                    if (
                                        t !== h &&
                                        c.Etymologies[t].descendants.some(
                                            (e) => e.name === h,
                                        )
                                    ) {
                                        const n =
                                            '<< THIS LANGUAGE >>' ===
                                            c.Etymologies[t].source
                                                ? c.Name
                                                : c.Etymologies[t].source;
                                        e.push([t, n]);
                                    }
                                });
                                const t = [];
                                return (
                                    h in c.Etymologies &&
                                        c.Etymologies[h].descendants.forEach(
                                            (e) => {
                                                t.push([
                                                    e.name,
                                                    '<< THIS LANGUAGE >>' ===
                                                    e.source
                                                        ? c.Name
                                                        : e.source,
                                                ]);
                                            },
                                        ),
                                    {
                                        name: h,
                                        children: t.map((e) => ({
                                            name: e[0],
                                            source: e[1],
                                        })),
                                        parents: e.map((e) => ({
                                            name: e[0],
                                            source: e[1],
                                        })),
                                    }
                                );
                            })()),
                        ),
                        n(3, (r = 0.82 * window.innerWidth * 0.33)),
                        n(4, (s = 0.5 * window.innerHeight))),
                    1 & e.$$.dirty &&
                        (() => {
                            const e = {};
                            (Object.keys(c.Relatives).forEach((t) => {
                                Object.keys(c.Relatives[t]).forEach((n) => {
                                    n in c.Lexicon ||
                                        (e[n] = c.Relatives[t][n]);
                                });
                            }),
                                Object.keys(c.Etymologies).forEach((t) => {
                                    t in c.Lexicon ||
                                        (e[t] = {
                                            Senses: [],
                                            pronunciations: {},
                                        });
                                }),
                                n(5, (a = vs(e))),
                                n(6, (l = vs(c.Lexicon))));
                        })());
            }),
            [
                c,
                h,
                i,
                r,
                s,
                a,
                l,
                o,
                function () {
                    ((h = $(this)),
                        n(1, h),
                        n(5, a),
                        n(0, c),
                        n(7, o),
                        n(6, l),
                        n(0, c),
                        n(7, o));
                },
                (e) => n(1, (h = e.detail)),
            ]
        );
    }
    class by extends Ee {
        constructor(e) {
            (super(), Ce(this, e, my, gy, s, {}));
        }
    }
    function vy(t) {
        let n;
        return {
            c() {
                ((n = E('div')),
                    I(n, 'id', 'ref-docs'),
                    I(n, 'class', 'row text-center'),
                    M(n, 'height', '92vh'),
                    M(n, 'overflow-y', 'auto'),
                    M(n, 'font-family', 'Gentium '));
            },
            m(e, t) {
                k(e, n, t);
            },
            p: e,
            i: e,
            o: e,
            d(e) {
                e && x(n);
            },
        };
    }
    function yy(e, t, n) {
        let o;
        d(e, as, (e) => n(0, (o = e)));
        let i = o;
        return (
            Vp(i.Docs, 'ref-docs'),
            (e.$$.update = () => {
                1 & e.$$.dirty && (i = o);
            }),
            [o]
        );
    }
    class wy extends Ee {
        constructor(e) {
            (super(), Ce(this, e, yy, vy, s, {}));
        }
    }
    function ky(e, t, n) {
        const o = e.slice();
        return ((o[6] = t[n][0]), (o[7] = t[n][1]), o);
    }
    function xy(e, t, n) {
        const o = e.slice();
        return ((o[10] = t[n]), o);
    }
    function Cy(e) {
        let t,
            n,
            o,
            i = e[10] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[10]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (1 & r && i !== (i = e[10] + '') && A(n, i),
                    1 & r &&
                        o !== (o = e[10]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Ey(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l = e[6] + '',
            c = e[7] + '';
        return {
            c() {
                ((t = E('label')),
                    (n = T(l)),
                    (o = _()),
                    (i = E('p')),
                    (r = T(c)),
                    (s = _()),
                    (a = E('br')),
                    I(i, 'class', 'pronunciation'));
            },
            m(e, l) {
                (k(e, t, l),
                    v(t, n),
                    v(t, o),
                    v(t, i),
                    v(i, r),
                    v(t, s),
                    k(e, a, l));
            },
            p(e, t) {
                (1 & t && l !== (l = e[6] + '') && A(n, l),
                    1 & t && c !== (c = e[7] + '') && A(r, c));
            },
            d(e) {
                (e && x(t), e && x(a));
            },
        };
    }
    function Sy(t) {
        let n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            S,
            B,
            L = t[0].Lects,
            A = [];
        for (let e = 0; e < L.length; e += 1) A[e] = Cy(xy(t, L, e));
        let $ = Object.entries(t[0].Phonotactics.General),
            R = [];
        for (let e = 0; e < $.length; e += 1) R[e] = Ey(ky(t, $, e));
        return {
            c() {
                ((n = E('div')),
                    (o = E('label')),
                    (r = T('Pronunciations\n        ')),
                    (s = E('select')));
                for (let e = 0; e < A.length; e += 1) A[e].c();
                ((a = _()),
                    (l = E('textarea')),
                    (d = _()),
                    (h = E('textarea')),
                    (u = _()),
                    (p = E('textarea')),
                    (g = _()),
                    (m = E('br')),
                    (b = E('hr')),
                    (y = E('br')),
                    (w = _()));
                for (let e = 0; e < R.length; e += 1) R[e].c();
                (void 0 === t[1] && ne(() => t[4].call(s)),
                    I(l, 'rows', '12'),
                    I(l, 'class', 'pronunciation text-left'),
                    (l.value = c = t[0].Pronunciations[t[1]]),
                    (l.readOnly = !0),
                    I(h, 'rows', '2'),
                    I(p, 'rows', '3'),
                    I(p, 'class', 'pronunciation'),
                    (p.value = f = Es(t[2], t[1], t[0])),
                    (p.readOnly = !0),
                    I(n, 'class', 'scrolled'),
                    M(n, 'height', '100%'));
            },
            m(e, i) {
                (k(e, n, i), v(n, o), v(o, r), v(o, s));
                for (let e = 0; e < A.length; e += 1) A[e] && A[e].m(s, null);
                (N(s, t[1], !0),
                    v(n, a),
                    v(n, l),
                    v(n, d),
                    v(n, h),
                    P(h, t[2]),
                    v(n, u),
                    v(n, p),
                    v(n, g),
                    v(n, m),
                    v(n, b),
                    v(n, y),
                    v(n, w));
                for (let e = 0; e < R.length; e += 1) R[e] && R[e].m(n, null);
                S ||
                    ((B = [O(s, 'change', t[4]), O(h, 'input', t[5])]),
                    (S = !0));
            },
            p(e, [t]) {
                if (1 & t) {
                    let n;
                    for (L = e[0].Lects, n = 0; n < L.length; n += 1) {
                        const o = xy(e, L, n);
                        A[n]
                            ? A[n].p(o, t)
                            : ((A[n] = Cy(o)), A[n].c(), A[n].m(s, null));
                    }
                    for (; n < A.length; n += 1) A[n].d(1);
                    A.length = L.length;
                }
                if (
                    (3 & t && N(s, e[1]),
                    3 & t &&
                        c !== (c = e[0].Pronunciations[e[1]]) &&
                        (l.value = c),
                    4 & t && P(h, e[2]),
                    7 & t && f !== (f = Es(e[2], e[1], e[0])) && (p.value = f),
                    1 & t)
                ) {
                    let o;
                    for (
                        $ = Object.entries(e[0].Phonotactics.General), o = 0;
                        o < $.length;
                        o += 1
                    ) {
                        const i = ky(e, $, o);
                        R[o]
                            ? R[o].p(i, t)
                            : ((R[o] = Ey(i)), R[o].c(), R[o].m(n, null));
                    }
                    for (; o < R.length; o += 1) R[o].d(1);
                    R.length = $.length;
                }
            },
            i: e,
            o: e,
            d(e) {
                (e && x(n), C(A, e), C(R, e), (S = !1), i(B));
            },
        };
    }
    function Ty(e, t, n) {
        let o;
        d(e, as, (e) => n(3, (o = e)));
        let i = o,
            r = i.Lects[0],
            s = '';
        return (
            (e.$$.update = () => {
                8 & e.$$.dirty && n(0, (i = o));
            }),
            [
                i,
                r,
                s,
                o,
                function () {
                    ((r = $(this)), n(1, r), n(0, i), n(3, o));
                },
                function () {
                    ((s = this.value), n(2, s));
                },
            ]
        );
    }
    class _y extends Ee {
        constructor(e) {
            (super(), Ce(this, e, Ty, Sy, s, {}));
        }
    }
    function By(e, t, n) {
        const o = e.slice();
        return ((o[4] = t[n]), o);
    }
    function Oy(e, t, n) {
        const o = e.slice();
        return ((o[7] = t[n]), o);
    }
    function Iy(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c = Object.keys(e[0].Phrasebook),
            d = [];
        for (let t = 0; t < c.length; t += 1) d[t] = Ly(Oy(e, c, t));
        let h = Object.keys(e[0].Phrasebook[e[1]]),
            u = [];
        for (let t = 0; t < h.length; t += 1) u[t] = Ay(By(e, h, t));
        const p = (e) =>
            ge(u[e], 1, 1, () => {
                u[e] = null;
            });
        return {
            c() {
                ((t = E('div')),
                    (n = E('label')),
                    (o = T('Phrasebook\n            ')),
                    (i = E('select')));
                for (let e = 0; e < d.length; e += 1) d[e].c();
                r = _();
                for (let e = 0; e < u.length; e += 1) u[e].c();
                (void 0 === e[1] && ne(() => e[3].call(i)),
                    I(t, 'class', 'scrolled'),
                    M(t, 'height', '100%'));
            },
            m(c, h) {
                (k(c, t, h), v(t, n), v(n, o), v(n, i));
                for (let e = 0; e < d.length; e += 1) d[e] && d[e].m(i, null);
                (N(i, e[1], !0), v(t, r));
                for (let e = 0; e < u.length; e += 1) u[e] && u[e].m(t, null);
                ((s = !0), a || ((l = O(i, 'change', e[3])), (a = !0)));
            },
            p(e, n) {
                if (1 & n) {
                    let t;
                    for (
                        c = Object.keys(e[0].Phrasebook), t = 0;
                        t < c.length;
                        t += 1
                    ) {
                        const o = Oy(e, c, t);
                        d[t]
                            ? d[t].p(o, n)
                            : ((d[t] = Ly(o)), d[t].c(), d[t].m(i, null));
                    }
                    for (; t < d.length; t += 1) d[t].d(1);
                    d.length = c.length;
                }
                if ((3 & n && N(i, e[1]), 3 & n)) {
                    let o;
                    for (
                        h = Object.keys(e[0].Phrasebook[e[1]]), o = 0;
                        o < h.length;
                        o += 1
                    ) {
                        const i = By(e, h, o);
                        u[o]
                            ? (u[o].p(i, n), fe(u[o], 1))
                            : ((u[o] = Ay(i)),
                              u[o].c(),
                              fe(u[o], 1),
                              u[o].m(t, null));
                    }
                    for (ue(), o = h.length; o < u.length; o += 1) p(o);
                    pe();
                }
            },
            i(e) {
                if (!s) {
                    for (let e = 0; e < h.length; e += 1) fe(u[e]);
                    s = !0;
                }
            },
            o(e) {
                u = u.filter(Boolean);
                for (let e = 0; e < u.length; e += 1) ge(u[e]);
                s = !1;
            },
            d(e) {
                (e && x(t), C(d, e), C(u, e), (a = !1), l());
            },
        };
    }
    function Ly(e) {
        let t,
            n,
            o,
            i = e[7] + '';
        return {
            c() {
                ((t = E('option')),
                    (n = T(i)),
                    (t.__value = o = e[7]),
                    (t.value = t.__value));
            },
            m(e, o) {
                (k(e, t, o), v(t, n));
            },
            p(e, r) {
                (1 & r && i !== (i = e[7] + '') && A(n, i),
                    1 & r &&
                        o !== (o = e[7]) &&
                        ((t.__value = o), (t.value = t.__value)));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Ay(e) {
        let t, n;
        return (
            (t = new qc({
                props: { phrase: e[4], reference: !0, refCat: e[1] },
            })),
            {
                c() {
                    ye(t.$$.fragment);
                },
                m(e, o) {
                    (we(t, e, o), (n = !0));
                },
                p(e, n) {
                    const o = {};
                    (3 & n && (o.phrase = e[4]),
                        2 & n && (o.refCat = e[1]),
                        t.$set(o));
                },
                i(e) {
                    n || (fe(t.$$.fragment, e), (n = !0));
                },
                o(e) {
                    (ge(t.$$.fragment, e), (n = !1));
                },
                d(e) {
                    ke(t, e);
                },
            }
        );
    }
    function Py(e) {
        let t,
            n,
            o = void 0 !== e[1] && e[1] in e[0].Phrasebook && Iy(e);
        return {
            c() {
                (o && o.c(), (t = B()));
            },
            m(e, i) {
                (o && o.m(e, i), k(e, t, i), (n = !0));
            },
            p(e, [n]) {
                void 0 !== e[1] && e[1] in e[0].Phrasebook
                    ? o
                        ? (o.p(e, n), 3 & n && fe(o, 1))
                        : ((o = Iy(e)), o.c(), fe(o, 1), o.m(t.parentNode, t))
                    : o &&
                      (ue(),
                      ge(o, 1, 1, () => {
                          o = null;
                      }),
                      pe());
            },
            i(e) {
                n || (fe(o), (n = !0));
            },
            o(e) {
                (ge(o), (n = !1));
            },
            d(e) {
                (o && o.d(e), e && x(t));
            },
        };
    }
    function My(e, t, n) {
        let o;
        d(e, as, (e) => n(2, (o = e)));
        let i = o,
            r = '';
        return (
            (e.$$.update = () => {
                (4 & e.$$.dirty && n(0, (i = o)),
                    1 & e.$$.dirty && n(1, (r = Object.keys(i.Phrasebook)[0])));
            }),
            [
                i,
                r,
                o,
                function () {
                    ((r = $(this)),
                        n(1, r),
                        n(0, i),
                        n(2, o),
                        n(0, i),
                        n(2, o));
                },
            ]
        );
    }
    class Ny extends Ee {
        constructor(e) {
            (super(), Ce(this, e, My, Py, s, {}));
        }
    }
    function $y(e, t, n) {
        const o = e.slice();
        return ((o[5] = t[n]), (o[7] = n), o);
    }
    function Ry(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            C,
            S,
            B,
            O,
            L,
            P,
            N,
            $,
            R = e[5].tags.join(' ') + '',
            j = e[5].filter + '';
        return {
            c() {
                ((t = E('div')),
                    (n = E('div')),
                    (o = E('label')),
                    (i = T('Tags\n                    ')),
                    (r = E('div')),
                    (s = E('p')),
                    (a = T(R)),
                    (l = _()),
                    (c = E('label')),
                    (d = T('RegEx Filter\n                    ')),
                    (h = E('div')),
                    (u = E('p')),
                    (p = T('/')),
                    (f = T(j)),
                    (g = T('/')),
                    (m = _()),
                    (b = E('div')),
                    (y = E('label')),
                    (w = T('Rule Categories\n                    ')),
                    (C = E('div')),
                    (S = E('textarea')),
                    (O = _()),
                    (L = E('div')),
                    (P = _()),
                    (N = E('br')),
                    ($ = E('br')),
                    I(s, 'class', 'lex-body'),
                    I(u, 'class', 'lex-body'),
                    I(n, 'class', 'column'),
                    I(S, 'class', 'text-left pronunciation'),
                    I(S, 'rows', '3'),
                    (S.value = B = e[5].categories),
                    (S.readOnly = !0),
                    I(b, 'class', 'column'),
                    I(t, 'class', 'row'),
                    M(t, 'width', '66%'),
                    I(L, 'class', 'codex-editor'),
                    I(L, 'id', `ref inflection ${e[7]}`),
                    M(L, 'font-family', 'Gentium'));
            },
            m(e, x) {
                (k(e, t, x),
                    v(t, n),
                    v(n, o),
                    v(o, i),
                    v(o, r),
                    v(r, s),
                    v(s, a),
                    v(n, l),
                    v(n, c),
                    v(c, d),
                    v(c, h),
                    v(h, u),
                    v(u, p),
                    v(u, f),
                    v(u, g),
                    v(t, m),
                    v(t, b),
                    v(b, y),
                    v(y, w),
                    v(y, C),
                    v(C, S),
                    k(e, O, x),
                    k(e, L, x),
                    k(e, P, x),
                    k(e, N, x),
                    k(e, $, x));
            },
            p(e, t) {
                (1 & t && R !== (R = e[5].tags.join(' ') + '') && A(a, R),
                    1 & t && j !== (j = e[5].filter + '') && A(f, j),
                    1 & t && B !== (B = e[5].categories) && (S.value = B));
            },
            d(e) {
                (e && x(t),
                    e && x(O),
                    e && x(L),
                    e && x(P),
                    e && x(N),
                    e && x($));
            },
        };
    }
    function jy(t) {
        let n,
            o = t[0].Inflections,
            i = [];
        for (let e = 0; e < o.length; e += 1) i[e] = Ry($y(t, o, e));
        return {
            c() {
                n = E('div');
                for (let e = 0; e < i.length; e += 1) i[e].c();
                (I(n, 'class', 'scrolled'), M(n, 'height', '100%'));
            },
            m(e, t) {
                k(e, n, t);
                for (let e = 0; e < i.length; e += 1) i[e] && i[e].m(n, null);
            },
            p(e, [t]) {
                if (1 & t) {
                    let r;
                    for (o = e[0].Inflections, r = 0; r < o.length; r += 1) {
                        const s = $y(e, o, r);
                        i[r]
                            ? i[r].p(s, t)
                            : ((i[r] = Ry(s)), i[r].c(), i[r].m(n, null));
                    }
                    for (; r < i.length; r += 1) i[r].d(1);
                    i.length = o.length;
                }
            },
            i: e,
            o: e,
            d(e) {
                (e && x(n), C(i, e));
            },
        };
    }
    function Dy(e, t, n) {
        let o;
        d(e, as, (e) => n(1, (o = e)));
        let i = o;
        var r;
        !(function (e) {
            ((e.VERBOSE = 'VERBOSE'),
                (e.INFO = 'INFO'),
                (e.WARN = 'WARN'),
                (e.ERROR = 'ERROR'));
        })(r || (r = {}));
        let s = [];
        return (
            K(() => {
                !(function (e) {
                    for (let e = s.length; e > 0; e--)
                        (s[e - 1].destroy(), s.pop());
                    i.Inflections.filter((t, n) => n !== e).forEach((e, t) => {
                        const n = {
                                holder: `ref inflection ${t}`,
                                data: e.tables,
                                tools: {
                                    underline: lh,
                                    table: {
                                        class: sh,
                                        inlineToolbar: !0,
                                        config: {
                                            rows: 3,
                                            cols: 3,
                                            withHeadings: !0,
                                        },
                                    },
                                    header: { class: $d, inlineToolbar: !0 },
                                },
                                minHeight: 30,
                                logLevel: r.ERROR,
                                readOnly: !0,
                            },
                            o = new qr(n);
                        s.push(o);
                    });
                })(1 / 0);
            }),
            (e.$$.update = () => {
                2 & e.$$.dirty && n(0, (i = o));
            }),
            [i, o]
        );
    }
    class Fy extends Ee {
        constructor(e) {
            (super(), Ce(this, e, Dy, jy, s, {}));
        }
    }
    function Hy(e, t, n) {
        const o = e.slice();
        return ((o[8] = t[n]), (o[10] = n), o);
    }
    function zy(e, t, n) {
        const o = e.slice();
        return ((o[8] = t[n]), (o[10] = n), o);
    }
    function Uy(e) {
        let t,
            n,
            o,
            i,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u = e[4],
            p = [];
        for (let t = 0; t < u.length; t += 1) p[t] = qy(zy(e, u, t));
        let f = e[5],
            g = [];
        for (let t = 0; t < f.length; t += 1) g[t] = Vy(Hy(e, f, t));
        const m = (e) =>
            ge(g[e], 1, 1, () => {
                g[e] = null;
            });
        return {
            c() {
                ((t = E('div')),
                    (n = E('p')),
                    (o = T('β')),
                    (i = T(e[1])),
                    (r = T('-')),
                    (s = T(e[2])),
                    (a = T(' —')),
                    (l = _()));
                for (let e = 0; e < p.length; e += 1) p[e].c();
                c = _();
                for (let e = 0; e < g.length; e += 1) g[e].c();
                ((d = B()),
                    I(n, 'class', 'version-info'),
                    I(t, 'class', 'button-container'));
            },
            m(e, u) {
                (k(e, t, u),
                    v(t, n),
                    v(n, o),
                    v(n, i),
                    v(n, r),
                    v(n, s),
                    v(n, a),
                    v(t, l));
                for (let e = 0; e < p.length; e += 1) p[e] && p[e].m(t, null);
                k(e, c, u);
                for (let t = 0; t < g.length; t += 1) g[t] && g[t].m(e, u);
                (k(e, d, u), (h = !0));
            },
            p(e, n) {
                if (
                    ((!h || 2 & n) && A(i, e[1]),
                    (!h || 4 & n) && A(s, e[2]),
                    25 & n)
                ) {
                    let o;
                    for (u = e[4], o = 0; o < u.length; o += 1) {
                        const i = zy(e, u, o);
                        p[o]
                            ? p[o].p(i, n)
                            : ((p[o] = qy(i)), p[o].c(), p[o].m(t, null));
                    }
                    for (; o < p.length; o += 1) p[o].d(1);
                    p.length = u.length;
                }
                if (33 & n) {
                    let t;
                    for (f = e[5], t = 0; t < f.length; t += 1) {
                        const o = Hy(e, f, t);
                        g[t]
                            ? (g[t].p(o, n), fe(g[t], 1))
                            : ((g[t] = Vy(o)),
                              g[t].c(),
                              fe(g[t], 1),
                              g[t].m(d.parentNode, d));
                    }
                    for (ue(), t = f.length; t < g.length; t += 1) m(t);
                    pe();
                }
            },
            i(e) {
                if (!h) {
                    for (let e = 0; e < f.length; e += 1) fe(g[e]);
                    h = !0;
                }
            },
            o(e) {
                g = g.filter(Boolean);
                for (let e = 0; e < g.length; e += 1) ge(g[e]);
                h = !1;
            },
            d(e) {
                (e && x(t), C(p, e), e && x(c), C(g, e), e && x(d));
            },
        };
    }
    function Wy(e) {
        let t,
            n,
            o,
            i,
            r,
            s = e[8] + '';
        function a() {
            return e[6](e[10]);
        }
        return {
            c() {
                ((t = E('button')),
                    (n = T(s)),
                    (o = _()),
                    I(t, 'class', 'hover-highlight tab-button'),
                    R(t, 'selected', e[0] === e[10]));
            },
            m(e, s) {
                (k(e, t, s),
                    v(t, n),
                    v(t, o),
                    i || ((r = O(t, 'click', a)), (i = !0)));
            },
            p(n, o) {
                ((e = n), 1 & o && R(t, 'selected', e[0] === e[10]));
            },
            d(e) {
                (e && x(t), (i = !1), r());
            },
        };
    }
    function qy(e) {
        let t,
            n =
                (('Etym.' !== e[8] && 'Inflect.' !== e[8]) ||
                    ('Etym.' === e[8] && e[3].ShowEtymology) ||
                    ('Inflect.' === e[8] && e[3].ShowInflection)) &&
                Wy(e);
        return {
            c() {
                (n && n.c(), (t = B()));
            },
            m(e, o) {
                (n && n.m(e, o), k(e, t, o));
            },
            p(e, o) {
                ('Etym.' !== e[8] && 'Inflect.' !== e[8]) ||
                ('Etym.' === e[8] && e[3].ShowEtymology) ||
                ('Inflect.' === e[8] && e[3].ShowInflection)
                    ? n
                        ? n.p(e, o)
                        : ((n = Wy(e)), n.c(), n.m(t.parentNode, t))
                    : n && (n.d(1), (n = null));
            },
            d(e) {
                (n && n.d(e), e && x(t));
            },
        };
    }
    function Vy(e) {
        let t, n, o, i, r;
        var s = e[8];
        return (
            s && (o = F(s, {})),
            {
                c() {
                    ((t = E('div')),
                        (n = E('div')),
                        o && ye(o.$$.fragment),
                        (i = _()),
                        I(n, 'class', 'container'),
                        M(n, 'height', '92vh'),
                        R(t, 'collapsed', e[0] !== e[10]));
                },
                m(e, s) {
                    (k(e, t, s),
                        v(t, n),
                        o && we(o, n, null),
                        v(t, i),
                        (r = !0));
                },
                p(e, i) {
                    if (s !== (s = e[8])) {
                        if (o) {
                            ue();
                            const e = o;
                            (ge(e.$$.fragment, 1, 0, () => {
                                ke(e, 1);
                            }),
                                pe());
                        }
                        s
                            ? ((o = F(s, {})),
                              ye(o.$$.fragment),
                              fe(o.$$.fragment, 1),
                              we(o, n, null))
                            : (o = null);
                    }
                    (!r || 1 & i) && R(t, 'collapsed', e[0] !== e[10]);
                },
                i(e) {
                    r || (o && fe(o.$$.fragment, e), (r = !0));
                },
                o(e) {
                    (o && ge(o.$$.fragment, e), (r = !1));
                },
                d(e) {
                    (e && x(t), o && ke(o));
                },
            }
        );
    }
    function Gy(e) {
        let t,
            n,
            o = 'object' == typeof e[3] && Uy(e);
        return {
            c() {
                (o && o.c(), (t = B()));
            },
            m(e, i) {
                (o && o.m(e, i), k(e, t, i), (n = !0));
            },
            p(e, [n]) {
                'object' == typeof e[3]
                    ? o
                        ? (o.p(e, n), 8 & n && fe(o, 1))
                        : ((o = Uy(e)), o.c(), fe(o, 1), o.m(t.parentNode, t))
                    : o &&
                      (ue(),
                      ge(o, 1, 1, () => {
                          o = null;
                      }),
                      pe());
            },
            i(e) {
                n || (fe(o), (n = !0));
            },
            o(e) {
                (ge(o), (n = !1));
            },
            d(e) {
                (o && o.d(e), e && x(t));
            },
        };
    }
    function Ky(e, t, n) {
        let o;
        d(e, as, (e) => n(3, (o = e)));
        const { ipcRenderer: i } = require('electron'),
            r = [cy, by, Ny, Fy, _y, wy];
        let s,
            a,
            l = 0;
        (i.invoke('getVersion').then((e) => n(1, (s = e))),
            i.invoke('platform').then((e) => n(2, (a = e))));
        return [
            l,
            s,
            a,
            o,
            ['Lex', 'Etym.', 'Phrases', 'Inflect.', 'Phono.', 'Docs'],
            r,
            (e) => n(0, (l = e)),
        ];
    }
    class Yy extends Ee {
        constructor(e) {
            (super(), Ce(this, e, Ky, Gy, s, {}));
        }
    }
    function Xy(e, t, n) {
        const o = e.slice();
        return ((o[15] = t[n]), (o[17] = n), o);
    }
    function Zy(e, t, n) {
        const o = e.slice();
        return ((o[15] = t[n]), (o[17] = n), o);
    }
    function Jy(e) {
        let t, n, o, i, r, s;
        return {
            c() {
                ((t = E('p')),
                    (n = T('v')),
                    (o = T(e[0])),
                    (i = T('-')),
                    (r = T(e[1])),
                    (s = T(' —')),
                    I(t, 'class', 'version-info'));
            },
            m(e, a) {
                (k(e, t, a), v(t, n), v(t, o), v(t, i), v(t, r), v(t, s));
            },
            p(e, t) {
                (1 & t && A(o, e[0]), 2 & t && A(r, e[1]));
            },
            d(e) {
                e && x(t);
            },
        };
    }
    function Qy(e) {
        let t,
            n,
            o,
            i,
            r,
            s = e[15] + '';
        function a() {
            return e[12](e[17]);
        }
        return {
            c() {
                ((t = E('button')),
                    (n = T(s)),
                    (o = _()),
                    I(t, 'class', 'hover-highlight tab-button'),
                    I(
                        t,
                        'style',
                        ['settings', 'history', 'help'].includes(e[15])
                            ? 'font-family: "Material Icons"; font-size: 1em; vertical-align: bottom; height: 1.8em;'
                            : '',
                    ),
                    R(t, 'selected', e[5] === e[17]));
            },
            m(e, s) {
                (k(e, t, s),
                    v(t, n),
                    v(t, o),
                    i || ((r = O(t, 'click', a)), (i = !0)));
            },
            p(n, o) {
                ((e = n), 32 & o && R(t, 'selected', e[5] === e[17]));
            },
            d(e) {
                (e && x(t), (i = !1), r());
            },
        };
    }
    function ew(e) {
        let t,
            n =
                (('Etymology' !== e[15] &&
                    'Inflection' !== e[15] &&
                    'Orthography' !== e[15]) ||
                    ('Etymology' === e[15] && e[2].ShowEtymology) ||
                    ('Inflection' === e[15] && e[2].ShowInflection) ||
                    ('Orthography' === e[15] && e[2].ShowOrthography)) &&
                Qy(e);
        return {
            c() {
                (n && n.c(), (t = B()));
            },
            m(e, o) {
                (n && n.m(e, o), k(e, t, o));
            },
            p(e, o) {
                ('Etymology' !== e[15] &&
                    'Inflection' !== e[15] &&
                    'Orthography' !== e[15]) ||
                ('Etymology' === e[15] && e[2].ShowEtymology) ||
                ('Inflection' === e[15] && e[2].ShowInflection) ||
                ('Orthography' === e[15] && e[2].ShowOrthography)
                    ? n
                        ? n.p(e, o)
                        : ((n = Qy(e)), n.c(), n.m(t.parentNode, t))
                    : n && (n.d(1), (n = null));
            },
            d(e) {
                (n && n.d(e), e && x(t));
            },
        };
    }
    function tw(e) {
        let t, n, o, i;
        var r = e[15];
        return (
            r && (n = F(r, {})),
            {
                c() {
                    ((t = E('div')),
                        n && ye(n.$$.fragment),
                        (o = _()),
                        R(t, 'collapsed', e[5] !== e[17]));
                },
                m(e, r) {
                    (k(e, t, r), n && we(n, t, null), v(t, o), (i = !0));
                },
                p(e, s) {
                    if (r !== (r = e[15])) {
                        if (n) {
                            ue();
                            const e = n;
                            (ge(e.$$.fragment, 1, 0, () => {
                                ke(e, 1);
                            }),
                                pe());
                        }
                        r
                            ? ((n = F(r, {})),
                              ye(n.$$.fragment),
                              fe(n.$$.fragment, 1),
                              we(n, t, o))
                            : (n = null);
                    }
                    (!i || 32 & s) && R(t, 'collapsed', e[5] !== e[17]);
                },
                i(e) {
                    i || (n && fe(n.$$.fragment, e), (i = !0));
                },
                o(e) {
                    (n && ge(n.$$.fragment, e), (i = !1));
                },
                d(e) {
                    (e && x(t), n && ke(n));
                },
            }
        );
    }
    function nw(e) {
        let t, n, o;
        return (
            (n = new Yy({})),
            {
                c() {
                    ((t = E('div')),
                        ye(n.$$.fragment),
                        I(t, 'class', 'column tab-pane reference'),
                        M(t, 'width', '33%'));
                },
                m(e, i) {
                    (k(e, t, i), we(n, t, null), (o = !0));
                },
                i(e) {
                    o || (fe(n.$$.fragment, e), (o = !0));
                },
                o(e) {
                    (ge(n.$$.fragment, e), (o = !1));
                },
                d(e) {
                    (e && x(t), ke(n));
                },
            }
        );
    }
    function ow(e) {
        let t,
            n,
            o,
            r,
            s,
            a,
            l,
            c,
            d,
            h,
            u,
            p,
            f,
            g,
            m,
            b,
            y,
            w,
            S,
            T,
            B,
            L,
            A,
            P,
            M = !e[4] && Jy(e),
            N = e[8],
            $ = [];
        for (let t = 0; t < N.length; t += 1) $[t] = ew(Zy(e, N, t));
        let R = e[7],
            j = [];
        for (let t = 0; t < R.length; t += 1) j[t] = tw(Xy(e, R, t));
        const D = (e) =>
            ge(j[e], 1, 1, () => {
                j[e] = null;
            });
        let F = e[4] && nw();
        return {
            c() {
                ((t = E('link')),
                    (o = _()),
                    (r = E('link')),
                    (s = _()),
                    (a = E('body')),
                    (l = E('div')),
                    (c = E('div')),
                    (d = E('div')),
                    (h = E('p')),
                    (u = E('button')),
                    (u.textContent = 'close'),
                    (p = _()),
                    (f = E('button')),
                    (f.textContent = 'remove'),
                    (g = _()),
                    (m = E('button')),
                    (m.textContent = 'fullscreen'),
                    (b = _()),
                    (y = E('div')),
                    M && M.c(),
                    (w = _()));
                for (let e = 0; e < $.length; e += 1) $[e].c();
                S = _();
                for (let e = 0; e < j.length; e += 1) j[e].c();
                ((B = _()),
                    F && F.c(),
                    I(t, 'rel', 'stylesheet'),
                    I(
                        t,
                        'href',
                        (n =
                            'default' === e[2].FileTheme
                                ? e[3]
                                : e[2].FileTheme),
                    ),
                    I(
                        r,
                        'href',
                        'https://fonts.googleapis.com/icon?family=Material+Icons',
                    ),
                    I(r, 'rel', 'stylesheet'),
                    I(u, 'class', 'hover-highlight close material-icons'),
                    I(f, 'class', 'hover-highlight minimize material-icons'),
                    I(m, 'class', 'hover-highlight maximize material-icons'),
                    I(h, 'class', 'window-control'),
                    I(y, 'class', 'button-container'),
                    I(d, 'class', 'column'),
                    I(d, 'style', (T = e[4] ? 'width: 66%' : 'width: 100%')),
                    I(c, 'class', 'row'),
                    I(l, 'class', 'tab-container'),
                    I(a, 'id', 'body'),
                    I(a, 'spellcheck', 'false'));
            },
            m(n, i) {
                (k(n, t, i),
                    k(n, o, i),
                    k(n, r, i),
                    k(n, s, i),
                    k(n, a, i),
                    v(a, l),
                    v(l, c),
                    v(c, d),
                    v(d, h),
                    v(h, u),
                    v(h, p),
                    v(h, f),
                    v(h, g),
                    v(h, m),
                    v(d, b),
                    v(d, y),
                    M && M.m(y, null),
                    v(y, w));
                for (let e = 0; e < $.length; e += 1) $[e] && $[e].m(y, null);
                v(d, S);
                for (let e = 0; e < j.length; e += 1) j[e] && j[e].m(d, null);
                (v(c, B),
                    F && F.m(c, null),
                    (L = !0),
                    A ||
                        ((P = [
                            O(u, 'click', e[9]),
                            O(f, 'click', e[10]),
                            O(m, 'click', e[11]),
                        ]),
                        (A = !0)));
            },
            p(e, [o]) {
                if (
                    ((!L ||
                        (12 & o &&
                            n !==
                                (n =
                                    'default' === e[2].FileTheme
                                        ? e[3]
                                        : e[2].FileTheme))) &&
                        I(t, 'href', n),
                    e[4]
                        ? M && (M.d(1), (M = null))
                        : M
                          ? M.p(e, o)
                          : ((M = Jy(e)), M.c(), M.m(y, w)),
                    292 & o)
                ) {
                    let t;
                    for (N = e[8], t = 0; t < N.length; t += 1) {
                        const n = Zy(e, N, t);
                        $[t]
                            ? $[t].p(n, o)
                            : (($[t] = ew(n)), $[t].c(), $[t].m(y, null));
                    }
                    for (; t < $.length; t += 1) $[t].d(1);
                    $.length = N.length;
                }
                if (160 & o) {
                    let t;
                    for (R = e[7], t = 0; t < R.length; t += 1) {
                        const n = Xy(e, R, t);
                        j[t]
                            ? (j[t].p(n, o), fe(j[t], 1))
                            : ((j[t] = tw(n)),
                              j[t].c(),
                              fe(j[t], 1),
                              j[t].m(d, null));
                    }
                    for (ue(), t = R.length; t < j.length; t += 1) D(t);
                    pe();
                }
                ((!L ||
                    (16 & o &&
                        T !== (T = e[4] ? 'width: 66%' : 'width: 100%'))) &&
                    I(d, 'style', T),
                    e[4]
                        ? F
                            ? 16 & o && fe(F, 1)
                            : ((F = nw()), F.c(), fe(F, 1), F.m(c, null))
                        : F &&
                          (ue(),
                          ge(F, 1, 1, () => {
                              F = null;
                          }),
                          pe()));
            },
            i(e) {
                if (!L) {
                    for (let e = 0; e < R.length; e += 1) fe(j[e]);
                    (fe(F), (L = !0));
                }
            },
            o(e) {
                j = j.filter(Boolean);
                for (let e = 0; e < j.length; e += 1) ge(j[e]);
                (ge(F), (L = !1));
            },
            d(e) {
                (e && x(t),
                    e && x(o),
                    e && x(r),
                    e && x(s),
                    e && x(a),
                    M && M.d(),
                    C($, e),
                    C(j, e),
                    F && F.d(),
                    (A = !1),
                    i(P));
            },
        };
    }
    function iw(e, t, n) {
        let o, i, r, s, a;
        (d(e, is, (e) => n(14, (o = e))),
            d(e, Kr, (e) => n(2, (i = e))),
            d(e, os, (e) => n(3, (r = e))),
            d(e, as, (e) => n(4, (s = e))),
            d(e, Yr, (e) => n(5, (a = e))));
        const { ipcRenderer: l } = require('electron'),
            c = require('vex-js');
        (c.registerPlugin(require('vex-dialog')),
            (c.defaultOptions.className = 'vex-theme-os'));
        const u = [ql, Mc, kd, Pv, Nd, Vv, Yp, av, kv, Bv, Zv];
        let p, f;
        (l.on('app-close', (e) => {
            o
                ? (fs('Autosaving before exit.'),
                  Ab().then((e) => {
                      window.setTimeout(() => l.send('close'), 1e3);
                  }))
                : window.confirm(
                      'You may have unsaved changes. Are you sure you want to exit?',
                  ) && l.send('close');
        }),
            l.invoke('getVersion').then((e) => n(0, (p = e))),
            l.invoke('platform').then((e) => n(1, (f = e))));
        return [
            p,
            f,
            i,
            r,
            s,
            a,
            l,
            u,
            [
                'Lexicon',
                'Etymology',
                'Phrasebook',
                'Inflection',
                'Phonology',
                'Orthography',
                'Documentation',
                'File',
                'settings',
                'history',
                'help',
            ],
            () => l.send('buttonclose'),
            () => l.send('minimize'),
            () => l.send('maximize'),
            (e) => h(Yr, (a = e), a),
        ];
    }
    return new (class extends Ee {
        constructor(e) {
            (super(), Ce(this, e, iw, ow, s, {}));
        }
    })({ target: document.body });
})();
//# sourceMappingURL=bundle.js.map
